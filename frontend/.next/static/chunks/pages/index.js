/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\nexports.destroy = (() => {\r\n\tlet warned = false;\r\n\r\n\treturn () => {\r\n\t\tif (!warned) {\r\n\t\t\twarned = true;\r\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tlet m;\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\t// eslint-disable-next-line no-return-assign\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.debug()` when available.\r\n * No-op when `console.debug` is not a \"function\".\r\n * If `console.debug` is not available, falls back\r\n * to `console.log`.\r\n *\r\n * @api public\r\n */\r\nexports.log = console.debug || console.log || (() => {});\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/debug/src/browser.js\n"));

/***/ }),

/***/ "./node_modules/debug/src/common.js":
/*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\r\n\tcreateDebug.destroy = destroy;\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\t\tlet enableOverride = null;\r\n\t\tlet namespacesCache;\r\n\t\tlet enabledCache;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn '%';\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = createDebug.selectColor(namespace);\r\n\t\tdebug.extend = extend;\r\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\r\n\r\n\t\tObject.defineProperty(debug, 'enabled', {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: () => {\r\n\t\t\t\tif (enableOverride !== null) {\r\n\t\t\t\t\treturn enableOverride;\r\n\t\t\t\t}\r\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\r\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\r\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn enabledCache;\r\n\t\t\t},\r\n\t\t\tset: v => {\r\n\t\t\t\tenableOverride = v;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\t\tcreateDebug.namespaces = namespaces;\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\r\n\t\t\t.trim()\r\n\t\t\t.replace(' ', ',')\r\n\t\t\t.split(',')\r\n\t\t\t.filter(Boolean);\r\n\r\n\t\tfor (const ns of split) {\r\n\t\t\tif (ns[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(ns);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the given string matches a namespace template, honoring\r\n\t * asterisks as wildcards.\r\n\t *\r\n\t * @param {String} search\r\n\t * @param {String} template\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction matchesTemplate(search, template) {\r\n\t\tlet searchIndex = 0;\r\n\t\tlet templateIndex = 0;\r\n\t\tlet starIndex = -1;\r\n\t\tlet matchIndex = 0;\r\n\r\n\t\twhile (searchIndex < search.length) {\r\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\r\n\t\t\t\t// Match character or proceed with wildcard\r\n\t\t\t\tif (template[templateIndex] === '*') {\r\n\t\t\t\t\tstarIndex = templateIndex;\r\n\t\t\t\t\tmatchIndex = searchIndex;\r\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsearchIndex++;\r\n\t\t\t\t\ttemplateIndex++;\r\n\t\t\t\t}\r\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\r\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\r\n\t\t\t\ttemplateIndex = starIndex + 1;\r\n\t\t\t\tmatchIndex++;\r\n\t\t\t\tsearchIndex = matchIndex;\r\n\t\t\t} else {\r\n\t\t\t\treturn false; // No match\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Handle trailing '*' in template\r\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\r\n\t\t\ttemplateIndex++;\r\n\t\t}\r\n\r\n\t\treturn templateIndex === template.length;\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names,\r\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tfor (const skip of createDebug.skips) {\r\n\t\t\tif (matchesTemplate(name, skip)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const ns of createDebug.names) {\r\n\t\t\tif (matchesTemplate(name, ns)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t* XXX DO NOT USE. This is a temporary stub function.\r\n\t* XXX It WILL be removed in the next major release.\r\n\t*/\r\n\tfunction destroy() {\r\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/debug/src/common.js\n"));

/***/ }),

/***/ "./node_modules/extend/index.js":
/*!**************************************!*\
  !*** ./node_modules/extend/index.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nvar hasOwn = Object.prototype.hasOwnProperty;\r\nvar toStr = Object.prototype.toString;\r\nvar defineProperty = Object.defineProperty;\r\nvar gOPD = Object.getOwnPropertyDescriptor;\r\n\r\nvar isArray = function isArray(arr) {\r\n\tif (typeof Array.isArray === 'function') {\r\n\t\treturn Array.isArray(arr);\r\n\t}\r\n\r\n\treturn toStr.call(arr) === '[object Array]';\r\n};\r\n\r\nvar isPlainObject = function isPlainObject(obj) {\r\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\r\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\r\n\t// Not own constructor property must be Object\r\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Own properties are enumerated firstly, so to speed up,\r\n\t// if last one is own, then all properties are own.\r\n\tvar key;\r\n\tfor (key in obj) { /**/ }\r\n\r\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\r\n};\r\n\r\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\r\nvar setProperty = function setProperty(target, options) {\r\n\tif (defineProperty && options.name === '__proto__') {\r\n\t\tdefineProperty(target, options.name, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: options.newValue,\r\n\t\t\twritable: true\r\n\t\t});\r\n\t} else {\r\n\t\ttarget[options.name] = options.newValue;\r\n\t}\r\n};\r\n\r\n// Return undefined instead of __proto__ if '__proto__' is not an own property\r\nvar getProperty = function getProperty(obj, name) {\r\n\tif (name === '__proto__') {\r\n\t\tif (!hasOwn.call(obj, name)) {\r\n\t\t\treturn void 0;\r\n\t\t} else if (gOPD) {\r\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\r\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\r\n\t\t\treturn gOPD(obj, name).value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn obj[name];\r\n};\r\n\r\nmodule.exports = function extend() {\r\n\tvar options, name, src, copy, copyIsArray, clone;\r\n\tvar target = arguments[0];\r\n\tvar i = 1;\r\n\tvar length = arguments.length;\r\n\tvar deep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif (typeof target === 'boolean') {\r\n\t\tdeep = target;\r\n\t\ttarget = arguments[1] || {};\r\n\t\t// skip the boolean and the target\r\n\t\ti = 2;\r\n\t}\r\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\tfor (; i < length; ++i) {\r\n\t\toptions = arguments[i];\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif (options != null) {\r\n\t\t\t// Extend the base object\r\n\t\t\tfor (name in options) {\r\n\t\t\t\tsrc = getProperty(target, name);\r\n\t\t\t\tcopy = getProperty(options, name);\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif (target !== copy) {\r\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\r\n\t\t\t\t\t\tif (copyIsArray) {\r\n\t\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\r\n\r\n\t\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\r\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXh0ZW5kL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFlBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGlEQUFpRDtBQUM3RTtBQUNBO0FBQ0EsT0FBTztBQUNQLDRCQUE0Qiw0QkFBNEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9leHRlbmQvaW5kZXguanM/ZWUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcclxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xyXG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XHJcblxyXG52YXIgaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkoYXJyKSB7XHJcblx0aWYgKHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRyZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIHRvU3RyLmNhbGwoYXJyKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcclxufTtcclxuXHJcbnZhciBpc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcclxuXHRpZiAoIW9iaiB8fCB0b1N0ci5jYWxsKG9iaikgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cclxuXHR2YXIgaGFzT3duQ29uc3RydWN0b3IgPSBoYXNPd24uY2FsbChvYmosICdjb25zdHJ1Y3RvcicpO1xyXG5cdHZhciBoYXNJc1Byb3RvdHlwZU9mID0gb2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgJiYgaGFzT3duLmNhbGwob2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwgJ2lzUHJvdG90eXBlT2YnKTtcclxuXHQvLyBOb3Qgb3duIGNvbnN0cnVjdG9yIHByb3BlcnR5IG11c3QgYmUgT2JqZWN0XHJcblx0aWYgKG9iai5jb25zdHJ1Y3RvciAmJiAhaGFzT3duQ29uc3RydWN0b3IgJiYgIWhhc0lzUHJvdG90eXBlT2YpIHtcclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcblxyXG5cdC8vIE93biBwcm9wZXJ0aWVzIGFyZSBlbnVtZXJhdGVkIGZpcnN0bHksIHNvIHRvIHNwZWVkIHVwLFxyXG5cdC8vIGlmIGxhc3Qgb25lIGlzIG93biwgdGhlbiBhbGwgcHJvcGVydGllcyBhcmUgb3duLlxyXG5cdHZhciBrZXk7XHJcblx0Zm9yIChrZXkgaW4gb2JqKSB7IC8qKi8gfVxyXG5cclxuXHRyZXR1cm4gdHlwZW9mIGtleSA9PT0gJ3VuZGVmaW5lZCcgfHwgaGFzT3duLmNhbGwob2JqLCBrZXkpO1xyXG59O1xyXG5cclxuLy8gSWYgbmFtZSBpcyAnX19wcm90b19fJywgYW5kIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBpcyBhdmFpbGFibGUsIGRlZmluZSBfX3Byb3RvX18gYXMgYW4gb3duIHByb3BlcnR5IG9uIHRhcmdldFxyXG52YXIgc2V0UHJvcGVydHkgPSBmdW5jdGlvbiBzZXRQcm9wZXJ0eSh0YXJnZXQsIG9wdGlvbnMpIHtcclxuXHRpZiAoZGVmaW5lUHJvcGVydHkgJiYgb3B0aW9ucy5uYW1lID09PSAnX19wcm90b19fJykge1xyXG5cdFx0ZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBvcHRpb25zLm5hbWUsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxyXG5cdFx0XHR2YWx1ZTogb3B0aW9ucy5uZXdWYWx1ZSxcclxuXHRcdFx0d3JpdGFibGU6IHRydWVcclxuXHRcdH0pO1xyXG5cdH0gZWxzZSB7XHJcblx0XHR0YXJnZXRbb3B0aW9ucy5uYW1lXSA9IG9wdGlvbnMubmV3VmFsdWU7XHJcblx0fVxyXG59O1xyXG5cclxuLy8gUmV0dXJuIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIF9fcHJvdG9fXyBpZiAnX19wcm90b19fJyBpcyBub3QgYW4gb3duIHByb3BlcnR5XHJcbnZhciBnZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIGdldFByb3BlcnR5KG9iaiwgbmFtZSkge1xyXG5cdGlmIChuYW1lID09PSAnX19wcm90b19fJykge1xyXG5cdFx0aWYgKCFoYXNPd24uY2FsbChvYmosIG5hbWUpKSB7XHJcblx0XHRcdHJldHVybiB2b2lkIDA7XHJcblx0XHR9IGVsc2UgaWYgKGdPUEQpIHtcclxuXHRcdFx0Ly8gSW4gZWFybHkgdmVyc2lvbnMgb2Ygbm9kZSwgb2JqWydfX3Byb3RvX18nXSBpcyBidWdneSB3aGVuIG9iaiBoYXNcclxuXHRcdFx0Ly8gX19wcm90b19fIGFzIGFuIG93biBwcm9wZXJ0eS4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcigpIHdvcmtzLlxyXG5cdFx0XHRyZXR1cm4gZ09QRChvYmosIG5hbWUpLnZhbHVlO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIG9ialtuYW1lXTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXh0ZW5kKCkge1xyXG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZTtcclxuXHR2YXIgdGFyZ2V0ID0gYXJndW1lbnRzWzBdO1xyXG5cdHZhciBpID0gMTtcclxuXHR2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcclxuXHR2YXIgZGVlcCA9IGZhbHNlO1xyXG5cclxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXHJcblx0aWYgKHR5cGVvZiB0YXJnZXQgPT09ICdib29sZWFuJykge1xyXG5cdFx0ZGVlcCA9IHRhcmdldDtcclxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sxXSB8fCB7fTtcclxuXHRcdC8vIHNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcclxuXHRcdGkgPSAyO1xyXG5cdH1cclxuXHRpZiAodGFyZ2V0ID09IG51bGwgfHwgKHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnICYmIHR5cGVvZiB0YXJnZXQgIT09ICdmdW5jdGlvbicpKSB7XHJcblx0XHR0YXJnZXQgPSB7fTtcclxuXHR9XHJcblxyXG5cdGZvciAoOyBpIDwgbGVuZ3RoOyArK2kpIHtcclxuXHRcdG9wdGlvbnMgPSBhcmd1bWVudHNbaV07XHJcblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXHJcblx0XHRpZiAob3B0aW9ucyAhPSBudWxsKSB7XHJcblx0XHRcdC8vIEV4dGVuZCB0aGUgYmFzZSBvYmplY3RcclxuXHRcdFx0Zm9yIChuYW1lIGluIG9wdGlvbnMpIHtcclxuXHRcdFx0XHRzcmMgPSBnZXRQcm9wZXJ0eSh0YXJnZXQsIG5hbWUpO1xyXG5cdFx0XHRcdGNvcHkgPSBnZXRQcm9wZXJ0eShvcHRpb25zLCBuYW1lKTtcclxuXHJcblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxyXG5cdFx0XHRcdGlmICh0YXJnZXQgIT09IGNvcHkpIHtcclxuXHRcdFx0XHRcdC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xyXG5cdFx0XHRcdFx0aWYgKGRlZXAgJiYgY29weSAmJiAoaXNQbGFpbk9iamVjdChjb3B5KSB8fCAoY29weUlzQXJyYXkgPSBpc0FycmF5KGNvcHkpKSkpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGNvcHlJc0FycmF5KSB7XHJcblx0XHRcdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcclxuXHRcdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBpc0FycmF5KHNyYykgPyBzcmMgOiBbXTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBpc1BsYWluT2JqZWN0KHNyYykgPyBzcmMgOiB7fTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXHJcblx0XHRcdFx0XHRcdHNldFByb3BlcnR5KHRhcmdldCwgeyBuYW1lOiBuYW1lLCBuZXdWYWx1ZTogZXh0ZW5kKGRlZXAsIGNsb25lLCBjb3B5KSB9KTtcclxuXHJcblx0XHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXHJcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZiBjb3B5ICE9PSAndW5kZWZpbmVkJykge1xyXG5cdFx0XHRcdFx0XHRzZXRQcm9wZXJ0eSh0YXJnZXQsIHsgbmFtZTogbmFtZSwgbmV3VmFsdWU6IGNvcHkgfSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxyXG5cdHJldHVybiB0YXJnZXQ7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/extend/index.js\n"));

/***/ }),

/***/ "./node_modules/inline-style-parser/index.js":
/*!***************************************************!*\
  !*** ./node_modules/inline-style-parser/index.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// http://www.w3.org/TR/CSS21/grammar.html\r\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\r\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\n\r\nvar NEWLINE_REGEX = /\\n/g;\r\nvar WHITESPACE_REGEX = /^\\s*/;\r\n\r\n// declaration\r\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\r\nvar COLON_REGEX = /^:\\s*/;\r\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\r\nvar SEMICOLON_REGEX = /^[;\\s]*/;\r\n\r\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\r\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\r\n\r\n// strings\r\nvar NEWLINE = '\\n';\r\nvar FORWARD_SLASH = '/';\r\nvar ASTERISK = '*';\r\nvar EMPTY_STRING = '';\r\n\r\n// types\r\nvar TYPE_COMMENT = 'comment';\r\nvar TYPE_DECLARATION = 'declaration';\r\n\r\n/**\r\n * @param {String} style\r\n * @param {Object} [options]\r\n * @return {Object[]}\r\n * @throws {TypeError}\r\n * @throws {Error}\r\n */\r\nmodule.exports = function(style, options) {\r\n  if (typeof style !== 'string') {\r\n    throw new TypeError('First argument must be a string');\r\n  }\r\n\r\n  if (!style) return [];\r\n\r\n  options = options || {};\r\n\r\n  /**\r\n   * Positional.\r\n   */\r\n  var lineno = 1;\r\n  var column = 1;\r\n\r\n  /**\r\n   * Update lineno and column based on `str`.\r\n   *\r\n   * @param {String} str\r\n   */\r\n  function updatePosition(str) {\r\n    var lines = str.match(NEWLINE_REGEX);\r\n    if (lines) lineno += lines.length;\r\n    var i = str.lastIndexOf(NEWLINE);\r\n    column = ~i ? str.length - i : column + str.length;\r\n  }\r\n\r\n  /**\r\n   * Mark position and patch `node.position`.\r\n   *\r\n   * @return {Function}\r\n   */\r\n  function position() {\r\n    var start = { line: lineno, column: column };\r\n    return function(node) {\r\n      node.position = new Position(start);\r\n      whitespace();\r\n      return node;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Store position information for a node.\r\n   *\r\n   * @constructor\r\n   * @property {Object} start\r\n   * @property {Object} end\r\n   * @property {undefined|String} source\r\n   */\r\n  function Position(start) {\r\n    this.start = start;\r\n    this.end = { line: lineno, column: column };\r\n    this.source = options.source;\r\n  }\r\n\r\n  /**\r\n   * Non-enumerable source string.\r\n   */\r\n  Position.prototype.content = style;\r\n\r\n  var errorsList = [];\r\n\r\n  /**\r\n   * Error `msg`.\r\n   *\r\n   * @param {String} msg\r\n   * @throws {Error}\r\n   */\r\n  function error(msg) {\r\n    var err = new Error(\r\n      options.source + ':' + lineno + ':' + column + ': ' + msg\r\n    );\r\n    err.reason = msg;\r\n    err.filename = options.source;\r\n    err.line = lineno;\r\n    err.column = column;\r\n    err.source = style;\r\n\r\n    if (options.silent) {\r\n      errorsList.push(err);\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Match `re` and return captures.\r\n   *\r\n   * @param {RegExp} re\r\n   * @return {undefined|Array}\r\n   */\r\n  function match(re) {\r\n    var m = re.exec(style);\r\n    if (!m) return;\r\n    var str = m[0];\r\n    updatePosition(str);\r\n    style = style.slice(str.length);\r\n    return m;\r\n  }\r\n\r\n  /**\r\n   * Parse whitespace.\r\n   */\r\n  function whitespace() {\r\n    match(WHITESPACE_REGEX);\r\n  }\r\n\r\n  /**\r\n   * Parse comments.\r\n   *\r\n   * @param {Object[]} [rules]\r\n   * @return {Object[]}\r\n   */\r\n  function comments(rules) {\r\n    var c;\r\n    rules = rules || [];\r\n    while ((c = comment())) {\r\n      if (c !== false) {\r\n        rules.push(c);\r\n      }\r\n    }\r\n    return rules;\r\n  }\r\n\r\n  /**\r\n   * Parse comment.\r\n   *\r\n   * @return {Object}\r\n   * @throws {Error}\r\n   */\r\n  function comment() {\r\n    var pos = position();\r\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\r\n\r\n    var i = 2;\r\n    while (\r\n      EMPTY_STRING != style.charAt(i) &&\r\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\r\n    ) {\r\n      ++i;\r\n    }\r\n    i += 2;\r\n\r\n    if (EMPTY_STRING === style.charAt(i - 1)) {\r\n      return error('End of comment missing');\r\n    }\r\n\r\n    var str = style.slice(2, i - 2);\r\n    column += 2;\r\n    updatePosition(str);\r\n    style = style.slice(i);\r\n    column += 2;\r\n\r\n    return pos({\r\n      type: TYPE_COMMENT,\r\n      comment: str\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse declaration.\r\n   *\r\n   * @return {Object}\r\n   * @throws {Error}\r\n   */\r\n  function declaration() {\r\n    var pos = position();\r\n\r\n    // prop\r\n    var prop = match(PROPERTY_REGEX);\r\n    if (!prop) return;\r\n    comment();\r\n\r\n    // :\r\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\r\n\r\n    // val\r\n    var val = match(VALUE_REGEX);\r\n\r\n    var ret = pos({\r\n      type: TYPE_DECLARATION,\r\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\r\n      value: val\r\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\r\n        : EMPTY_STRING\r\n    });\r\n\r\n    // ;\r\n    match(SEMICOLON_REGEX);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Parse declarations.\r\n   *\r\n   * @return {Object[]}\r\n   */\r\n  function declarations() {\r\n    var decls = [];\r\n\r\n    comments(decls);\r\n\r\n    // declarations\r\n    var decl;\r\n    while ((decl = declaration())) {\r\n      if (decl !== false) {\r\n        decls.push(decl);\r\n        comments(decls);\r\n      }\r\n    }\r\n\r\n    return decls;\r\n  }\r\n\r\n  whitespace();\r\n  return declarations();\r\n};\r\n\r\n/**\r\n * Trim `str`.\r\n *\r\n * @param {String} str\r\n * @return {String}\r\n */\r\nfunction trim(str) {\r\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/inline-style-parser/index.js\n"));

/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\nmodule.exports = function isBuffer (obj) {\r\n  return obj != null && obj.constructor != null &&\r\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtYnVmZmVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzLWJ1ZmZlci9pbmRleC5qcz8xNGU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXHJcbiAqXHJcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XHJcbiAqIEBsaWNlbnNlICBNSVRcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyIChvYmopIHtcclxuICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLmNvbnN0cnVjdG9yICE9IG51bGwgJiZcclxuICAgIHR5cGVvZiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyKG9iailcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/is-buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function (val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLFdBQVcsUUFBUTtBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanM/M2E3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogSGVscGVycy5cclxuICovXHJcblxyXG52YXIgcyA9IDEwMDA7XHJcbnZhciBtID0gcyAqIDYwO1xyXG52YXIgaCA9IG0gKiA2MDtcclxudmFyIGQgPSBoICogMjQ7XHJcbnZhciB3ID0gZCAqIDc7XHJcbnZhciB5ID0gZCAqIDM2NS4yNTtcclxuXHJcbi8qKlxyXG4gKiBQYXJzZSBvciBmb3JtYXQgdGhlIGdpdmVuIGB2YWxgLlxyXG4gKlxyXG4gKiBPcHRpb25zOlxyXG4gKlxyXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSB2YWxcclxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gKiBAdGhyb3dzIHtFcnJvcn0gdGhyb3cgYW4gZXJyb3IgaWYgdmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSBudW1iZXJcclxuICogQHJldHVybiB7U3RyaW5nfE51bWJlcn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWwsIG9wdGlvbnMpIHtcclxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XHJcbiAgaWYgKHR5cGUgPT09ICdzdHJpbmcnICYmIHZhbC5sZW5ndGggPiAwKSB7XHJcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcclxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbCkpIHtcclxuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xyXG4gIH1cclxuICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcclxuICAgICAgSlNPTi5zdHJpbmdpZnkodmFsKVxyXG4gICk7XHJcbn07XHJcblxyXG4vKipcclxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm4ge051bWJlcn1cclxuICogQGFwaSBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XHJcbiAgc3RyID0gU3RyaW5nKHN0cik7XHJcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgdmFyIG1hdGNoID0gL14oLT8oPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKFxyXG4gICAgc3RyXHJcbiAgKTtcclxuICBpZiAoIW1hdGNoKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSk7XHJcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKTtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGNhc2UgJ3llYXJzJzpcclxuICAgIGNhc2UgJ3llYXInOlxyXG4gICAgY2FzZSAneXJzJzpcclxuICAgIGNhc2UgJ3lyJzpcclxuICAgIGNhc2UgJ3knOlxyXG4gICAgICByZXR1cm4gbiAqIHk7XHJcbiAgICBjYXNlICd3ZWVrcyc6XHJcbiAgICBjYXNlICd3ZWVrJzpcclxuICAgIGNhc2UgJ3cnOlxyXG4gICAgICByZXR1cm4gbiAqIHc7XHJcbiAgICBjYXNlICdkYXlzJzpcclxuICAgIGNhc2UgJ2RheSc6XHJcbiAgICBjYXNlICdkJzpcclxuICAgICAgcmV0dXJuIG4gKiBkO1xyXG4gICAgY2FzZSAnaG91cnMnOlxyXG4gICAgY2FzZSAnaG91cic6XHJcbiAgICBjYXNlICdocnMnOlxyXG4gICAgY2FzZSAnaHInOlxyXG4gICAgY2FzZSAnaCc6XHJcbiAgICAgIHJldHVybiBuICogaDtcclxuICAgIGNhc2UgJ21pbnV0ZXMnOlxyXG4gICAgY2FzZSAnbWludXRlJzpcclxuICAgIGNhc2UgJ21pbnMnOlxyXG4gICAgY2FzZSAnbWluJzpcclxuICAgIGNhc2UgJ20nOlxyXG4gICAgICByZXR1cm4gbiAqIG07XHJcbiAgICBjYXNlICdzZWNvbmRzJzpcclxuICAgIGNhc2UgJ3NlY29uZCc6XHJcbiAgICBjYXNlICdzZWNzJzpcclxuICAgIGNhc2UgJ3NlYyc6XHJcbiAgICBjYXNlICdzJzpcclxuICAgICAgcmV0dXJuIG4gKiBzO1xyXG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcclxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcclxuICAgIGNhc2UgJ21zZWNzJzpcclxuICAgIGNhc2UgJ21zZWMnOlxyXG4gICAgY2FzZSAnbXMnOlxyXG4gICAgICByZXR1cm4gbjtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogU2hvcnQgZm9ybWF0IGZvciBgbXNgLlxyXG4gKlxyXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcclxuICogQHJldHVybiB7U3RyaW5nfVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xyXG4gIHZhciBtc0FicyA9IE1hdGguYWJzKG1zKTtcclxuICBpZiAobXNBYnMgPj0gZCkge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJztcclxuICB9XHJcbiAgaWYgKG1zQWJzID49IGgpIHtcclxuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gaCkgKyAnaCc7XHJcbiAgfVxyXG4gIGlmIChtc0FicyA+PSBtKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG0pICsgJ20nO1xyXG4gIH1cclxuICBpZiAobXNBYnMgPj0gcykge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJztcclxuICB9XHJcbiAgcmV0dXJuIG1zICsgJ21zJztcclxufVxyXG5cclxuLyoqXHJcbiAqIExvbmcgZm9ybWF0IGZvciBgbXNgLlxyXG4gKlxyXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcclxuICogQHJldHVybiB7U3RyaW5nfVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBmbXRMb25nKG1zKSB7XHJcbiAgdmFyIG1zQWJzID0gTWF0aC5hYnMobXMpO1xyXG4gIGlmIChtc0FicyA+PSBkKSB7XHJcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgZCwgJ2RheScpO1xyXG4gIH1cclxuICBpZiAobXNBYnMgPj0gaCkge1xyXG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIGgsICdob3VyJyk7XHJcbiAgfVxyXG4gIGlmIChtc0FicyA+PSBtKSB7XHJcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgbSwgJ21pbnV0ZScpO1xyXG4gIH1cclxuICBpZiAobXNBYnMgPj0gcykge1xyXG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIHMsICdzZWNvbmQnKTtcclxuICB9XHJcbiAgcmV0dXJuIG1zICsgJyBtcyc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQbHVyYWxpemF0aW9uIGhlbHBlci5cclxuICovXHJcblxyXG5mdW5jdGlvbiBwbHVyYWwobXMsIG1zQWJzLCBuLCBuYW1lKSB7XHJcbiAgdmFyIGlzUGx1cmFsID0gbXNBYnMgPj0gbiAqIDEuNTtcclxuICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG4pICsgJyAnICsgbmFtZSArIChpc1BsdXJhbCA/ICdzJyA6ICcnKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ms/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar assign = Object.assign.bind(Object);\r\nmodule.exports = assign;\r\nmodule.exports[\"default\"] = module.exports;\r\n\r\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLHlCQUFzQjtBQUN0QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanM/ZTdkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIGFzc2lnbiA9IE9iamVjdC5hc3NpZ24uYmluZChPYmplY3QpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGFzc2lnbjtcclxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IG1vZHVsZS5leHBvcnRzO1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LWFzc2lnbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar ref, ref1;\r\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\r\n\r\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCO0FBQ3JNO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcz9jYTY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgcmVmLCByZWYxO1xyXG5tb2R1bGUuZXhwb3J0cyA9ICgocmVmID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiByZWYuZW52KSAmJiB0eXBlb2YgKChyZWYxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiByZWYxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCIuLi8uLi9jb21waWxlZC9wcm9jZXNzXCIpO1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUSER%5CSales-Dashboard-FastApi-Next%5Cfrontend%5Cpages%5Cindex.js&page=%2F!":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUSER%5CSales-Dashboard-FastApi-Next%5Cfrontend%5Cpages%5Cindex.js&page=%2F! ***!
  \**********************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1DJTNBJTVDVXNlcnMlNUNVU0VSJTVDU2FsZXMtRGFzaGJvYXJkLUZhc3RBcGktTmV4dCU1Q2Zyb250ZW5kJTVDcGFnZXMlNUNpbmRleC5qcyZwYWdlPSUyRiEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQywwQ0FBa0I7QUFDekM7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9cIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCIuL3BhZ2VzL2luZGV4LmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUSER%5CSales-Dashboard-FastApi-Next%5Cfrontend%5Cpages%5Cindex.js&page=%2F!\n"));

/***/ }),

/***/ "./components/ai/ChatInput.js":
/*!************************************!*\
  !*** ./components/ai/ChatInput.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ChatInput = (param)=>{\n    let { question , setQuestion , handleAskQuestion , darkMode  } = param;\n    // Handle key down for CTRL+ENTER\n    const handleKeyDown = (e)=>{\n        // Check for Enter key or CTRL+Enter combination\n        if (e.key === \"Enter\" && (e.ctrlKey || e.metaKey)) {\n            handleAskQuestion();\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center p-2 rounded-lg border \".concat(darkMode ? \"bg-gray-700 border-gray-600\" : \"bg-white border-gray-300\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"Ask a question about sales performance...\",\n                value: question,\n                onChange: (e)=>setQuestion(e.target.value),\n                onKeyDown: handleKeyDown,\n                className: \"flex-grow p-2 focus:outline-none \".concat(darkMode ? \"bg-gray-700 text-white placeholder-gray-400\" : \"bg-white text-gray-800 placeholder-gray-500\"),\n                \"aria-label\": \"Chat input\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"hidden md:inline-block text-xs mr-2 \".concat(darkMode ? \"text-gray-400\" : \"text-gray-500\"),\n                        children: \"CTRL+ENTER to send\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleAskQuestion,\n                        disabled: !question.trim(),\n                        className: \"p-2 rounded-full transition-colors \".concat(darkMode ? \"bg-blue-600 hover:bg-blue-700 text-white disabled:bg-gray-600\" : \"bg-blue-500 hover:bg-blue-600 text-white disabled:bg-gray-300\", \" disabled:cursor-not-allowed\"),\n                        \"aria-label\": \"Send message\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-5 w-5\",\n                            viewBox: \"0 0 20 20\",\n                            fill: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                fillRule: \"evenodd\",\n                                d: \"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\",\n                                clipRule: \"evenodd\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                                lineNumber: 48,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                            lineNumber: 47,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                        lineNumber: 37,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatInput.js\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, undefined);\n};\n_c = ChatInput;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChatInput);\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2FpL0NoYXRJbnB1dC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFFMUIsTUFBTUMsWUFBWSxTQUE0RDtRQUEzRCxFQUFFQyxTQUFRLEVBQUVDLFlBQVcsRUFBRUMsa0JBQWlCLEVBQUVDLFNBQVEsRUFBRTtJQUN2RSxpQ0FBaUM7SUFDakMsTUFBTUMsZ0JBQWdCLENBQUNDLElBQU07UUFDM0IsZ0RBQWdEO1FBQ2hELElBQUlBLEVBQUVDLEdBQUcsS0FBSyxXQUFZRCxDQUFBQSxFQUFFRSxPQUFPLElBQUlGLEVBQUVHLE9BQU8sR0FBRztZQUNqRE47UUFDRixDQUFDO0lBQ0g7SUFFQSxxQkFDRSw4REFBQ087UUFBSUMsV0FBVywyQ0FJZixPQUhDUCxXQUNJLGdDQUNBLDBCQUEwQjs7MEJBRTlCLDhEQUFDUTtnQkFDQ0MsTUFBSztnQkFDTEMsYUFBWTtnQkFDWkMsT0FBT2Q7Z0JBQ1BlLFVBQVUsQ0FBQ1YsSUFBTUosWUFBWUksRUFBRVcsTUFBTSxDQUFDRixLQUFLO2dCQUMzQ0csV0FBV2I7Z0JBQ1hNLFdBQVcsb0NBSVYsT0FIQ1AsV0FDSSxnREFDQSw2Q0FBNkM7Z0JBRW5EZSxjQUFXOzs7Ozs7MEJBRWIsOERBQUNUO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ1M7d0JBQUtULFdBQVcsdUNBRWhCLE9BRENQLFdBQVcsa0JBQWtCLGVBQWU7a0NBQzFDOzs7Ozs7a0NBR0osOERBQUNpQjt3QkFDQ0MsU0FBU25CO3dCQUNUb0IsVUFBVSxDQUFDdEIsU0FBU3VCLElBQUk7d0JBQ3hCYixXQUFXLHNDQUlWLE9BSENQLFdBQ0ksa0VBQ0EsK0RBQStELEVBQ3BFO3dCQUNEZSxjQUFXO2tDQUVYLDRFQUFDTTs0QkFBSUMsT0FBTTs0QkFBNkJmLFdBQVU7NEJBQVVnQixTQUFROzRCQUFZQyxNQUFLO3NDQUNuRiw0RUFBQ0M7Z0NBQUtDLFVBQVM7Z0NBQVVDLEdBQUU7Z0NBQTJJQyxVQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTTNMO0tBbkRNaEM7QUFxRE4sK0RBQWVBLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9haS9DaGF0SW5wdXQuanM/MWU2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgQ2hhdElucHV0ID0gKHsgcXVlc3Rpb24sIHNldFF1ZXN0aW9uLCBoYW5kbGVBc2tRdWVzdGlvbiwgZGFya01vZGUgfSkgPT4ge1xyXG4gIC8vIEhhbmRsZSBrZXkgZG93biBmb3IgQ1RSTCtFTlRFUlxyXG4gIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZSkgPT4ge1xyXG4gICAgLy8gQ2hlY2sgZm9yIEVudGVyIGtleSBvciBDVFJMK0VudGVyIGNvbWJpbmF0aW9uXHJcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicgJiYgKGUuY3RybEtleSB8fCBlLm1ldGFLZXkpKSB7XHJcbiAgICAgIGhhbmRsZUFza1F1ZXN0aW9uKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPXtgZmxleCBpdGVtcy1jZW50ZXIgcC0yIHJvdW5kZWQtbGcgYm9yZGVyICR7XHJcbiAgICAgIGRhcmtNb2RlIFxyXG4gICAgICAgID8gJ2JnLWdyYXktNzAwIGJvcmRlci1ncmF5LTYwMCcgXHJcbiAgICAgICAgOiAnYmctd2hpdGUgYm9yZGVyLWdyYXktMzAwJ1xyXG4gICAgfWB9PlxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJBc2sgYSBxdWVzdGlvbiBhYm91dCBzYWxlcyBwZXJmb3JtYW5jZS4uLlwiXHJcbiAgICAgICAgdmFsdWU9e3F1ZXN0aW9ufVxyXG4gICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0UXVlc3Rpb24oZS50YXJnZXQudmFsdWUpfVxyXG4gICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cclxuICAgICAgICBjbGFzc05hbWU9e2BmbGV4LWdyb3cgcC0yIGZvY3VzOm91dGxpbmUtbm9uZSAke1xyXG4gICAgICAgICAgZGFya01vZGUgXHJcbiAgICAgICAgICAgID8gJ2JnLWdyYXktNzAwIHRleHQtd2hpdGUgcGxhY2Vob2xkZXItZ3JheS00MDAnIFxyXG4gICAgICAgICAgICA6ICdiZy13aGl0ZSB0ZXh0LWdyYXktODAwIHBsYWNlaG9sZGVyLWdyYXktNTAwJ1xyXG4gICAgICAgIH1gfVxyXG4gICAgICAgIGFyaWEtbGFiZWw9XCJDaGF0IGlucHV0XCJcclxuICAgICAgLz5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YGhpZGRlbiBtZDppbmxpbmUtYmxvY2sgdGV4dC14cyBtci0yICR7XHJcbiAgICAgICAgICBkYXJrTW9kZSA/ICd0ZXh0LWdyYXktNDAwJyA6ICd0ZXh0LWdyYXktNTAwJ1xyXG4gICAgICAgIH1gfT5cclxuICAgICAgICAgIENUUkwrRU5URVIgdG8gc2VuZFxyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVBc2tRdWVzdGlvbn1cclxuICAgICAgICAgIGRpc2FibGVkPXshcXVlc3Rpb24udHJpbSgpfVxyXG4gICAgICAgICAgY2xhc3NOYW1lPXtgcC0yIHJvdW5kZWQtZnVsbCB0cmFuc2l0aW9uLWNvbG9ycyAke1xyXG4gICAgICAgICAgICBkYXJrTW9kZVxyXG4gICAgICAgICAgICAgID8gJ2JnLWJsdWUtNjAwIGhvdmVyOmJnLWJsdWUtNzAwIHRleHQtd2hpdGUgZGlzYWJsZWQ6YmctZ3JheS02MDAnXHJcbiAgICAgICAgICAgICAgOiAnYmctYmx1ZS01MDAgaG92ZXI6YmctYmx1ZS02MDAgdGV4dC13aGl0ZSBkaXNhYmxlZDpiZy1ncmF5LTMwMCdcclxuICAgICAgICAgIH0gZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkYH1cclxuICAgICAgICAgIGFyaWEtbGFiZWw9XCJTZW5kIG1lc3NhZ2VcIlxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGNsYXNzTmFtZT1cImgtNSB3LTVcIiB2aWV3Qm94PVwiMCAwIDIwIDIwXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiPlxyXG4gICAgICAgICAgICA8cGF0aCBmaWxsUnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEwLjI5MyAzLjI5M2ExIDEgMCAwMTEuNDE0IDBsNiA2YTEgMSAwIDAxMCAxLjQxNGwtNiA2YTEgMSAwIDAxLTEuNDE0LTEuNDE0TDE0LjU4NiAxMUgzYTEgMSAwIDExMC0yaDExLjU4NmwtNC4yOTMtNC4yOTNhMSAxIDAgMDEwLTEuNDE0elwiIGNsaXBSdWxlPVwiZXZlbm9kZFwiIC8+XHJcbiAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2hhdElucHV0OyJdLCJuYW1lcyI6WyJSZWFjdCIsIkNoYXRJbnB1dCIsInF1ZXN0aW9uIiwic2V0UXVlc3Rpb24iLCJoYW5kbGVBc2tRdWVzdGlvbiIsImRhcmtNb2RlIiwiaGFuZGxlS2V5RG93biIsImUiLCJrZXkiLCJjdHJsS2V5IiwibWV0YUtleSIsImRpdiIsImNsYXNzTmFtZSIsImlucHV0IiwidHlwZSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsInRhcmdldCIsIm9uS2V5RG93biIsImFyaWEtbGFiZWwiLCJzcGFuIiwiYnV0dG9uIiwib25DbGljayIsImRpc2FibGVkIiwidHJpbSIsInN2ZyIsInhtbG5zIiwidmlld0JveCIsImZpbGwiLCJwYXRoIiwiZmlsbFJ1bGUiLCJkIiwiY2xpcFJ1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ai/ChatInput.js\n"));

/***/ }),

/***/ "./components/ai/ChatMessages.js":
/*!***************************************!*\
  !*** ./components/ai/ChatMessages.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n\n\n\n\nconst ChatMessage = (param)=>{\n    let { message , darkMode  } = param;\n    const isUser = message.type === \"user\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mb-6 flex \".concat(isUser ? \"justify-end\" : \"justify-start\"),\n        children: [\n            !isUser && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 h-8 w-8 rounded-full flex items-center justify-center mr-3 \".concat(darkMode ? \"bg-blue-700 text-blue-200\" : \"bg-blue-100 text-blue-600\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-5 w-5\",\n                    viewBox: \"0 0 20 20\",\n                    fill: \"currentColor\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        fillRule: \"evenodd\",\n                        d: \"M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z\",\n                        clipRule: \"evenodd\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                        lineNumber: 16,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                    lineNumber: 15,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                lineNumber: 12,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-[85%] p-4 rounded-lg shadow-sm \".concat(isUser ? \"bg-blue-600 text-white\" : darkMode ? \"bg-gray-600 text-white\" : \"bg-gray-200 text-gray-800\"),\n                children: message.type === \"ai\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_markdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    remarkPlugins: [\n                        remark_gfm__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n                    ],\n                    className: \"markdown-content\",\n                    components: {\n                        h1: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-lg font-bold my-3\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        h2: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-md font-bold my-2\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        p: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"mb-2\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        ul: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: \"my-2 pl-2\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        ol: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ol\", {\n                                className: \"my-2 pl-2\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        code: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                                className: \"px-1 py-0.5 rounded-md \".concat(darkMode ? \"bg-gray-800 text-green-400\" : \"bg-gray-100 text-red-500\"),\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        li: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                className: \"ml-4 list-disc mb-1\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        a: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                className: \"\".concat(darkMode ? \"text-blue-300\" : \"text-blue-700\", \" underline\"),\n                                target: \"_blank\",\n                                rel: \"noopener noreferrer\",\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        table: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"overflow-x-auto my-4\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                                    className: \"min-w-full divide-y divide-gray-500\",\n                                    ...props\n                                }, void 0, false, void 0, void 0)\n                            }, void 0, false, void 0, void 0);\n                        },\n                        th: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                className: \"px-4 py-2 text-left \".concat(darkMode ? \"text-gray-200\" : \"text-gray-700\"),\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        },\n                        td: (param)=>/*#__PURE__*/ {\n                            let { node , ...props } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                className: \"px-4 py-2 \".concat(darkMode ? \"border-gray-700\" : \"border-gray-300\"),\n                                ...props\n                            }, void 0, false, void 0, void 0);\n                        }\n                    },\n                    children: message.text\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                    lineNumber: 31,\n                    columnNumber: 11\n                }, undefined) : message.text\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, undefined),\n            isUser && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 h-8 w-8 rounded-full flex items-center justify-center ml-3 \".concat(darkMode ? \"bg-gray-700 text-gray-300\" : \"bg-gray-300 text-gray-700\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-5 w-5\",\n                    viewBox: \"0 0 20 20\",\n                    fill: \"currentColor\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        fillRule: \"evenodd\",\n                        d: \"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\",\n                        clipRule: \"evenodd\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                        lineNumber: 97,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                    lineNumber: 96,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n                lineNumber: 93,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\ChatMessages.js\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, undefined);\n};\n_c = ChatMessage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChatMessage);\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/ai/ChatMessages.js\n"));

/***/ }),

/***/ "./components/ai/FloatingChat.js":
/*!***************************************!*\
  !*** ./components/ai/FloatingChat.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ChatMessages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChatMessages */ \"./components/ai/ChatMessages.js\");\n/* harmony import */ var _ChatInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChatInput */ \"./components/ai/ChatInput.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst FloatingChat = (param)=>{\n    let { chatMessages , question , setQuestion , handleAskQuestion , darkMode  } = param;\n    _s();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isFullScreen, setIsFullScreen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const chatRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Handle click outside to close chat\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleClickOutside = (event)=>{\n            if (chatRef.current && !chatRef.current.contains(event.target) && isOpen && !isFullScreen) {\n            // Optional: close on outside click when not in fullscreen\n            // setIsOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>{\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [\n        isOpen,\n        isFullScreen\n    ]);\n    const toggleChat = ()=>{\n        setIsOpen(!isOpen);\n        // Exit fullscreen when closing\n        if (isOpen && isFullScreen) {\n            setIsFullScreen(false);\n        }\n    };\n    const toggleFullScreen = ()=>{\n        setIsFullScreen(!isFullScreen);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: chatRef,\n        className: \"fixed transition-all duration-300 z-50 \".concat(isFullScreen ? \"inset-0 m-0 rounded-none\" : isOpen ? \"bottom-4 right-4 w-96 h-[550px] rounded-lg\" : \"bottom-4 right-4 w-16 h-16 rounded-full\", \" \").concat(darkMode ? \"bg-gray-800 text-white\" : \"bg-white text-gray-800\", \" shadow-xl\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"\".concat(darkMode ? \"bg-gray-700\" : \"bg-blue-600 text-white\", \" \").concat(isFullScreen ? \"\" : \"rounded-t-lg\", \" flex justify-between items-center p-4\"),\n                children: isOpen ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"font-semibold\",\n                            children: \"Sales Assistant\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                            lineNumber: 56,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex space-x-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: toggleFullScreen,\n                                    className: \"focus:outline-none mr-2\",\n                                    \"aria-label\": isFullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\",\n                                    children: isFullScreen ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        className: \"h-5 w-5\",\n                                        viewBox: \"0 0 20 20\",\n                                        fill: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            fillRule: \"evenodd\",\n                                            d: \"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z\",\n                                            clipRule: \"evenodd\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                            lineNumber: 66,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                        lineNumber: 65,\n                                        columnNumber: 19\n                                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        className: \"h-5 w-5\",\n                                        viewBox: \"0 0 20 20\",\n                                        fill: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            fillRule: \"evenodd\",\n                                            d: \"M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 010-2h4a1 1 0 011 1v4a1 1 0 01-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 012 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 010 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 010-2h1.586l-2.293-2.293a1 1 0 011.414-1.414L15 13.586V12a1 1 0 011 1z\",\n                                            clipRule: \"evenodd\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                            lineNumber: 70,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                        lineNumber: 69,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                    lineNumber: 59,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: toggleChat,\n                                    className: \"focus:outline-none\",\n                                    \"aria-label\": \"Close chat\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        className: \"h-5 w-5\",\n                                        viewBox: \"0 0 20 20\",\n                                        fill: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            fillRule: \"evenodd\",\n                                            d: \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\",\n                                            clipRule: \"evenodd\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                            lineNumber: 82,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                        lineNumber: 81,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                    lineNumber: 76,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                            lineNumber: 57,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: toggleChat,\n                    className: \"w-full h-full flex items-center justify-center focus:outline-none\",\n                    \"aria-label\": \"Open chat\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"h-8 w-8\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                            lineNumber: 94,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                        lineNumber: 93,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                    lineNumber: 88,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                lineNumber: 49,\n                columnNumber: 7\n            }, undefined),\n            isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col h-[calc(100%-80px)] p-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"\".concat(darkMode ? \"bg-gray-700\" : \"bg-gray-100\", \" rounded-lg flex-grow overflow-y-auto p-4 mb-4 border \").concat(darkMode ? \"border-gray-600\" : \"border-gray-200\"),\n                        children: chatMessages.length > 0 ? chatMessages.map((message, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatMessages__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                message: message,\n                                darkMode: darkMode\n                            }, index, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                lineNumber: 108,\n                                columnNumber: 17\n                            }, undefined)) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-center \".concat(darkMode ? \"text-gray-400\" : \"text-gray-500\", \" py-12\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    className: \"h-12 w-12 mx-auto mb-4 opacity-60\",\n                                    fill: \"none\",\n                                    viewBox: \"0 0 24 24\",\n                                    stroke: \"currentColor\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: 1.5,\n                                        d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                        lineNumber: 115,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                    lineNumber: 114,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"font-medium\",\n                                    children: \"How can I help with your sales queries?\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                    lineNumber: 117,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-sm mt-2\",\n                                    children: \"Ask about sales performance, regional data, or customer insights.\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                                    lineNumber: 118,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                            lineNumber: 111,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                        lineNumber: 103,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatInput__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        question: question,\n                        setQuestion: setQuestion,\n                        handleAskQuestion: handleAskQuestion,\n                        darkMode: darkMode\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                        lineNumber: 123,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n                lineNumber: 102,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\ai\\\\FloatingChat.js\",\n        lineNumber: 38,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FloatingChat, \"XbbnVR+HH5eYHgtYo51RhS8ilk8=\");\n_c = FloatingChat;\n/* harmony default export */ __webpack_exports__[\"default\"] = (FloatingChat);\nvar _c;\n$RefreshReg$(_c, \"FloatingChat\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/ai/FloatingChat.js\n"));

/***/ }),

/***/ "./components/layout/Container.js":
/*!****************************************!*\
  !*** ./components/layout/Container.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst Container = (param)=>{\n    let { children , className =\"\"  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mx-auto w-full max-w-[1440px] px-4 py-8 \".concat(className),\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\layout\\\\Container.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Container;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Container);\nvar _c;\n$RefreshReg$(_c, \"Container\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2xheW91dC9Db250YWluZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRTFCLE1BQU1DLFlBQVksU0FBa0M7UUFBakMsRUFBRUMsU0FBUSxFQUFFQyxXQUFZLEdBQUUsRUFBRTtJQUM3QyxxQkFDRSw4REFBQ0M7UUFBSUQsV0FBVywyQ0FBcUQsT0FBVkE7a0JBQ3hERDs7Ozs7O0FBR1A7S0FOTUQ7QUFRTiwrREFBZUEsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL2xheW91dC9Db250YWluZXIuanM/YzY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSA9ICcnIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2BteC1hdXRvIHctZnVsbCBtYXgtdy1bMTQ0MHB4XSBweC00IHB5LTggJHtjbGFzc05hbWV9YH0+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7Il0sIm5hbWVzIjpbIlJlYWN0IiwiQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJkaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/layout/Container.js\n"));

/***/ }),

/***/ "./components/layout/Header.js":
/*!*************************************!*\
  !*** ./components/layout/Header.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst Header = (param)=>{\n    let { title  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n        className: \"text-4xl font-bold text-center text-white mb-8\",\n        children: title\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\layout\\\\Header.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Header;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Header);\nvar _c;\n$RefreshReg$(_c, \"Header\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2xheW91dC9IZWFkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRTFCLE1BQU1DLFNBQVMsU0FBZTtRQUFkLEVBQUVDLE1BQUssRUFBRTtJQUN2QixxQkFDRSw4REFBQ0M7UUFBR0MsV0FBVTtrQkFDWEY7Ozs7OztBQUdQO0tBTk1EO0FBUU4sK0RBQWVBLE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9sYXlvdXQvSGVhZGVyLmpzPzVlZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEhlYWRlciA9ICh7IHRpdGxlIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGgxIGNsYXNzTmFtZT1cInRleHQtNHhsIGZvbnQtYm9sZCB0ZXh0LWNlbnRlciB0ZXh0LXdoaXRlIG1iLThcIj5cclxuICAgICAge3RpdGxlfVxyXG4gICAgPC9oMT5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyOyJdLCJuYW1lcyI6WyJSZWFjdCIsIkhlYWRlciIsInRpdGxlIiwiaDEiLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/layout/Header.js\n"));

/***/ }),

/***/ "./components/sales/RegionFilter.js":
/*!******************************************!*\
  !*** ./components/sales/RegionFilter.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst RegionFilter = (param)=>{\n    let { regions , selectedRegion , onRegionChange  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                htmlFor: \"region-select\",\n                className: \"mr-2 text-gray-300\",\n                children: \"Filter by Region:\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\RegionFilter.js\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                id: \"region-select\",\n                value: selectedRegion,\n                onChange: (e)=>onRegionChange(e.target.value),\n                className: \"p-2 border border-gray-600 rounded bg-gray-700 text-white\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                        value: \"\",\n                        children: \"All Regions\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\RegionFilter.js\",\n                        lineNumber: 18,\n                        columnNumber: 9\n                    }, undefined),\n                    regions.map((region)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                            value: region,\n                            children: region\n                        }, region, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\RegionFilter.js\",\n                            lineNumber: 20,\n                            columnNumber: 11\n                        }, undefined))\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\RegionFilter.js\",\n                lineNumber: 12,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\RegionFilter.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RegionFilter;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RegionFilter);\nvar _c;\n$RefreshReg$(_c, \"RegionFilter\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3NhbGVzL1JlZ2lvbkZpbHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFFMUIsTUFBTUMsZUFBZSxTQUFpRDtRQUFoRCxFQUFFQyxRQUFPLEVBQUVDLGVBQWMsRUFBRUMsZUFBYyxFQUFFO0lBQy9ELHFCQUNFLDhEQUFDQzs7MEJBQ0MsOERBQUNDO2dCQUNDQyxTQUFRO2dCQUNSQyxXQUFVOzBCQUNYOzs7Ozs7MEJBR0QsOERBQUNDO2dCQUNDQyxJQUFHO2dCQUNIQyxPQUFPUjtnQkFDUFMsVUFBVSxDQUFDQyxJQUFNVCxlQUFlUyxFQUFFQyxNQUFNLENBQUNILEtBQUs7Z0JBQzlDSCxXQUFVOztrQ0FFViw4REFBQ087d0JBQU9KLE9BQU07a0NBQUc7Ozs7OztvQkFDaEJULFFBQVFjLEdBQUcsQ0FBQyxDQUFDQyx1QkFDWiw4REFBQ0Y7NEJBQW9CSixPQUFPTTtzQ0FDekJBOzJCQURVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPdkI7S0F4Qk1oQjtBQTBCTiwrREFBZUEsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3NhbGVzL1JlZ2lvbkZpbHRlci5qcz8wYzM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBSZWdpb25GaWx0ZXIgPSAoeyByZWdpb25zLCBzZWxlY3RlZFJlZ2lvbiwgb25SZWdpb25DaGFuZ2UgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8bGFiZWxcclxuICAgICAgICBodG1sRm9yPVwicmVnaW9uLXNlbGVjdFwiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibXItMiB0ZXh0LWdyYXktMzAwXCJcclxuICAgICAgPlxyXG4gICAgICAgIEZpbHRlciBieSBSZWdpb246XHJcbiAgICAgIDwvbGFiZWw+XHJcbiAgICAgIDxzZWxlY3RcclxuICAgICAgICBpZD1cInJlZ2lvbi1zZWxlY3RcIlxyXG4gICAgICAgIHZhbHVlPXtzZWxlY3RlZFJlZ2lvbn1cclxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IG9uUmVnaW9uQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICBjbGFzc05hbWU9XCJwLTIgYm9yZGVyIGJvcmRlci1ncmF5LTYwMCByb3VuZGVkIGJnLWdyYXktNzAwIHRleHQtd2hpdGVcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPkFsbCBSZWdpb25zPC9vcHRpb24+XHJcbiAgICAgICAge3JlZ2lvbnMubWFwKChyZWdpb24pID0+IChcclxuICAgICAgICAgIDxvcHRpb24ga2V5PXtyZWdpb259IHZhbHVlPXtyZWdpb259PlxyXG4gICAgICAgICAgICB7cmVnaW9ufVxyXG4gICAgICAgICAgPC9vcHRpb24+XHJcbiAgICAgICAgKSl9XHJcbiAgICAgIDwvc2VsZWN0PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlZ2lvbkZpbHRlcjsiXSwibmFtZXMiOlsiUmVhY3QiLCJSZWdpb25GaWx0ZXIiLCJyZWdpb25zIiwic2VsZWN0ZWRSZWdpb24iLCJvblJlZ2lvbkNoYW5nZSIsImRpdiIsImxhYmVsIiwiaHRtbEZvciIsImNsYXNzTmFtZSIsInNlbGVjdCIsImlkIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJvcHRpb24iLCJtYXAiLCJyZWdpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/sales/RegionFilter.js\n"));

/***/ }),

/***/ "./components/sales/SalesRepCard.js":
/*!******************************************!*\
  !*** ./components/sales/SalesRepCard.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst SalesRepCard = (param)=>{\n    let { rep  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-gray-800 shadow-md rounded-lg p-6 hover:shadow-lg transition-shadow duration-300 border border-gray-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-xl font-bold text-white mb-2\",\n                children: rep.name\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-gray-300 mb-4\",\n                children: [\n                    rep.role,\n                    \" | \",\n                    rep.region\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-gray-700 rounded-md p-4 mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        className: \"block mb-2 text-gray-300\",\n                        children: \"Skills:\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                        lineNumber: 14,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-wrap gap-2\",\n                        children: rep.skills.map((skill)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"bg-blue-600 text-white text-xs px-2 py-1 rounded-full\",\n                                children: skill\n                            }, skill, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                                lineNumber: 17,\n                                columnNumber: 13\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                        lineNumber: 15,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        className: \"block mb-2 text-gray-300\",\n                        children: \"Deals:\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                        lineNumber: 28,\n                        columnNumber: 9\n                    }, undefined),\n                    rep.deals.map((deal, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-between items-center bg-gray-700 p-3 rounded-md mb-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"font-semibold text-white\",\n                                            children: deal.client\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                                            lineNumber: 35,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-gray-300 ml-2\",\n                                            children: [\n                                                \"$\",\n                                                deal.value.toLocaleString()\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                                            lineNumber: 38,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                                    lineNumber: 34,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-sm font-medium \".concat(deal.status === \"Closed Won\" ? \"text-green-400\" : deal.status === \"In Progress\" ? \"text-yellow-400\" : \"text-red-400\"),\n                                    children: deal.status\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                                    lineNumber: 42,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, index, true, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                            lineNumber: 30,\n                            columnNumber: 11\n                        }, undefined))\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n                lineNumber: 27,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepCard.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_c = SalesRepCard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SalesRepCard);\nvar _c;\n$RefreshReg$(_c, \"SalesRepCard\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3NhbGVzL1NhbGVzUmVwQ2FyZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFFMUIsTUFBTUMsZUFBZSxTQUFhO1FBQVosRUFBRUMsSUFBRyxFQUFFO0lBQzNCLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0M7Z0JBQUdELFdBQVU7MEJBQ1hGLElBQUlJLElBQUk7Ozs7OzswQkFFWCw4REFBQ0M7Z0JBQUVILFdBQVU7O29CQUNWRixJQUFJTSxJQUFJO29CQUFDO29CQUFJTixJQUFJTyxNQUFNOzs7Ozs7OzBCQUcxQiw4REFBQ047Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDTTt3QkFBT04sV0FBVTtrQ0FBMkI7Ozs7OztrQ0FDN0MsOERBQUNEO3dCQUFJQyxXQUFVO2tDQUNaRixJQUFJUyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxzQkFDZiw4REFBQ0M7Z0NBRUNWLFdBQVU7MENBRVRTOytCQUhJQTs7Ozs7Ozs7Ozs7Ozs7OzswQkFTYiw4REFBQ1Y7O2tDQUNDLDhEQUFDTzt3QkFBT04sV0FBVTtrQ0FBMkI7Ozs7OztvQkFDNUNGLElBQUlhLEtBQUssQ0FBQ0gsR0FBRyxDQUFDLENBQUNJLE1BQU1DLHNCQUNwQiw4REFBQ2Q7NEJBRUNDLFdBQVU7OzhDQUVWLDhEQUFDRDs7c0RBQ0MsOERBQUNXOzRDQUFLVixXQUFVO3NEQUNiWSxLQUFLRSxNQUFNOzs7Ozs7c0RBRWQsOERBQUNKOzRDQUFLVixXQUFVOztnREFBcUI7Z0RBQ2pDWSxLQUFLRyxLQUFLLENBQUNDLGNBQWM7Ozs7Ozs7Ozs7Ozs7OENBRy9CLDhEQUFDTjtvQ0FDQ1YsV0FBVyx1QkFNVixPQUxDWSxLQUFLSyxNQUFNLEtBQUssZUFDWixtQkFDQUwsS0FBS0ssTUFBTSxLQUFLLGdCQUNoQixvQkFDQSxjQUFjOzhDQUduQkwsS0FBS0ssTUFBTTs7Ozs7OzsyQkFwQlRKOzs7Ozs7Ozs7Ozs7Ozs7OztBQTJCakI7S0F2RE1oQjtBQXlETiwrREFBZUEsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3NhbGVzL1NhbGVzUmVwQ2FyZC5qcz9iMTJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBTYWxlc1JlcENhcmQgPSAoeyByZXAgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktODAwIHNoYWRvdy1tZCByb3VuZGVkLWxnIHAtNiBob3ZlcjpzaGFkb3ctbGcgdHJhbnNpdGlvbi1zaGFkb3cgZHVyYXRpb24tMzAwIGJvcmRlciBib3JkZXItZ3JheS03MDBcIj5cclxuICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1ib2xkIHRleHQtd2hpdGUgbWItMlwiPlxyXG4gICAgICAgIHtyZXAubmFtZX1cclxuICAgICAgPC9oMz5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTMwMCBtYi00XCI+XHJcbiAgICAgICAge3JlcC5yb2xlfSB8IHtyZXAucmVnaW9ufVxyXG4gICAgICA8L3A+XHJcbiAgICAgIFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHJvdW5kZWQtbWQgcC00IG1iLTRcIj5cclxuICAgICAgICA8c3Ryb25nIGNsYXNzTmFtZT1cImJsb2NrIG1iLTIgdGV4dC1ncmF5LTMwMFwiPlNraWxsczo8L3N0cm9uZz5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC13cmFwIGdhcC0yXCI+XHJcbiAgICAgICAgICB7cmVwLnNraWxscy5tYXAoKHNraWxsKSA9PiAoXHJcbiAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAga2V5PXtza2lsbH1cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIHRleHQteHMgcHgtMiBweS0xIHJvdW5kZWQtZnVsbFwiXHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICB7c2tpbGx9XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPHN0cm9uZyBjbGFzc05hbWU9XCJibG9jayBtYi0yIHRleHQtZ3JheS0zMDBcIj5EZWFsczo8L3N0cm9uZz5cclxuICAgICAgICB7cmVwLmRlYWxzLm1hcCgoZGVhbCwgaW5kZXgpID0+IChcclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAga2V5PXtpbmRleH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIGJnLWdyYXktNzAwIHAtMyByb3VuZGVkLW1kIG1iLTJcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtc2VtaWJvbGQgdGV4dC13aGl0ZVwiPlxyXG4gICAgICAgICAgICAgICAge2RlYWwuY2xpZW50fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktMzAwIG1sLTJcIj5cclxuICAgICAgICAgICAgICAgICR7ZGVhbC52YWx1ZS50b0xvY2FsZVN0cmluZygpfVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdGV4dC1zbSBmb250LW1lZGl1bSAke1xyXG4gICAgICAgICAgICAgICAgZGVhbC5zdGF0dXMgPT09IFwiQ2xvc2VkIFdvblwiXHJcbiAgICAgICAgICAgICAgICAgID8gXCJ0ZXh0LWdyZWVuLTQwMFwiXHJcbiAgICAgICAgICAgICAgICAgIDogZGVhbC5zdGF0dXMgPT09IFwiSW4gUHJvZ3Jlc3NcIlxyXG4gICAgICAgICAgICAgICAgICA/IFwidGV4dC15ZWxsb3ctNDAwXCJcclxuICAgICAgICAgICAgICAgICAgOiBcInRleHQtcmVkLTQwMFwiXHJcbiAgICAgICAgICAgICAgfWB9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICB7ZGVhbC5zdGF0dXN9XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTYWxlc1JlcENhcmQ7Il0sIm5hbWVzIjpbIlJlYWN0IiwiU2FsZXNSZXBDYXJkIiwicmVwIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDMiLCJuYW1lIiwicCIsInJvbGUiLCJyZWdpb24iLCJzdHJvbmciLCJza2lsbHMiLCJtYXAiLCJza2lsbCIsInNwYW4iLCJkZWFscyIsImRlYWwiLCJpbmRleCIsImNsaWVudCIsInZhbHVlIiwidG9Mb2NhbGVTdHJpbmciLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/sales/SalesRepCard.js\n"));

/***/ }),

/***/ "./components/sales/SalesRepList.js":
/*!******************************************!*\
  !*** ./components/sales/SalesRepList.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SalesRepCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SalesRepCard */ \"./components/sales/SalesRepCard.js\");\n/* harmony import */ var _RegionFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RegionFilter */ \"./components/sales/RegionFilter.js\");\n\n\n\n\nconst SalesRepsList = (param)=>{\n    let { salesReps , loading , selectedRegion , setSelectedRegion  } = param;\n    // Get unique regions\n    const regions = [\n        ...new Set(salesReps.map((rep)=>rep.region))\n    ];\n    // Filter sales reps by region\n    const filteredSalesReps = selectedRegion ? salesReps.filter((rep)=>rep.region === selectedRegion) : salesReps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n        className: \"mb-8 w-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between items-center mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-2xl font-semibold text-blue-400\",\n                        children: \"Sales Representatives\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                        lineNumber: 17,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_RegionFilter__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        regions: regions,\n                        selectedRegion: selectedRegion,\n                        onRegionChange: setSelectedRegion\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined),\n            loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full flex justify-center items-center py-12\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                    lineNumber: 29,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                lineNumber: 28,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\",\n                children: filteredSalesReps.map((rep)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SalesRepCard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        rep: rep\n                    }, rep.id, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                        lineNumber: 34,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n                lineNumber: 32,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\sales\\\\SalesRepList.js\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, undefined);\n};\n_c = SalesRepsList;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SalesRepsList);\nvar _c;\n$RefreshReg$(_c, \"SalesRepsList\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3NhbGVzL1NhbGVzUmVwTGlzdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQjtBQUNnQjtBQUNBO0FBRTFDLE1BQU1HLGdCQUFnQixTQUErRDtRQUE5RCxFQUFFQyxVQUFTLEVBQUVDLFFBQU8sRUFBRUMsZUFBYyxFQUFFQyxrQkFBaUIsRUFBRTtJQUM5RSxxQkFBcUI7SUFDckIsTUFBTUMsVUFBVTtXQUFJLElBQUlDLElBQUlMLFVBQVVNLEdBQUcsQ0FBQyxDQUFDQyxNQUFRQSxJQUFJQyxNQUFNO0tBQUc7SUFFaEUsOEJBQThCO0lBQzlCLE1BQU1DLG9CQUFvQlAsaUJBQ3RCRixVQUFVVSxNQUFNLENBQUMsQ0FBQ0gsTUFBUUEsSUFBSUMsTUFBTSxLQUFLTixrQkFDekNGLFNBQVM7SUFFYixxQkFDRSw4REFBQ1c7UUFBUUMsV0FBVTs7MEJBQ2pCLDhEQUFDQztnQkFBSUQsV0FBVTs7a0NBQ2IsOERBQUNFO3dCQUFHRixXQUFVO2tDQUF1Qzs7Ozs7O2tDQUdyRCw4REFBQ2QscURBQVlBO3dCQUNYTSxTQUFTQTt3QkFDVEYsZ0JBQWdCQTt3QkFDaEJhLGdCQUFnQlo7Ozs7Ozs7Ozs7OztZQUluQkYsd0JBQ0MsOERBQUNZO2dCQUFJRCxXQUFVOzBCQUNiLDRFQUFDQztvQkFBSUQsV0FBVTs7Ozs7Ozs7OzswQ0FHakIsOERBQUNDO2dCQUFJRCxXQUFVOzBCQUNaSCxrQkFBa0JILEdBQUcsQ0FBQyxDQUFDQyxvQkFDdEIsOERBQUNWLHFEQUFZQTt3QkFBY1UsS0FBS0E7dUJBQWJBLElBQUlTLEVBQUU7Ozs7Ozs7Ozt5QkFHOUI7Ozs7Ozs7QUFHUDtLQW5DTWpCO0FBcUNOLCtEQUFlQSxhQUFhQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvc2FsZXMvU2FsZXNSZXBMaXN0LmpzP2U0YmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFNhbGVzUmVwQ2FyZCBmcm9tICcuL1NhbGVzUmVwQ2FyZCc7XHJcbmltcG9ydCBSZWdpb25GaWx0ZXIgZnJvbSAnLi9SZWdpb25GaWx0ZXInO1xyXG5cclxuY29uc3QgU2FsZXNSZXBzTGlzdCA9ICh7IHNhbGVzUmVwcywgbG9hZGluZywgc2VsZWN0ZWRSZWdpb24sIHNldFNlbGVjdGVkUmVnaW9uIH0pID0+IHtcclxuICAvLyBHZXQgdW5pcXVlIHJlZ2lvbnNcclxuICBjb25zdCByZWdpb25zID0gWy4uLm5ldyBTZXQoc2FsZXNSZXBzLm1hcCgocmVwKSA9PiByZXAucmVnaW9uKSldO1xyXG5cclxuICAvLyBGaWx0ZXIgc2FsZXMgcmVwcyBieSByZWdpb25cclxuICBjb25zdCBmaWx0ZXJlZFNhbGVzUmVwcyA9IHNlbGVjdGVkUmVnaW9uXHJcbiAgICA/IHNhbGVzUmVwcy5maWx0ZXIoKHJlcCkgPT4gcmVwLnJlZ2lvbiA9PT0gc2VsZWN0ZWRSZWdpb24pXHJcbiAgICA6IHNhbGVzUmVwcztcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1iLTggdy1mdWxsXCI+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIG1iLTZcIj5cclxuICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtNDAwXCI+XHJcbiAgICAgICAgICBTYWxlcyBSZXByZXNlbnRhdGl2ZXNcclxuICAgICAgICA8L2gyPlxyXG4gICAgICAgIDxSZWdpb25GaWx0ZXJcclxuICAgICAgICAgIHJlZ2lvbnM9e3JlZ2lvbnN9XHJcbiAgICAgICAgICBzZWxlY3RlZFJlZ2lvbj17c2VsZWN0ZWRSZWdpb259XHJcbiAgICAgICAgICBvblJlZ2lvbkNoYW5nZT17c2V0U2VsZWN0ZWRSZWdpb259XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICB7bG9hZGluZyA/IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBweS0xMlwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtMTIgdy0xMiBib3JkZXItYi0yIGJvcmRlci1ibHVlLTUwMFwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBzbTpncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyB4bDpncmlkLWNvbHMtNCBnYXAtNlwiPlxyXG4gICAgICAgICAge2ZpbHRlcmVkU2FsZXNSZXBzLm1hcCgocmVwKSA9PiAoXHJcbiAgICAgICAgICAgIDxTYWxlc1JlcENhcmQga2V5PXtyZXAuaWR9IHJlcD17cmVwfSAvPlxyXG4gICAgICAgICAgKSl9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L3NlY3Rpb24+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNhbGVzUmVwc0xpc3Q7Il0sIm5hbWVzIjpbIlJlYWN0IiwiU2FsZXNSZXBDYXJkIiwiUmVnaW9uRmlsdGVyIiwiU2FsZXNSZXBzTGlzdCIsInNhbGVzUmVwcyIsImxvYWRpbmciLCJzZWxlY3RlZFJlZ2lvbiIsInNldFNlbGVjdGVkUmVnaW9uIiwicmVnaW9ucyIsIlNldCIsIm1hcCIsInJlcCIsInJlZ2lvbiIsImZpbHRlcmVkU2FsZXNSZXBzIiwiZmlsdGVyIiwic2VjdGlvbiIsImNsYXNzTmFtZSIsImRpdiIsImgyIiwib25SZWdpb25DaGFuZ2UiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/sales/SalesRepList.js\n"));

/***/ }),

/***/ "./components/system/HealthStatusIndicator.js":
/*!****************************************************!*\
  !*** ./components/system/HealthStatusIndicator.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst HealthStatusIndicator = ()=>{\n    _s();\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"checking\");\n    const [lastChecked, setLastChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const checkHealth = async ()=>{\n        try {\n            const response = await fetch(\"http://localhost:8000/health\");\n            const data = await response.json();\n            if (data.status === \"healthy\") {\n                setStatus(\"online\");\n            } else {\n                setStatus(\"issues\");\n            }\n        } catch (error) {\n            console.error(\"Health check failed:\", error);\n            setStatus(\"offline\");\n        }\n        setLastChecked(new Date());\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check health when component mounts\n        checkHealth();\n        // Set up interval to check health every 60 seconds\n        const interval = setInterval(checkHealth, 60000);\n        // Clean up interval when component unmounts\n        return ()=>clearInterval(interval);\n    }, []);\n    const getStatusStyles = ()=>{\n        switch(status){\n            case \"online\":\n                return \"bg-green-500\";\n            case \"issues\":\n                return \"bg-yellow-500\";\n            case \"offline\":\n                return \"bg-red-500\";\n            default:\n                return \"bg-gray-500\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-3 h-3 rounded-full \".concat(getStatusStyles())\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 51,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: [\n                    \"API: \",\n                    status === \"checking\" ? \"Checking...\" : status\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 52,\n                columnNumber: 7\n            }, undefined),\n            lastChecked && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: [\n                    \"Last checked: \",\n                    lastChecked.toLocaleTimeString()\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 56,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: checkHealth,\n                className: \"text-xs text-blue-500 hover:text-blue-700\",\n                children: \"Refresh\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, undefined);\n};\n_s(HealthStatusIndicator, \"iz9nHBR4jbXtSXbYqjMuEbkZyCE=\");\n_c = HealthStatusIndicator;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HealthStatusIndicator);\nvar _c;\n$RefreshReg$(_c, \"HealthStatusIndicator\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3N5c3RlbS9IZWFsdGhTdGF0dXNJbmRpY2F0b3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUVuRCxNQUFNRyx3QkFBd0IsSUFBTTs7SUFDbEMsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdKLCtDQUFRQSxDQUFDO0lBQ3JDLE1BQU0sQ0FBQ0ssYUFBYUMsZUFBZSxHQUFHTiwrQ0FBUUEsQ0FBQyxJQUFJO0lBRW5ELE1BQU1PLGNBQWMsVUFBWTtRQUM5QixJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO1lBQzdCLE1BQU1DLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtZQUVoQyxJQUFJRCxLQUFLUCxNQUFNLEtBQUssV0FBVztnQkFDN0JDLFVBQVU7WUFDWixPQUFPO2dCQUNMQSxVQUFVO1lBQ1osQ0FBQztRQUNILEVBQUUsT0FBT1EsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtZQUN0Q1IsVUFBVTtRQUNaO1FBRUFFLGVBQWUsSUFBSVE7SUFDckI7SUFFQWIsZ0RBQVNBLENBQUMsSUFBTTtRQUNkLHFDQUFxQztRQUNyQ007UUFFQSxtREFBbUQ7UUFDbkQsTUFBTVEsV0FBV0MsWUFBWVQsYUFBYTtRQUUxQyw0Q0FBNEM7UUFDNUMsT0FBTyxJQUFNVSxjQUFjRjtJQUM3QixHQUFHLEVBQUU7SUFFTCxNQUFNRyxrQkFBa0IsSUFBTTtRQUM1QixPQUFRZjtZQUNOLEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNUO2dCQUNFLE9BQU87UUFDWDtJQUNGO0lBRUEscUJBQ0UsOERBQUNnQjtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0Q7Z0JBQUlDLFdBQVcsd0JBQTBDLE9BQWxCRjs7Ozs7OzBCQUN4Qyw4REFBQ0c7Z0JBQUtELFdBQVU7O29CQUF3QjtvQkFDaENqQixXQUFXLGFBQWEsZ0JBQWdCQSxNQUFNOzs7Ozs7O1lBRXJERSw2QkFDQyw4REFBQ2dCO2dCQUFLRCxXQUFVOztvQkFBd0I7b0JBQ3ZCZixZQUFZaUIsa0JBQWtCOzs7Ozs7OzBCQUdqRCw4REFBQ0M7Z0JBQ0NDLFNBQVNqQjtnQkFDVGEsV0FBVTswQkFDWDs7Ozs7Ozs7Ozs7O0FBS1A7R0FqRU1sQjtLQUFBQTtBQW1FTiwrREFBZUEscUJBQXFCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvc3lzdGVtL0hlYWx0aFN0YXR1c0luZGljYXRvci5qcz8xMjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgSGVhbHRoU3RhdHVzSW5kaWNhdG9yID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZSgnY2hlY2tpbmcnKTtcclxuICBjb25zdCBbbGFzdENoZWNrZWQsIHNldExhc3RDaGVja2VkXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICBjb25zdCBjaGVja0hlYWx0aCA9IGFzeW5jICgpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9oZWFsdGgnKTtcclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgXHJcbiAgICAgIGlmIChkYXRhLnN0YXR1cyA9PT0gJ2hlYWx0aHknKSB7XHJcbiAgICAgICAgc2V0U3RhdHVzKCdvbmxpbmUnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZXRTdGF0dXMoJ2lzc3VlcycpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdIZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcclxuICAgICAgc2V0U3RhdHVzKCdvZmZsaW5lJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHNldExhc3RDaGVja2VkKG5ldyBEYXRlKCkpO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBDaGVjayBoZWFsdGggd2hlbiBjb21wb25lbnQgbW91bnRzXHJcbiAgICBjaGVja0hlYWx0aCgpO1xyXG4gICAgXHJcbiAgICAvLyBTZXQgdXAgaW50ZXJ2YWwgdG8gY2hlY2sgaGVhbHRoIGV2ZXJ5IDYwIHNlY29uZHNcclxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoY2hlY2tIZWFsdGgsIDYwMDAwKTtcclxuICAgIFxyXG4gICAgLy8gQ2xlYW4gdXAgaW50ZXJ2YWwgd2hlbiBjb21wb25lbnQgdW5tb3VudHNcclxuICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IGdldFN0YXR1c1N0eWxlcyA9ICgpID0+IHtcclxuICAgIHN3aXRjaCAoc3RhdHVzKSB7XHJcbiAgICAgIGNhc2UgJ29ubGluZSc6XHJcbiAgICAgICAgcmV0dXJuICdiZy1ncmVlbi01MDAnO1xyXG4gICAgICBjYXNlICdpc3N1ZXMnOlxyXG4gICAgICAgIHJldHVybiAnYmcteWVsbG93LTUwMCc7XHJcbiAgICAgIGNhc2UgJ29mZmxpbmUnOlxyXG4gICAgICAgIHJldHVybiAnYmctcmVkLTUwMCc7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuICdiZy1ncmF5LTUwMCc7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCI+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdy0zIGgtMyByb3VuZGVkLWZ1bGwgJHtnZXRTdGF0dXNTdHlsZXMoKX1gfT48L2Rpdj5cclxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XHJcbiAgICAgICAgQVBJOiB7c3RhdHVzID09PSAnY2hlY2tpbmcnID8gJ0NoZWNraW5nLi4uJyA6IHN0YXR1c31cclxuICAgICAgPC9zcGFuPlxyXG4gICAgICB7bGFzdENoZWNrZWQgJiYgKFxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ncmF5LTQwMFwiPlxyXG4gICAgICAgICAgTGFzdCBjaGVja2VkOiB7bGFzdENoZWNrZWQudG9Mb2NhbGVUaW1lU3RyaW5nKCl9XHJcbiAgICAgICAgPC9zcGFuPlxyXG4gICAgICApfVxyXG4gICAgICA8YnV0dG9uIFxyXG4gICAgICAgIG9uQ2xpY2s9e2NoZWNrSGVhbHRofVxyXG4gICAgICAgIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ibHVlLTUwMCBob3Zlcjp0ZXh0LWJsdWUtNzAwXCJcclxuICAgICAgPlxyXG4gICAgICAgIFJlZnJlc2hcclxuICAgICAgPC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhbHRoU3RhdHVzSW5kaWNhdG9yOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiSGVhbHRoU3RhdHVzSW5kaWNhdG9yIiwic3RhdHVzIiwic2V0U3RhdHVzIiwibGFzdENoZWNrZWQiLCJzZXRMYXN0Q2hlY2tlZCIsImNoZWNrSGVhbHRoIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiRGF0ZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiZ2V0U3RhdHVzU3R5bGVzIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiIsInRvTG9jYWxlVGltZVN0cmluZyIsImJ1dHRvbiIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/system/HealthStatusIndicator.js\n"));

/***/ }),

/***/ "./hooks/useChat.js":
/*!**************************!*\
  !*** ./hooks/useChat.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useChat = ()=>{\n    _s();\n    const [question, setQuestion] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [chatMessages, setChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const handleAskQuestion = async ()=>{\n        if (!question.trim()) return;\n        // Store the current question\n        const currentQuestion = question;\n        // Clear input immediately for better UX\n        setQuestion(\"\");\n        // Add user message to chat\n        const userMessage = {\n            type: \"user\",\n            text: currentQuestion\n        };\n        setChatMessages((prev)=>[\n                ...prev,\n                userMessage\n            ]);\n        try {\n            const response = await fetch(\"http://localhost:8000/api/ai\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    question: currentQuestion\n                })\n            });\n            const data = await response.json();\n            // Add AI response to chat\n            const aiMessage = {\n                type: \"ai\",\n                text: data.answer || data.response\n            };\n            setChatMessages((prev)=>[\n                    ...prev,\n                    aiMessage\n                ]);\n        } catch (error) {\n            console.error(\"Error in AI request:\", error);\n            // Add error message to chat\n            const errorMessage = {\n                type: \"ai\",\n                text: \"Sorry, there was an error processing your request.\"\n            };\n            setChatMessages((prev)=>[\n                    ...prev,\n                    errorMessage\n                ]);\n        }\n    };\n    return {\n        question,\n        setQuestion,\n        chatMessages,\n        handleAskQuestion\n    };\n};\n_s(useChat, \"TCaB5PknEX2IASlcKadXlVZdnKU=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useChat);\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VDaGF0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBaUM7QUFFakMsTUFBTUMsVUFBVSxJQUFNOztJQUNwQixNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR0gsK0NBQVFBLENBQUM7SUFDekMsTUFBTSxDQUFDSSxjQUFjQyxnQkFBZ0IsR0FBR0wsK0NBQVFBLENBQUMsRUFBRTtJQUVuRCxNQUFNTSxvQkFBb0IsVUFBWTtRQUNwQyxJQUFJLENBQUNKLFNBQVNLLElBQUksSUFBSTtRQUV0Qiw2QkFBNkI7UUFDN0IsTUFBTUMsa0JBQWtCTjtRQUV4Qix3Q0FBd0M7UUFDeENDLFlBQVk7UUFFWiwyQkFBMkI7UUFDM0IsTUFBTU0sY0FBYztZQUNsQkMsTUFBTTtZQUNOQyxNQUFNSDtRQUNSO1FBQ0FILGdCQUFnQixDQUFDTyxPQUFTO21CQUFJQTtnQkFBTUg7YUFBWTtRQUVoRCxJQUFJO1lBQ0YsTUFBTUksV0FBVyxNQUFNQyxNQUFNLGdDQUFnQztnQkFDM0RDLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQUUsZ0JBQWdCO2dCQUFtQjtnQkFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFDbkJqQixVQUFVTTtnQkFDWjtZQUNGO1lBQ0EsTUFBTVksT0FBTyxNQUFNUCxTQUFTUSxJQUFJO1lBRWhDLDBCQUEwQjtZQUMxQixNQUFNQyxZQUFZO2dCQUNoQlosTUFBTTtnQkFDTkMsTUFBTVMsS0FBS0csTUFBTSxJQUFJSCxLQUFLUCxRQUFRO1lBQ3BDO1lBQ0FSLGdCQUFnQixDQUFDTyxPQUFTO3VCQUFJQTtvQkFBTVU7aUJBQVU7UUFDaEQsRUFBRSxPQUFPRSxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyx3QkFBd0JBO1lBRXRDLDRCQUE0QjtZQUM1QixNQUFNRSxlQUFlO2dCQUNuQmhCLE1BQU07Z0JBQ05DLE1BQU07WUFDUjtZQUNBTixnQkFBZ0IsQ0FBQ08sT0FBUzt1QkFBSUE7b0JBQU1jO2lCQUFhO1FBQ25EO0lBQ0Y7SUFFQSxPQUFPO1FBQ0x4QjtRQUNBQztRQUNBQztRQUNBRTtJQUNGO0FBQ0Y7R0F0RE1MO0FBd0ROLCtEQUFlQSxPQUFPQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZUNoYXQuanM/MDY1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IHVzZUNoYXQgPSAoKSA9PiB7XHJcbiAgY29uc3QgW3F1ZXN0aW9uLCBzZXRRdWVzdGlvbl0gPSB1c2VTdGF0ZShcIlwiKTtcclxuICBjb25zdCBbY2hhdE1lc3NhZ2VzLCBzZXRDaGF0TWVzc2FnZXNdID0gdXNlU3RhdGUoW10pO1xyXG5cclxuICBjb25zdCBoYW5kbGVBc2tRdWVzdGlvbiA9IGFzeW5jICgpID0+IHtcclxuICAgIGlmICghcXVlc3Rpb24udHJpbSgpKSByZXR1cm47XHJcblxyXG4gICAgLy8gU3RvcmUgdGhlIGN1cnJlbnQgcXVlc3Rpb25cclxuICAgIGNvbnN0IGN1cnJlbnRRdWVzdGlvbiA9IHF1ZXN0aW9uO1xyXG4gICAgXHJcbiAgICAvLyBDbGVhciBpbnB1dCBpbW1lZGlhdGVseSBmb3IgYmV0dGVyIFVYXHJcbiAgICBzZXRRdWVzdGlvbihcIlwiKTtcclxuXHJcbiAgICAvLyBBZGQgdXNlciBtZXNzYWdlIHRvIGNoYXRcclxuICAgIGNvbnN0IHVzZXJNZXNzYWdlID0ge1xyXG4gICAgICB0eXBlOiBcInVzZXJcIixcclxuICAgICAgdGV4dDogY3VycmVudFF1ZXN0aW9uLFxyXG4gICAgfTtcclxuICAgIHNldENoYXRNZXNzYWdlcygocHJldikgPT4gWy4uLnByZXYsIHVzZXJNZXNzYWdlXSk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvYWlcIiwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIHF1ZXN0aW9uOiBjdXJyZW50UXVlc3Rpb24sXHJcbiAgICAgICAgfSksXHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgLy8gQWRkIEFJIHJlc3BvbnNlIHRvIGNoYXRcclxuICAgICAgY29uc3QgYWlNZXNzYWdlID0ge1xyXG4gICAgICAgIHR5cGU6IFwiYWlcIixcclxuICAgICAgICB0ZXh0OiBkYXRhLmFuc3dlciB8fCBkYXRhLnJlc3BvbnNlLFxyXG4gICAgICB9O1xyXG4gICAgICBzZXRDaGF0TWVzc2FnZXMoKHByZXYpID0+IFsuLi5wcmV2LCBhaU1lc3NhZ2VdKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbiBBSSByZXF1ZXN0OlwiLCBlcnJvcik7XHJcblxyXG4gICAgICAvLyBBZGQgZXJyb3IgbWVzc2FnZSB0byBjaGF0XHJcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IHtcclxuICAgICAgICB0eXBlOiBcImFpXCIsXHJcbiAgICAgICAgdGV4dDogXCJTb3JyeSwgdGhlcmUgd2FzIGFuIGVycm9yIHByb2Nlc3NpbmcgeW91ciByZXF1ZXN0LlwiLFxyXG4gICAgICB9O1xyXG4gICAgICBzZXRDaGF0TWVzc2FnZXMoKHByZXYpID0+IFsuLi5wcmV2LCBlcnJvck1lc3NhZ2VdKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgcXVlc3Rpb24sXHJcbiAgICBzZXRRdWVzdGlvbixcclxuICAgIGNoYXRNZXNzYWdlcyxcclxuICAgIGhhbmRsZUFza1F1ZXN0aW9uXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZUNoYXQ7Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlQ2hhdCIsInF1ZXN0aW9uIiwic2V0UXVlc3Rpb24iLCJjaGF0TWVzc2FnZXMiLCJzZXRDaGF0TWVzc2FnZXMiLCJoYW5kbGVBc2tRdWVzdGlvbiIsInRyaW0iLCJjdXJyZW50UXVlc3Rpb24iLCJ1c2VyTWVzc2FnZSIsInR5cGUiLCJ0ZXh0IiwicHJldiIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwianNvbiIsImFpTWVzc2FnZSIsImFuc3dlciIsImVycm9yIiwiY29uc29sZSIsImVycm9yTWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useChat.js\n"));

/***/ }),

/***/ "./hooks/useSalesData.js":
/*!*******************************!*\
  !*** ./hooks/useSalesData.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useSalesData = ()=>{\n    _s();\n    const [salesReps, setSalesReps] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchData = async ()=>{\n            try {\n                const res = await fetch(\"http://localhost:8000/api/data\");\n                const data = await res.json();\n                setSalesReps(data.salesReps || []);\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Failed to fetch data:\", err);\n                setError(err.message || \"Failed to fetch sales data\");\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, []);\n    return {\n        salesReps,\n        loading,\n        error\n    };\n};\n_s(useSalesData, \"qkhsMEPBnuk7lV0G0TGkN4jEvPQ=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useSalesData);\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VTYWxlc0RhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUE0QztBQUU1QyxNQUFNRSxlQUFlLElBQU07O0lBQ3pCLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHSiwrQ0FBUUEsQ0FBQyxFQUFFO0lBQzdDLE1BQU0sQ0FBQ0ssU0FBU0MsV0FBVyxHQUFHTiwrQ0FBUUEsQ0FBQyxJQUFJO0lBQzNDLE1BQU0sQ0FBQ08sT0FBT0MsU0FBUyxHQUFHUiwrQ0FBUUEsQ0FBQyxJQUFJO0lBRXZDQyxnREFBU0EsQ0FBQyxJQUFNO1FBQ2QsTUFBTVEsWUFBWSxVQUFZO1lBQzVCLElBQUk7Z0JBQ0YsTUFBTUMsTUFBTSxNQUFNQyxNQUFNO2dCQUN4QixNQUFNQyxPQUFPLE1BQU1GLElBQUlHLElBQUk7Z0JBQzNCVCxhQUFhUSxLQUFLVCxTQUFTLElBQUksRUFBRTtnQkFDakNHLFdBQVcsS0FBSztZQUNsQixFQUFFLE9BQU9RLEtBQUs7Z0JBQ1pDLFFBQVFSLEtBQUssQ0FBQyx5QkFBeUJPO2dCQUN2Q04sU0FBU00sSUFBSUUsT0FBTyxJQUFJO2dCQUN4QlYsV0FBVyxLQUFLO1lBQ2xCO1FBQ0Y7UUFFQUc7SUFDRixHQUFHLEVBQUU7SUFFTCxPQUFPO1FBQUVOO1FBQVdFO1FBQVNFO0lBQU07QUFDckM7R0F2Qk1MO0FBeUJOLCtEQUFlQSxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZVNhbGVzRGF0YS5qcz85NzUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCB1c2VTYWxlc0RhdGEgPSAoKSA9PiB7XHJcbiAgY29uc3QgW3NhbGVzUmVwcywgc2V0U2FsZXNSZXBzXSA9IHVzZVN0YXRlKFtdKTtcclxuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9kYXRhXCIpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICAgIHNldFNhbGVzUmVwcyhkYXRhLnNhbGVzUmVwcyB8fCBbXSk7XHJcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZGF0YTpcIiwgZXJyKTtcclxuICAgICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBmZXRjaCBzYWxlcyBkYXRhXCIpO1xyXG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGZldGNoRGF0YSgpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgcmV0dXJuIHsgc2FsZXNSZXBzLCBsb2FkaW5nLCBlcnJvciB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXNlU2FsZXNEYXRhOyJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVNhbGVzRGF0YSIsInNhbGVzUmVwcyIsInNldFNhbGVzUmVwcyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsImZldGNoRGF0YSIsInJlcyIsImZldGNoIiwiZGF0YSIsImpzb24iLCJlcnIiLCJjb25zb2xlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useSalesData.js\n"));

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_layout_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/layout/Container */ \"./components/layout/Container.js\");\n/* harmony import */ var _components_layout_Header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/layout/Header */ \"./components/layout/Header.js\");\n/* harmony import */ var _components_sales_SalesRepList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/sales/SalesRepList */ \"./components/sales/SalesRepList.js\");\n/* harmony import */ var _components_ai_FloatingChat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/ai/FloatingChat */ \"./components/ai/FloatingChat.js\");\n/* harmony import */ var _components_system_HealthStatusIndicator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/system/HealthStatusIndicator */ \"./components/system/HealthStatusIndicator.js\");\n/* harmony import */ var _hooks_useSalesData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../hooks/useSalesData */ \"./hooks/useSalesData.js\");\n/* harmony import */ var _hooks_useChat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../hooks/useChat */ \"./hooks/useChat.js\");\n\nvar _s = $RefreshSig$();\n\n// Layout components\n\n\n// Sales components\n\n// AI Chat components\n\n// Health Status component\n\n// Custom hooks\n\n\nfunction Home() {\n    _s();\n    // Fetch sales data\n    const { salesReps , loading  } = (0,_hooks_useSalesData__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    // Chat functionality\n    const { question , setQuestion , chatMessages , handleAskQuestion  } = (0,_hooks_useChat__WEBPACK_IMPORTED_MODULE_8__[\"default\"])();\n    // Region filter state\n    const [selectedRegion, setSelectedRegion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Theme state\n    const [darkMode, setDarkMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Update body class when theme changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (darkMode) {\n            document.body.classList.add(\"dark\");\n        } else {\n            document.body.classList.remove(\"dark\");\n        }\n    }, [\n        darkMode\n    ]);\n    // Toggle theme function\n    const toggleTheme = ()=>{\n        setDarkMode(!darkMode);\n    };\n    // Calculate deal statistics\n    const dealStats = {\n        total: {\n            count: salesReps.reduce((acc, rep)=>acc + rep.deals.length, 0),\n            value: salesReps.reduce((acc, rep)=>acc + rep.deals.reduce((sum, deal)=>sum + deal.value, 0), 0)\n        },\n        won: {\n            count: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Won\").length, 0),\n            value: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Won\").reduce((sum, deal)=>sum + deal.value, 0), 0)\n        },\n        lost: {\n            count: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Lost\").length, 0),\n            value: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Lost\").reduce((sum, deal)=>sum + deal.value, 0), 0)\n        },\n        running: {\n            count: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"In Progress\").length, 0),\n            value: salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"In Progress\").reduce((sum, deal)=>sum + deal.value, 0), 0)\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen transition-colors duration-300 \".concat(darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_layout_Container__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_layout_Header__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                title: \"Sales Dashboard\",\n                                darkMode: darkMode\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 101,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_system_HealthStatusIndicator__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                        darkMode: darkMode\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                        lineNumber: 105,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"relative inline-block w-14 h-7 mr-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"checkbox\",\n                                                className: \"opacity-0 w-0 h-0\",\n                                                checked: darkMode,\n                                                onChange: toggleTheme,\n                                                id: \"theme-toggle\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                lineNumber: 109,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                htmlFor: \"theme-toggle\",\n                                                className: \"absolute cursor-pointer top-0 left-0 right-0 bottom-0 rounded-full border \".concat(darkMode ? \"bg-gray-700 border-gray-600\" : \"bg-gray-200 border-gray-300\", \" transition-colors duration-300\"),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"absolute top-0.5 w-6 h-6 rounded-full shadow-md transition-all duration-300 flex items-center justify-center \".concat(darkMode ? \"translate-x-7 bg-gray-800\" : \"translate-x-0.5 bg-white\"),\n                                                    children: darkMode ? // Moon icon\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        className: \"h-4 w-4 text-yellow-300\",\n                                                        viewBox: \"0 0 20 20\",\n                                                        fill: \"currentColor\",\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            d: \"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                            lineNumber: 135,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                        lineNumber: 129,\n                                                        columnNumber: 21\n                                                    }, this) : // Sun icon\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                                        className: \"h-4 w-4 text-yellow-500\",\n                                                        viewBox: \"0 0 20 20\",\n                                                        fill: \"currentColor\",\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            fillRule: \"evenodd\",\n                                                            d: \"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\",\n                                                            clipRule: \"evenodd\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                            lineNumber: 145,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                        lineNumber: 139,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                    lineNumber: 122,\n                                                    columnNumber: 17\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                                lineNumber: 116,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                        lineNumber: 108,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 103,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 100,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-8 grid grid-cols-1 md:grid-cols-3 gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DashboardCard, {\n                                title: \"Total Sales Reps\",\n                                value: salesReps.length,\n                                icon: \"users\",\n                                darkMode: darkMode\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 156,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedDashboardCard, {\n                                title: \"Total Deals\",\n                                value: dealStats.total.count,\n                                icon: \"briefcase\",\n                                darkMode: darkMode,\n                                subsections: [\n                                    {\n                                        label: \"Won\",\n                                        value: dealStats.won.count,\n                                        colorClass: \"text-green-400\"\n                                    },\n                                    {\n                                        label: \"Running\",\n                                        value: dealStats.running.count,\n                                        colorClass: \"text-yellow-400\"\n                                    },\n                                    {\n                                        label: \"Lost\",\n                                        value: dealStats.lost.count,\n                                        colorClass: \"text-red-400\"\n                                    }\n                                ]\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 162,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedDashboardCard, {\n                                title: \"Total Deal Value\",\n                                value: \"$\".concat(dealStats.total.value.toLocaleString()),\n                                icon: \"dollar\",\n                                darkMode: darkMode,\n                                subsections: [\n                                    {\n                                        label: \"Won Value\",\n                                        value: \"$\".concat(dealStats.won.value.toLocaleString()),\n                                        colorClass: \"text-green-400\"\n                                    },\n                                    {\n                                        label: \"Running Value\",\n                                        value: \"$\".concat(dealStats.running.value.toLocaleString()),\n                                        colorClass: \"text-yellow-400\"\n                                    },\n                                    {\n                                        label: \"Lost Value\",\n                                        value: \"$\".concat(dealStats.lost.value.toLocaleString()),\n                                        colorClass: \"text-red-400\"\n                                    }\n                                ]\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 173,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 155,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sales_SalesRepList__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            salesReps: salesReps,\n                            loading: loading,\n                            selectedRegion: selectedRegion,\n                            setSelectedRegion: setSelectedRegion,\n                            darkMode: darkMode\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 188,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 187,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                lineNumber: 99,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ai_FloatingChat__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                chatMessages: chatMessages,\n                question: question,\n                setQuestion: setQuestion,\n                handleAskQuestion: handleAskQuestion,\n                darkMode: darkMode\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                lineNumber: 199,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n        lineNumber: 98,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"u+zpZtKzivnSMDe5dCATp9M8ut4=\", false, function() {\n    return [\n        _hooks_useSalesData__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n        _hooks_useChat__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n    ];\n});\n_c = Home;\n// Original Dashboard Card Component\nconst DashboardCard = (param)=>{\n    let { title , value , icon , darkMode  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"rounded-lg shadow-md p-6 transition-colors duration-300 \".concat(darkMode ? \"bg-gray-800\" : \"bg-white\"),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm font-medium \".concat(darkMode ? \"text-gray-400\" : \"text-gray-500\"),\n                            children: title\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 218,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-2xl font-bold mt-2 \".concat(darkMode ? \"text-gray-100\" : \"text-gray-800\"),\n                            children: value\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 221,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                    lineNumber: 217,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"rounded-full w-12 h-12 flex items-center justify-center \".concat(darkMode ? \"bg-blue-700 text-blue-200\" : \"bg-blue-100 text-blue-600\"),\n                    children: [\n                        icon === \"users\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 230,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 229,\n                            columnNumber: 13\n                        }, undefined),\n                        icon === \"briefcase\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 235,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 234,\n                            columnNumber: 13\n                        }, undefined),\n                        icon === \"dollar\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 240,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                            lineNumber: 239,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                    lineNumber: 225,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n            lineNumber: 216,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n        lineNumber: 213,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = DashboardCard;\n// Enhanced Dashboard Card with Subsections\nconst EnhancedDashboardCard = (param)=>{\n    let { title , value , icon , darkMode , subsections  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"rounded-lg shadow-md p-6 transition-colors duration-300 \".concat(darkMode ? \"bg-gray-800\" : \"bg-white\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-sm font-medium \".concat(darkMode ? \"text-gray-400\" : \"text-gray-500\"),\n                                children: title\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 257,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-2xl font-bold mt-2 \".concat(darkMode ? \"text-gray-100\" : \"text-gray-800\"),\n                                children: value\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 260,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 256,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"rounded-full w-12 h-12 flex items-center justify-center \".concat(darkMode ? \"bg-blue-700 text-blue-200\" : \"bg-blue-100 text-blue-600\"),\n                        children: [\n                            icon === \"users\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-6 w-6\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: \"2\",\n                                    d: \"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                    lineNumber: 269,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 268,\n                                columnNumber: 13\n                            }, undefined),\n                            icon === \"briefcase\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-6 w-6\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: \"2\",\n                                    d: \"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                    lineNumber: 274,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 273,\n                                columnNumber: 13\n                            }, undefined),\n                            icon === \"dollar\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-6 w-6\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: \"2\",\n                                    d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                    lineNumber: 279,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 278,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 264,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                lineNumber: 255,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-3 gap-2 pt-4 border-t \".concat(darkMode ? \"border-gray-700\" : \"border-gray-200\"),\n                children: subsections.map((section, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-xs \".concat(darkMode ? \"text-gray-400\" : \"text-gray-500\"),\n                                children: section.label\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 289,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-lg font-semibold \".concat(section.colorClass),\n                                children: section.value\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                                lineNumber: 292,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, index, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                        lineNumber: 288,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n                lineNumber: 286,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\pages\\\\index.js\",\n        lineNumber: 252,\n        columnNumber: 5\n    }, undefined);\n};\n_c2 = EnhancedDashboardCard;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c1, \"DashboardCard\");\n$RefreshReg$(_c2, \"EnhancedDashboardCard\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nvar printWarning = function() {};\r\n\r\nif (true) {\r\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\r\n  var loggedTypeFailures = {};\r\n  var has = __webpack_require__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\r\n\r\n  printWarning = function(text) {\r\n    var message = 'Warning: ' + text;\r\n    if (typeof console !== 'undefined') {\r\n      console.error(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) { /**/ }\r\n  };\r\n}\r\n\r\n/**\r\n * Assert that the values match with the type specs.\r\n * Error messages are memorized and will only be shown once.\r\n *\r\n * @param {object} typeSpecs Map of name to a ReactPropType\r\n * @param {object} values Runtime values that need to be type-checked\r\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\r\n * @param {string} componentName Name of the component for error messages.\r\n * @param {?Function} getStack Returns the component stack.\r\n * @private\r\n */\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\r\n  if (true) {\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            var err = Error(\r\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\r\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\r\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          printWarning(\r\n            (componentName || 'React class') + ': type specification of ' +\r\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\r\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\r\n            'You may have forgotten to pass an argument to the type checker ' +\r\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n            'shape all require an argument).'\r\n          );\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n\r\n          var stack = getStack ? getStack() : '';\r\n\r\n          printWarning(\r\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Resets warning cache when testing.\r\n *\r\n * @private\r\n */\r\ncheckPropTypes.resetWarningCache = function() {\r\n  if (true) {\r\n    loggedTypeFailures = {};\r\n  }\r\n}\r\n\r\nmodule.exports = checkPropTypes;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9jaGVja1Byb3BUeXBlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFxQztBQUN6Qyw2QkFBNkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDakU7QUFDQSxZQUFZLG1CQUFPLENBQUMsdURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sWUFBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFdBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsTUFBTSxJQUFxQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkdBQTZHO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/MjYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKCkge307XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gIHZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XHJcbiAgdmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xyXG4gIHZhciBoYXMgPSByZXF1aXJlKCcuL2xpYi9oYXMnKTtcclxuXHJcbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xyXG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArIHRleHQ7XHJcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXHJcbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xyXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cclxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xyXG4gICAgfSBjYXRjaCAoeCkgeyAvKiovIH1cclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxyXG4gKiBFcnJvciBtZXNzYWdlcyBhcmUgbWVtb3JpemVkIGFuZCB3aWxsIG9ubHkgYmUgc2hvd24gb25jZS5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcclxuICogQHBhcmFtIHtvYmplY3R9IHZhbHVlcyBSdW50aW1lIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgdHlwZS1jaGVja2VkXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhdGlvbiBlLmcuIFwicHJvcFwiLCBcImNvbnRleHRcIiwgXCJjaGlsZCBjb250ZXh0XCJcclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cclxuICogQHBhcmFtIHs/RnVuY3Rpb259IGdldFN0YWNrIFJldHVybnMgdGhlIGNvbXBvbmVudCBzdGFjay5cclxuICogQHByaXZhdGVcclxuICovXHJcbmZ1bmN0aW9uIGNoZWNrUHJvcFR5cGVzKHR5cGVTcGVjcywgdmFsdWVzLCBsb2NhdGlvbiwgY29tcG9uZW50TmFtZSwgZ2V0U3RhY2spIHtcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xyXG4gICAgICBpZiAoaGFzKHR5cGVTcGVjcywgdHlwZVNwZWNOYW1lKSkge1xyXG4gICAgICAgIHZhciBlcnJvcjtcclxuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xyXG4gICAgICAgIC8vIGZhaWwgdGhlIHJlbmRlciBwaGFzZSB3aGVyZSBpdCBkaWRuJ3QgZmFpbCBiZWZvcmUuIFNvIHdlIGxvZyBpdC5cclxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIC8vIFRoaXMgaXMgaW50ZW50aW9uYWxseSBhbiBpbnZhcmlhbnQgdGhhdCBnZXRzIGNhdWdodC4gSXQncyB0aGUgc2FtZVxyXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxyXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICB2YXIgZXJyID0gRXJyb3IoXHJcbiAgICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiAnICsgbG9jYXRpb24gKyAnIHR5cGUgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyAnICtcclxuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nICtcclxuICAgICAgICAgICAgICAnVGhpcyBvZnRlbiBoYXBwZW5zIGJlY2F1c2Ugb2YgdHlwb3Mgc3VjaCBhcyBgUHJvcFR5cGVzLmZ1bmN0aW9uYCBpbnN0ZWFkIG9mIGBQcm9wVHlwZXMuZnVuY2AuJ1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcclxuICAgICAgICAgICAgdGhyb3cgZXJyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZXJyb3IgPSB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSh2YWx1ZXMsIHR5cGVTcGVjTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIG51bGwsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcclxuICAgICAgICB9IGNhdGNoIChleCkge1xyXG4gICAgICAgICAgZXJyb3IgPSBleDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGVycm9yICYmICEoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikpIHtcclxuICAgICAgICAgIHByaW50V2FybmluZyhcclxuICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiB0eXBlIHNwZWNpZmljYXRpb24gb2YgJyArXHJcbiAgICAgICAgICAgIGxvY2F0aW9uICsgJyBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7IHRoZSB0eXBlIGNoZWNrZXIgJyArXHJcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXHJcbiAgICAgICAgICAgICdZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciAnICtcclxuICAgICAgICAgICAgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArXHJcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcclxuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxyXG4gICAgICAgICAgLy8gc2FtZSBlcnJvci5cclxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XHJcblxyXG4gICAgICAgICAgdmFyIHN0YWNrID0gZ2V0U3RhY2sgPyBnZXRTdGFjaygpIDogJyc7XHJcblxyXG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxyXG4gICAgICAgICAgICAnRmFpbGVkICcgKyBsb2NhdGlvbiArICcgdHlwZTogJyArIGVycm9yLm1lc3NhZ2UgKyAoc3RhY2sgIT0gbnVsbCA/IHN0YWNrIDogJycpXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc2V0cyB3YXJuaW5nIGNhY2hlIHdoZW4gdGVzdGluZy5cclxuICpcclxuICogQHByaXZhdGVcclxuICovXHJcbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/prop-types/node_modules/react-is/index.js\");\r\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\r\n\r\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\r\nvar has = __webpack_require__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\r\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\r\n\r\nvar printWarning = function() {};\r\n\r\nif (true) {\r\n  printWarning = function(text) {\r\n    var message = 'Warning: ' + text;\r\n    if (typeof console !== 'undefined') {\r\n      console.error(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n}\r\n\r\nfunction emptyFunctionThatReturnsNull() {\r\n  return null;\r\n}\r\n\r\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\r\n  /* global Symbol */\r\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\r\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\r\n\r\n  /**\r\n   * Returns the iterator method function contained on the iterable object.\r\n   *\r\n   * Be sure to invoke the function with the iterable as context:\r\n   *\r\n   *     var iteratorFn = getIteratorFn(myIterable);\r\n   *     if (iteratorFn) {\r\n   *       var iterator = iteratorFn.call(myIterable);\r\n   *       ...\r\n   *     }\r\n   *\r\n   * @param {?object} maybeIterable\r\n   * @return {?function}\r\n   */\r\n  function getIteratorFn(maybeIterable) {\r\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\r\n    if (typeof iteratorFn === 'function') {\r\n      return iteratorFn;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collection of methods that allow declaration and validation of props that are\r\n   * supplied to React components. Example usage:\r\n   *\r\n   *   var Props = require('ReactPropTypes');\r\n   *   var MyArticle = React.createClass({\r\n   *     propTypes: {\r\n   *       // An optional string prop named \"description\".\r\n   *       description: Props.string,\r\n   *\r\n   *       // A required enum prop named \"category\".\r\n   *       category: Props.oneOf(['News','Photos']).isRequired,\r\n   *\r\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\r\n   *       dialog: Props.instanceOf(Dialog).isRequired\r\n   *     },\r\n   *     render: function() { ... }\r\n   *   });\r\n   *\r\n   * A more formal specification of how these methods are used:\r\n   *\r\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\r\n   *   decl := ReactPropTypes.{type}(.isRequired)?\r\n   *\r\n   * Each and every declaration produces a function with the same signature. This\r\n   * allows the creation of custom validation functions. For example:\r\n   *\r\n   *  var MyLink = React.createClass({\r\n   *    propTypes: {\r\n   *      // An optional string or URI prop named \"href\".\r\n   *      href: function(props, propName, componentName) {\r\n   *        var propValue = props[propName];\r\n   *        if (propValue != null && typeof propValue !== 'string' &&\r\n   *            !(propValue instanceof URI)) {\r\n   *          return new Error(\r\n   *            'Expected a string or an URI for ' + propName + ' in ' +\r\n   *            componentName\r\n   *          );\r\n   *        }\r\n   *      }\r\n   *    },\r\n   *    render: function() {...}\r\n   *  });\r\n   *\r\n   * @internal\r\n   */\r\n\r\n  var ANONYMOUS = '<<anonymous>>';\r\n\r\n  // Important!\r\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\r\n  var ReactPropTypes = {\r\n    array: createPrimitiveTypeChecker('array'),\r\n    bigint: createPrimitiveTypeChecker('bigint'),\r\n    bool: createPrimitiveTypeChecker('boolean'),\r\n    func: createPrimitiveTypeChecker('function'),\r\n    number: createPrimitiveTypeChecker('number'),\r\n    object: createPrimitiveTypeChecker('object'),\r\n    string: createPrimitiveTypeChecker('string'),\r\n    symbol: createPrimitiveTypeChecker('symbol'),\r\n\r\n    any: createAnyTypeChecker(),\r\n    arrayOf: createArrayOfTypeChecker,\r\n    element: createElementTypeChecker(),\r\n    elementType: createElementTypeTypeChecker(),\r\n    instanceOf: createInstanceTypeChecker,\r\n    node: createNodeChecker(),\r\n    objectOf: createObjectOfTypeChecker,\r\n    oneOf: createEnumTypeChecker,\r\n    oneOfType: createUnionTypeChecker,\r\n    shape: createShapeTypeChecker,\r\n    exact: createStrictShapeTypeChecker,\r\n  };\r\n\r\n  /**\r\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n   */\r\n  /*eslint-disable no-self-compare*/\r\n  function is(x, y) {\r\n    // SameValue algorithm\r\n    if (x === y) {\r\n      // Steps 1-5, 7-10\r\n      // Steps 6.b-6.e: +0 != -0\r\n      return x !== 0 || 1 / x === 1 / y;\r\n    } else {\r\n      // Step 6.a: NaN == NaN\r\n      return x !== x && y !== y;\r\n    }\r\n  }\r\n  /*eslint-enable no-self-compare*/\r\n\r\n  /**\r\n   * We use an Error-like object for backward compatibility as people may call\r\n   * PropTypes directly and inspect their output. However, we don't use real\r\n   * Errors anymore. We don't inspect their stack anyway, and creating them\r\n   * is prohibitively expensive if they are created too often, such as what\r\n   * happens in oneOfType() for any type before the one that matched.\r\n   */\r\n  function PropTypeError(message, data) {\r\n    this.message = message;\r\n    this.data = data && typeof data === 'object' ? data: {};\r\n    this.stack = '';\r\n  }\r\n  // Make `instanceof Error` still work for returned errors.\r\n  PropTypeError.prototype = Error.prototype;\r\n\r\n  function createChainableTypeChecker(validate) {\r\n    if (true) {\r\n      var manualPropTypeCallCache = {};\r\n      var manualPropTypeWarningCount = 0;\r\n    }\r\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\r\n      componentName = componentName || ANONYMOUS;\r\n      propFullName = propFullName || propName;\r\n\r\n      if (secret !== ReactPropTypesSecret) {\r\n        if (throwOnDirectAccess) {\r\n          // New behavior only for users of `prop-types` package\r\n          var err = new Error(\r\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\r\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\r\n            'Read more at http://fb.me/use-check-prop-types'\r\n          );\r\n          err.name = 'Invariant Violation';\r\n          throw err;\r\n        } else if ( true && typeof console !== 'undefined') {\r\n          // Old behavior for people using React.PropTypes\r\n          var cacheKey = componentName + ':' + propName;\r\n          if (\r\n            !manualPropTypeCallCache[cacheKey] &&\r\n            // Avoid spamming the console because they are often not actionable except for lib authors\r\n            manualPropTypeWarningCount < 3\r\n          ) {\r\n            printWarning(\r\n              'You are manually calling a React.PropTypes validation ' +\r\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\r\n              'and will throw in the standalone `prop-types` package. ' +\r\n              'You may be seeing this warning due to a third-party PropTypes ' +\r\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\r\n            );\r\n            manualPropTypeCallCache[cacheKey] = true;\r\n            manualPropTypeWarningCount++;\r\n          }\r\n        }\r\n      }\r\n      if (props[propName] == null) {\r\n        if (isRequired) {\r\n          if (props[propName] === null) {\r\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\r\n          }\r\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\r\n        }\r\n        return null;\r\n      } else {\r\n        return validate(props, propName, componentName, location, propFullName);\r\n      }\r\n    }\r\n\r\n    var chainedCheckType = checkType.bind(null, false);\r\n    chainedCheckType.isRequired = checkType.bind(null, true);\r\n\r\n    return chainedCheckType;\r\n  }\r\n\r\n  function createPrimitiveTypeChecker(expectedType) {\r\n    function validate(props, propName, componentName, location, propFullName, secret) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== expectedType) {\r\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\r\n        // check, but we can offer a more precise error message here rather than\r\n        // 'of type `object`'.\r\n        var preciseType = getPreciseType(propValue);\r\n\r\n        return new PropTypeError(\r\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\r\n          {expectedType: expectedType}\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createAnyTypeChecker() {\r\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\r\n  }\r\n\r\n  function createArrayOfTypeChecker(typeChecker) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (typeof typeChecker !== 'function') {\r\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\r\n      }\r\n      var propValue = props[propName];\r\n      if (!Array.isArray(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\r\n      }\r\n      for (var i = 0; i < propValue.length; i++) {\r\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\r\n        if (error instanceof Error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createElementTypeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      if (!isValidElement(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createElementTypeTypeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      if (!ReactIs.isValidElementType(propValue)) {\r\n        var propType = getPropType(propValue);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createInstanceTypeChecker(expectedClass) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (!(props[propName] instanceof expectedClass)) {\r\n        var expectedClassName = expectedClass.name || ANONYMOUS;\r\n        var actualClassName = getClassName(props[propName]);\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createEnumTypeChecker(expectedValues) {\r\n    if (!Array.isArray(expectedValues)) {\r\n      if (true) {\r\n        if (arguments.length > 1) {\r\n          printWarning(\r\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\r\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\r\n          );\r\n        } else {\r\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\r\n        }\r\n      }\r\n      return emptyFunctionThatReturnsNull;\r\n    }\r\n\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      for (var i = 0; i < expectedValues.length; i++) {\r\n        if (is(propValue, expectedValues[i])) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\r\n        var type = getPreciseType(value);\r\n        if (type === 'symbol') {\r\n          return String(value);\r\n        }\r\n        return value;\r\n      });\r\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createObjectOfTypeChecker(typeChecker) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (typeof typeChecker !== 'function') {\r\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\r\n      }\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\r\n      }\r\n      for (var key in propValue) {\r\n        if (has(propValue, key)) {\r\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n          if (error instanceof Error) {\r\n            return error;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\r\n    if (!Array.isArray(arrayOfTypeCheckers)) {\r\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\r\n      return emptyFunctionThatReturnsNull;\r\n    }\r\n\r\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\r\n      var checker = arrayOfTypeCheckers[i];\r\n      if (typeof checker !== 'function') {\r\n        printWarning(\r\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\r\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\r\n        );\r\n        return emptyFunctionThatReturnsNull;\r\n      }\r\n    }\r\n\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var expectedTypes = [];\r\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\r\n        var checker = arrayOfTypeCheckers[i];\r\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\r\n        if (checkerResult == null) {\r\n          return null;\r\n        }\r\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\r\n          expectedTypes.push(checkerResult.data.expectedType);\r\n        }\r\n      }\r\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\r\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createNodeChecker() {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      if (!isNode(props[propName])) {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\r\n    return new PropTypeError(\r\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\r\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\r\n    );\r\n  }\r\n\r\n  function createShapeTypeChecker(shapeTypes) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\r\n      }\r\n      for (var key in shapeTypes) {\r\n        var checker = shapeTypes[key];\r\n        if (typeof checker !== 'function') {\r\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\r\n        }\r\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n        if (error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function createStrictShapeTypeChecker(shapeTypes) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n      var propValue = props[propName];\r\n      var propType = getPropType(propValue);\r\n      if (propType !== 'object') {\r\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\r\n      }\r\n      // We need to check all keys in case some are required but missing from props.\r\n      var allKeys = assign({}, props[propName], shapeTypes);\r\n      for (var key in allKeys) {\r\n        var checker = shapeTypes[key];\r\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\r\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\r\n        }\r\n        if (!checker) {\r\n          return new PropTypeError(\r\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\r\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\r\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\r\n          );\r\n        }\r\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n        if (error) {\r\n          return error;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    return createChainableTypeChecker(validate);\r\n  }\r\n\r\n  function isNode(propValue) {\r\n    switch (typeof propValue) {\r\n      case 'number':\r\n      case 'string':\r\n      case 'undefined':\r\n        return true;\r\n      case 'boolean':\r\n        return !propValue;\r\n      case 'object':\r\n        if (Array.isArray(propValue)) {\r\n          return propValue.every(isNode);\r\n        }\r\n        if (propValue === null || isValidElement(propValue)) {\r\n          return true;\r\n        }\r\n\r\n        var iteratorFn = getIteratorFn(propValue);\r\n        if (iteratorFn) {\r\n          var iterator = iteratorFn.call(propValue);\r\n          var step;\r\n          if (iteratorFn !== propValue.entries) {\r\n            while (!(step = iterator.next()).done) {\r\n              if (!isNode(step.value)) {\r\n                return false;\r\n              }\r\n            }\r\n          } else {\r\n            // Iterator will provide entry [k,v] tuples rather than values.\r\n            while (!(step = iterator.next()).done) {\r\n              var entry = step.value;\r\n              if (entry) {\r\n                if (!isNode(entry[1])) {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function isSymbol(propType, propValue) {\r\n    // Native Symbol.\r\n    if (propType === 'symbol') {\r\n      return true;\r\n    }\r\n\r\n    // falsy value can't be a Symbol\r\n    if (!propValue) {\r\n      return false;\r\n    }\r\n\r\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\r\n    if (propValue['@@toStringTag'] === 'Symbol') {\r\n      return true;\r\n    }\r\n\r\n    // Fallback for non-spec compliant Symbols which are polyfilled.\r\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Equivalent of `typeof` but with special handling for array and regexp.\r\n  function getPropType(propValue) {\r\n    var propType = typeof propValue;\r\n    if (Array.isArray(propValue)) {\r\n      return 'array';\r\n    }\r\n    if (propValue instanceof RegExp) {\r\n      // Old webkits (at least until Android 4.0) return 'function' rather than\r\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\r\n      // passes PropTypes.object.\r\n      return 'object';\r\n    }\r\n    if (isSymbol(propType, propValue)) {\r\n      return 'symbol';\r\n    }\r\n    return propType;\r\n  }\r\n\r\n  // This handles more types than `getPropType`. Only used for error messages.\r\n  // See `createPrimitiveTypeChecker`.\r\n  function getPreciseType(propValue) {\r\n    if (typeof propValue === 'undefined' || propValue === null) {\r\n      return '' + propValue;\r\n    }\r\n    var propType = getPropType(propValue);\r\n    if (propType === 'object') {\r\n      if (propValue instanceof Date) {\r\n        return 'date';\r\n      } else if (propValue instanceof RegExp) {\r\n        return 'regexp';\r\n      }\r\n    }\r\n    return propType;\r\n  }\r\n\r\n  // Returns a string that is postfixed to a warning about an invalid type.\r\n  // For example, \"undefined\" or \"of type array\"\r\n  function getPostfixForTypeWarning(value) {\r\n    var type = getPreciseType(value);\r\n    switch (type) {\r\n      case 'array':\r\n      case 'object':\r\n        return 'an ' + type;\r\n      case 'boolean':\r\n      case 'date':\r\n      case 'regexp':\r\n        return 'a ' + type;\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  // Returns class name of the object, if any.\r\n  function getClassName(propValue) {\r\n    if (!propValue.constructor || !propValue.constructor.name) {\r\n      return ANONYMOUS;\r\n    }\r\n    return propValue.constructor.name;\r\n  }\r\n\r\n  ReactPropTypes.checkPropTypes = checkPropTypes;\r\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\r\n  ReactPropTypes.PropTypes = ReactPropTypes;\r\n\r\n  return ReactPropTypes;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/prop-types/factoryWithTypeCheckers.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nif (true) {\r\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/prop-types/node_modules/react-is/index.js\");\r\n\r\n  // By explicitly using `prop-types` you are opting into new development behavior.\r\n  // http://fb.me/prop-types-in-prod\r\n  var throwOnDirectAccess = true;\r\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\r\n} else {}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksSUFBcUM7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsMEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBMkI7QUFDdEQsRUFBRSxLQUFLLEVBSU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanM/YmRlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XHJcblxyXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxyXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcclxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xyXG59IGVsc2Uge1xyXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXHJcbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/index.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\r\n\r\nmodule.exports = ReactPropTypesSecret;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcz9lMDk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvaGFzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9oYXMuanM/ZTQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/has.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\r\n * react-is.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nif (true) {\r\n  (function() {\r\n'use strict';\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\r\n// (unstable) APIs that have been removed. Can we remove the symbols?\r\n\r\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\r\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\r\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\r\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\r\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\r\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\r\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\r\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\r\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\r\n\r\nfunction isValidElementType(type) {\r\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\r\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\r\n}\r\n\r\nfunction typeOf(object) {\r\n  if (typeof object === 'object' && object !== null) {\r\n    var $$typeof = object.$$typeof;\r\n\r\n    switch ($$typeof) {\r\n      case REACT_ELEMENT_TYPE:\r\n        var type = object.type;\r\n\r\n        switch (type) {\r\n          case REACT_ASYNC_MODE_TYPE:\r\n          case REACT_CONCURRENT_MODE_TYPE:\r\n          case REACT_FRAGMENT_TYPE:\r\n          case REACT_PROFILER_TYPE:\r\n          case REACT_STRICT_MODE_TYPE:\r\n          case REACT_SUSPENSE_TYPE:\r\n            return type;\r\n\r\n          default:\r\n            var $$typeofType = type && type.$$typeof;\r\n\r\n            switch ($$typeofType) {\r\n              case REACT_CONTEXT_TYPE:\r\n              case REACT_FORWARD_REF_TYPE:\r\n              case REACT_LAZY_TYPE:\r\n              case REACT_MEMO_TYPE:\r\n              case REACT_PROVIDER_TYPE:\r\n                return $$typeofType;\r\n\r\n              default:\r\n                return $$typeof;\r\n            }\r\n\r\n        }\r\n\r\n      case REACT_PORTAL_TYPE:\r\n        return $$typeof;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n} // AsyncMode is deprecated along with isAsyncMode\r\n\r\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\r\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\r\nvar ContextConsumer = REACT_CONTEXT_TYPE;\r\nvar ContextProvider = REACT_PROVIDER_TYPE;\r\nvar Element = REACT_ELEMENT_TYPE;\r\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\r\nvar Fragment = REACT_FRAGMENT_TYPE;\r\nvar Lazy = REACT_LAZY_TYPE;\r\nvar Memo = REACT_MEMO_TYPE;\r\nvar Portal = REACT_PORTAL_TYPE;\r\nvar Profiler = REACT_PROFILER_TYPE;\r\nvar StrictMode = REACT_STRICT_MODE_TYPE;\r\nvar Suspense = REACT_SUSPENSE_TYPE;\r\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\r\n\r\nfunction isAsyncMode(object) {\r\n  {\r\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\r\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\r\n\r\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\r\n    }\r\n  }\r\n\r\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\r\n}\r\nfunction isConcurrentMode(object) {\r\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\r\n}\r\nfunction isContextConsumer(object) {\r\n  return typeOf(object) === REACT_CONTEXT_TYPE;\r\n}\r\nfunction isContextProvider(object) {\r\n  return typeOf(object) === REACT_PROVIDER_TYPE;\r\n}\r\nfunction isElement(object) {\r\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n}\r\nfunction isForwardRef(object) {\r\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\r\n}\r\nfunction isFragment(object) {\r\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\r\n}\r\nfunction isLazy(object) {\r\n  return typeOf(object) === REACT_LAZY_TYPE;\r\n}\r\nfunction isMemo(object) {\r\n  return typeOf(object) === REACT_MEMO_TYPE;\r\n}\r\nfunction isPortal(object) {\r\n  return typeOf(object) === REACT_PORTAL_TYPE;\r\n}\r\nfunction isProfiler(object) {\r\n  return typeOf(object) === REACT_PROFILER_TYPE;\r\n}\r\nfunction isStrictMode(object) {\r\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\r\n}\r\nfunction isSuspense(object) {\r\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\r\n}\r\n\r\nexports.AsyncMode = AsyncMode;\r\nexports.ConcurrentMode = ConcurrentMode;\r\nexports.ContextConsumer = ContextConsumer;\r\nexports.ContextProvider = ContextProvider;\r\nexports.Element = Element;\r\nexports.ForwardRef = ForwardRef;\r\nexports.Fragment = Fragment;\r\nexports.Lazy = Lazy;\r\nexports.Memo = Memo;\r\nexports.Portal = Portal;\r\nexports.Profiler = Profiler;\r\nexports.StrictMode = StrictMode;\r\nexports.Suspense = Suspense;\r\nexports.isAsyncMode = isAsyncMode;\r\nexports.isConcurrentMode = isConcurrentMode;\r\nexports.isContextConsumer = isContextConsumer;\r\nexports.isContextProvider = isContextProvider;\r\nexports.isElement = isElement;\r\nexports.isForwardRef = isForwardRef;\r\nexports.isFragment = isFragment;\r\nexports.isLazy = isLazy;\r\nexports.isMemo = isMemo;\r\nexports.isPortal = isPortal;\r\nexports.isProfiler = isProfiler;\r\nexports.isStrictMode = isStrictMode;\r\nexports.isSuspense = isSuspense;\r\nexports.isValidElementType = isValidElementType;\r\nexports.typeOf = typeOf;\r\n  })();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "./node_modules/prop-types/node_modules/react-is/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/prop-types/node_modules/react-is/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx3SkFBeUQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzPzVkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/node_modules/react-is/index.js\n"));

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * @license React\r\n * react-is.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nif (true) {\r\n  (function() {\r\n'use strict';\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n// The Symbol used to tag the ReactElement-like types.\r\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\r\nvar enableCacheElement = false;\r\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\r\n\r\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\n\r\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\r\n\r\nvar REACT_MODULE_REFERENCE;\r\n\r\n{\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nfunction isValidElementType(type) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n\r\n\r\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\r\n    // types supported by any Flight configuration anywhere since\r\n    // we don't know which Flight build this will end up being used\r\n    // with.\r\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction typeOf(object) {\r\n  if (typeof object === 'object' && object !== null) {\r\n    var $$typeof = object.$$typeof;\r\n\r\n    switch ($$typeof) {\r\n      case REACT_ELEMENT_TYPE:\r\n        var type = object.type;\r\n\r\n        switch (type) {\r\n          case REACT_FRAGMENT_TYPE:\r\n          case REACT_PROFILER_TYPE:\r\n          case REACT_STRICT_MODE_TYPE:\r\n          case REACT_SUSPENSE_TYPE:\r\n          case REACT_SUSPENSE_LIST_TYPE:\r\n            return type;\r\n\r\n          default:\r\n            var $$typeofType = type && type.$$typeof;\r\n\r\n            switch ($$typeofType) {\r\n              case REACT_SERVER_CONTEXT_TYPE:\r\n              case REACT_CONTEXT_TYPE:\r\n              case REACT_FORWARD_REF_TYPE:\r\n              case REACT_LAZY_TYPE:\r\n              case REACT_MEMO_TYPE:\r\n              case REACT_PROVIDER_TYPE:\r\n                return $$typeofType;\r\n\r\n              default:\r\n                return $$typeof;\r\n            }\r\n\r\n        }\r\n\r\n      case REACT_PORTAL_TYPE:\r\n        return $$typeof;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\nvar ContextConsumer = REACT_CONTEXT_TYPE;\r\nvar ContextProvider = REACT_PROVIDER_TYPE;\r\nvar Element = REACT_ELEMENT_TYPE;\r\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\r\nvar Fragment = REACT_FRAGMENT_TYPE;\r\nvar Lazy = REACT_LAZY_TYPE;\r\nvar Memo = REACT_MEMO_TYPE;\r\nvar Portal = REACT_PORTAL_TYPE;\r\nvar Profiler = REACT_PROFILER_TYPE;\r\nvar StrictMode = REACT_STRICT_MODE_TYPE;\r\nvar Suspense = REACT_SUSPENSE_TYPE;\r\nvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\r\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\r\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\r\n\r\nfunction isAsyncMode(object) {\r\n  {\r\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\r\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\r\n\r\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nfunction isConcurrentMode(object) {\r\n  {\r\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\r\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\r\n\r\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nfunction isContextConsumer(object) {\r\n  return typeOf(object) === REACT_CONTEXT_TYPE;\r\n}\r\nfunction isContextProvider(object) {\r\n  return typeOf(object) === REACT_PROVIDER_TYPE;\r\n}\r\nfunction isElement(object) {\r\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n}\r\nfunction isForwardRef(object) {\r\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\r\n}\r\nfunction isFragment(object) {\r\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\r\n}\r\nfunction isLazy(object) {\r\n  return typeOf(object) === REACT_LAZY_TYPE;\r\n}\r\nfunction isMemo(object) {\r\n  return typeOf(object) === REACT_MEMO_TYPE;\r\n}\r\nfunction isPortal(object) {\r\n  return typeOf(object) === REACT_PORTAL_TYPE;\r\n}\r\nfunction isProfiler(object) {\r\n  return typeOf(object) === REACT_PROFILER_TYPE;\r\n}\r\nfunction isStrictMode(object) {\r\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\r\n}\r\nfunction isSuspense(object) {\r\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\r\n}\r\nfunction isSuspenseList(object) {\r\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\r\n}\r\n\r\nexports.ContextConsumer = ContextConsumer;\r\nexports.ContextProvider = ContextProvider;\r\nexports.Element = Element;\r\nexports.ForwardRef = ForwardRef;\r\nexports.Fragment = Fragment;\r\nexports.Lazy = Lazy;\r\nexports.Memo = Memo;\r\nexports.Portal = Portal;\r\nexports.Profiler = Profiler;\r\nexports.StrictMode = StrictMode;\r\nexports.Suspense = Suspense;\r\nexports.SuspenseList = SuspenseList;\r\nexports.isAsyncMode = isAsyncMode;\r\nexports.isConcurrentMode = isConcurrentMode;\r\nexports.isContextConsumer = isContextConsumer;\r\nexports.isContextProvider = isContextProvider;\r\nexports.isElement = isElement;\r\nexports.isForwardRef = isForwardRef;\r\nexports.isFragment = isFragment;\r\nexports.isLazy = isLazy;\r\nexports.isMemo = isMemo;\r\nexports.isPortal = isPortal;\r\nexports.isProfiler = isProfiler;\r\nexports.isStrictMode = isStrictMode;\r\nexports.isSuspense = isSuspense;\r\nexports.isSuspenseList = isSuspenseList;\r\nexports.isValidElementType = isValidElementType;\r\nexports.typeOf = typeOf;\r\n  })();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSxnSUFBeUQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzP2IzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "./node_modules/style-to-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/style-to-object/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var parse = __webpack_require__(/*! inline-style-parser */ \"./node_modules/inline-style-parser/index.js\");\r\n\r\n/**\r\n * Parses inline style to object.\r\n *\r\n * @example\r\n * // returns { 'line-height': '42' }\r\n * StyleToObject('line-height: 42;');\r\n *\r\n * @param  {String}      style      - The inline style.\r\n * @param  {Function}    [iterator] - The iterator function.\r\n * @return {null|Object}\r\n */\r\nfunction StyleToObject(style, iterator) {\r\n  var output = null;\r\n  if (!style || typeof style !== 'string') {\r\n    return output;\r\n  }\r\n\r\n  var declaration;\r\n  var declarations = parse(style);\r\n  var hasIterator = typeof iterator === 'function';\r\n  var property;\r\n  var value;\r\n\r\n  for (var i = 0, len = declarations.length; i < len; i++) {\r\n    declaration = declarations[i];\r\n    property = declaration.property;\r\n    value = declaration.value;\r\n\r\n    if (hasIterator) {\r\n      iterator(property, value, declaration);\r\n    } else if (value) {\r\n      output || (output = {});\r\n      output[property] = value;\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nmodule.exports = StyleToObject;\r\nmodule.exports[\"default\"] = StyleToObject; // ESM support\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tb2JqZWN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFlBQVksbUJBQU8sQ0FBQyx3RUFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixrQ0FBa0M7QUFDbEM7QUFDQSxZQUFZLGFBQWE7QUFDekIsWUFBWSxhQUFhO0FBQ3pCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxTQUFTO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUFzQixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N0eWxlLXRvLW9iamVjdC9pbmRleC5qcz9mMWUwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBwYXJzZSA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wYXJzZXInKTtcclxuXHJcbi8qKlxyXG4gKiBQYXJzZXMgaW5saW5lIHN0eWxlIHRvIG9iamVjdC5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gcmV0dXJucyB7ICdsaW5lLWhlaWdodCc6ICc0MicgfVxyXG4gKiBTdHlsZVRvT2JqZWN0KCdsaW5lLWhlaWdodDogNDI7Jyk7XHJcbiAqXHJcbiAqIEBwYXJhbSAge1N0cmluZ30gICAgICBzdHlsZSAgICAgIC0gVGhlIGlubGluZSBzdHlsZS5cclxuICogQHBhcmFtICB7RnVuY3Rpb259ICAgIFtpdGVyYXRvcl0gLSBUaGUgaXRlcmF0b3IgZnVuY3Rpb24uXHJcbiAqIEByZXR1cm4ge251bGx8T2JqZWN0fVxyXG4gKi9cclxuZnVuY3Rpb24gU3R5bGVUb09iamVjdChzdHlsZSwgaXRlcmF0b3IpIHtcclxuICB2YXIgb3V0cHV0ID0gbnVsbDtcclxuICBpZiAoIXN0eWxlIHx8IHR5cGVvZiBzdHlsZSAhPT0gJ3N0cmluZycpIHtcclxuICAgIHJldHVybiBvdXRwdXQ7XHJcbiAgfVxyXG5cclxuICB2YXIgZGVjbGFyYXRpb247XHJcbiAgdmFyIGRlY2xhcmF0aW9ucyA9IHBhcnNlKHN0eWxlKTtcclxuICB2YXIgaGFzSXRlcmF0b3IgPSB0eXBlb2YgaXRlcmF0b3IgPT09ICdmdW5jdGlvbic7XHJcbiAgdmFyIHByb3BlcnR5O1xyXG4gIHZhciB2YWx1ZTtcclxuXHJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGRlY2xhcmF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xyXG4gICAgZGVjbGFyYXRpb24gPSBkZWNsYXJhdGlvbnNbaV07XHJcbiAgICBwcm9wZXJ0eSA9IGRlY2xhcmF0aW9uLnByb3BlcnR5O1xyXG4gICAgdmFsdWUgPSBkZWNsYXJhdGlvbi52YWx1ZTtcclxuXHJcbiAgICBpZiAoaGFzSXRlcmF0b3IpIHtcclxuICAgICAgaXRlcmF0b3IocHJvcGVydHksIHZhbHVlLCBkZWNsYXJhdGlvbik7XHJcbiAgICB9IGVsc2UgaWYgKHZhbHVlKSB7XHJcbiAgICAgIG91dHB1dCB8fCAob3V0cHV0ID0ge30pO1xyXG4gICAgICBvdXRwdXRbcHJvcGVydHldID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gb3V0cHV0O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFN0eWxlVG9PYmplY3Q7XHJcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBTdHlsZVRvT2JqZWN0OyAvLyBFU00gc3VwcG9ydFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-to-object/index.js\n"));

/***/ }),

/***/ "./node_modules/bail/index.js":
/*!************************************!*\
  !*** ./node_modules/bail/index.js ***!
  \************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bail\": function() { return /* binding */ bail; }\n/* harmony export */ });\n/**\r\n * Throw a given error.\r\n *\r\n * @param {Error|null|undefined} [error]\r\n *   Maybe error.\r\n * @returns {asserts error is null|undefined}\r\n */\r\nfunction bail(error) {\r\n  if (error) {\r\n    throw error\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFpbC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakM7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iYWlsL2luZGV4LmpzP2NjYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRocm93IGEgZ2l2ZW4gZXJyb3IuXHJcbiAqXHJcbiAqIEBwYXJhbSB7RXJyb3J8bnVsbHx1bmRlZmluZWR9IFtlcnJvcl1cclxuICogICBNYXliZSBlcnJvci5cclxuICogQHJldHVybnMge2Fzc2VydHMgZXJyb3IgaXMgbnVsbHx1bmRlZmluZWR9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYmFpbChlcnJvcikge1xyXG4gIGlmIChlcnJvcikge1xyXG4gICAgdGhyb3cgZXJyb3JcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/bail/index.js\n"));

/***/ }),

/***/ "./node_modules/ccount/index.js":
/*!**************************************!*\
  !*** ./node_modules/ccount/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ccount\": function() { return /* binding */ ccount; }\n/* harmony export */ });\n/**\r\n * Count how often a character (or substring) is used in a string.\r\n *\r\n * @param {string} value\r\n *   Value to search in.\r\n * @param {string} character\r\n *   Character (or substring) to look for.\r\n * @return {number}\r\n *   Number of times `character` occurred in `value`.\r\n */\r\nfunction ccount(value, character) {\r\n  const source = String(value)\r\n\r\n  if (typeof character !== 'string') {\r\n    throw new TypeError('Expected character')\r\n  }\r\n\r\n  let count = 0\r\n  let index = source.indexOf(character)\r\n\r\n  while (index !== -1) {\r\n    count++\r\n    index = source.indexOf(character, index + character.length)\r\n  }\r\n\r\n  return count\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2NvdW50L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Njb3VudC9pbmRleC5qcz83OTEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3VudCBob3cgb2Z0ZW4gYSBjaGFyYWN0ZXIgKG9yIHN1YnN0cmluZykgaXMgdXNlZCBpbiBhIHN0cmluZy5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAqICAgVmFsdWUgdG8gc2VhcmNoIGluLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXHJcbiAqICAgQ2hhcmFjdGVyIChvciBzdWJzdHJpbmcpIHRvIGxvb2sgZm9yLlxyXG4gKiBAcmV0dXJuIHtudW1iZXJ9XHJcbiAqICAgTnVtYmVyIG9mIHRpbWVzIGBjaGFyYWN0ZXJgIG9jY3VycmVkIGluIGB2YWx1ZWAuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY2NvdW50KHZhbHVlLCBjaGFyYWN0ZXIpIHtcclxuICBjb25zdCBzb3VyY2UgPSBTdHJpbmcodmFsdWUpXHJcblxyXG4gIGlmICh0eXBlb2YgY2hhcmFjdGVyICE9PSAnc3RyaW5nJykge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgY2hhcmFjdGVyJylcclxuICB9XHJcblxyXG4gIGxldCBjb3VudCA9IDBcclxuICBsZXQgaW5kZXggPSBzb3VyY2UuaW5kZXhPZihjaGFyYWN0ZXIpXHJcblxyXG4gIHdoaWxlIChpbmRleCAhPT0gLTEpIHtcclxuICAgIGNvdW50KytcclxuICAgIGluZGV4ID0gc291cmNlLmluZGV4T2YoY2hhcmFjdGVyLCBpbmRleCArIGNoYXJhY3Rlci5sZW5ndGgpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gY291bnRcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ccount/index.js\n"));

/***/ }),

/***/ "./node_modules/comma-separated-tokens/index.js":
/*!******************************************************!*\
  !*** ./node_modules/comma-separated-tokens/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; }\n/* harmony export */ });\n/**\r\n * @typedef Options\r\n *   Configuration for `stringify`.\r\n * @property {boolean} [padLeft=true]\r\n *   Whether to pad a space before a token.\r\n * @property {boolean} [padRight=false]\r\n *   Whether to pad a space after a token.\r\n */\r\n\r\n/**\r\n * @typedef {Options} StringifyOptions\r\n *   Please use `StringifyOptions` instead.\r\n */\r\n\r\n/**\r\n * Parse comma-separated tokens to an array.\r\n *\r\n * @param {string} value\r\n *   Comma-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nfunction parse(value) {\r\n  /** @type {Array<string>} */\r\n  const tokens = []\r\n  const input = String(value || '')\r\n  let index = input.indexOf(',')\r\n  let start = 0\r\n  /** @type {boolean} */\r\n  let end = false\r\n\r\n  while (!end) {\r\n    if (index === -1) {\r\n      index = input.length\r\n      end = true\r\n    }\r\n\r\n    const token = input.slice(start, index).trim()\r\n\r\n    if (token || !end) {\r\n      tokens.push(token)\r\n    }\r\n\r\n    start = index + 1\r\n    index = input.indexOf(',', start)\r\n  }\r\n\r\n  return tokens\r\n}\r\n\r\n/**\r\n * Serialize an array of strings or numbers to comma-separated tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @param {Options} [options]\r\n *   Configuration for `stringify` (optional).\r\n * @returns {string}\r\n *   Comma-separated tokens.\r\n */\r\nfunction stringify(values, options) {\r\n  const settings = options || {}\r\n\r\n  // Ensure the last empty entry is seen.\r\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\r\n\r\n  return input\r\n    .join(\r\n      (settings.padRight ? ' ' : '') +\r\n        ',' +\r\n        (settings.padLeft === false ? '' : ' ')\r\n    )\r\n    .trim()\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29tbWEtc2VwYXJhdGVkLXRva2Vucy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb21tYS1zZXBhcmF0ZWQtdG9rZW5zL2luZGV4LmpzPzI1ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIE9wdGlvbnNcclxuICogICBDb25maWd1cmF0aW9uIGZvciBgc3RyaW5naWZ5YC5cclxuICogQHByb3BlcnR5IHtib29sZWFufSBbcGFkTGVmdD10cnVlXVxyXG4gKiAgIFdoZXRoZXIgdG8gcGFkIGEgc3BhY2UgYmVmb3JlIGEgdG9rZW4uXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3BhZFJpZ2h0PWZhbHNlXVxyXG4gKiAgIFdoZXRoZXIgdG8gcGFkIGEgc3BhY2UgYWZ0ZXIgYSB0b2tlbi5cclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYge09wdGlvbnN9IFN0cmluZ2lmeU9wdGlvbnNcclxuICogICBQbGVhc2UgdXNlIGBTdHJpbmdpZnlPcHRpb25zYCBpbnN0ZWFkLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBQYXJzZSBjb21tYS1zZXBhcmF0ZWQgdG9rZW5zIHRvIGFuIGFycmF5LlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICogICBDb21tYS1zZXBhcmF0ZWQgdG9rZW5zLlxyXG4gKiBAcmV0dXJucyB7QXJyYXk8c3RyaW5nPn1cclxuICogICBMaXN0IG9mIHRva2Vucy5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSh2YWx1ZSkge1xyXG4gIC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn0gKi9cclxuICBjb25zdCB0b2tlbnMgPSBbXVxyXG4gIGNvbnN0IGlucHV0ID0gU3RyaW5nKHZhbHVlIHx8ICcnKVxyXG4gIGxldCBpbmRleCA9IGlucHV0LmluZGV4T2YoJywnKVxyXG4gIGxldCBzdGFydCA9IDBcclxuICAvKiogQHR5cGUge2Jvb2xlYW59ICovXHJcbiAgbGV0IGVuZCA9IGZhbHNlXHJcblxyXG4gIHdoaWxlICghZW5kKSB7XHJcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XHJcbiAgICAgIGluZGV4ID0gaW5wdXQubGVuZ3RoXHJcbiAgICAgIGVuZCA9IHRydWVcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0b2tlbiA9IGlucHV0LnNsaWNlKHN0YXJ0LCBpbmRleCkudHJpbSgpXHJcblxyXG4gICAgaWYgKHRva2VuIHx8ICFlbmQpIHtcclxuICAgICAgdG9rZW5zLnB1c2godG9rZW4pXHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQgPSBpbmRleCArIDFcclxuICAgIGluZGV4ID0gaW5wdXQuaW5kZXhPZignLCcsIHN0YXJ0KVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHRva2Vuc1xyXG59XHJcblxyXG4vKipcclxuICogU2VyaWFsaXplIGFuIGFycmF5IG9mIHN0cmluZ3Mgb3IgbnVtYmVycyB0byBjb21tYS1zZXBhcmF0ZWQgdG9rZW5zLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PHN0cmluZ3xudW1iZXI+fSB2YWx1ZXNcclxuICogICBMaXN0IG9mIHRva2Vucy5cclxuICogQHBhcmFtIHtPcHRpb25zfSBbb3B0aW9uc11cclxuICogICBDb25maWd1cmF0aW9uIGZvciBgc3RyaW5naWZ5YCAob3B0aW9uYWwpLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIENvbW1hLXNlcGFyYXRlZCB0b2tlbnMuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlcywgb3B0aW9ucykge1xyXG4gIGNvbnN0IHNldHRpbmdzID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICAvLyBFbnN1cmUgdGhlIGxhc3QgZW1wdHkgZW50cnkgaXMgc2Vlbi5cclxuICBjb25zdCBpbnB1dCA9IHZhbHVlc1t2YWx1ZXMubGVuZ3RoIC0gMV0gPT09ICcnID8gWy4uLnZhbHVlcywgJyddIDogdmFsdWVzXHJcblxyXG4gIHJldHVybiBpbnB1dFxyXG4gICAgLmpvaW4oXHJcbiAgICAgIChzZXR0aW5ncy5wYWRSaWdodCA/ICcgJyA6ICcnKSArXHJcbiAgICAgICAgJywnICtcclxuICAgICAgICAoc2V0dGluZ3MucGFkTGVmdCA9PT0gZmFsc2UgPyAnJyA6ICcgJylcclxuICAgIClcclxuICAgIC50cmltKClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/comma-separated-tokens/index.js\n"));

/***/ }),

/***/ "./node_modules/decode-named-character-reference/index.dom.js":
/*!********************************************************************!*\
  !*** ./node_modules/decode-named-character-reference/index.dom.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeNamedCharacterReference\": function() { return /* binding */ decodeNamedCharacterReference; }\n/* harmony export */ });\n/// <reference lib=\"dom\" />\r\n\r\n/* eslint-env browser */\r\n\r\nconst element = document.createElement('i')\r\n\r\n/**\r\n * @param {string} value\r\n * @returns {string | false}\r\n */\r\nfunction decodeNamedCharacterReference(value) {\r\n  const characterReference = '&' + value + ';'\r\n  element.innerHTML = characterReference\r\n  const character = element.textContent\r\n\r\n  // Some named character references do not require the closing semicolon\r\n  // (`&not`, for instance), which leads to situations where parsing the assumed\r\n  // named reference of `&notit;` will result in the string `¬it;`.\r\n  // When we encounter a trailing semicolon after parsing, and the character\r\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\r\n  // matching was not complete.\r\n  if (\r\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\r\n    // yield `null`.\r\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\r\n    value !== 'semi'\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  // If the decoded string is equal to the input, the character reference was\r\n  // not valid.\r\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\r\n  // yield `null`.\r\n  return character === characterReference ? false : character\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVjb2RlLW5hbWVkLWNoYXJhY3Rlci1yZWZlcmVuY2UvaW5kZXguZG9tLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGlDQUFpQztBQUNqRTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kZWNvZGUtbmFtZWQtY2hhcmFjdGVyLXJlZmVyZW5jZS9pbmRleC5kb20uanM/ODc3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBsaWI9XCJkb21cIiAvPlxyXG5cclxuLyogZXNsaW50LWVudiBicm93c2VyICovXHJcblxyXG5jb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAqIEByZXR1cm5zIHtzdHJpbmcgfCBmYWxzZX1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOYW1lZENoYXJhY3RlclJlZmVyZW5jZSh2YWx1ZSkge1xyXG4gIGNvbnN0IGNoYXJhY3RlclJlZmVyZW5jZSA9ICcmJyArIHZhbHVlICsgJzsnXHJcbiAgZWxlbWVudC5pbm5lckhUTUwgPSBjaGFyYWN0ZXJSZWZlcmVuY2VcclxuICBjb25zdCBjaGFyYWN0ZXIgPSBlbGVtZW50LnRleHRDb250ZW50XHJcblxyXG4gIC8vIFNvbWUgbmFtZWQgY2hhcmFjdGVyIHJlZmVyZW5jZXMgZG8gbm90IHJlcXVpcmUgdGhlIGNsb3Npbmcgc2VtaWNvbG9uXHJcbiAgLy8gKGAmbm90YCwgZm9yIGluc3RhbmNlKSwgd2hpY2ggbGVhZHMgdG8gc2l0dWF0aW9ucyB3aGVyZSBwYXJzaW5nIHRoZSBhc3N1bWVkXHJcbiAgLy8gbmFtZWQgcmVmZXJlbmNlIG9mIGAmbm90aXQ7YCB3aWxsIHJlc3VsdCBpbiB0aGUgc3RyaW5nIGDCrGl0O2AuXHJcbiAgLy8gV2hlbiB3ZSBlbmNvdW50ZXIgYSB0cmFpbGluZyBzZW1pY29sb24gYWZ0ZXIgcGFyc2luZywgYW5kIHRoZSBjaGFyYWN0ZXJcclxuICAvLyByZWZlcmVuY2UgdG8gZGVjb2RlIHdhcyBub3QgYSBzZW1pY29sb24gKGAmc2VtaTtgKSwgd2UgY2FuIGFzc3VtZSB0aGF0IHRoZVxyXG4gIC8vIG1hdGNoaW5nIHdhcyBub3QgY29tcGxldGUuXHJcbiAgaWYgKFxyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVHlwZVNjcmlwdCBpcyB3cm9uZyB0aGF0IGB0ZXh0Q29udGVudGAgb24gZWxlbWVudHMgY2FuXHJcbiAgICAvLyB5aWVsZCBgbnVsbGAuXHJcbiAgICBjaGFyYWN0ZXIuY2hhckNvZGVBdChjaGFyYWN0ZXIubGVuZ3RoIC0gMSkgPT09IDU5IC8qIGA7YCAqLyAmJlxyXG4gICAgdmFsdWUgIT09ICdzZW1pJ1xyXG4gICkge1xyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG5cclxuICAvLyBJZiB0aGUgZGVjb2RlZCBzdHJpbmcgaXMgZXF1YWwgdG8gdGhlIGlucHV0LCB0aGUgY2hhcmFjdGVyIHJlZmVyZW5jZSB3YXNcclxuICAvLyBub3QgdmFsaWQuXHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVHlwZVNjcmlwdCBpcyB3cm9uZyB0aGF0IGB0ZXh0Q29udGVudGAgb24gZWxlbWVudHMgY2FuXHJcbiAgLy8geWllbGQgYG51bGxgLlxyXG4gIHJldHVybiBjaGFyYWN0ZXIgPT09IGNoYXJhY3RlclJlZmVyZW5jZSA/IGZhbHNlIDogY2hhcmFjdGVyXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/decode-named-character-reference/index.dom.js\n"));

/***/ }),

/***/ "./node_modules/dequal/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/dequal/dist/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dequal\": function() { return /* binding */ dequal; }\n/* harmony export */ });\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nfunction find(iter, tar, key) {\r\n\tfor (key of iter.keys()) {\r\n\t\tif (dequal(key, tar)) return key;\r\n\t}\r\n}\r\n\r\nfunction dequal(foo, bar) {\r\n\tvar ctor, len, tmp;\r\n\tif (foo === bar) return true;\r\n\r\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\r\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\r\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\r\n\r\n\t\tif (ctor === Array) {\r\n\t\t\tif ((len=foo.length) === bar.length) {\r\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\r\n\t\t\t}\r\n\t\t\treturn len === -1;\r\n\t\t}\r\n\r\n\t\tif (ctor === Set) {\r\n\t\t\tif (foo.size !== bar.size) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (len of foo) {\r\n\t\t\t\ttmp = len;\r\n\t\t\t\tif (tmp && typeof tmp === 'object') {\r\n\t\t\t\t\ttmp = find(bar, tmp);\r\n\t\t\t\t\tif (!tmp) return false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!bar.has(tmp)) return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (ctor === Map) {\r\n\t\t\tif (foo.size !== bar.size) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (len of foo) {\r\n\t\t\t\ttmp = len[0];\r\n\t\t\t\tif (tmp && typeof tmp === 'object') {\r\n\t\t\t\t\ttmp = find(bar, tmp);\r\n\t\t\t\t\tif (!tmp) return false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (ctor === ArrayBuffer) {\r\n\t\t\tfoo = new Uint8Array(foo);\r\n\t\t\tbar = new Uint8Array(bar);\r\n\t\t} else if (ctor === DataView) {\r\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\r\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\r\n\t\t\t}\r\n\t\t\treturn len === -1;\r\n\t\t}\r\n\r\n\t\tif (ArrayBuffer.isView(foo)) {\r\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\r\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\r\n\t\t\t}\r\n\t\t\treturn len === -1;\r\n\t\t}\r\n\r\n\t\tif (!ctor || typeof foo === 'object') {\r\n\t\t\tlen = 0;\r\n\t\t\tfor (ctor in foo) {\r\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\r\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\r\n\t\t\t}\r\n\t\t\treturn Object.keys(bar).length === len;\r\n\t\t}\r\n\t}\r\n\r\n\treturn foo !== foo && bar !== bar;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVxdWFsL2Rpc3QvaW5kZXgubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZGVxdWFsL2Rpc3QvaW5kZXgubWpzPzYyZGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcblxyXG5mdW5jdGlvbiBmaW5kKGl0ZXIsIHRhciwga2V5KSB7XHJcblx0Zm9yIChrZXkgb2YgaXRlci5rZXlzKCkpIHtcclxuXHRcdGlmIChkZXF1YWwoa2V5LCB0YXIpKSByZXR1cm4ga2V5O1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRlcXVhbChmb28sIGJhcikge1xyXG5cdHZhciBjdG9yLCBsZW4sIHRtcDtcclxuXHRpZiAoZm9vID09PSBiYXIpIHJldHVybiB0cnVlO1xyXG5cclxuXHRpZiAoZm9vICYmIGJhciAmJiAoY3Rvcj1mb28uY29uc3RydWN0b3IpID09PSBiYXIuY29uc3RydWN0b3IpIHtcclxuXHRcdGlmIChjdG9yID09PSBEYXRlKSByZXR1cm4gZm9vLmdldFRpbWUoKSA9PT0gYmFyLmdldFRpbWUoKTtcclxuXHRcdGlmIChjdG9yID09PSBSZWdFeHApIHJldHVybiBmb28udG9TdHJpbmcoKSA9PT0gYmFyLnRvU3RyaW5nKCk7XHJcblxyXG5cdFx0aWYgKGN0b3IgPT09IEFycmF5KSB7XHJcblx0XHRcdGlmICgobGVuPWZvby5sZW5ndGgpID09PSBiYXIubGVuZ3RoKSB7XHJcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGRlcXVhbChmb29bbGVuXSwgYmFyW2xlbl0pKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbGVuID09PSAtMTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoY3RvciA9PT0gU2V0KSB7XHJcblx0XHRcdGlmIChmb28uc2l6ZSAhPT0gYmFyLnNpemUpIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0Zm9yIChsZW4gb2YgZm9vKSB7XHJcblx0XHRcdFx0dG1wID0gbGVuO1xyXG5cdFx0XHRcdGlmICh0bXAgJiYgdHlwZW9mIHRtcCA9PT0gJ29iamVjdCcpIHtcclxuXHRcdFx0XHRcdHRtcCA9IGZpbmQoYmFyLCB0bXApO1xyXG5cdFx0XHRcdFx0aWYgKCF0bXApIHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKCFiYXIuaGFzKHRtcCkpIHJldHVybiBmYWxzZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoY3RvciA9PT0gTWFwKSB7XHJcblx0XHRcdGlmIChmb28uc2l6ZSAhPT0gYmFyLnNpemUpIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0Zm9yIChsZW4gb2YgZm9vKSB7XHJcblx0XHRcdFx0dG1wID0gbGVuWzBdO1xyXG5cdFx0XHRcdGlmICh0bXAgJiYgdHlwZW9mIHRtcCA9PT0gJ29iamVjdCcpIHtcclxuXHRcdFx0XHRcdHRtcCA9IGZpbmQoYmFyLCB0bXApO1xyXG5cdFx0XHRcdFx0aWYgKCF0bXApIHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKCFkZXF1YWwobGVuWzFdLCBiYXIuZ2V0KHRtcCkpKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChjdG9yID09PSBBcnJheUJ1ZmZlcikge1xyXG5cdFx0XHRmb28gPSBuZXcgVWludDhBcnJheShmb28pO1xyXG5cdFx0XHRiYXIgPSBuZXcgVWludDhBcnJheShiYXIpO1xyXG5cdFx0fSBlbHNlIGlmIChjdG9yID09PSBEYXRhVmlldykge1xyXG5cdFx0XHRpZiAoKGxlbj1mb28uYnl0ZUxlbmd0aCkgPT09IGJhci5ieXRlTGVuZ3RoKSB7XHJcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGZvby5nZXRJbnQ4KGxlbikgPT09IGJhci5nZXRJbnQ4KGxlbikpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBsZW4gPT09IC0xO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoZm9vKSkge1xyXG5cdFx0XHRpZiAoKGxlbj1mb28uYnl0ZUxlbmd0aCkgPT09IGJhci5ieXRlTGVuZ3RoKSB7XHJcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGZvb1tsZW5dID09PSBiYXJbbGVuXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGxlbiA9PT0gLTE7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCFjdG9yIHx8IHR5cGVvZiBmb28gPT09ICdvYmplY3QnKSB7XHJcblx0XHRcdGxlbiA9IDA7XHJcblx0XHRcdGZvciAoY3RvciBpbiBmb28pIHtcclxuXHRcdFx0XHRpZiAoaGFzLmNhbGwoZm9vLCBjdG9yKSAmJiArK2xlbiAmJiAhaGFzLmNhbGwoYmFyLCBjdG9yKSkgcmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdGlmICghKGN0b3IgaW4gYmFyKSB8fCAhZGVxdWFsKGZvb1tjdG9yXSwgYmFyW2N0b3JdKSkgcmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBPYmplY3Qua2V5cyhiYXIpLmxlbmd0aCA9PT0gbGVuO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGZvbyAhPT0gZm9vICYmIGJhciAhPT0gYmFyO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dequal/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/diff/lib/index.mjs":
/*!*****************************************!*\
  !*** ./node_modules/diff/lib/index.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Diff\": function() { return /* binding */ Diff; },\n/* harmony export */   \"applyPatch\": function() { return /* binding */ applyPatch; },\n/* harmony export */   \"applyPatches\": function() { return /* binding */ applyPatches; },\n/* harmony export */   \"canonicalize\": function() { return /* binding */ canonicalize; },\n/* harmony export */   \"convertChangesToDMP\": function() { return /* binding */ convertChangesToDMP; },\n/* harmony export */   \"convertChangesToXML\": function() { return /* binding */ convertChangesToXML; },\n/* harmony export */   \"createPatch\": function() { return /* binding */ createPatch; },\n/* harmony export */   \"createTwoFilesPatch\": function() { return /* binding */ createTwoFilesPatch; },\n/* harmony export */   \"diffArrays\": function() { return /* binding */ diffArrays; },\n/* harmony export */   \"diffChars\": function() { return /* binding */ diffChars; },\n/* harmony export */   \"diffCss\": function() { return /* binding */ diffCss; },\n/* harmony export */   \"diffJson\": function() { return /* binding */ diffJson; },\n/* harmony export */   \"diffLines\": function() { return /* binding */ diffLines; },\n/* harmony export */   \"diffSentences\": function() { return /* binding */ diffSentences; },\n/* harmony export */   \"diffTrimmedLines\": function() { return /* binding */ diffTrimmedLines; },\n/* harmony export */   \"diffWords\": function() { return /* binding */ diffWords; },\n/* harmony export */   \"diffWordsWithSpace\": function() { return /* binding */ diffWordsWithSpace; },\n/* harmony export */   \"formatPatch\": function() { return /* binding */ formatPatch; },\n/* harmony export */   \"merge\": function() { return /* binding */ merge; },\n/* harmony export */   \"parsePatch\": function() { return /* binding */ parsePatch; },\n/* harmony export */   \"reversePatch\": function() { return /* binding */ reversePatch; },\n/* harmony export */   \"structuredPatch\": function() { return /* binding */ structuredPatch; }\n/* harmony export */ });\nfunction Diff() {}\r\nDiff.prototype = {\r\n  diff: function diff(oldString, newString) {\r\n    var _options$timeout;\r\n\r\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n    var callback = options.callback;\r\n\r\n    if (typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n\r\n    this.options = options;\r\n    var self = this;\r\n\r\n    function done(value) {\r\n      if (callback) {\r\n        setTimeout(function () {\r\n          callback(undefined, value);\r\n        }, 0);\r\n        return true;\r\n      } else {\r\n        return value;\r\n      }\r\n    } // Allow subclasses to massage the input prior to running\r\n\r\n\r\n    oldString = this.castInput(oldString);\r\n    newString = this.castInput(newString);\r\n    oldString = this.removeEmpty(this.tokenize(oldString));\r\n    newString = this.removeEmpty(this.tokenize(newString));\r\n    var newLen = newString.length,\r\n        oldLen = oldString.length;\r\n    var editLength = 1;\r\n    var maxEditLength = newLen + oldLen;\r\n\r\n    if (options.maxEditLength) {\r\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\r\n    }\r\n\r\n    var maxExecutionTime = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;\r\n    var abortAfterTimestamp = Date.now() + maxExecutionTime;\r\n    var bestPath = [{\r\n      oldPos: -1,\r\n      lastComponent: undefined\r\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\r\n\r\n    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\r\n\r\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\r\n      // Identity per the equality and tokenizer\r\n      return done([{\r\n        value: this.join(newString),\r\n        count: newString.length\r\n      }]);\r\n    } // Once we hit the right edge of the edit graph on some diagonal k, we can\r\n    // definitely reach the end of the edit graph in no more than k edits, so\r\n    // there's no point in considering any moves to diagonal k+1 any more (from\r\n    // which we're guaranteed to need at least k+1 more edits).\r\n    // Similarly, once we've reached the bottom of the edit graph, there's no\r\n    // point considering moves to lower diagonals.\r\n    // We record this fact by setting minDiagonalToConsider and\r\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\r\n    // the edit graph.\r\n    // This optimization is not faithful to the original algorithm presented in\r\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\r\n    // the edit graph - see page 7 of Myers's paper which notes this point\r\n    // explicitly and illustrates it with a diagram. This has major performance\r\n    // implications for some common scenarios. For instance, to compute a diff\r\n    // where the new text simply appends d characters on the end of the\r\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\r\n    // time while this optimization needs only O(n+d) time.\r\n\r\n\r\n    var minDiagonalToConsider = -Infinity,\r\n        maxDiagonalToConsider = Infinity; // Main worker method. checks all permutations of a given edit length for acceptance.\r\n\r\n    function execEditLength() {\r\n      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\r\n        var basePath = void 0;\r\n        var removePath = bestPath[diagonalPath - 1],\r\n            addPath = bestPath[diagonalPath + 1];\r\n\r\n        if (removePath) {\r\n          // No one else is going to attempt to use this value, clear it\r\n          bestPath[diagonalPath - 1] = undefined;\r\n        }\r\n\r\n        var canAdd = false;\r\n\r\n        if (addPath) {\r\n          // what newPos will be after we do an insertion:\r\n          var addPathNewPos = addPath.oldPos - diagonalPath;\r\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\r\n        }\r\n\r\n        var canRemove = removePath && removePath.oldPos + 1 < oldLen;\r\n\r\n        if (!canAdd && !canRemove) {\r\n          // If this path is a terminal then prune\r\n          bestPath[diagonalPath] = undefined;\r\n          continue;\r\n        } // Select the diagonal that we want to branch from. We select the prior\r\n        // path whose position in the old string is the farthest from the origin\r\n        // and does not pass the bounds of the diff graph\r\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\r\n        //       and prefer to order removals before insertions.\r\n\r\n\r\n        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {\r\n          basePath = self.addToPath(addPath, true, undefined, 0);\r\n        } else {\r\n          basePath = self.addToPath(removePath, undefined, true, 1);\r\n        }\r\n\r\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\r\n\r\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\r\n          // If we have hit the end of both strings, then we are done\r\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\r\n        } else {\r\n          bestPath[diagonalPath] = basePath;\r\n\r\n          if (basePath.oldPos + 1 >= oldLen) {\r\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\r\n          }\r\n\r\n          if (newPos + 1 >= newLen) {\r\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      editLength++;\r\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\r\n    // sync and async mode which is never fun. Loops over execEditLength until a value\r\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\r\n    // in which case it will return undefined.\r\n\r\n\r\n    if (callback) {\r\n      (function exec() {\r\n        setTimeout(function () {\r\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\r\n            return callback();\r\n          }\r\n\r\n          if (!execEditLength()) {\r\n            exec();\r\n          }\r\n        }, 0);\r\n      })();\r\n    } else {\r\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\r\n        var ret = execEditLength();\r\n\r\n        if (ret) {\r\n          return ret;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  addToPath: function addToPath(path, added, removed, oldPosInc) {\r\n    var last = path.lastComponent;\r\n\r\n    if (last && last.added === added && last.removed === removed) {\r\n      return {\r\n        oldPos: path.oldPos + oldPosInc,\r\n        lastComponent: {\r\n          count: last.count + 1,\r\n          added: added,\r\n          removed: removed,\r\n          previousComponent: last.previousComponent\r\n        }\r\n      };\r\n    } else {\r\n      return {\r\n        oldPos: path.oldPos + oldPosInc,\r\n        lastComponent: {\r\n          count: 1,\r\n          added: added,\r\n          removed: removed,\r\n          previousComponent: last\r\n        }\r\n      };\r\n    }\r\n  },\r\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\r\n    var newLen = newString.length,\r\n        oldLen = oldString.length,\r\n        oldPos = basePath.oldPos,\r\n        newPos = oldPos - diagonalPath,\r\n        commonCount = 0;\r\n\r\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\r\n      newPos++;\r\n      oldPos++;\r\n      commonCount++;\r\n    }\r\n\r\n    if (commonCount) {\r\n      basePath.lastComponent = {\r\n        count: commonCount,\r\n        previousComponent: basePath.lastComponent\r\n      };\r\n    }\r\n\r\n    basePath.oldPos = oldPos;\r\n    return newPos;\r\n  },\r\n  equals: function equals(left, right) {\r\n    if (this.options.comparator) {\r\n      return this.options.comparator(left, right);\r\n    } else {\r\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\r\n    }\r\n  },\r\n  removeEmpty: function removeEmpty(array) {\r\n    var ret = [];\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n      if (array[i]) {\r\n        ret.push(array[i]);\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  castInput: function castInput(value) {\r\n    return value;\r\n  },\r\n  tokenize: function tokenize(value) {\r\n    return value.split('');\r\n  },\r\n  join: function join(chars) {\r\n    return chars.join('');\r\n  }\r\n};\r\n\r\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\r\n  // First we convert our linked list of components in reverse order to an\r\n  // array in the right order:\r\n  var components = [];\r\n  var nextComponent;\r\n\r\n  while (lastComponent) {\r\n    components.push(lastComponent);\r\n    nextComponent = lastComponent.previousComponent;\r\n    delete lastComponent.previousComponent;\r\n    lastComponent = nextComponent;\r\n  }\r\n\r\n  components.reverse();\r\n  var componentPos = 0,\r\n      componentLen = components.length,\r\n      newPos = 0,\r\n      oldPos = 0;\r\n\r\n  for (; componentPos < componentLen; componentPos++) {\r\n    var component = components[componentPos];\r\n\r\n    if (!component.removed) {\r\n      if (!component.added && useLongestToken) {\r\n        var value = newString.slice(newPos, newPos + component.count);\r\n        value = value.map(function (value, i) {\r\n          var oldValue = oldString[oldPos + i];\r\n          return oldValue.length > value.length ? oldValue : value;\r\n        });\r\n        component.value = diff.join(value);\r\n      } else {\r\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\r\n      }\r\n\r\n      newPos += component.count; // Common case\r\n\r\n      if (!component.added) {\r\n        oldPos += component.count;\r\n      }\r\n    } else {\r\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\r\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\r\n      // The diffing algorithm is tied to add then remove output and this is the simplest\r\n      // route to get the desired output with minimal overhead.\r\n\r\n      if (componentPos && components[componentPos - 1].added) {\r\n        var tmp = components[componentPos - 1];\r\n        components[componentPos - 1] = components[componentPos];\r\n        components[componentPos] = tmp;\r\n      }\r\n    }\r\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\r\n  // For this case we merge the terminal into the prior string and drop the change.\r\n  // This is only available for string mode.\r\n\r\n\r\n  var finalComponent = components[componentLen - 1];\r\n\r\n  if (componentLen > 1 && typeof finalComponent.value === 'string' && (finalComponent.added || finalComponent.removed) && diff.equals('', finalComponent.value)) {\r\n    components[componentLen - 2].value += finalComponent.value;\r\n    components.pop();\r\n  }\r\n\r\n  return components;\r\n}\r\n\r\nvar characterDiff = new Diff();\r\nfunction diffChars(oldStr, newStr, options) {\r\n  return characterDiff.diff(oldStr, newStr, options);\r\n}\r\n\r\nfunction generateOptions(options, defaults) {\r\n  if (typeof options === 'function') {\r\n    defaults.callback = options;\r\n  } else if (options) {\r\n    for (var name in options) {\r\n      /* istanbul ignore else */\r\n      if (options.hasOwnProperty(name)) {\r\n        defaults[name] = options[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  return defaults;\r\n}\r\n\r\n//\r\n// Ranges and exceptions:\r\n// Latin-1 Supplement, 0080–00FF\r\n//  - U+00D7  × Multiplication sign\r\n//  - U+00F7  ÷ Division sign\r\n// Latin Extended-A, 0100–017F\r\n// Latin Extended-B, 0180–024F\r\n// IPA Extensions, 0250–02AF\r\n// Spacing Modifier Letters, 02B0–02FF\r\n//  - U+02C7  ˇ &#711;  Caron\r\n//  - U+02D8  ˘ &#728;  Breve\r\n//  - U+02D9  ˙ &#729;  Dot Above\r\n//  - U+02DA  ˚ &#730;  Ring Above\r\n//  - U+02DB  ˛ &#731;  Ogonek\r\n//  - U+02DC  ˜ &#732;  Small Tilde\r\n//  - U+02DD  ˝ &#733;  Double Acute Accent\r\n// Latin Extended Additional, 1E00–1EFF\r\n\r\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\r\nvar reWhitespace = /\\S/;\r\nvar wordDiff = new Diff();\r\n\r\nwordDiff.equals = function (left, right) {\r\n  if (this.options.ignoreCase) {\r\n    left = left.toLowerCase();\r\n    right = right.toLowerCase();\r\n  }\r\n\r\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\r\n};\r\n\r\nwordDiff.tokenize = function (value) {\r\n  // All whitespace symbols except newline group into one token, each newline - in separate token\r\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\r\n\r\n  for (var i = 0; i < tokens.length - 1; i++) {\r\n    // If we have an empty string in the next field and we have only word chars before and after, merge\r\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\r\n      tokens[i] += tokens[i + 2];\r\n      tokens.splice(i + 1, 2);\r\n      i--;\r\n    }\r\n  }\r\n\r\n  return tokens;\r\n};\r\n\r\nfunction diffWords(oldStr, newStr, options) {\r\n  options = generateOptions(options, {\r\n    ignoreWhitespace: true\r\n  });\r\n  return wordDiff.diff(oldStr, newStr, options);\r\n}\r\nfunction diffWordsWithSpace(oldStr, newStr, options) {\r\n  return wordDiff.diff(oldStr, newStr, options);\r\n}\r\n\r\nvar lineDiff = new Diff();\r\n\r\nlineDiff.tokenize = function (value) {\r\n  if (this.options.stripTrailingCr) {\r\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\r\n    value = value.replace(/\\r\\n/g, '\\n');\r\n  }\r\n\r\n  var retLines = [],\r\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\r\n\r\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\r\n    linesAndNewlines.pop();\r\n  } // Merge the content and line separators into single tokens\r\n\r\n\r\n  for (var i = 0; i < linesAndNewlines.length; i++) {\r\n    var line = linesAndNewlines[i];\r\n\r\n    if (i % 2 && !this.options.newlineIsToken) {\r\n      retLines[retLines.length - 1] += line;\r\n    } else {\r\n      if (this.options.ignoreWhitespace) {\r\n        line = line.trim();\r\n      }\r\n\r\n      retLines.push(line);\r\n    }\r\n  }\r\n\r\n  return retLines;\r\n};\r\n\r\nfunction diffLines(oldStr, newStr, callback) {\r\n  return lineDiff.diff(oldStr, newStr, callback);\r\n}\r\nfunction diffTrimmedLines(oldStr, newStr, callback) {\r\n  var options = generateOptions(callback, {\r\n    ignoreWhitespace: true\r\n  });\r\n  return lineDiff.diff(oldStr, newStr, options);\r\n}\r\n\r\nvar sentenceDiff = new Diff();\r\n\r\nsentenceDiff.tokenize = function (value) {\r\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\r\n};\r\n\r\nfunction diffSentences(oldStr, newStr, callback) {\r\n  return sentenceDiff.diff(oldStr, newStr, callback);\r\n}\r\n\r\nvar cssDiff = new Diff();\r\n\r\ncssDiff.tokenize = function (value) {\r\n  return value.split(/([{}:;,]|\\s+)/);\r\n};\r\n\r\nfunction diffCss(oldStr, newStr, callback) {\r\n  return cssDiff.diff(oldStr, newStr, callback);\r\n}\r\n\r\nfunction _typeof(obj) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n    _typeof = function (obj) {\r\n      return typeof obj;\r\n    };\r\n  } else {\r\n    _typeof = function (obj) {\r\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n  }\r\n\r\n  return _typeof(obj);\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\r\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n    });\r\n    keys.push.apply(keys, symbols);\r\n  }\r\n\r\n  return keys;\r\n}\r\n\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i] != null ? arguments[i] : {};\r\n\r\n    if (i % 2) {\r\n      ownKeys(Object(source), true).forEach(function (key) {\r\n        _defineProperty(target, key, source[key]);\r\n      });\r\n    } else if (Object.getOwnPropertyDescriptors) {\r\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\r\n    } else {\r\n      ownKeys(Object(source)).forEach(function (key) {\r\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n      });\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n  return arr2;\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nvar objectPrototypeToString = Object.prototype.toString;\r\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\r\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\r\n\r\njsonDiff.useLongestToken = true;\r\njsonDiff.tokenize = lineDiff.tokenize;\r\n\r\njsonDiff.castInput = function (value) {\r\n  var _this$options = this.options,\r\n      undefinedReplacement = _this$options.undefinedReplacement,\r\n      _this$options$stringi = _this$options.stringifyReplacer,\r\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\r\n    return typeof v === 'undefined' ? undefinedReplacement : v;\r\n  } : _this$options$stringi;\r\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\r\n};\r\n\r\njsonDiff.equals = function (left, right) {\r\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\r\n};\r\n\r\nfunction diffJson(oldObj, newObj, options) {\r\n  return jsonDiff.diff(oldObj, newObj, options);\r\n} // This function handles the presence of circular references by bailing out when encountering an\r\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\r\n\r\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\r\n  stack = stack || [];\r\n  replacementStack = replacementStack || [];\r\n\r\n  if (replacer) {\r\n    obj = replacer(key, obj);\r\n  }\r\n\r\n  var i;\r\n\r\n  for (i = 0; i < stack.length; i += 1) {\r\n    if (stack[i] === obj) {\r\n      return replacementStack[i];\r\n    }\r\n  }\r\n\r\n  var canonicalizedObj;\r\n\r\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\r\n    stack.push(obj);\r\n    canonicalizedObj = new Array(obj.length);\r\n    replacementStack.push(canonicalizedObj);\r\n\r\n    for (i = 0; i < obj.length; i += 1) {\r\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\r\n    }\r\n\r\n    stack.pop();\r\n    replacementStack.pop();\r\n    return canonicalizedObj;\r\n  }\r\n\r\n  if (obj && obj.toJSON) {\r\n    obj = obj.toJSON();\r\n  }\r\n\r\n  if (_typeof(obj) === 'object' && obj !== null) {\r\n    stack.push(obj);\r\n    canonicalizedObj = {};\r\n    replacementStack.push(canonicalizedObj);\r\n\r\n    var sortedKeys = [],\r\n        _key;\r\n\r\n    for (_key in obj) {\r\n      /* istanbul ignore else */\r\n      if (obj.hasOwnProperty(_key)) {\r\n        sortedKeys.push(_key);\r\n      }\r\n    }\r\n\r\n    sortedKeys.sort();\r\n\r\n    for (i = 0; i < sortedKeys.length; i += 1) {\r\n      _key = sortedKeys[i];\r\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\r\n    }\r\n\r\n    stack.pop();\r\n    replacementStack.pop();\r\n  } else {\r\n    canonicalizedObj = obj;\r\n  }\r\n\r\n  return canonicalizedObj;\r\n}\r\n\r\nvar arrayDiff = new Diff();\r\n\r\narrayDiff.tokenize = function (value) {\r\n  return value.slice();\r\n};\r\n\r\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\r\n  return value;\r\n};\r\n\r\nfunction diffArrays(oldArr, newArr, callback) {\r\n  return arrayDiff.diff(oldArr, newArr, callback);\r\n}\r\n\r\nfunction parsePatch(uniDiff) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\r\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\r\n      list = [],\r\n      i = 0;\r\n\r\n  function parseIndex() {\r\n    var index = {};\r\n    list.push(index); // Parse diff metadata\r\n\r\n    while (i < diffstr.length) {\r\n      var line = diffstr[i]; // File header found, end parsing diff metadata\r\n\r\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\r\n        break;\r\n      } // Diff index\r\n\r\n\r\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\r\n\r\n      if (header) {\r\n        index.index = header[1];\r\n      }\r\n\r\n      i++;\r\n    } // Parse file headers if they are defined. Unified diff requires them, but\r\n    // there's no technical issues to have an isolated hunk without file header\r\n\r\n\r\n    parseFileHeader(index);\r\n    parseFileHeader(index); // Parse hunks\r\n\r\n    index.hunks = [];\r\n\r\n    while (i < diffstr.length) {\r\n      var _line = diffstr[i];\r\n\r\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\r\n        break;\r\n      } else if (/^@@/.test(_line)) {\r\n        index.hunks.push(parseHunk());\r\n      } else if (_line && options.strict) {\r\n        // Ignore unexpected content unless in strict mode\r\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n  } // Parses the --- and +++ headers, if none are found, no lines\r\n  // are consumed.\r\n\r\n\r\n  function parseFileHeader(index) {\r\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\r\n\r\n    if (fileHeader) {\r\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\r\n      var data = fileHeader[2].split('\\t', 2);\r\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\r\n\r\n      if (/^\".*\"$/.test(fileName)) {\r\n        fileName = fileName.substr(1, fileName.length - 2);\r\n      }\r\n\r\n      index[keyPrefix + 'FileName'] = fileName;\r\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\r\n      i++;\r\n    }\r\n  } // Parses a hunk\r\n  // This assumes that we are at the start of a hunk.\r\n\r\n\r\n  function parseHunk() {\r\n    var chunkHeaderIndex = i,\r\n        chunkHeaderLine = diffstr[i++],\r\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\r\n    var hunk = {\r\n      oldStart: +chunkHeader[1],\r\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\r\n      newStart: +chunkHeader[3],\r\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\r\n      lines: [],\r\n      linedelimiters: []\r\n    }; // Unified Diff Format quirk: If the chunk size is 0,\r\n    // the first number is one lower than one would expect.\r\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\r\n\r\n    if (hunk.oldLines === 0) {\r\n      hunk.oldStart += 1;\r\n    }\r\n\r\n    if (hunk.newLines === 0) {\r\n      hunk.newStart += 1;\r\n    }\r\n\r\n    var addCount = 0,\r\n        removeCount = 0;\r\n\r\n    for (; i < diffstr.length; i++) {\r\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\r\n      // But they could be the header for the next file. Therefore prune such cases out.\r\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\r\n        break;\r\n      }\r\n\r\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\r\n\r\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\r\n        hunk.lines.push(diffstr[i]);\r\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\r\n\r\n        if (operation === '+') {\r\n          addCount++;\r\n        } else if (operation === '-') {\r\n          removeCount++;\r\n        } else if (operation === ' ') {\r\n          addCount++;\r\n          removeCount++;\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    } // Handle the empty block count case\r\n\r\n\r\n    if (!addCount && hunk.newLines === 1) {\r\n      hunk.newLines = 0;\r\n    }\r\n\r\n    if (!removeCount && hunk.oldLines === 1) {\r\n      hunk.oldLines = 0;\r\n    } // Perform optional sanity checking\r\n\r\n\r\n    if (options.strict) {\r\n      if (addCount !== hunk.newLines) {\r\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\r\n      }\r\n\r\n      if (removeCount !== hunk.oldLines) {\r\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\r\n      }\r\n    }\r\n\r\n    return hunk;\r\n  }\r\n\r\n  while (i < diffstr.length) {\r\n    parseIndex();\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\n// Iterator that traverses in the range of [min, max], stepping\r\n// by distance from a given start position. I.e. for [0, 4], with\r\n// start of 2, this will iterate 2, 3, 1, 4, 0.\r\nfunction distanceIterator (start, minLine, maxLine) {\r\n  var wantForward = true,\r\n      backwardExhausted = false,\r\n      forwardExhausted = false,\r\n      localOffset = 1;\r\n  return function iterator() {\r\n    if (wantForward && !forwardExhausted) {\r\n      if (backwardExhausted) {\r\n        localOffset++;\r\n      } else {\r\n        wantForward = false;\r\n      } // Check if trying to fit beyond text length, and if not, check it fits\r\n      // after offset location (or desired location on first iteration)\r\n\r\n\r\n      if (start + localOffset <= maxLine) {\r\n        return localOffset;\r\n      }\r\n\r\n      forwardExhausted = true;\r\n    }\r\n\r\n    if (!backwardExhausted) {\r\n      if (!forwardExhausted) {\r\n        wantForward = true;\r\n      } // Check if trying to fit before text beginning, and if not, check it fits\r\n      // before offset location\r\n\r\n\r\n      if (minLine <= start - localOffset) {\r\n        return -localOffset++;\r\n      }\r\n\r\n      backwardExhausted = true;\r\n      return iterator();\r\n    } // We tried to fit hunk before text beginning and beyond text length, then\r\n    // hunk can't fit on the text. Return undefined\r\n\r\n  };\r\n}\r\n\r\nfunction applyPatch(source, uniDiff) {\r\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n  if (typeof uniDiff === 'string') {\r\n    uniDiff = parsePatch(uniDiff);\r\n  }\r\n\r\n  if (Array.isArray(uniDiff)) {\r\n    if (uniDiff.length > 1) {\r\n      throw new Error('applyPatch only works with a single input.');\r\n    }\r\n\r\n    uniDiff = uniDiff[0];\r\n  } // Apply the diff to the input\r\n\r\n\r\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\r\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\r\n      hunks = uniDiff.hunks,\r\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\r\n    return line === patchContent;\r\n  },\r\n      errorCount = 0,\r\n      fuzzFactor = options.fuzzFactor || 0,\r\n      minLine = 0,\r\n      offset = 0,\r\n      removeEOFNL,\r\n      addEOFNL;\r\n  /**\r\n   * Checks if the hunk exactly fits on the provided location\r\n   */\r\n\r\n\r\n  function hunkFits(hunk, toPos) {\r\n    for (var j = 0; j < hunk.lines.length; j++) {\r\n      var line = hunk.lines[j],\r\n          operation = line.length > 0 ? line[0] : ' ',\r\n          content = line.length > 0 ? line.substr(1) : line;\r\n\r\n      if (operation === ' ' || operation === '-') {\r\n        // Context sanity check\r\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\r\n          errorCount++;\r\n\r\n          if (errorCount > fuzzFactor) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        toPos++;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } // Search best fit offsets for each hunk based on the previous ones\r\n\r\n\r\n  for (var i = 0; i < hunks.length; i++) {\r\n    var hunk = hunks[i],\r\n        maxLine = lines.length - hunk.oldLines,\r\n        localOffset = 0,\r\n        toPos = offset + hunk.oldStart - 1;\r\n    var iterator = distanceIterator(toPos, minLine, maxLine);\r\n\r\n    for (; localOffset !== undefined; localOffset = iterator()) {\r\n      if (hunkFits(hunk, toPos + localOffset)) {\r\n        hunk.offset = offset += localOffset;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (localOffset === undefined) {\r\n      return false;\r\n    } // Set lower text limit to end of the current hunk, so next ones don't try\r\n    // to fit over already patched text\r\n\r\n\r\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\r\n  } // Apply patch hunks\r\n\r\n\r\n  var diffOffset = 0;\r\n\r\n  for (var _i = 0; _i < hunks.length; _i++) {\r\n    var _hunk = hunks[_i],\r\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\r\n\r\n    diffOffset += _hunk.newLines - _hunk.oldLines;\r\n\r\n    for (var j = 0; j < _hunk.lines.length; j++) {\r\n      var line = _hunk.lines[j],\r\n          operation = line.length > 0 ? line[0] : ' ',\r\n          content = line.length > 0 ? line.substr(1) : line,\r\n          delimiter = _hunk.linedelimiters && _hunk.linedelimiters[j] || '\\n';\r\n\r\n      if (operation === ' ') {\r\n        _toPos++;\r\n      } else if (operation === '-') {\r\n        lines.splice(_toPos, 1);\r\n        delimiters.splice(_toPos, 1);\r\n        /* istanbul ignore else */\r\n      } else if (operation === '+') {\r\n        lines.splice(_toPos, 0, content);\r\n        delimiters.splice(_toPos, 0, delimiter);\r\n        _toPos++;\r\n      } else if (operation === '\\\\') {\r\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\r\n\r\n        if (previousOperation === '+') {\r\n          removeEOFNL = true;\r\n        } else if (previousOperation === '-') {\r\n          addEOFNL = true;\r\n        }\r\n      }\r\n    }\r\n  } // Handle EOFNL insertion/removal\r\n\r\n\r\n  if (removeEOFNL) {\r\n    while (!lines[lines.length - 1]) {\r\n      lines.pop();\r\n      delimiters.pop();\r\n    }\r\n  } else if (addEOFNL) {\r\n    lines.push('');\r\n    delimiters.push('\\n');\r\n  }\r\n\r\n  for (var _k = 0; _k < lines.length - 1; _k++) {\r\n    lines[_k] = lines[_k] + delimiters[_k];\r\n  }\r\n\r\n  return lines.join('');\r\n} // Wrapper that supports multiple file patches via callbacks.\r\n\r\nfunction applyPatches(uniDiff, options) {\r\n  if (typeof uniDiff === 'string') {\r\n    uniDiff = parsePatch(uniDiff);\r\n  }\r\n\r\n  var currentIndex = 0;\r\n\r\n  function processIndex() {\r\n    var index = uniDiff[currentIndex++];\r\n\r\n    if (!index) {\r\n      return options.complete();\r\n    }\r\n\r\n    options.loadFile(index, function (err, data) {\r\n      if (err) {\r\n        return options.complete(err);\r\n      }\r\n\r\n      var updatedContent = applyPatch(data, index, options);\r\n      options.patched(index, updatedContent, function (err) {\r\n        if (err) {\r\n          return options.complete(err);\r\n        }\r\n\r\n        processIndex();\r\n      });\r\n    });\r\n  }\r\n\r\n  processIndex();\r\n}\r\n\r\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\r\n  if (!options) {\r\n    options = {};\r\n  }\r\n\r\n  if (typeof options.context === 'undefined') {\r\n    options.context = 4;\r\n  }\r\n\r\n  var diff = diffLines(oldStr, newStr, options);\r\n\r\n  if (!diff) {\r\n    return;\r\n  }\r\n\r\n  diff.push({\r\n    value: '',\r\n    lines: []\r\n  }); // Append an empty value to make cleanup easier\r\n\r\n  function contextLines(lines) {\r\n    return lines.map(function (entry) {\r\n      return ' ' + entry;\r\n    });\r\n  }\r\n\r\n  var hunks = [];\r\n  var oldRangeStart = 0,\r\n      newRangeStart = 0,\r\n      curRange = [],\r\n      oldLine = 1,\r\n      newLine = 1;\r\n\r\n  var _loop = function _loop(i) {\r\n    var current = diff[i],\r\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\r\n    current.lines = lines;\r\n\r\n    if (current.added || current.removed) {\r\n      var _curRange;\r\n\r\n      // If we have previous context, start with that\r\n      if (!oldRangeStart) {\r\n        var prev = diff[i - 1];\r\n        oldRangeStart = oldLine;\r\n        newRangeStart = newLine;\r\n\r\n        if (prev) {\r\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\r\n          oldRangeStart -= curRange.length;\r\n          newRangeStart -= curRange.length;\r\n        }\r\n      } // Output our changes\r\n\r\n\r\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\r\n        return (current.added ? '+' : '-') + entry;\r\n      }))); // Track the updated file position\r\n\r\n\r\n      if (current.added) {\r\n        newLine += lines.length;\r\n      } else {\r\n        oldLine += lines.length;\r\n      }\r\n    } else {\r\n      // Identical context lines. Track line changes\r\n      if (oldRangeStart) {\r\n        // Close out any changes that have been output (or join overlapping)\r\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\r\n          var _curRange2;\r\n\r\n          // Overlapping\r\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\r\n        } else {\r\n          var _curRange3;\r\n\r\n          // end the range and output\r\n          var contextSize = Math.min(lines.length, options.context);\r\n\r\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\r\n\r\n          var hunk = {\r\n            oldStart: oldRangeStart,\r\n            oldLines: oldLine - oldRangeStart + contextSize,\r\n            newStart: newRangeStart,\r\n            newLines: newLine - newRangeStart + contextSize,\r\n            lines: curRange\r\n          };\r\n\r\n          if (i >= diff.length - 2 && lines.length <= options.context) {\r\n            // EOF is inside this hunk\r\n            var oldEOFNewline = /\\n$/.test(oldStr);\r\n            var newEOFNewline = /\\n$/.test(newStr);\r\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\r\n\r\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\r\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\r\n              // however, if the old file is empty, do not output the no-nl line\r\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\r\n            }\r\n\r\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\r\n              curRange.push('\\\\ No newline at end of file');\r\n            }\r\n          }\r\n\r\n          hunks.push(hunk);\r\n          oldRangeStart = 0;\r\n          newRangeStart = 0;\r\n          curRange = [];\r\n        }\r\n      }\r\n\r\n      oldLine += lines.length;\r\n      newLine += lines.length;\r\n    }\r\n  };\r\n\r\n  for (var i = 0; i < diff.length; i++) {\r\n    _loop(i);\r\n  }\r\n\r\n  return {\r\n    oldFileName: oldFileName,\r\n    newFileName: newFileName,\r\n    oldHeader: oldHeader,\r\n    newHeader: newHeader,\r\n    hunks: hunks\r\n  };\r\n}\r\nfunction formatPatch(diff) {\r\n  if (Array.isArray(diff)) {\r\n    return diff.map(formatPatch).join('\\n');\r\n  }\r\n\r\n  var ret = [];\r\n\r\n  if (diff.oldFileName == diff.newFileName) {\r\n    ret.push('Index: ' + diff.oldFileName);\r\n  }\r\n\r\n  ret.push('===================================================================');\r\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\r\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\r\n\r\n  for (var i = 0; i < diff.hunks.length; i++) {\r\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\r\n    // the first number is one lower than one would expect.\r\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\r\n\r\n    if (hunk.oldLines === 0) {\r\n      hunk.oldStart -= 1;\r\n    }\r\n\r\n    if (hunk.newLines === 0) {\r\n      hunk.newStart -= 1;\r\n    }\r\n\r\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\r\n    ret.push.apply(ret, hunk.lines);\r\n  }\r\n\r\n  return ret.join('\\n') + '\\n';\r\n}\r\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\r\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\r\n}\r\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\r\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\r\n}\r\n\r\nfunction arrayEqual(a, b) {\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n\r\n  return arrayStartsWith(a, b);\r\n}\r\nfunction arrayStartsWith(array, start) {\r\n  if (start.length > array.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < start.length; i++) {\r\n    if (start[i] !== array[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction calcLineCount(hunk) {\r\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\r\n      oldLines = _calcOldNewLineCount.oldLines,\r\n      newLines = _calcOldNewLineCount.newLines;\r\n\r\n  if (oldLines !== undefined) {\r\n    hunk.oldLines = oldLines;\r\n  } else {\r\n    delete hunk.oldLines;\r\n  }\r\n\r\n  if (newLines !== undefined) {\r\n    hunk.newLines = newLines;\r\n  } else {\r\n    delete hunk.newLines;\r\n  }\r\n}\r\nfunction merge(mine, theirs, base) {\r\n  mine = loadPatch(mine, base);\r\n  theirs = loadPatch(theirs, base);\r\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\r\n  // Leaving sanity checks on this to the API consumer that may know more about the\r\n  // meaning in their own context.\r\n\r\n  if (mine.index || theirs.index) {\r\n    ret.index = mine.index || theirs.index;\r\n  }\r\n\r\n  if (mine.newFileName || theirs.newFileName) {\r\n    if (!fileNameChanged(mine)) {\r\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\r\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\r\n      ret.newFileName = theirs.newFileName || mine.newFileName;\r\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\r\n      ret.newHeader = theirs.newHeader || mine.newHeader;\r\n    } else if (!fileNameChanged(theirs)) {\r\n      // No header or no change in theirs, use ours\r\n      ret.oldFileName = mine.oldFileName;\r\n      ret.newFileName = mine.newFileName;\r\n      ret.oldHeader = mine.oldHeader;\r\n      ret.newHeader = mine.newHeader;\r\n    } else {\r\n      // Both changed... figure it out\r\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\r\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\r\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\r\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\r\n    }\r\n  }\r\n\r\n  ret.hunks = [];\r\n  var mineIndex = 0,\r\n      theirsIndex = 0,\r\n      mineOffset = 0,\r\n      theirsOffset = 0;\r\n\r\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\r\n    var mineCurrent = mine.hunks[mineIndex] || {\r\n      oldStart: Infinity\r\n    },\r\n        theirsCurrent = theirs.hunks[theirsIndex] || {\r\n      oldStart: Infinity\r\n    };\r\n\r\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\r\n      // This patch does not overlap with any of the others, yay.\r\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\r\n      mineIndex++;\r\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\r\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\r\n      // This patch does not overlap with any of the others, yay.\r\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\r\n      theirsIndex++;\r\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\r\n    } else {\r\n      // Overlap, merge as best we can\r\n      var mergedHunk = {\r\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\r\n        oldLines: 0,\r\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\r\n        newLines: 0,\r\n        lines: []\r\n      };\r\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\r\n      theirsIndex++;\r\n      mineIndex++;\r\n      ret.hunks.push(mergedHunk);\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction loadPatch(param, base) {\r\n  if (typeof param === 'string') {\r\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\r\n      return parsePatch(param)[0];\r\n    }\r\n\r\n    if (!base) {\r\n      throw new Error('Must provide a base reference or pass in a patch');\r\n    }\r\n\r\n    return structuredPatch(undefined, undefined, base, param);\r\n  }\r\n\r\n  return param;\r\n}\r\n\r\nfunction fileNameChanged(patch) {\r\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\r\n}\r\n\r\nfunction selectField(index, mine, theirs) {\r\n  if (mine === theirs) {\r\n    return mine;\r\n  } else {\r\n    index.conflict = true;\r\n    return {\r\n      mine: mine,\r\n      theirs: theirs\r\n    };\r\n  }\r\n}\r\n\r\nfunction hunkBefore(test, check) {\r\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\r\n}\r\n\r\nfunction cloneHunk(hunk, offset) {\r\n  return {\r\n    oldStart: hunk.oldStart,\r\n    oldLines: hunk.oldLines,\r\n    newStart: hunk.newStart + offset,\r\n    newLines: hunk.newLines,\r\n    lines: hunk.lines\r\n  };\r\n}\r\n\r\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\r\n  // This will generally result in a conflicted hunk, but there are cases where the context\r\n  // is the only overlap where we can successfully merge the content here.\r\n  var mine = {\r\n    offset: mineOffset,\r\n    lines: mineLines,\r\n    index: 0\r\n  },\r\n      their = {\r\n    offset: theirOffset,\r\n    lines: theirLines,\r\n    index: 0\r\n  }; // Handle any leading content\r\n\r\n  insertLeading(hunk, mine, their);\r\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\r\n\r\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\r\n    var mineCurrent = mine.lines[mine.index],\r\n        theirCurrent = their.lines[their.index];\r\n\r\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\r\n      // Both modified ...\r\n      mutualChange(hunk, mine, their);\r\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\r\n      var _hunk$lines;\r\n\r\n      // Mine inserted\r\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\r\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\r\n      var _hunk$lines2;\r\n\r\n      // Theirs inserted\r\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\r\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\r\n      // Mine removed or edited\r\n      removal(hunk, mine, their);\r\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\r\n      // Their removed or edited\r\n      removal(hunk, their, mine, true);\r\n    } else if (mineCurrent === theirCurrent) {\r\n      // Context identity\r\n      hunk.lines.push(mineCurrent);\r\n      mine.index++;\r\n      their.index++;\r\n    } else {\r\n      // Context mismatch\r\n      conflict(hunk, collectChange(mine), collectChange(their));\r\n    }\r\n  } // Now push anything that may be remaining\r\n\r\n\r\n  insertTrailing(hunk, mine);\r\n  insertTrailing(hunk, their);\r\n  calcLineCount(hunk);\r\n}\r\n\r\nfunction mutualChange(hunk, mine, their) {\r\n  var myChanges = collectChange(mine),\r\n      theirChanges = collectChange(their);\r\n\r\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\r\n    // Special case for remove changes that are supersets of one another\r\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\r\n      var _hunk$lines3;\r\n\r\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\r\n\r\n      return;\r\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\r\n      var _hunk$lines4;\r\n\r\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\r\n\r\n      return;\r\n    }\r\n  } else if (arrayEqual(myChanges, theirChanges)) {\r\n    var _hunk$lines5;\r\n\r\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\r\n\r\n    return;\r\n  }\r\n\r\n  conflict(hunk, myChanges, theirChanges);\r\n}\r\n\r\nfunction removal(hunk, mine, their, swap) {\r\n  var myChanges = collectChange(mine),\r\n      theirChanges = collectContext(their, myChanges);\r\n\r\n  if (theirChanges.merged) {\r\n    var _hunk$lines6;\r\n\r\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\r\n  } else {\r\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\r\n  }\r\n}\r\n\r\nfunction conflict(hunk, mine, their) {\r\n  hunk.conflict = true;\r\n  hunk.lines.push({\r\n    conflict: true,\r\n    mine: mine,\r\n    theirs: their\r\n  });\r\n}\r\n\r\nfunction insertLeading(hunk, insert, their) {\r\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\r\n    var line = insert.lines[insert.index++];\r\n    hunk.lines.push(line);\r\n    insert.offset++;\r\n  }\r\n}\r\n\r\nfunction insertTrailing(hunk, insert) {\r\n  while (insert.index < insert.lines.length) {\r\n    var line = insert.lines[insert.index++];\r\n    hunk.lines.push(line);\r\n  }\r\n}\r\n\r\nfunction collectChange(state) {\r\n  var ret = [],\r\n      operation = state.lines[state.index][0];\r\n\r\n  while (state.index < state.lines.length) {\r\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\r\n\r\n    if (operation === '-' && line[0] === '+') {\r\n      operation = '+';\r\n    }\r\n\r\n    if (operation === line[0]) {\r\n      ret.push(line);\r\n      state.index++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction collectContext(state, matchChanges) {\r\n  var changes = [],\r\n      merged = [],\r\n      matchIndex = 0,\r\n      contextChanges = false,\r\n      conflicted = false;\r\n\r\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\r\n    var change = state.lines[state.index],\r\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\r\n\r\n    if (match[0] === '+') {\r\n      break;\r\n    }\r\n\r\n    contextChanges = contextChanges || change[0] !== ' ';\r\n    merged.push(match);\r\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\r\n    // to pull in the remaining context after this\r\n\r\n    if (change[0] === '+') {\r\n      conflicted = true;\r\n\r\n      while (change[0] === '+') {\r\n        changes.push(change);\r\n        change = state.lines[++state.index];\r\n      }\r\n    }\r\n\r\n    if (match.substr(1) === change.substr(1)) {\r\n      changes.push(change);\r\n      state.index++;\r\n    } else {\r\n      conflicted = true;\r\n    }\r\n  }\r\n\r\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\r\n    conflicted = true;\r\n  }\r\n\r\n  if (conflicted) {\r\n    return changes;\r\n  }\r\n\r\n  while (matchIndex < matchChanges.length) {\r\n    merged.push(matchChanges[matchIndex++]);\r\n  }\r\n\r\n  return {\r\n    merged: merged,\r\n    changes: changes\r\n  };\r\n}\r\n\r\nfunction allRemoves(changes) {\r\n  return changes.reduce(function (prev, change) {\r\n    return prev && change[0] === '-';\r\n  }, true);\r\n}\r\n\r\nfunction skipRemoveSuperset(state, removeChanges, delta) {\r\n  for (var i = 0; i < delta; i++) {\r\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\r\n\r\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  state.index += delta;\r\n  return true;\r\n}\r\n\r\nfunction calcOldNewLineCount(lines) {\r\n  var oldLines = 0;\r\n  var newLines = 0;\r\n  lines.forEach(function (line) {\r\n    if (typeof line !== 'string') {\r\n      var myCount = calcOldNewLineCount(line.mine);\r\n      var theirCount = calcOldNewLineCount(line.theirs);\r\n\r\n      if (oldLines !== undefined) {\r\n        if (myCount.oldLines === theirCount.oldLines) {\r\n          oldLines += myCount.oldLines;\r\n        } else {\r\n          oldLines = undefined;\r\n        }\r\n      }\r\n\r\n      if (newLines !== undefined) {\r\n        if (myCount.newLines === theirCount.newLines) {\r\n          newLines += myCount.newLines;\r\n        } else {\r\n          newLines = undefined;\r\n        }\r\n      }\r\n    } else {\r\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\r\n        newLines++;\r\n      }\r\n\r\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\r\n        oldLines++;\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    oldLines: oldLines,\r\n    newLines: newLines\r\n  };\r\n}\r\n\r\nfunction reversePatch(structuredPatch) {\r\n  if (Array.isArray(structuredPatch)) {\r\n    return structuredPatch.map(reversePatch).reverse();\r\n  }\r\n\r\n  return _objectSpread2(_objectSpread2({}, structuredPatch), {}, {\r\n    oldFileName: structuredPatch.newFileName,\r\n    oldHeader: structuredPatch.newHeader,\r\n    newFileName: structuredPatch.oldFileName,\r\n    newHeader: structuredPatch.oldHeader,\r\n    hunks: structuredPatch.hunks.map(function (hunk) {\r\n      return {\r\n        oldLines: hunk.newLines,\r\n        oldStart: hunk.newStart,\r\n        newLines: hunk.oldLines,\r\n        newStart: hunk.oldStart,\r\n        linedelimiters: hunk.linedelimiters,\r\n        lines: hunk.lines.map(function (l) {\r\n          if (l.startsWith('-')) {\r\n            return \"+\".concat(l.slice(1));\r\n          }\r\n\r\n          if (l.startsWith('+')) {\r\n            return \"-\".concat(l.slice(1));\r\n          }\r\n\r\n          return l;\r\n        })\r\n      };\r\n    })\r\n  });\r\n}\r\n\r\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\r\nfunction convertChangesToDMP(changes) {\r\n  var ret = [],\r\n      change,\r\n      operation;\r\n\r\n  for (var i = 0; i < changes.length; i++) {\r\n    change = changes[i];\r\n\r\n    if (change.added) {\r\n      operation = 1;\r\n    } else if (change.removed) {\r\n      operation = -1;\r\n    } else {\r\n      operation = 0;\r\n    }\r\n\r\n    ret.push([operation, change.value]);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction convertChangesToXML(changes) {\r\n  var ret = [];\r\n\r\n  for (var i = 0; i < changes.length; i++) {\r\n    var change = changes[i];\r\n\r\n    if (change.added) {\r\n      ret.push('<ins>');\r\n    } else if (change.removed) {\r\n      ret.push('<del>');\r\n    }\r\n\r\n    ret.push(escapeHTML(change.value));\r\n\r\n    if (change.added) {\r\n      ret.push('</ins>');\r\n    } else if (change.removed) {\r\n      ret.push('</del>');\r\n    }\r\n  }\r\n\r\n  return ret.join('');\r\n}\r\n\r\nfunction escapeHTML(s) {\r\n  var n = s;\r\n  n = n.replace(/&/g, '&amp;');\r\n  n = n.replace(/</g, '&lt;');\r\n  n = n.replace(/>/g, '&gt;');\r\n  n = n.replace(/\"/g, '&quot;');\r\n  return n;\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/diff/lib/index.mjs\n"));

/***/ }),

/***/ "./node_modules/escape-string-regexp/index.js":
/*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ escapeStringRegexp; }\n/* harmony export */ });\nfunction escapeStringRegexp(string) {\r\n\tif (typeof string !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\t// Escape characters with special meaning either inside or outside character sets.\r\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\r\n\treturn string\r\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n\t\t.replace(/-/g, '\\\\x2d');\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaW5kZXguanM/ZGQzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBlc2NhcGVTdHJpbmdSZWdleHAoc3RyaW5nKSB7XHJcblx0aWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XHJcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhIHN0cmluZycpO1xyXG5cdH1cclxuXHJcblx0Ly8gRXNjYXBlIGNoYXJhY3RlcnMgd2l0aCBzcGVjaWFsIG1lYW5pbmcgZWl0aGVyIGluc2lkZSBvciBvdXRzaWRlIGNoYXJhY3RlciBzZXRzLlxyXG5cdC8vIFVzZSBhIHNpbXBsZSBiYWNrc2xhc2ggZXNjYXBlIHdoZW4gaXTigJlzIGFsd2F5cyB2YWxpZCwgYW5kIGEgYFxceG5uYCBlc2NhcGUgd2hlbiB0aGUgc2ltcGxlciBmb3JtIHdvdWxkIGJlIGRpc2FsbG93ZWQgYnkgVW5pY29kZSBwYXR0ZXJuc+KAmSBzdHJpY3RlciBncmFtbWFyLlxyXG5cdHJldHVybiBzdHJpbmdcclxuXHRcdC5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZywgJ1xcXFwkJicpXHJcblx0XHQucmVwbGFjZSgvLS9nLCAnXFxcXHgyZCcpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/escape-string-regexp/index.js\n"));

/***/ }),

/***/ "./node_modules/hast-util-whitespace/index.js":
/*!****************************************************!*\
  !*** ./node_modules/hast-util-whitespace/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whitespace\": function() { return /* binding */ whitespace; }\n/* harmony export */ });\n/**\r\n * Check if the given value is *inter-element whitespace*.\r\n *\r\n * @param {unknown} thing\r\n *   Thing to check (typically `Node` or `string`).\r\n * @returns {boolean}\r\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\r\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\r\n *   (`\\r`), or form feed (`\\f`).\r\n *   If a node is passed it must be a `Text` node, whose `value` field is\r\n *   checked.\r\n */\r\nfunction whitespace(thing) {\r\n  /** @type {string} */\r\n  const value =\r\n    // @ts-expect-error looks like a node.\r\n    thing && typeof thing === 'object' && thing.type === 'text'\r\n      ? // @ts-expect-error looks like a text.\r\n        thing.value || ''\r\n      : thing\r\n\r\n  // HTML whitespace expression.\r\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\r\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXdoaXRlc3BhY2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtd2hpdGVzcGFjZS9pbmRleC5qcz9mYzdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgKmludGVyLWVsZW1lbnQgd2hpdGVzcGFjZSouXHJcbiAqXHJcbiAqIEBwYXJhbSB7dW5rbm93bn0gdGhpbmdcclxuICogICBUaGluZyB0byBjaGVjayAodHlwaWNhbGx5IGBOb2RlYCBvciBgc3RyaW5nYCkuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKiAgIFdoZXRoZXIgdGhlIGB2YWx1ZWAgaXMgaW50ZXItZWxlbWVudCB3aGl0ZXNwYWNlIChgYm9vbGVhbmApOiBjb25zaXN0aW5nIG9mXHJcbiAqICAgemVybyBvciBtb3JlIG9mIHNwYWNlLCB0YWIgKGBcXHRgKSwgbGluZSBmZWVkIChgXFxuYCksIGNhcnJpYWdlIHJldHVyblxyXG4gKiAgIChgXFxyYCksIG9yIGZvcm0gZmVlZCAoYFxcZmApLlxyXG4gKiAgIElmIGEgbm9kZSBpcyBwYXNzZWQgaXQgbXVzdCBiZSBhIGBUZXh0YCBub2RlLCB3aG9zZSBgdmFsdWVgIGZpZWxkIGlzXHJcbiAqICAgY2hlY2tlZC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB3aGl0ZXNwYWNlKHRoaW5nKSB7XHJcbiAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXHJcbiAgY29uc3QgdmFsdWUgPVxyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBsb29rcyBsaWtlIGEgbm9kZS5cclxuICAgIHRoaW5nICYmIHR5cGVvZiB0aGluZyA9PT0gJ29iamVjdCcgJiYgdGhpbmcudHlwZSA9PT0gJ3RleHQnXHJcbiAgICAgID8gLy8gQHRzLWV4cGVjdC1lcnJvciBsb29rcyBsaWtlIGEgdGV4dC5cclxuICAgICAgICB0aGluZy52YWx1ZSB8fCAnJ1xyXG4gICAgICA6IHRoaW5nXHJcblxyXG4gIC8vIEhUTUwgd2hpdGVzcGFjZSBleHByZXNzaW9uLlxyXG4gIC8vIFNlZSA8aHR0cHM6Ly9pbmZyYS5zcGVjLndoYXR3Zy5vcmcvI2FzY2lpLXdoaXRlc3BhY2U+LlxyXG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLnJlcGxhY2UoL1sgXFx0XFxuXFxmXFxyXS9nLCAnJykgPT09ICcnXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/hast-util-whitespace/index.js\n"));

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isPlainObject; }\n/* harmony export */ });\nfunction isPlainObject(value) {\r\n\tif (typeof value !== 'object' || value === null) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst prototype = Object.getPrototypeOf(value);\r\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pcy1wbGFpbi1vYmovaW5kZXguanM/NmFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XHJcblx0aWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwpIHtcclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XHJcblx0cmV0dXJuIChwcm90b3R5cGUgPT09IG51bGwgfHwgcHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90b3R5cGUpID09PSBudWxsKSAmJiAhKFN5bWJvbC50b1N0cmluZ1RhZyBpbiB2YWx1ZSkgJiYgIShTeW1ib2wuaXRlcmF0b3IgaW4gdmFsdWUpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-plain-obj/index.js\n"));

/***/ }),

/***/ "./node_modules/kleur/index.mjs":
/*!**************************************!*\
  !*** ./node_modules/kleur/index.mjs ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\r\n\r\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\r\nif (typeof process !== 'undefined') {\r\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\r\n\tisTTY = process.stdout && process.stdout.isTTY;\r\n}\r\n\r\nconst $ = {\r\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\r\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\r\n\t),\r\n\r\n\t// modifiers\r\n\treset: init(0, 0),\r\n\tbold: init(1, 22),\r\n\tdim: init(2, 22),\r\n\titalic: init(3, 23),\r\n\tunderline: init(4, 24),\r\n\tinverse: init(7, 27),\r\n\thidden: init(8, 28),\r\n\tstrikethrough: init(9, 29),\r\n\r\n\t// colors\r\n\tblack: init(30, 39),\r\n\tred: init(31, 39),\r\n\tgreen: init(32, 39),\r\n\tyellow: init(33, 39),\r\n\tblue: init(34, 39),\r\n\tmagenta: init(35, 39),\r\n\tcyan: init(36, 39),\r\n\twhite: init(37, 39),\r\n\tgray: init(90, 39),\r\n\tgrey: init(90, 39),\r\n\r\n\t// background colors\r\n\tbgBlack: init(40, 49),\r\n\tbgRed: init(41, 49),\r\n\tbgGreen: init(42, 49),\r\n\tbgYellow: init(43, 49),\r\n\tbgBlue: init(44, 49),\r\n\tbgMagenta: init(45, 49),\r\n\tbgCyan: init(46, 49),\r\n\tbgWhite: init(47, 49)\r\n};\r\n\r\nfunction run(arr, str) {\r\n\tlet i=0, tmp, beg='', end='';\r\n\tfor (; i < arr.length; i++) {\r\n\t\ttmp = arr[i];\r\n\t\tbeg += tmp.open;\r\n\t\tend += tmp.close;\r\n\t\tif (!!~str.indexOf(tmp.close)) {\r\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\r\n\t\t}\r\n\t}\r\n\treturn beg + str + end;\r\n}\r\n\r\nfunction chain(has, keys) {\r\n\tlet ctx = { has, keys };\r\n\r\n\tctx.reset = $.reset.bind(ctx);\r\n\tctx.bold = $.bold.bind(ctx);\r\n\tctx.dim = $.dim.bind(ctx);\r\n\tctx.italic = $.italic.bind(ctx);\r\n\tctx.underline = $.underline.bind(ctx);\r\n\tctx.inverse = $.inverse.bind(ctx);\r\n\tctx.hidden = $.hidden.bind(ctx);\r\n\tctx.strikethrough = $.strikethrough.bind(ctx);\r\n\r\n\tctx.black = $.black.bind(ctx);\r\n\tctx.red = $.red.bind(ctx);\r\n\tctx.green = $.green.bind(ctx);\r\n\tctx.yellow = $.yellow.bind(ctx);\r\n\tctx.blue = $.blue.bind(ctx);\r\n\tctx.magenta = $.magenta.bind(ctx);\r\n\tctx.cyan = $.cyan.bind(ctx);\r\n\tctx.white = $.white.bind(ctx);\r\n\tctx.gray = $.gray.bind(ctx);\r\n\tctx.grey = $.grey.bind(ctx);\r\n\r\n\tctx.bgBlack = $.bgBlack.bind(ctx);\r\n\tctx.bgRed = $.bgRed.bind(ctx);\r\n\tctx.bgGreen = $.bgGreen.bind(ctx);\r\n\tctx.bgYellow = $.bgYellow.bind(ctx);\r\n\tctx.bgBlue = $.bgBlue.bind(ctx);\r\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\r\n\tctx.bgCyan = $.bgCyan.bind(ctx);\r\n\tctx.bgWhite = $.bgWhite.bind(ctx);\r\n\r\n\treturn ctx;\r\n}\r\n\r\nfunction init(open, close) {\r\n\tlet blk = {\r\n\t\topen: `\\x1b[${open}m`,\r\n\t\tclose: `\\x1b[${close}m`,\r\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\r\n\t};\r\n\treturn function (txt) {\r\n\t\tif (this !== void 0 && this.has !== void 0) {\r\n\t\t\t!!~this.has.indexOf(open) || (this.has.push(open),this.keys.push(blk));\r\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\r\n\t\t}\r\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\r\n\t};\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ($);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMva2xldXIvaW5kZXgubWpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLElBQUksbURBQW1ELEVBQUUsT0FBTyxVQUFVO0FBQzFFLFNBQVMsT0FBTyxXQUFXLE9BQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnQkFBZ0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEtBQUs7QUFDckIsaUJBQWlCLE1BQU07QUFDdkIsNkJBQTZCLE1BQU07QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBZSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tsZXVyL2luZGV4Lm1qcz8zMjE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmxldCBGT1JDRV9DT0xPUiwgTk9ERV9ESVNBQkxFX0NPTE9SUywgTk9fQ09MT1IsIFRFUk0sIGlzVFRZPXRydWU7XHJcbmlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuXHQoeyBGT1JDRV9DT0xPUiwgTk9ERV9ESVNBQkxFX0NPTE9SUywgTk9fQ09MT1IsIFRFUk0gfSA9IHByb2Nlc3MuZW52IHx8IHt9KTtcclxuXHRpc1RUWSA9IHByb2Nlc3Muc3Rkb3V0ICYmIHByb2Nlc3Muc3Rkb3V0LmlzVFRZO1xyXG59XHJcblxyXG5jb25zdCAkID0ge1xyXG5cdGVuYWJsZWQ6ICFOT0RFX0RJU0FCTEVfQ09MT1JTICYmIE5PX0NPTE9SID09IG51bGwgJiYgVEVSTSAhPT0gJ2R1bWInICYmIChcclxuXHRcdEZPUkNFX0NPTE9SICE9IG51bGwgJiYgRk9SQ0VfQ09MT1IgIT09ICcwJyB8fCBpc1RUWVxyXG5cdCksXHJcblxyXG5cdC8vIG1vZGlmaWVyc1xyXG5cdHJlc2V0OiBpbml0KDAsIDApLFxyXG5cdGJvbGQ6IGluaXQoMSwgMjIpLFxyXG5cdGRpbTogaW5pdCgyLCAyMiksXHJcblx0aXRhbGljOiBpbml0KDMsIDIzKSxcclxuXHR1bmRlcmxpbmU6IGluaXQoNCwgMjQpLFxyXG5cdGludmVyc2U6IGluaXQoNywgMjcpLFxyXG5cdGhpZGRlbjogaW5pdCg4LCAyOCksXHJcblx0c3RyaWtldGhyb3VnaDogaW5pdCg5LCAyOSksXHJcblxyXG5cdC8vIGNvbG9yc1xyXG5cdGJsYWNrOiBpbml0KDMwLCAzOSksXHJcblx0cmVkOiBpbml0KDMxLCAzOSksXHJcblx0Z3JlZW46IGluaXQoMzIsIDM5KSxcclxuXHR5ZWxsb3c6IGluaXQoMzMsIDM5KSxcclxuXHRibHVlOiBpbml0KDM0LCAzOSksXHJcblx0bWFnZW50YTogaW5pdCgzNSwgMzkpLFxyXG5cdGN5YW46IGluaXQoMzYsIDM5KSxcclxuXHR3aGl0ZTogaW5pdCgzNywgMzkpLFxyXG5cdGdyYXk6IGluaXQoOTAsIDM5KSxcclxuXHRncmV5OiBpbml0KDkwLCAzOSksXHJcblxyXG5cdC8vIGJhY2tncm91bmQgY29sb3JzXHJcblx0YmdCbGFjazogaW5pdCg0MCwgNDkpLFxyXG5cdGJnUmVkOiBpbml0KDQxLCA0OSksXHJcblx0YmdHcmVlbjogaW5pdCg0MiwgNDkpLFxyXG5cdGJnWWVsbG93OiBpbml0KDQzLCA0OSksXHJcblx0YmdCbHVlOiBpbml0KDQ0LCA0OSksXHJcblx0YmdNYWdlbnRhOiBpbml0KDQ1LCA0OSksXHJcblx0YmdDeWFuOiBpbml0KDQ2LCA0OSksXHJcblx0YmdXaGl0ZTogaW5pdCg0NywgNDkpXHJcbn07XHJcblxyXG5mdW5jdGlvbiBydW4oYXJyLCBzdHIpIHtcclxuXHRsZXQgaT0wLCB0bXAsIGJlZz0nJywgZW5kPScnO1xyXG5cdGZvciAoOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcblx0XHR0bXAgPSBhcnJbaV07XHJcblx0XHRiZWcgKz0gdG1wLm9wZW47XHJcblx0XHRlbmQgKz0gdG1wLmNsb3NlO1xyXG5cdFx0aWYgKCEhfnN0ci5pbmRleE9mKHRtcC5jbG9zZSkpIHtcclxuXHRcdFx0c3RyID0gc3RyLnJlcGxhY2UodG1wLnJneCwgdG1wLmNsb3NlICsgdG1wLm9wZW4pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gYmVnICsgc3RyICsgZW5kO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjaGFpbihoYXMsIGtleXMpIHtcclxuXHRsZXQgY3R4ID0geyBoYXMsIGtleXMgfTtcclxuXHJcblx0Y3R4LnJlc2V0ID0gJC5yZXNldC5iaW5kKGN0eCk7XHJcblx0Y3R4LmJvbGQgPSAkLmJvbGQuYmluZChjdHgpO1xyXG5cdGN0eC5kaW0gPSAkLmRpbS5iaW5kKGN0eCk7XHJcblx0Y3R4Lml0YWxpYyA9ICQuaXRhbGljLmJpbmQoY3R4KTtcclxuXHRjdHgudW5kZXJsaW5lID0gJC51bmRlcmxpbmUuYmluZChjdHgpO1xyXG5cdGN0eC5pbnZlcnNlID0gJC5pbnZlcnNlLmJpbmQoY3R4KTtcclxuXHRjdHguaGlkZGVuID0gJC5oaWRkZW4uYmluZChjdHgpO1xyXG5cdGN0eC5zdHJpa2V0aHJvdWdoID0gJC5zdHJpa2V0aHJvdWdoLmJpbmQoY3R4KTtcclxuXHJcblx0Y3R4LmJsYWNrID0gJC5ibGFjay5iaW5kKGN0eCk7XHJcblx0Y3R4LnJlZCA9ICQucmVkLmJpbmQoY3R4KTtcclxuXHRjdHguZ3JlZW4gPSAkLmdyZWVuLmJpbmQoY3R4KTtcclxuXHRjdHgueWVsbG93ID0gJC55ZWxsb3cuYmluZChjdHgpO1xyXG5cdGN0eC5ibHVlID0gJC5ibHVlLmJpbmQoY3R4KTtcclxuXHRjdHgubWFnZW50YSA9ICQubWFnZW50YS5iaW5kKGN0eCk7XHJcblx0Y3R4LmN5YW4gPSAkLmN5YW4uYmluZChjdHgpO1xyXG5cdGN0eC53aGl0ZSA9ICQud2hpdGUuYmluZChjdHgpO1xyXG5cdGN0eC5ncmF5ID0gJC5ncmF5LmJpbmQoY3R4KTtcclxuXHRjdHguZ3JleSA9ICQuZ3JleS5iaW5kKGN0eCk7XHJcblxyXG5cdGN0eC5iZ0JsYWNrID0gJC5iZ0JsYWNrLmJpbmQoY3R4KTtcclxuXHRjdHguYmdSZWQgPSAkLmJnUmVkLmJpbmQoY3R4KTtcclxuXHRjdHguYmdHcmVlbiA9ICQuYmdHcmVlbi5iaW5kKGN0eCk7XHJcblx0Y3R4LmJnWWVsbG93ID0gJC5iZ1llbGxvdy5iaW5kKGN0eCk7XHJcblx0Y3R4LmJnQmx1ZSA9ICQuYmdCbHVlLmJpbmQoY3R4KTtcclxuXHRjdHguYmdNYWdlbnRhID0gJC5iZ01hZ2VudGEuYmluZChjdHgpO1xyXG5cdGN0eC5iZ0N5YW4gPSAkLmJnQ3lhbi5iaW5kKGN0eCk7XHJcblx0Y3R4LmJnV2hpdGUgPSAkLmJnV2hpdGUuYmluZChjdHgpO1xyXG5cclxuXHRyZXR1cm4gY3R4O1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0KG9wZW4sIGNsb3NlKSB7XHJcblx0bGV0IGJsayA9IHtcclxuXHRcdG9wZW46IGBcXHgxYlske29wZW59bWAsXHJcblx0XHRjbG9zZTogYFxceDFiWyR7Y2xvc2V9bWAsXHJcblx0XHRyZ3g6IG5ldyBSZWdFeHAoYFxcXFx4MWJcXFxcWyR7Y2xvc2V9bWAsICdnJylcclxuXHR9O1xyXG5cdHJldHVybiBmdW5jdGlvbiAodHh0KSB7XHJcblx0XHRpZiAodGhpcyAhPT0gdm9pZCAwICYmIHRoaXMuaGFzICE9PSB2b2lkIDApIHtcclxuXHRcdFx0ISF+dGhpcy5oYXMuaW5kZXhPZihvcGVuKSB8fCAodGhpcy5oYXMucHVzaChvcGVuKSx0aGlzLmtleXMucHVzaChibGspKTtcclxuXHRcdFx0cmV0dXJuIHR4dCA9PT0gdm9pZCAwID8gdGhpcyA6ICQuZW5hYmxlZCA/IHJ1bih0aGlzLmtleXMsIHR4dCsnJykgOiB0eHQrJyc7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdHh0ID09PSB2b2lkIDAgPyBjaGFpbihbb3Blbl0sIFtibGtdKSA6ICQuZW5hYmxlZCA/IHJ1bihbYmxrXSwgdHh0KycnKSA6IHR4dCsnJztcclxuXHR9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCAkO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/kleur/index.mjs\n"));

/***/ }),

/***/ "./node_modules/markdown-table/index.js":
/*!**********************************************!*\
  !*** ./node_modules/markdown-table/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"markdownTable\": function() { return /* binding */ markdownTable; }\n/* harmony export */ });\n// To do: next major: remove.\r\n/**\r\n * @typedef {Options} MarkdownTableOptions\r\n *   Configuration.\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {boolean | null | undefined} [alignDelimiters=true]\r\n *   Whether to align the delimiters (default: `true`);\r\n *   they are aligned by default:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B     |\r\n *   | ----- | ----- |\r\n *   | C     | Delta |\r\n *   ```\r\n *\r\n *   Pass `false` to make them staggered:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B |\r\n *   | - | - |\r\n *   | C | Delta |\r\n *   ```\r\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\r\n *   How to align columns (default: `''`);\r\n *   one style for all columns or styles for their respective columns;\r\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\r\n *   other values are treated as `''`, which doesn’t place the colon in the\r\n *   alignment row but does align left;\r\n *   *only the lowercased first character is used, so `Right` is fine.*\r\n * @property {boolean | null | undefined} [delimiterEnd=true]\r\n *   Whether to end each row with the delimiter (default: `true`).\r\n *\r\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\r\n *   > that aren’t understandable to some markdown parsers.\r\n *\r\n *   When `true`, there are ending delimiters:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B     |\r\n *   | ----- | ----- |\r\n *   | C     | Delta |\r\n *   ```\r\n *\r\n *   When `false`, there are no ending delimiters:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B\r\n *   | ----- | -----\r\n *   | C     | Delta\r\n *   ```\r\n * @property {boolean | null | undefined} [delimiterStart=true]\r\n *   Whether to begin each row with the delimiter (default: `true`).\r\n *\r\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\r\n *   > that aren’t understandable to some markdown parsers.\r\n *\r\n *   When `true`, there are starting delimiters:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B     |\r\n *   | ----- | ----- |\r\n *   | C     | Delta |\r\n *   ```\r\n *\r\n *   When `false`, there are no starting delimiters:\r\n *\r\n *   ```markdown\r\n *   Alpha | B     |\r\n *   ----- | ----- |\r\n *   C     | Delta |\r\n *   ```\r\n * @property {boolean | null | undefined} [padding=true]\r\n *   Whether to add a space of padding between delimiters and cells\r\n *   (default: `true`).\r\n *\r\n *   When `true`, there is padding:\r\n *\r\n *   ```markdown\r\n *   | Alpha | B     |\r\n *   | ----- | ----- |\r\n *   | C     | Delta |\r\n *   ```\r\n *\r\n *   When `false`, there is no padding:\r\n *\r\n *   ```markdown\r\n *   |Alpha|B    |\r\n *   |-----|-----|\r\n *   |C    |Delta|\r\n *   ```\r\n * @property {((value: string) => number) | null | undefined} [stringLength]\r\n *   Function to detect the length of table cell content (optional);\r\n *   this is used when aligning the delimiters (`|`) between table cells;\r\n *   full-width characters and emoji mess up delimiter alignment when viewing\r\n *   the markdown source;\r\n *   to fix this, you can pass this function,\r\n *   which receives the cell content and returns its “visible” size;\r\n *   note that what is and isn’t visible depends on where the text is displayed.\r\n *\r\n *   Without such a function, the following:\r\n *\r\n *   ```js\r\n *   markdownTable([\r\n *     ['Alpha', 'Bravo'],\r\n *     ['中文', 'Charlie'],\r\n *     ['👩‍❤️‍👩', 'Delta']\r\n *   ])\r\n *   ```\r\n *\r\n *   Yields:\r\n *\r\n *   ```markdown\r\n *   | Alpha | Bravo |\r\n *   | - | - |\r\n *   | 中文 | Charlie |\r\n *   | 👩‍❤️‍👩 | Delta |\r\n *   ```\r\n *\r\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\r\n *\r\n *   ```js\r\n *   import stringWidth from 'string-width'\r\n *\r\n *   markdownTable(\r\n *     [\r\n *       ['Alpha', 'Bravo'],\r\n *       ['中文', 'Charlie'],\r\n *       ['👩‍❤️‍👩', 'Delta']\r\n *     ],\r\n *     {stringLength: stringWidth}\r\n *   )\r\n *   ```\r\n *\r\n *   Yields:\r\n *\r\n *   ```markdown\r\n *   | Alpha | Bravo   |\r\n *   | ----- | ------- |\r\n *   | 中文  | Charlie |\r\n *   | 👩‍❤️‍👩    | Delta   |\r\n *   ```\r\n */\r\n\r\n/**\r\n * @param {string} value\r\n *   Cell value.\r\n * @returns {number}\r\n *   Cell size.\r\n */\r\nfunction defaultStringLength(value) {\r\n  return value.length\r\n}\r\n\r\n/**\r\n * Generate a markdown\r\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\r\n * table.\r\n *\r\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\r\n *   Table data (matrix of strings).\r\n * @param {Readonly<Options> | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {string}\r\n *   Result.\r\n */\r\nfunction markdownTable(table, options) {\r\n  const settings = options || {}\r\n  // To do: next major: change to spread.\r\n  const align = (settings.align || []).concat()\r\n  const stringLength = settings.stringLength || defaultStringLength\r\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\r\n  const alignments = []\r\n  /** @type {Array<Array<string>>} Cells per row. */\r\n  const cellMatrix = []\r\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\r\n  const sizeMatrix = []\r\n  /** @type {Array<number>} */\r\n  const longestCellByColumn = []\r\n  let mostCellsPerRow = 0\r\n  let rowIndex = -1\r\n\r\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\r\n  // do superfluous work when aligning, so optimize for aligning.\r\n  while (++rowIndex < table.length) {\r\n    /** @type {Array<string>} */\r\n    const row = []\r\n    /** @type {Array<number>} */\r\n    const sizes = []\r\n    let columnIndex = -1\r\n\r\n    if (table[rowIndex].length > mostCellsPerRow) {\r\n      mostCellsPerRow = table[rowIndex].length\r\n    }\r\n\r\n    while (++columnIndex < table[rowIndex].length) {\r\n      const cell = serialize(table[rowIndex][columnIndex])\r\n\r\n      if (settings.alignDelimiters !== false) {\r\n        const size = stringLength(cell)\r\n        sizes[columnIndex] = size\r\n\r\n        if (\r\n          longestCellByColumn[columnIndex] === undefined ||\r\n          size > longestCellByColumn[columnIndex]\r\n        ) {\r\n          longestCellByColumn[columnIndex] = size\r\n        }\r\n      }\r\n\r\n      row.push(cell)\r\n    }\r\n\r\n    cellMatrix[rowIndex] = row\r\n    sizeMatrix[rowIndex] = sizes\r\n  }\r\n\r\n  // Figure out which alignments to use.\r\n  let columnIndex = -1\r\n\r\n  if (typeof align === 'object' && 'length' in align) {\r\n    while (++columnIndex < mostCellsPerRow) {\r\n      alignments[columnIndex] = toAlignment(align[columnIndex])\r\n    }\r\n  } else {\r\n    const code = toAlignment(align)\r\n\r\n    while (++columnIndex < mostCellsPerRow) {\r\n      alignments[columnIndex] = code\r\n    }\r\n  }\r\n\r\n  // Inject the alignment row.\r\n  columnIndex = -1\r\n  /** @type {Array<string>} */\r\n  const row = []\r\n  /** @type {Array<number>} */\r\n  const sizes = []\r\n\r\n  while (++columnIndex < mostCellsPerRow) {\r\n    const code = alignments[columnIndex]\r\n    let before = ''\r\n    let after = ''\r\n\r\n    if (code === 99 /* `c` */) {\r\n      before = ':'\r\n      after = ':'\r\n    } else if (code === 108 /* `l` */) {\r\n      before = ':'\r\n    } else if (code === 114 /* `r` */) {\r\n      after = ':'\r\n    }\r\n\r\n    // There *must* be at least one hyphen-minus in each alignment cell.\r\n    let size =\r\n      settings.alignDelimiters === false\r\n        ? 1\r\n        : Math.max(\r\n            1,\r\n            longestCellByColumn[columnIndex] - before.length - after.length\r\n          )\r\n\r\n    const cell = before + '-'.repeat(size) + after\r\n\r\n    if (settings.alignDelimiters !== false) {\r\n      size = before.length + size + after.length\r\n\r\n      if (size > longestCellByColumn[columnIndex]) {\r\n        longestCellByColumn[columnIndex] = size\r\n      }\r\n\r\n      sizes[columnIndex] = size\r\n    }\r\n\r\n    row[columnIndex] = cell\r\n  }\r\n\r\n  // Inject the alignment row.\r\n  cellMatrix.splice(1, 0, row)\r\n  sizeMatrix.splice(1, 0, sizes)\r\n\r\n  rowIndex = -1\r\n  /** @type {Array<string>} */\r\n  const lines = []\r\n\r\n  while (++rowIndex < cellMatrix.length) {\r\n    const row = cellMatrix[rowIndex]\r\n    const sizes = sizeMatrix[rowIndex]\r\n    columnIndex = -1\r\n    /** @type {Array<string>} */\r\n    const line = []\r\n\r\n    while (++columnIndex < mostCellsPerRow) {\r\n      const cell = row[columnIndex] || ''\r\n      let before = ''\r\n      let after = ''\r\n\r\n      if (settings.alignDelimiters !== false) {\r\n        const size =\r\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\r\n        const code = alignments[columnIndex]\r\n\r\n        if (code === 114 /* `r` */) {\r\n          before = ' '.repeat(size)\r\n        } else if (code === 99 /* `c` */) {\r\n          if (size % 2) {\r\n            before = ' '.repeat(size / 2 + 0.5)\r\n            after = ' '.repeat(size / 2 - 0.5)\r\n          } else {\r\n            before = ' '.repeat(size / 2)\r\n            after = before\r\n          }\r\n        } else {\r\n          after = ' '.repeat(size)\r\n        }\r\n      }\r\n\r\n      if (settings.delimiterStart !== false && !columnIndex) {\r\n        line.push('|')\r\n      }\r\n\r\n      if (\r\n        settings.padding !== false &&\r\n        // Don’t add the opening space if we’re not aligning and the cell is\r\n        // empty: there will be a closing space.\r\n        !(settings.alignDelimiters === false && cell === '') &&\r\n        (settings.delimiterStart !== false || columnIndex)\r\n      ) {\r\n        line.push(' ')\r\n      }\r\n\r\n      if (settings.alignDelimiters !== false) {\r\n        line.push(before)\r\n      }\r\n\r\n      line.push(cell)\r\n\r\n      if (settings.alignDelimiters !== false) {\r\n        line.push(after)\r\n      }\r\n\r\n      if (settings.padding !== false) {\r\n        line.push(' ')\r\n      }\r\n\r\n      if (\r\n        settings.delimiterEnd !== false ||\r\n        columnIndex !== mostCellsPerRow - 1\r\n      ) {\r\n        line.push('|')\r\n      }\r\n    }\r\n\r\n    lines.push(\r\n      settings.delimiterEnd === false\r\n        ? line.join('').replace(/ +$/, '')\r\n        : line.join('')\r\n    )\r\n  }\r\n\r\n  return lines.join('\\n')\r\n}\r\n\r\n/**\r\n * @param {string | null | undefined} [value]\r\n *   Value to serialize.\r\n * @returns {string}\r\n *   Result.\r\n */\r\nfunction serialize(value) {\r\n  return value === null || value === undefined ? '' : String(value)\r\n}\r\n\r\n/**\r\n * @param {string | null | undefined} value\r\n *   Value.\r\n * @returns {number}\r\n *   Alignment.\r\n */\r\nfunction toAlignment(value) {\r\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\r\n\r\n  return code === 67 /* `C` */ || code === 99 /* `c` */\r\n    ? 99 /* `c` */\r\n    : code === 76 /* `L` */ || code === 108 /* `l` */\r\n      ? 108 /* `l` */\r\n      : code === 82 /* `R` */ || code === 114 /* `r` */\r\n        ? 114 /* `r` */\r\n        : 0\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/markdown-table/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-definitions/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mdast-util-definitions/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"definitions\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.definitions; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-definitions/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').GetDefinition} GetDefinition\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1kZWZpbml0aW9ucy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSx3Q0FBd0M7QUFDckQ7QUFDQTtBQUMwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1kZWZpbml0aW9ucy9pbmRleC5qcz9jMDdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLkdldERlZmluaXRpb259IEdldERlZmluaXRpb25cclxuICovXHJcblxyXG5leHBvcnQge2RlZmluaXRpb25zfSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-definitions/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-definitions/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/mdast-util-definitions/lib/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"definitions\": function() { return /* binding */ definitions; }\n/* harmony export */ });\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/index.js\");\n/**\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').Definition} Definition\r\n */\r\n\r\n/**\r\n * @typedef {Root | Content} Node\r\n *\r\n * @callback GetDefinition\r\n *   Get a definition by identifier.\r\n * @param {string | null | undefined} [identifier]\r\n *   Identifier of definition.\r\n * @returns {Definition | null}\r\n *   Definition corresponding to `identifier` or `null`.\r\n */\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Find definitions in `tree`.\r\n *\r\n * Uses CommonMark precedence, which means that earlier definitions are\r\n * preferred over duplicate later definitions.\r\n *\r\n * @param {Node} tree\r\n *   Tree to check.\r\n * @returns {GetDefinition}\r\n *   Getter.\r\n */\r\nfunction definitions(tree) {\r\n  /** @type {Record<string, Definition>} */\r\n  const cache = Object.create(null)\r\n\r\n  if (!tree || !tree.type) {\r\n    throw new Error('mdast-util-definitions expected node')\r\n  }\r\n\r\n  (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_0__.visit)(tree, 'definition', (definition) => {\r\n    const id = clean(definition.identifier)\r\n    if (id && !own.call(cache, id)) {\r\n      cache[id] = definition\r\n    }\r\n  })\r\n\r\n  return definition\r\n\r\n  /** @type {GetDefinition} */\r\n  function definition(identifier) {\r\n    const id = clean(identifier)\r\n    // To do: next major: return `undefined` when not found.\r\n    return id && own.call(cache, id) ? cache[id] : null\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string | null | undefined} [value]\r\n * @returns {string}\r\n */\r\nfunction clean(value) {\r\n  return String(value || '').toUpperCase()\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1kZWZpbml0aW9ucy9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEseUJBQXlCO0FBQ3RDLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNzQztBQUN0QztBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHVEQUFLO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJCQUEyQjtBQUN0QyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtZGVmaW5pdGlvbnMvbGliL2luZGV4LmpzPzY4ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkNvbnRlbnR9IENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5EZWZpbml0aW9ufSBEZWZpbml0aW9uXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIHtSb290IHwgQ29udGVudH0gTm9kZVxyXG4gKlxyXG4gKiBAY2FsbGJhY2sgR2V0RGVmaW5pdGlvblxyXG4gKiAgIEdldCBhIGRlZmluaXRpb24gYnkgaWRlbnRpZmllci5cclxuICogQHBhcmFtIHtzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkfSBbaWRlbnRpZmllcl1cclxuICogICBJZGVudGlmaWVyIG9mIGRlZmluaXRpb24uXHJcbiAqIEByZXR1cm5zIHtEZWZpbml0aW9uIHwgbnVsbH1cclxuICogICBEZWZpbml0aW9uIGNvcnJlc3BvbmRpbmcgdG8gYGlkZW50aWZpZXJgIG9yIGBudWxsYC5cclxuICovXHJcblxyXG5pbXBvcnQge3Zpc2l0fSBmcm9tICd1bmlzdC11dGlsLXZpc2l0J1xyXG5cclxuY29uc3Qgb3duID0ge30uaGFzT3duUHJvcGVydHlcclxuXHJcbi8qKlxyXG4gKiBGaW5kIGRlZmluaXRpb25zIGluIGB0cmVlYC5cclxuICpcclxuICogVXNlcyBDb21tb25NYXJrIHByZWNlZGVuY2UsIHdoaWNoIG1lYW5zIHRoYXQgZWFybGllciBkZWZpbml0aW9ucyBhcmVcclxuICogcHJlZmVycmVkIG92ZXIgZHVwbGljYXRlIGxhdGVyIGRlZmluaXRpb25zLlxyXG4gKlxyXG4gKiBAcGFyYW0ge05vZGV9IHRyZWVcclxuICogICBUcmVlIHRvIGNoZWNrLlxyXG4gKiBAcmV0dXJucyB7R2V0RGVmaW5pdGlvbn1cclxuICogICBHZXR0ZXIuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5pdGlvbnModHJlZSkge1xyXG4gIC8qKiBAdHlwZSB7UmVjb3JkPHN0cmluZywgRGVmaW5pdGlvbj59ICovXHJcbiAgY29uc3QgY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpXHJcblxyXG4gIGlmICghdHJlZSB8fCAhdHJlZS50eXBlKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ21kYXN0LXV0aWwtZGVmaW5pdGlvbnMgZXhwZWN0ZWQgbm9kZScpXHJcbiAgfVxyXG5cclxuICB2aXNpdCh0cmVlLCAnZGVmaW5pdGlvbicsIChkZWZpbml0aW9uKSA9PiB7XHJcbiAgICBjb25zdCBpZCA9IGNsZWFuKGRlZmluaXRpb24uaWRlbnRpZmllcilcclxuICAgIGlmIChpZCAmJiAhb3duLmNhbGwoY2FjaGUsIGlkKSkge1xyXG4gICAgICBjYWNoZVtpZF0gPSBkZWZpbml0aW9uXHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbiAgcmV0dXJuIGRlZmluaXRpb25cclxuXHJcbiAgLyoqIEB0eXBlIHtHZXREZWZpbml0aW9ufSAqL1xyXG4gIGZ1bmN0aW9uIGRlZmluaXRpb24oaWRlbnRpZmllcikge1xyXG4gICAgY29uc3QgaWQgPSBjbGVhbihpZGVudGlmaWVyKVxyXG4gICAgLy8gVG8gZG86IG5leHQgbWFqb3I6IHJldHVybiBgdW5kZWZpbmVkYCB3aGVuIG5vdCBmb3VuZC5cclxuICAgIHJldHVybiBpZCAmJiBvd24uY2FsbChjYWNoZSwgaWQpID8gY2FjaGVbaWRdIDogbnVsbFxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3ZhbHVlXVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gY2xlYW4odmFsdWUpIHtcclxuICByZXR1cm4gU3RyaW5nKHZhbHVlIHx8ICcnKS50b1VwcGVyQ2FzZSgpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-definitions/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-find-and-replace/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/mdast-util-find-and-replace/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"findAndReplace\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.findAndReplace; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-find-and-replace/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Options} Options\r\n * @typedef {import('./lib/index.js').RegExpMatchObject} RegExpMatchObject\r\n * @typedef {import('./lib/index.js').Find} Find\r\n * @typedef {import('./lib/index.js').Replace} Replace\r\n * @typedef {import('./lib/index.js').ReplaceFunction} ReplaceFunction\r\n * @typedef {import('./lib/index.js').FindAndReplaceTuple} FindAndReplaceTuple\r\n * @typedef {import('./lib/index.js').FindAndReplaceSchema} FindAndReplaceSchema\r\n * @typedef {import('./lib/index.js').FindAndReplaceList} FindAndReplaceList\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1maW5kLWFuZC1yZXBsYWNlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLGtDQUFrQztBQUMvQyxhQUFhLDRDQUE0QztBQUN6RCxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLGtDQUFrQztBQUMvQyxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLDhDQUE4QztBQUMzRCxhQUFhLCtDQUErQztBQUM1RCxhQUFhLDZDQUE2QztBQUMxRDtBQUNBO0FBQzZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWZpbmQtYW5kLXJlcGxhY2UvaW5kZXguanM/OWJkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5PcHRpb25zfSBPcHRpb25zXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuUmVnRXhwTWF0Y2hPYmplY3R9IFJlZ0V4cE1hdGNoT2JqZWN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuRmluZH0gRmluZFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLlJlcGxhY2V9IFJlcGxhY2VcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5SZXBsYWNlRnVuY3Rpb259IFJlcGxhY2VGdW5jdGlvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLkZpbmRBbmRSZXBsYWNlVHVwbGV9IEZpbmRBbmRSZXBsYWNlVHVwbGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5GaW5kQW5kUmVwbGFjZVNjaGVtYX0gRmluZEFuZFJlcGxhY2VTY2hlbWFcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5GaW5kQW5kUmVwbGFjZUxpc3R9IEZpbmRBbmRSZXBsYWNlTGlzdFxyXG4gKi9cclxuXHJcbmV4cG9ydCB7ZmluZEFuZFJlcGxhY2V9IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-find-and-replace/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-find-and-replace/lib/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-find-and-replace/lib/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"findAndReplace\": function() { return /* binding */ findAndReplace; }\n/* harmony export */ });\n/* harmony import */ var escape_string_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! escape-string-regexp */ \"./node_modules/escape-string-regexp/index.js\");\n/* harmony import */ var unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit-parents */ \"./node_modules/unist-util-visit-parents/index.js\");\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unist-util-is */ \"./node_modules/unist-util-is/index.js\");\n/**\r\n * @typedef {import('mdast').Parent} MdastParent\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\r\n * @typedef {import('mdast').Text} Text\r\n * @typedef {import('unist-util-visit-parents').Test} Test\r\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\r\n */\r\n\r\n/**\r\n * @typedef {Content | Root} Node\r\n * @typedef {Extract<Node, MdastParent>} Parent\r\n * @typedef {Exclude<Parent, Root>} ContentParent\r\n *\r\n * @typedef RegExpMatchObject\r\n *   Info on the match.\r\n * @property {number} index\r\n *   The index of the search at which the result was found.\r\n * @property {string} input\r\n *   A copy of the search string in the text node.\r\n * @property {[Root, ...Array<ContentParent>, Text]} stack\r\n *   All ancestors of the text node, where the last node is the text itself.\r\n *\r\n * @callback ReplaceFunction\r\n *   Callback called when a search matches.\r\n * @param {...any} parameters\r\n *   The parameters are the result of corresponding search expression:\r\n *\r\n *   * `value` (`string`) — whole match\r\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\r\n *   * `match` (`RegExpMatchObject`) — info on the match\r\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\r\n *   Thing to replace with.\r\n *\r\n *   * when `null`, `undefined`, `''`, remove the match\r\n *   * …or when `false`, do not replace at all\r\n *   * …or when `string`, replace with a text node of that value\r\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\r\n *\r\n * @typedef {string | RegExp} Find\r\n *   Pattern to find.\r\n *\r\n *   Strings are escaped and then turned into global expressions.\r\n *\r\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\r\n *   Several find and replaces, in array form.\r\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\r\n *   Several find and replaces, in object form.\r\n * @typedef {[Find, Replace]} FindAndReplaceTuple\r\n *   Find and replace in tuple form.\r\n * @typedef {string | ReplaceFunction} Replace\r\n *   Thing to replace with.\r\n * @typedef {[RegExp, ReplaceFunction]} Pair\r\n *   Normalized find and replace.\r\n * @typedef {Array<Pair>} Pairs\r\n *   All find and replaced.\r\n *\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Test | null | undefined} [ignore]\r\n *   Test for which nodes to ignore.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Find patterns in a tree and replace them.\r\n *\r\n * The algorithm searches the tree in *preorder* for complete values in `Text`\r\n * nodes.\r\n * Partial matches are not supported.\r\n *\r\n * @param tree\r\n *   Tree to change.\r\n * @param find\r\n *   Patterns to find.\r\n * @param replace\r\n *   Things to replace with (when `find` is `Find`) or configuration.\r\n * @param options\r\n *   Configuration (when `find` is not `Find`).\r\n * @returns\r\n *   Given, modified, tree.\r\n */\r\n// To do: next major: remove `find` & `replace` combo, remove schema.\r\nconst findAndReplace =\r\n  /**\r\n   * @type {(\r\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\r\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\r\n   * )}\r\n   **/\r\n  (\r\n    /**\r\n     * @template {Node} Tree\r\n     * @param {Tree} tree\r\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\r\n     * @param {Replace | Options | null | undefined} [replace]\r\n     * @param {Options | null | undefined} [options]\r\n     * @returns {Tree}\r\n     */\r\n    function (tree, find, replace, options) {\r\n      /** @type {Options | null | undefined} */\r\n      let settings\r\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\r\n      let schema\r\n\r\n      if (typeof find === 'string' || find instanceof RegExp) {\r\n        // @ts-expect-error don’t expect options twice.\r\n        schema = [[find, replace]]\r\n        settings = options\r\n      } else {\r\n        schema = find\r\n        // @ts-expect-error don’t expect replace twice.\r\n        settings = replace\r\n      }\r\n\r\n      if (!settings) {\r\n        settings = {}\r\n      }\r\n\r\n      const ignored = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_1__.convert)(settings.ignore || [])\r\n      const pairs = toPairs(schema)\r\n      let pairIndex = -1\r\n\r\n      while (++pairIndex < pairs.length) {\r\n        (0,unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_2__.visitParents)(tree, 'text', visitor)\r\n      }\r\n\r\n      // To do next major: don’t return the given tree.\r\n      return tree\r\n\r\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\r\n      function visitor(node, parents) {\r\n        let index = -1\r\n        /** @type {Parent | undefined} */\r\n        let grandparent\r\n\r\n        while (++index < parents.length) {\r\n          const parent = parents[index]\r\n\r\n          if (\r\n            ignored(\r\n              parent,\r\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\r\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\r\n              grandparent\r\n            )\r\n          ) {\r\n            return\r\n          }\r\n\r\n          grandparent = parent\r\n        }\r\n\r\n        if (grandparent) {\r\n          return handler(node, parents)\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Handle a text node which is not in an ignored parent.\r\n       *\r\n       * @param {Text} node\r\n       *   Text node.\r\n       * @param {Array<Parent>} parents\r\n       *   Parents.\r\n       * @returns {VisitorResult}\r\n       *   Result.\r\n       */\r\n      function handler(node, parents) {\r\n        const parent = parents[parents.length - 1]\r\n        const find = pairs[pairIndex][0]\r\n        const replace = pairs[pairIndex][1]\r\n        let start = 0\r\n        // @ts-expect-error: TS is wrong, some of these children can be text.\r\n        const index = parent.children.indexOf(node)\r\n        let change = false\r\n        /** @type {Array<PhrasingContent>} */\r\n        let nodes = []\r\n\r\n        find.lastIndex = 0\r\n\r\n        let match = find.exec(node.value)\r\n\r\n        while (match) {\r\n          const position = match.index\r\n          /** @type {RegExpMatchObject} */\r\n          const matchObject = {\r\n            index: match.index,\r\n            input: match.input,\r\n            // @ts-expect-error: stack is fine.\r\n            stack: [...parents, node]\r\n          }\r\n          let value = replace(...match, matchObject)\r\n\r\n          if (typeof value === 'string') {\r\n            value = value.length > 0 ? {type: 'text', value} : undefined\r\n          }\r\n\r\n          // It wasn’t a match after all.\r\n          if (value !== false) {\r\n            if (start !== position) {\r\n              nodes.push({\r\n                type: 'text',\r\n                value: node.value.slice(start, position)\r\n              })\r\n            }\r\n\r\n            if (Array.isArray(value)) {\r\n              nodes.push(...value)\r\n            } else if (value) {\r\n              nodes.push(value)\r\n            }\r\n\r\n            start = position + match[0].length\r\n            change = true\r\n          }\r\n\r\n          if (!find.global) {\r\n            break\r\n          }\r\n\r\n          match = find.exec(node.value)\r\n        }\r\n\r\n        if (change) {\r\n          if (start < node.value.length) {\r\n            nodes.push({type: 'text', value: node.value.slice(start)})\r\n          }\r\n\r\n          parent.children.splice(index, 1, ...nodes)\r\n        } else {\r\n          nodes = [node]\r\n        }\r\n\r\n        return index + nodes.length\r\n      }\r\n    }\r\n  )\r\n\r\n/**\r\n * Turn a schema into pairs.\r\n *\r\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\r\n *   Schema.\r\n * @returns {Pairs}\r\n *   Clean pairs.\r\n */\r\nfunction toPairs(schema) {\r\n  /** @type {Pairs} */\r\n  const result = []\r\n\r\n  if (typeof schema !== 'object') {\r\n    throw new TypeError('Expected array or object as schema')\r\n  }\r\n\r\n  if (Array.isArray(schema)) {\r\n    let index = -1\r\n\r\n    while (++index < schema.length) {\r\n      result.push([\r\n        toExpression(schema[index][0]),\r\n        toFunction(schema[index][1])\r\n      ])\r\n    }\r\n  } else {\r\n    /** @type {string} */\r\n    let key\r\n\r\n    for (key in schema) {\r\n      if (own.call(schema, key)) {\r\n        result.push([toExpression(key), toFunction(schema[key])])\r\n      }\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Turn a find into an expression.\r\n *\r\n * @param {Find} find\r\n *   Find.\r\n * @returns {RegExp}\r\n *   Expression.\r\n */\r\nfunction toExpression(find) {\r\n  return typeof find === 'string' ? new RegExp((0,escape_string_regexp__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(find), 'g') : find\r\n}\r\n\r\n/**\r\n * Turn a replace into a function.\r\n *\r\n * @param {Replace} replace\r\n *   Replace.\r\n * @returns {ReplaceFunction}\r\n *   Function.\r\n */\r\nfunction toFunction(replace) {\r\n  return typeof replace === 'function' ? replace : () => replace\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-find-and-replace/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-from-markdown/dev/index.js":
/*!************************************************************!*\
  !*** ./node_modules/mdast-util-from-markdown/dev/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.fromMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-from-markdown/dev/lib/index.js\");\n// Note: types exported from `index.d.ts`.\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1mcm9tLW1hcmtkb3duL2Rldi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQzJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWZyb20tbWFya2Rvd24vZGV2L2luZGV4LmpzP2Y5ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogdHlwZXMgZXhwb3J0ZWQgZnJvbSBgaW5kZXguZC50c2AuXHJcbmV4cG9ydCB7ZnJvbU1hcmtkb3dufSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-from-markdown/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-from-markdown/dev/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-from-markdown/dev/lib/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromMarkdown\": function() { return /* binding */ fromMarkdown; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var mdast_util_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mdast-util-to-string */ \"./node_modules/mdast-util-to-string/index.js\");\n/* harmony import */ var micromark_lib_parse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark/lib/parse.js */ \"./node_modules/micromark/dev/lib/parse.js\");\n/* harmony import */ var micromark_lib_preprocess_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark/lib/preprocess.js */ \"./node_modules/micromark/dev/lib/preprocess.js\");\n/* harmony import */ var micromark_lib_postprocess_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark/lib/postprocess.js */ \"./node_modules/micromark/dev/lib/postprocess.js\");\n/* harmony import */ var micromark_util_decode_numeric_character_reference__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! micromark-util-decode-numeric-character-reference */ \"./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js\");\n/* harmony import */ var micromark_util_decode_string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! micromark-util-decode-string */ \"./node_modules/micromark-util-decode-string/dev/index.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var decode_named_character_reference__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! decode-named-character-reference */ \"./node_modules/decode-named-character-reference/index.dom.js\");\n/* harmony import */ var unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! unist-util-stringify-position */ \"./node_modules/unist-util-stringify-position/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').Encoding} Encoding\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Value} Value\r\n *\r\n * @typedef {import('unist').Parent} UnistParent\r\n * @typedef {import('unist').Point} Point\r\n *\r\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\r\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').Break} Break\r\n * @typedef {import('mdast').Blockquote} Blockquote\r\n * @typedef {import('mdast').Code} Code\r\n * @typedef {import('mdast').Definition} Definition\r\n * @typedef {import('mdast').Emphasis} Emphasis\r\n * @typedef {import('mdast').Heading} Heading\r\n * @typedef {import('mdast').HTML} HTML\r\n * @typedef {import('mdast').Image} Image\r\n * @typedef {import('mdast').ImageReference} ImageReference\r\n * @typedef {import('mdast').InlineCode} InlineCode\r\n * @typedef {import('mdast').Link} Link\r\n * @typedef {import('mdast').LinkReference} LinkReference\r\n * @typedef {import('mdast').List} List\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('mdast').Paragraph} Paragraph\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast').Strong} Strong\r\n * @typedef {import('mdast').Text} Text\r\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\r\n * @typedef {import('mdast').ReferenceType} ReferenceType\r\n * @typedef {import('../index.js').CompileData} CompileData\r\n */\r\n\r\n/**\r\n * @typedef {Root | Content} Node\r\n * @typedef {Extract<Node, UnistParent>} Parent\r\n *\r\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\r\n */\r\n\r\n/**\r\n * @callback Transform\r\n *   Extra transform, to change the AST afterwards.\r\n * @param {Root} tree\r\n *   Tree to transform.\r\n * @returns {Root | undefined | null | void}\r\n *   New tree or nothing (in which case the current tree is used).\r\n *\r\n * @callback Handle\r\n *   Handle a token.\r\n * @param {CompileContext} this\r\n *   Context.\r\n * @param {Token} token\r\n *   Current token.\r\n * @returns {void}\r\n *   Nothing.\r\n *\r\n * @typedef {Record<string, Handle>} Handles\r\n *   Token types mapping to handles\r\n *\r\n * @callback OnEnterError\r\n *   Handle the case where the `right` token is open, but it is closed (by the\r\n *   `left` token) or because we reached the end of the document.\r\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\r\n *   Context.\r\n * @param {Token | undefined} left\r\n *   Left token.\r\n * @param {Token} right\r\n *   Right token.\r\n * @returns {void}\r\n *   Nothing.\r\n *\r\n * @callback OnExitError\r\n *   Handle the case where the `right` token is open but it is closed by\r\n *   exiting the `left` token.\r\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\r\n *   Context.\r\n * @param {Token} left\r\n *   Left token.\r\n * @param {Token} right\r\n *   Right token.\r\n * @returns {void}\r\n *   Nothing.\r\n *\r\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\r\n *   Open token on the stack, with an optional error handler for when\r\n *   that token isn’t closed properly.\r\n */\r\n\r\n/**\r\n * @typedef Config\r\n *   Configuration.\r\n *\r\n *   We have our defaults, but extensions will add more.\r\n * @property {Array<string>} canContainEols\r\n *   Token types where line endings are used.\r\n * @property {Handles} enter\r\n *   Opening handles.\r\n * @property {Handles} exit\r\n *   Closing handles.\r\n * @property {Array<Transform>} transforms\r\n *   Tree transforms.\r\n *\r\n * @typedef {Partial<Config>} Extension\r\n *   Change how markdown tokens from micromark are turned into mdast.\r\n *\r\n * @typedef CompileContext\r\n *   mdast compiler context.\r\n * @property {Array<Node | Fragment>} stack\r\n *   Stack of nodes.\r\n * @property {Array<TokenTuple>} tokenStack\r\n *   Stack of tokens.\r\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\r\n *   Get data from the key/value store.\r\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\r\n *   Set data into the key/value store.\r\n * @property {(this: CompileContext) => void} buffer\r\n *   Capture some of the output data.\r\n * @property {(this: CompileContext) => string} resume\r\n *   Stop capturing and access the output data.\r\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\r\n *   Enter a token.\r\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\r\n *   Exit a token.\r\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\r\n *   Get the string value of a token.\r\n * @property {Config} config\r\n *   Configuration.\r\n *\r\n * @typedef FromMarkdownOptions\r\n *   Configuration for how to build mdast.\r\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\r\n *   Extensions for this utility to change how tokens are turned into a tree.\r\n *\r\n * @typedef {ParseOptions & FromMarkdownOptions} Options\r\n *   Configuration.\r\n */\r\n\r\n// To do: micromark: create a registry of tokens?\r\n// To do: next major: don’t return given `Node` from `enter`.\r\n// To do: next major: remove setter/getter.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param value\r\n *   Markdown to parse.\r\n * @param encoding\r\n *   Character encoding for when `value` is `Buffer`.\r\n * @param options\r\n *   Configuration.\r\n * @returns\r\n *   mdast tree.\r\n */\r\nconst fromMarkdown =\r\n  /**\r\n   * @type {(\r\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\r\n   *   ((value: Value, options?: Options | null | undefined) => Root)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Value} value\r\n     * @param {Encoding | Options | null | undefined} [encoding]\r\n     * @param {Options | null | undefined} [options]\r\n     * @returns {Root}\r\n     */\r\n    function (value, encoding, options) {\r\n      if (typeof encoding !== 'string') {\r\n        options = encoding\r\n        encoding = undefined\r\n      }\r\n\r\n      return compiler(options)(\r\n        (0,micromark_lib_postprocess_js__WEBPACK_IMPORTED_MODULE_1__.postprocess)(\r\n          (0,micromark_lib_parse_js__WEBPACK_IMPORTED_MODULE_2__.parse)(options).document().write((0,micromark_lib_preprocess_js__WEBPACK_IMPORTED_MODULE_3__.preprocess)()(value, encoding, true))\r\n        )\r\n      )\r\n    }\r\n  )\r\n\r\n/**\r\n * Note this compiler only understand complete buffering, not streaming.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n */\r\nfunction compiler(options) {\r\n  /** @type {Config} */\r\n  const config = {\r\n    transforms: [],\r\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\r\n    enter: {\r\n      autolink: opener(link),\r\n      autolinkProtocol: onenterdata,\r\n      autolinkEmail: onenterdata,\r\n      atxHeading: opener(heading),\r\n      blockQuote: opener(blockQuote),\r\n      characterEscape: onenterdata,\r\n      characterReference: onenterdata,\r\n      codeFenced: opener(codeFlow),\r\n      codeFencedFenceInfo: buffer,\r\n      codeFencedFenceMeta: buffer,\r\n      codeIndented: opener(codeFlow, buffer),\r\n      codeText: opener(codeText, buffer),\r\n      codeTextData: onenterdata,\r\n      data: onenterdata,\r\n      codeFlowValue: onenterdata,\r\n      definition: opener(definition),\r\n      definitionDestinationString: buffer,\r\n      definitionLabelString: buffer,\r\n      definitionTitleString: buffer,\r\n      emphasis: opener(emphasis),\r\n      hardBreakEscape: opener(hardBreak),\r\n      hardBreakTrailing: opener(hardBreak),\r\n      htmlFlow: opener(html, buffer),\r\n      htmlFlowData: onenterdata,\r\n      htmlText: opener(html, buffer),\r\n      htmlTextData: onenterdata,\r\n      image: opener(image),\r\n      label: buffer,\r\n      link: opener(link),\r\n      listItem: opener(listItem),\r\n      listItemValue: onenterlistitemvalue,\r\n      listOrdered: opener(list, onenterlistordered),\r\n      listUnordered: opener(list),\r\n      paragraph: opener(paragraph),\r\n      reference: onenterreference,\r\n      referenceString: buffer,\r\n      resourceDestinationString: buffer,\r\n      resourceTitleString: buffer,\r\n      setextHeading: opener(heading),\r\n      strong: opener(strong),\r\n      thematicBreak: opener(thematicBreak)\r\n    },\r\n    exit: {\r\n      atxHeading: closer(),\r\n      atxHeadingSequence: onexitatxheadingsequence,\r\n      autolink: closer(),\r\n      autolinkEmail: onexitautolinkemail,\r\n      autolinkProtocol: onexitautolinkprotocol,\r\n      blockQuote: closer(),\r\n      characterEscapeValue: onexitdata,\r\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\r\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\r\n      characterReferenceValue: onexitcharacterreferencevalue,\r\n      codeFenced: closer(onexitcodefenced),\r\n      codeFencedFence: onexitcodefencedfence,\r\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\r\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\r\n      codeFlowValue: onexitdata,\r\n      codeIndented: closer(onexitcodeindented),\r\n      codeText: closer(onexitcodetext),\r\n      codeTextData: onexitdata,\r\n      data: onexitdata,\r\n      definition: closer(),\r\n      definitionDestinationString: onexitdefinitiondestinationstring,\r\n      definitionLabelString: onexitdefinitionlabelstring,\r\n      definitionTitleString: onexitdefinitiontitlestring,\r\n      emphasis: closer(),\r\n      hardBreakEscape: closer(onexithardbreak),\r\n      hardBreakTrailing: closer(onexithardbreak),\r\n      htmlFlow: closer(onexithtmlflow),\r\n      htmlFlowData: onexitdata,\r\n      htmlText: closer(onexithtmltext),\r\n      htmlTextData: onexitdata,\r\n      image: closer(onexitimage),\r\n      label: onexitlabel,\r\n      labelText: onexitlabeltext,\r\n      lineEnding: onexitlineending,\r\n      link: closer(onexitlink),\r\n      listItem: closer(),\r\n      listOrdered: closer(),\r\n      listUnordered: closer(),\r\n      paragraph: closer(),\r\n      referenceString: onexitreferencestring,\r\n      resourceDestinationString: onexitresourcedestinationstring,\r\n      resourceTitleString: onexitresourcetitlestring,\r\n      resource: onexitresource,\r\n      setextHeading: closer(onexitsetextheading),\r\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\r\n      setextHeadingText: onexitsetextheadingtext,\r\n      strong: closer(),\r\n      thematicBreak: closer()\r\n    }\r\n  }\r\n\r\n  configure(config, (options || {}).mdastExtensions || [])\r\n\r\n  /** @type {CompileData} */\r\n  const data = {}\r\n\r\n  return compile\r\n\r\n  /**\r\n   * Turn micromark events into an mdast tree.\r\n   *\r\n   * @param {Array<Event>} events\r\n   *   Events.\r\n   * @returns {Root}\r\n   *   mdast tree.\r\n   */\r\n  function compile(events) {\r\n    /** @type {Root} */\r\n    let tree = {type: 'root', children: []}\r\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\r\n    const context = {\r\n      stack: [tree],\r\n      tokenStack: [],\r\n      config,\r\n      enter,\r\n      exit,\r\n      buffer,\r\n      resume,\r\n      setData,\r\n      getData\r\n    }\r\n    /** @type {Array<number>} */\r\n    const listStack = []\r\n    let index = -1\r\n\r\n    while (++index < events.length) {\r\n      // We preprocess lists to add `listItem` tokens, and to infer whether\r\n      // items the list itself are spread out.\r\n      if (\r\n        events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listOrdered ||\r\n        events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listUnordered\r\n      ) {\r\n        if (events[index][0] === 'enter') {\r\n          listStack.push(index)\r\n        } else {\r\n          const tail = listStack.pop()\r\n          ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tail === 'number', 'expected list ot be open')\r\n          index = prepareList(events, tail, index)\r\n        }\r\n      }\r\n    }\r\n\r\n    index = -1\r\n\r\n    while (++index < events.length) {\r\n      const handler = config[events[index][0]]\r\n\r\n      if (own.call(handler, events[index][1].type)) {\r\n        handler[events[index][1].type].call(\r\n          Object.assign(\r\n            {sliceSerialize: events[index][2].sliceSerialize},\r\n            context\r\n          ),\r\n          events[index][1]\r\n        )\r\n      }\r\n    }\r\n\r\n    // Handle tokens still being open.\r\n    if (context.tokenStack.length > 0) {\r\n      const tail = context.tokenStack[context.tokenStack.length - 1]\r\n      const handler = tail[1] || defaultOnError\r\n      handler.call(context, undefined, tail[0])\r\n    }\r\n\r\n    // Figure out `root` position.\r\n    tree.position = {\r\n      start: point(\r\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\r\n      ),\r\n      end: point(\r\n        events.length > 0\r\n          ? events[events.length - 2][1].end\r\n          : {line: 1, column: 1, offset: 0}\r\n      )\r\n    }\r\n\r\n    // Call transforms.\r\n    index = -1\r\n    while (++index < config.transforms.length) {\r\n      tree = config.transforms[index](tree) || tree\r\n    }\r\n\r\n    return tree\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Event>} events\r\n   * @param {number} start\r\n   * @param {number} length\r\n   * @returns {number}\r\n   */\r\n  function prepareList(events, start, length) {\r\n    let index = start - 1\r\n    let containerBalance = -1\r\n    let listSpread = false\r\n    /** @type {Token | undefined} */\r\n    let listItem\r\n    /** @type {number | undefined} */\r\n    let lineIndex\r\n    /** @type {number | undefined} */\r\n    let firstBlankLineIndex\r\n    /** @type {boolean | undefined} */\r\n    let atMarker\r\n\r\n    while (++index <= length) {\r\n      const event = events[index]\r\n\r\n      if (\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listUnordered ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listOrdered ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.blockQuote\r\n      ) {\r\n        if (event[0] === 'enter') {\r\n          containerBalance++\r\n        } else {\r\n          containerBalance--\r\n        }\r\n\r\n        atMarker = undefined\r\n      } else if (event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEndingBlank) {\r\n        if (event[0] === 'enter') {\r\n          if (\r\n            listItem &&\r\n            !atMarker &&\r\n            !containerBalance &&\r\n            !firstBlankLineIndex\r\n          ) {\r\n            firstBlankLineIndex = index\r\n          }\r\n\r\n          atMarker = undefined\r\n        }\r\n      } else if (\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemValue ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemMarker ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemPrefix ||\r\n        event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemPrefixWhitespace\r\n      ) {\r\n        // Empty.\r\n      } else {\r\n        atMarker = undefined\r\n      }\r\n\r\n      if (\r\n        (!containerBalance &&\r\n          event[0] === 'enter' &&\r\n          event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemPrefix) ||\r\n        (containerBalance === -1 &&\r\n          event[0] === 'exit' &&\r\n          (event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listUnordered ||\r\n            event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listOrdered))\r\n      ) {\r\n        if (listItem) {\r\n          let tailIndex = index\r\n          lineIndex = undefined\r\n\r\n          while (tailIndex--) {\r\n            const tailEvent = events[tailIndex]\r\n\r\n            if (\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding ||\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEndingBlank\r\n            ) {\r\n              if (tailEvent[0] === 'exit') continue\r\n\r\n              if (lineIndex) {\r\n                events[lineIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEndingBlank\r\n                listSpread = true\r\n              }\r\n\r\n              tailEvent[1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding\r\n              lineIndex = tailIndex\r\n            } else if (\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix ||\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.blockQuotePrefix ||\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.blockQuotePrefixWhitespace ||\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.blockQuoteMarker ||\r\n              tailEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemIndent\r\n            ) {\r\n              // Empty\r\n            } else {\r\n              break\r\n            }\r\n          }\r\n\r\n          if (\r\n            firstBlankLineIndex &&\r\n            (!lineIndex || firstBlankLineIndex < lineIndex)\r\n          ) {\r\n            listItem._spread = true\r\n          }\r\n\r\n          // Fix position.\r\n          listItem.end = Object.assign(\r\n            {},\r\n            lineIndex ? events[lineIndex][1].start : event[1].end\r\n          )\r\n\r\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\r\n          index++\r\n          length++\r\n        }\r\n\r\n        // Create a new list item.\r\n        if (event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.listItemPrefix) {\r\n          listItem = {\r\n            type: 'listItem',\r\n            _spread: false,\r\n            start: Object.assign({}, event[1].start),\r\n            // @ts-expect-error: we’ll add `end` in a second.\r\n            end: undefined\r\n          }\r\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\r\n          events.splice(index, 0, ['enter', listItem, event[2]])\r\n          index++\r\n          length++\r\n          firstBlankLineIndex = undefined\r\n          atMarker = true\r\n        }\r\n      }\r\n    }\r\n\r\n    events[start][1]._spread = listSpread\r\n    return length\r\n  }\r\n\r\n  /**\r\n   * Set data.\r\n   *\r\n   * @template {keyof CompileData} Key\r\n   *   Field type.\r\n   * @param {Key} key\r\n   *   Key of field.\r\n   * @param {CompileData[Key]} [value]\r\n   *   New value.\r\n   * @returns {void}\r\n   *   Nothing.\r\n   */\r\n  function setData(key, value) {\r\n    data[key] = value\r\n  }\r\n\r\n  /**\r\n   * Get data.\r\n   *\r\n   * @template {keyof CompileData} Key\r\n   *   Field type.\r\n   * @param {Key} key\r\n   *   Key of field.\r\n   * @returns {CompileData[Key]}\r\n   *   Value.\r\n   */\r\n  function getData(key) {\r\n    return data[key]\r\n  }\r\n\r\n  /**\r\n   * Create an opener handle.\r\n   *\r\n   * @param {(token: Token) => Node} create\r\n   *   Create a node.\r\n   * @param {Handle} [and]\r\n   *   Optional function to also run.\r\n   * @returns {Handle}\r\n   *   Handle.\r\n   */\r\n  function opener(create, and) {\r\n    return open\r\n\r\n    /**\r\n     * @this {CompileContext}\r\n     * @param {Token} token\r\n     * @returns {void}\r\n     */\r\n    function open(token) {\r\n      enter.call(this, create(token), token)\r\n      if (and) and.call(this, token)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @returns {void}\r\n   */\r\n  function buffer() {\r\n    this.stack.push({type: 'fragment', children: []})\r\n  }\r\n\r\n  /**\r\n   * @template {Node} Kind\r\n   *   Node type.\r\n   * @this {CompileContext}\r\n   *   Context.\r\n   * @param {Kind} node\r\n   *   Node to enter.\r\n   * @param {Token} token\r\n   *   Corresponding token.\r\n   * @param {OnEnterError | undefined} [errorHandler]\r\n   *   Handle the case where this token is open, but it is closed by something else.\r\n   * @returns {Kind}\r\n   *   The given node.\r\n   */\r\n  function enter(node, token, errorHandler) {\r\n    const parent = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(parent, 'expected `parent`')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)('children' in parent, 'expected `parent`')\r\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\r\n    parent.children.push(node)\r\n    this.stack.push(node)\r\n    this.tokenStack.push([token, errorHandler])\r\n    // @ts-expect-error: `end` will be patched later.\r\n    node.position = {start: point(token.start)}\r\n    return node\r\n  }\r\n\r\n  /**\r\n   * Create a closer handle.\r\n   *\r\n   * @param {Handle} [and]\r\n   *   Optional function to also run.\r\n   * @returns {Handle}\r\n   *   Handle.\r\n   */\r\n  function closer(and) {\r\n    return close\r\n\r\n    /**\r\n     * @this {CompileContext}\r\n     * @param {Token} token\r\n     * @returns {void}\r\n     */\r\n    function close(token) {\r\n      if (and) and.call(this, token)\r\n      exit.call(this, token)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   *   Context.\r\n   * @param {Token} token\r\n   *   Corresponding token.\r\n   * @param {OnExitError | undefined} [onExitError]\r\n   *   Handle the case where another token is open.\r\n   * @returns {Node}\r\n   *   The closed node.\r\n   */\r\n  function exit(token, onExitError) {\r\n    const node = this.stack.pop()\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected `node`')\r\n    const open = this.tokenStack.pop()\r\n\r\n    if (!open) {\r\n      throw new Error(\r\n        'Cannot close `' +\r\n          token.type +\r\n          '` (' +\r\n          (0,unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_5__.stringifyPosition)({start: token.start, end: token.end}) +\r\n          '): it’s not open'\r\n      )\r\n    } else if (open[0].type !== token.type) {\r\n      if (onExitError) {\r\n        onExitError.call(this, token, open[0])\r\n      } else {\r\n        const handler = open[1] || defaultOnError\r\n        handler.call(this, token, open[0])\r\n      }\r\n    }\r\n\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type !== 'fragment', 'unexpected fragment `exit`ed')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.position, 'expected `position` to be defined')\r\n    node.position.end = point(token.end)\r\n    return node\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @returns {string}\r\n   */\r\n  function resume() {\r\n    return (0,mdast_util_to_string__WEBPACK_IMPORTED_MODULE_6__.toString)(this.stack.pop())\r\n  }\r\n\r\n  //\r\n  // Handlers.\r\n  //\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onenterlistordered() {\r\n    setData('expectingFirstListItemValue', true)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onenterlistitemvalue(token) {\r\n    if (getData('expectingFirstListItemValue')) {\r\n      const ancestor = this.stack[this.stack.length - 2]\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(ancestor, 'expected nodes on stack')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(ancestor.type === 'list', 'expected list on stack')\r\n      ancestor.start = Number.parseInt(\r\n        this.sliceSerialize(token),\r\n        micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_7__.constants.numericBaseDecimal\r\n      )\r\n      setData('expectingFirstListItemValue')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcodefencedfenceinfo() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'code', 'expected code on stack')\r\n    node.lang = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcodefencedfencemeta() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'code', 'expected code on stack')\r\n    node.meta = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcodefencedfence() {\r\n    // Exit if this is the closing fence.\r\n    if (getData('flowCodeInside')) return\r\n    this.buffer()\r\n    setData('flowCodeInside', true)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcodefenced() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'code', 'expected code on stack')\r\n\r\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\r\n    setData('flowCodeInside')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcodeindented() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'code', 'expected code on stack')\r\n\r\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitdefinitionlabelstring(token) {\r\n    const label = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'definition', 'expected definition on stack')\r\n\r\n    node.label = label\r\n    node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_8__.normalizeIdentifier)(\r\n      this.sliceSerialize(token)\r\n    ).toLowerCase()\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitdefinitiontitlestring() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'definition', 'expected definition on stack')\r\n\r\n    node.title = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitdefinitiondestinationstring() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'definition', 'expected definition on stack')\r\n\r\n    node.url = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitatxheadingsequence(token) {\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'heading', 'expected heading on stack')\r\n\r\n    if (!node.depth) {\r\n      const depth = this.sliceSerialize(token).length\r\n\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n        depth === 1 ||\r\n          depth === 2 ||\r\n          depth === 3 ||\r\n          depth === 4 ||\r\n          depth === 5 ||\r\n          depth === 6,\r\n        'expected `depth` between `1` and `6`'\r\n      )\r\n\r\n      node.depth = depth\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitsetextheadingtext() {\r\n    setData('setextHeadingSlurpLineEnding', true)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitsetextheadinglinesequence(token) {\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'heading', 'expected heading on stack')\r\n\r\n    node.depth =\r\n      this.sliceSerialize(token).charCodeAt(0) === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_9__.codes.equalsTo ? 1 : 2\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitsetextheading() {\r\n    setData('setextHeadingSlurpLineEnding')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onenterdata(token) {\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)('children' in node, 'expected parent on stack')\r\n\r\n    let tail = node.children[node.children.length - 1]\r\n\r\n    if (!tail || tail.type !== 'text') {\r\n      // Add a new text node.\r\n      tail = text()\r\n      // @ts-expect-error: we’ll add `end` later.\r\n      tail.position = {start: point(token.start)}\r\n      // @ts-expect-error: Assume `parent` accepts `text`.\r\n      node.children.push(tail)\r\n    }\r\n\r\n    this.stack.push(tail)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitdata(token) {\r\n    const tail = this.stack.pop()\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tail, 'expected a `node` to be on the stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)('value' in tail, 'expected a `literal` to be on the stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tail.position, 'expected `node` to have an open position')\r\n    tail.value += this.sliceSerialize(token)\r\n    tail.position.end = point(token.end)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitlineending(token) {\r\n    const context = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(context, 'expected `node`')\r\n\r\n    // If we’re at a hard break, include the line ending in there.\r\n    if (getData('atHardBreak')) {\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)('children' in context, 'expected `parent`')\r\n      const tail = context.children[context.children.length - 1]\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tail.position, 'expected tail to have a starting position')\r\n      tail.position.end = point(token.end)\r\n      setData('atHardBreak')\r\n      return\r\n    }\r\n\r\n    if (\r\n      !getData('setextHeadingSlurpLineEnding') &&\r\n      config.canContainEols.includes(context.type)\r\n    ) {\r\n      onenterdata.call(this, token)\r\n      onexitdata.call(this, token)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexithardbreak() {\r\n    setData('atHardBreak', true)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexithtmlflow() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'html', 'expected html on stack')\r\n\r\n    node.value = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexithtmltext() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'html', 'expected html on stack')\r\n\r\n    node.value = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitcodetext() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'inlineCode', 'expected inline code on stack')\r\n\r\n    node.value = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitlink() {\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'link', 'expected link on stack')\r\n\r\n    // Note: there are also `identifier` and `label` fields on this link node!\r\n    // These are used / cleaned here.\r\n\r\n    // To do: clean.\r\n    if (getData('inReference')) {\r\n      /** @type {ReferenceType} */\r\n      const referenceType = getData('referenceType') || 'shortcut'\r\n\r\n      node.type += 'Reference'\r\n      // @ts-expect-error: mutate.\r\n      node.referenceType = referenceType\r\n      // @ts-expect-error: mutate.\r\n      delete node.url\r\n      delete node.title\r\n    } else {\r\n      // @ts-expect-error: mutate.\r\n      delete node.identifier\r\n      // @ts-expect-error: mutate.\r\n      delete node.label\r\n    }\r\n\r\n    setData('referenceType')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitimage() {\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'image', 'expected image on stack')\r\n\r\n    // Note: there are also `identifier` and `label` fields on this link node!\r\n    // These are used / cleaned here.\r\n\r\n    // To do: clean.\r\n    if (getData('inReference')) {\r\n      /** @type {ReferenceType} */\r\n      const referenceType = getData('referenceType') || 'shortcut'\r\n\r\n      node.type += 'Reference'\r\n      // @ts-expect-error: mutate.\r\n      node.referenceType = referenceType\r\n      // @ts-expect-error: mutate.\r\n      delete node.url\r\n      delete node.title\r\n    } else {\r\n      // @ts-expect-error: mutate.\r\n      delete node.identifier\r\n      // @ts-expect-error: mutate.\r\n      delete node.label\r\n    }\r\n\r\n    setData('referenceType')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitlabeltext(token) {\r\n    const string = this.sliceSerialize(token)\r\n    const ancestor = this.stack[this.stack.length - 2]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(ancestor, 'expected ancestor on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      ancestor.type === 'image' || ancestor.type === 'link',\r\n      'expected image or link on stack'\r\n    )\r\n\r\n    // @ts-expect-error: stash this on the node, as it might become a reference\r\n    // later.\r\n    ancestor.label = (0,micromark_util_decode_string__WEBPACK_IMPORTED_MODULE_10__.decodeString)(string)\r\n    // @ts-expect-error: same as above.\r\n    ancestor.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_8__.normalizeIdentifier)(string).toLowerCase()\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitlabel() {\r\n    const fragment = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(fragment, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(fragment.type === 'fragment', 'expected fragment on stack')\r\n    const value = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      node.type === 'image' || node.type === 'link',\r\n      'expected image or link on stack'\r\n    )\r\n\r\n    // Assume a reference.\r\n    setData('inReference', true)\r\n\r\n    if (node.type === 'link') {\r\n      /** @type {Array<StaticPhrasingContent>} */\r\n      // @ts-expect-error: Assume static phrasing content.\r\n      const children = fragment.children\r\n\r\n      node.children = children\r\n    } else {\r\n      node.alt = value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitresourcedestinationstring() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      node.type === 'image' || node.type === 'link',\r\n      'expected image or link on stack'\r\n    )\r\n    node.url = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitresourcetitlestring() {\r\n    const data = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      node.type === 'image' || node.type === 'link',\r\n      'expected image or link on stack'\r\n    )\r\n    node.title = data\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitresource() {\r\n    setData('inReference')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onenterreference() {\r\n    setData('referenceType', 'collapsed')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitreferencestring(token) {\r\n    const label = this.resume()\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      node.type === 'image' || node.type === 'link',\r\n      'expected image reference or link reference on stack'\r\n    )\r\n\r\n    // @ts-expect-error: stash this on the node, as it might become a reference\r\n    // later.\r\n    node.label = label\r\n    // @ts-expect-error: same as above.\r\n    node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_8__.normalizeIdentifier)(\r\n      this.sliceSerialize(token)\r\n    ).toLowerCase()\r\n    setData('referenceType', 'full')\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n\r\n  function onexitcharacterreferencemarker(token) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      token.type === 'characterReferenceMarkerNumeric' ||\r\n        token.type === 'characterReferenceMarkerHexadecimal'\r\n    )\r\n    setData('characterReferenceType', token.type)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitcharacterreferencevalue(token) {\r\n    const data = this.sliceSerialize(token)\r\n    const type = getData('characterReferenceType')\r\n    /** @type {string} */\r\n    let value\r\n\r\n    if (type) {\r\n      value = (0,micromark_util_decode_numeric_character_reference__WEBPACK_IMPORTED_MODULE_11__.decodeNumericCharacterReference)(\r\n        data,\r\n        type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.characterReferenceMarkerNumeric\r\n          ? micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_7__.constants.numericBaseDecimal\r\n          : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_7__.constants.numericBaseHexadecimal\r\n      )\r\n      setData('characterReferenceType')\r\n    } else {\r\n      const result = (0,decode_named_character_reference__WEBPACK_IMPORTED_MODULE_12__.decodeNamedCharacterReference)(data)\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(result !== false, 'expected reference to decode')\r\n      value = result\r\n    }\r\n\r\n    const tail = this.stack.pop()\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tail, 'expected `node`')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tail.position, 'expected `node.position`')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)('value' in tail, 'expected `node.value`')\r\n    tail.value += value\r\n    tail.position.end = point(token.end)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitautolinkprotocol(token) {\r\n    onexitdata.call(this, token)\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'link', 'expected link on stack')\r\n\r\n    node.url = this.sliceSerialize(token)\r\n  }\r\n\r\n  /**\r\n   * @this {CompileContext}\r\n   * @type {Handle}\r\n   */\r\n  function onexitautolinkemail(token) {\r\n    onexitdata.call(this, token)\r\n    const node = this.stack[this.stack.length - 1]\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node, 'expected node on stack')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(node.type === 'link', 'expected link on stack')\r\n\r\n    node.url = 'mailto:' + this.sliceSerialize(token)\r\n  }\r\n\r\n  //\r\n  // Creaters.\r\n  //\r\n\r\n  /** @returns {Blockquote} */\r\n  function blockQuote() {\r\n    return {type: 'blockquote', children: []}\r\n  }\r\n\r\n  /** @returns {Code} */\r\n  function codeFlow() {\r\n    return {type: 'code', lang: null, meta: null, value: ''}\r\n  }\r\n\r\n  /** @returns {InlineCode} */\r\n  function codeText() {\r\n    return {type: 'inlineCode', value: ''}\r\n  }\r\n\r\n  /** @returns {Definition} */\r\n  function definition() {\r\n    return {\r\n      type: 'definition',\r\n      identifier: '',\r\n      label: null,\r\n      title: null,\r\n      url: ''\r\n    }\r\n  }\r\n\r\n  /** @returns {Emphasis} */\r\n  function emphasis() {\r\n    return {type: 'emphasis', children: []}\r\n  }\r\n\r\n  /** @returns {Heading} */\r\n  function heading() {\r\n    // @ts-expect-error `depth` will be set later.\r\n    return {type: 'heading', depth: undefined, children: []}\r\n  }\r\n\r\n  /** @returns {Break} */\r\n  function hardBreak() {\r\n    return {type: 'break'}\r\n  }\r\n\r\n  /** @returns {HTML} */\r\n  function html() {\r\n    return {type: 'html', value: ''}\r\n  }\r\n\r\n  /** @returns {Image} */\r\n  function image() {\r\n    return {type: 'image', title: null, url: '', alt: null}\r\n  }\r\n\r\n  /** @returns {Link} */\r\n  function link() {\r\n    return {type: 'link', title: null, url: '', children: []}\r\n  }\r\n\r\n  /**\r\n   * @param {Token} token\r\n   * @returns {List}\r\n   */\r\n  function list(token) {\r\n    return {\r\n      type: 'list',\r\n      ordered: token.type === 'listOrdered',\r\n      start: null,\r\n      spread: token._spread,\r\n      children: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Token} token\r\n   * @returns {ListItem}\r\n   */\r\n  function listItem(token) {\r\n    return {\r\n      type: 'listItem',\r\n      spread: token._spread,\r\n      checked: null,\r\n      children: []\r\n    }\r\n  }\r\n\r\n  /** @returns {Paragraph} */\r\n  function paragraph() {\r\n    return {type: 'paragraph', children: []}\r\n  }\r\n\r\n  /** @returns {Strong} */\r\n  function strong() {\r\n    return {type: 'strong', children: []}\r\n  }\r\n\r\n  /** @returns {Text} */\r\n  function text() {\r\n    return {type: 'text', value: ''}\r\n  }\r\n\r\n  /** @returns {ThematicBreak} */\r\n  function thematicBreak() {\r\n    return {type: 'thematicBreak'}\r\n  }\r\n}\r\n\r\n/**\r\n * Copy a point-like value.\r\n *\r\n * @param {Point} d\r\n *   Point-like value.\r\n * @returns {Point}\r\n *   unist point.\r\n */\r\nfunction point(d) {\r\n  return {line: d.line, column: d.column, offset: d.offset}\r\n}\r\n\r\n/**\r\n * @param {Config} combined\r\n * @param {Array<Extension | Array<Extension>>} extensions\r\n * @returns {void}\r\n */\r\nfunction configure(combined, extensions) {\r\n  let index = -1\r\n\r\n  while (++index < extensions.length) {\r\n    const value = extensions[index]\r\n\r\n    if (Array.isArray(value)) {\r\n      configure(combined, value)\r\n    } else {\r\n      extension(combined, value)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Config} combined\r\n * @param {Extension} extension\r\n * @returns {void}\r\n */\r\nfunction extension(combined, extension) {\r\n  /** @type {keyof Extension} */\r\n  let key\r\n\r\n  for (key in extension) {\r\n    if (own.call(extension, key)) {\r\n      if (key === 'canContainEols') {\r\n        const right = extension[key]\r\n        if (right) {\r\n          combined[key].push(...right)\r\n        }\r\n      } else if (key === 'transforms') {\r\n        const right = extension[key]\r\n        if (right) {\r\n          combined[key].push(...right)\r\n        }\r\n      } else if (key === 'enter' || key === 'exit') {\r\n        const right = extension[key]\r\n        if (right) {\r\n          Object.assign(combined[key], right)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/** @type {OnEnterError} */\r\nfunction defaultOnError(left, right) {\r\n  if (left) {\r\n    throw new Error(\r\n      'Cannot close `' +\r\n        left.type +\r\n        '` (' +\r\n        (0,unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_5__.stringifyPosition)({start: left.start, end: left.end}) +\r\n        '): a different token (`' +\r\n        right.type +\r\n        '`, ' +\r\n        (0,unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_5__.stringifyPosition)({start: right.start, end: right.end}) +\r\n        ') is open'\r\n    )\r\n  } else {\r\n    throw new Error(\r\n      'Cannot close document, a token (`' +\r\n        right.type +\r\n        '`, ' +\r\n        (0,unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_5__.stringifyPosition)({start: right.start, end: right.end}) +\r\n        ') is still open'\r\n    )\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-from-markdown/dev/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-autolink-literal/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-autolink-literal/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmAutolinkLiteralFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmAutolinkLiteralFromMarkdown; },\n/* harmony export */   \"gfmAutolinkLiteralToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmAutolinkLiteralToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm-autolink-literal/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tYXV0b2xpbmstbGl0ZXJhbC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFHdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtZ2ZtLWF1dG9saW5rLWxpdGVyYWwvaW5kZXguanM/ZTFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge1xyXG4gIGdmbUF1dG9saW5rTGl0ZXJhbEZyb21NYXJrZG93bixcclxuICBnZm1BdXRvbGlua0xpdGVyYWxUb01hcmtkb3duXHJcbn0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-autolink-literal/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-autolink-literal/lib/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-autolink-literal/lib/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmAutolinkLiteralFromMarkdown\": function() { return /* binding */ gfmAutolinkLiteralFromMarkdown; },\n/* harmony export */   \"gfmAutolinkLiteralToMarkdown\": function() { return /* binding */ gfmAutolinkLiteralToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var ccount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ccount */ \"./node_modules/ccount/index.js\");\n/* harmony import */ var mdast_util_find_and_replace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-find-and-replace */ \"./node_modules/mdast-util-find-and-replace/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/**\r\n * @typedef {import('mdast').Link} Link\r\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\r\n *\r\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\r\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\r\n *\r\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n *\r\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\r\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/** @type {ConstructName} */\r\nconst inConstruct = 'phrasing'\r\n/** @type {Array<ConstructName>} */\r\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\r\n\r\n// To do: next major: expose functions instead of extensions.\r\n\r\n/**\r\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\r\n *\r\n * @type {FromMarkdownExtension}\r\n */\r\nconst gfmAutolinkLiteralFromMarkdown = {\r\n  transforms: [transformGfmAutolinkLiterals],\r\n  enter: {\r\n    literalAutolink: enterLiteralAutolink,\r\n    literalAutolinkEmail: enterLiteralAutolinkValue,\r\n    literalAutolinkHttp: enterLiteralAutolinkValue,\r\n    literalAutolinkWww: enterLiteralAutolinkValue\r\n  },\r\n  exit: {\r\n    literalAutolink: exitLiteralAutolink,\r\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\r\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\r\n    literalAutolinkWww: exitLiteralAutolinkWww\r\n  }\r\n}\r\n\r\n/**\r\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\r\n *\r\n * @type {ToMarkdownExtension}\r\n */\r\nconst gfmAutolinkLiteralToMarkdown = {\r\n  unsafe: [\r\n    {\r\n      character: '@',\r\n      before: '[+\\\\-.\\\\w]',\r\n      after: '[\\\\-.\\\\w]',\r\n      inConstruct,\r\n      notInConstruct\r\n    },\r\n    {\r\n      character: '.',\r\n      before: '[Ww]',\r\n      after: '[\\\\-.\\\\w]',\r\n      inConstruct,\r\n      notInConstruct\r\n    },\r\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\r\n  ]\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterLiteralAutolink(token) {\r\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterLiteralAutolinkValue(token) {\r\n  this.config.enter.autolinkProtocol.call(this, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitLiteralAutolinkHttp(token) {\r\n  this.config.exit.autolinkProtocol.call(this, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitLiteralAutolinkWww(token) {\r\n  this.config.exit.data.call(this, token)\r\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\r\n  node.url = 'http://' + this.sliceSerialize(token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitLiteralAutolinkEmail(token) {\r\n  this.config.exit.autolinkEmail.call(this, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitLiteralAutolink(token) {\r\n  this.exit(token)\r\n}\r\n\r\n/** @type {FromMarkdownTransform} */\r\nfunction transformGfmAutolinkLiterals(tree) {\r\n  (0,mdast_util_find_and_replace__WEBPACK_IMPORTED_MODULE_0__.findAndReplace)(\r\n    tree,\r\n    [\r\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\r\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\r\n    ],\r\n    {ignore: ['link', 'linkReference']}\r\n  )\r\n}\r\n\r\n/**\r\n * @type {ReplaceFunction}\r\n * @param {string} _\r\n * @param {string} protocol\r\n * @param {string} domain\r\n * @param {string} path\r\n * @param {RegExpMatchObject} match\r\n * @returns {Link | Array<PhrasingContent> | false}\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction findUrl(_, protocol, domain, path, match) {\r\n  let prefix = ''\r\n\r\n  // Not an expected previous character.\r\n  if (!previous(match)) {\r\n    return false\r\n  }\r\n\r\n  // Treat `www` as part of the domain.\r\n  if (/^w/i.test(protocol)) {\r\n    domain = protocol + domain\r\n    protocol = ''\r\n    prefix = 'http://'\r\n  }\r\n\r\n  if (!isCorrectDomain(domain)) {\r\n    return false\r\n  }\r\n\r\n  const parts = splitUrl(domain + path)\r\n\r\n  if (!parts[0]) return false\r\n\r\n  /** @type {Link} */\r\n  const result = {\r\n    type: 'link',\r\n    title: null,\r\n    url: prefix + protocol + parts[0],\r\n    children: [{type: 'text', value: protocol + parts[0]}]\r\n  }\r\n\r\n  if (parts[1]) {\r\n    return [result, {type: 'text', value: parts[1]}]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * @type {ReplaceFunction}\r\n * @param {string} _\r\n * @param {string} atext\r\n * @param {string} label\r\n * @param {RegExpMatchObject} match\r\n * @returns {Link | false}\r\n */\r\nfunction findEmail(_, atext, label, match) {\r\n  if (\r\n    // Not an expected previous character.\r\n    !previous(match, true) ||\r\n    // Label ends in not allowed character.\r\n    /[-\\d_]$/.test(label)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return {\r\n    type: 'link',\r\n    title: null,\r\n    url: 'mailto:' + atext + '@' + label,\r\n    children: [{type: 'text', value: atext + '@' + label}]\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} domain\r\n * @returns {boolean}\r\n */\r\nfunction isCorrectDomain(domain) {\r\n  const parts = domain.split('.')\r\n\r\n  if (\r\n    parts.length < 2 ||\r\n    (parts[parts.length - 1] &&\r\n      (/_/.test(parts[parts.length - 1]) ||\r\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\r\n    (parts[parts.length - 2] &&\r\n      (/_/.test(parts[parts.length - 2]) ||\r\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {[string, string | undefined]}\r\n */\r\nfunction splitUrl(url) {\r\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\r\n\r\n  if (!trailExec) {\r\n    return [url, undefined]\r\n  }\r\n\r\n  url = url.slice(0, trailExec.index)\r\n\r\n  let trail = trailExec[0]\r\n  let closingParenIndex = trail.indexOf(')')\r\n  const openingParens = (0,ccount__WEBPACK_IMPORTED_MODULE_1__.ccount)(url, '(')\r\n  let closingParens = (0,ccount__WEBPACK_IMPORTED_MODULE_1__.ccount)(url, ')')\r\n\r\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\r\n    url += trail.slice(0, closingParenIndex + 1)\r\n    trail = trail.slice(closingParenIndex + 1)\r\n    closingParenIndex = trail.indexOf(')')\r\n    closingParens++\r\n  }\r\n\r\n  return [url, trail]\r\n}\r\n\r\n/**\r\n * @param {RegExpMatchObject} match\r\n * @param {boolean | null | undefined} [email=false]\r\n * @returns {boolean}\r\n */\r\nfunction previous(match, email) {\r\n  const code = match.input.charCodeAt(match.index - 1)\r\n\r\n  return (\r\n    (match.index === 0 ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodeWhitespace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodePunctuation)(code)) &&\r\n    (!email || code !== 47)\r\n  )\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-autolink-literal/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-footnote/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/mdast-util-gfm-footnote/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmFootnoteFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmFootnoteFromMarkdown; },\n/* harmony export */   \"gfmFootnoteToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmFootnoteToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm-footnote/lib/index.js\");\n// Note: extra types exported from `index.d.ts`.\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tZm9vdG5vdGUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDNkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtZ2ZtLWZvb3Rub3RlL2luZGV4LmpzP2M2MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogZXh0cmEgdHlwZXMgZXhwb3J0ZWQgZnJvbSBgaW5kZXguZC50c2AuXHJcbmV4cG9ydCB7Z2ZtRm9vdG5vdGVGcm9tTWFya2Rvd24sIGdmbUZvb3Rub3RlVG9NYXJrZG93bn0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-footnote/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-footnote/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/mdast-util-gfm-footnote/lib/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmFootnoteFromMarkdown\": function() { return /* binding */ gfmFootnoteFromMarkdown; },\n/* harmony export */   \"gfmFootnoteToMarkdown\": function() { return /* binding */ gfmFootnoteToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_association_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/association.js */ \"./node_modules/mdast-util-to-markdown/lib/util/association.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_container_flow_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/container-flow.js */ \"./node_modules/mdast-util-to-markdown/lib/util/container-flow.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_indent_lines_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/indent-lines.js */ \"./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_safe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/safe.js */ \"./node_modules/mdast-util-to-markdown/lib/util/safe.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/track.js */ \"./node_modules/mdast-util-to-markdown/lib/util/track.js\");\n/**\r\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\r\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\r\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\r\n * @typedef {import('mdast-util-to-markdown').Map} Map\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfootnoteReference.peek = footnoteReferencePeek\r\n\r\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\r\n// utilities on `state`.\r\n\r\n/**\r\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\r\n * in markdown.\r\n *\r\n * @returns {FromMarkdownExtension}\r\n *   Extension for `mdast-util-from-markdown`.\r\n */\r\nfunction gfmFootnoteFromMarkdown() {\r\n  return {\r\n    enter: {\r\n      gfmFootnoteDefinition: enterFootnoteDefinition,\r\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\r\n      gfmFootnoteCall: enterFootnoteCall,\r\n      gfmFootnoteCallString: enterFootnoteCallString\r\n    },\r\n    exit: {\r\n      gfmFootnoteDefinition: exitFootnoteDefinition,\r\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\r\n      gfmFootnoteCall: exitFootnoteCall,\r\n      gfmFootnoteCallString: exitFootnoteCallString\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\r\n * in markdown.\r\n *\r\n * @returns {ToMarkdownExtension}\r\n *   Extension for `mdast-util-to-markdown`.\r\n */\r\nfunction gfmFootnoteToMarkdown() {\r\n  return {\r\n    // This is on by default already.\r\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\r\n    handlers: {footnoteDefinition, footnoteReference}\r\n  }\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterFootnoteDefinition(token) {\r\n  this.enter(\r\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\r\n    token\r\n  )\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterFootnoteDefinitionLabelString() {\r\n  this.buffer()\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitFootnoteDefinitionLabelString(token) {\r\n  const label = this.resume()\r\n  const node = /** @type {FootnoteDefinition} */ (\r\n    this.stack[this.stack.length - 1]\r\n  )\r\n  node.label = label\r\n  node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_0__.normalizeIdentifier)(\r\n    this.sliceSerialize(token)\r\n  ).toLowerCase()\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitFootnoteDefinition(token) {\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterFootnoteCall(token) {\r\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterFootnoteCallString() {\r\n  this.buffer()\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitFootnoteCallString(token) {\r\n  const label = this.resume()\r\n  const node = /** @type {FootnoteDefinition} */ (\r\n    this.stack[this.stack.length - 1]\r\n  )\r\n  node.label = label\r\n  node.identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_0__.normalizeIdentifier)(\r\n    this.sliceSerialize(token)\r\n  ).toLowerCase()\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitFootnoteCall(token) {\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @type {ToMarkdownHandle}\r\n * @param {FootnoteReference} node\r\n */\r\nfunction footnoteReference(node, _, context, safeOptions) {\r\n  const tracker = (0,mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_1__.track)(safeOptions)\r\n  let value = tracker.move('[^')\r\n  const exit = context.enter('footnoteReference')\r\n  const subexit = context.enter('reference')\r\n  value += tracker.move(\r\n    (0,mdast_util_to_markdown_lib_util_safe_js__WEBPACK_IMPORTED_MODULE_2__.safe)(context, (0,mdast_util_to_markdown_lib_util_association_js__WEBPACK_IMPORTED_MODULE_3__.association)(node), {\r\n      ...tracker.current(),\r\n      before: value,\r\n      after: ']'\r\n    })\r\n  )\r\n  subexit()\r\n  exit()\r\n  value += tracker.move(']')\r\n  return value\r\n}\r\n\r\n/** @type {ToMarkdownHandle} */\r\nfunction footnoteReferencePeek() {\r\n  return '['\r\n}\r\n\r\n/**\r\n * @type {ToMarkdownHandle}\r\n * @param {FootnoteDefinition} node\r\n */\r\nfunction footnoteDefinition(node, _, context, safeOptions) {\r\n  const tracker = (0,mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_1__.track)(safeOptions)\r\n  let value = tracker.move('[^')\r\n  const exit = context.enter('footnoteDefinition')\r\n  const subexit = context.enter('label')\r\n  value += tracker.move(\r\n    (0,mdast_util_to_markdown_lib_util_safe_js__WEBPACK_IMPORTED_MODULE_2__.safe)(context, (0,mdast_util_to_markdown_lib_util_association_js__WEBPACK_IMPORTED_MODULE_3__.association)(node), {\r\n      ...tracker.current(),\r\n      before: value,\r\n      after: ']'\r\n    })\r\n  )\r\n  subexit()\r\n  value += tracker.move(\r\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\r\n  )\r\n  tracker.shift(4)\r\n  value += tracker.move(\r\n    (0,mdast_util_to_markdown_lib_util_indent_lines_js__WEBPACK_IMPORTED_MODULE_4__.indentLines)((0,mdast_util_to_markdown_lib_util_container_flow_js__WEBPACK_IMPORTED_MODULE_5__.containerFlow)(node, context, tracker.current()), map)\r\n  )\r\n  exit()\r\n\r\n  return value\r\n}\r\n\r\n/** @type {Map} */\r\nfunction map(line, index, blank) {\r\n  if (index === 0) {\r\n    return line\r\n  }\r\n\r\n  return (blank ? '' : '    ') + line\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-footnote/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-strikethrough/index.js":
/*!************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-strikethrough/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmStrikethroughFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmStrikethroughFromMarkdown; },\n/* harmony export */   \"gfmStrikethroughToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmStrikethroughToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm-strikethrough/lib/index.js\");\n// Note: extra types in `index.d.ts`.\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tc3RyaWtldGhyb3VnaC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUl1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tc3RyaWtldGhyb3VnaC9pbmRleC5qcz9jYjg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IGV4dHJhIHR5cGVzIGluIGBpbmRleC5kLnRzYC5cclxuZXhwb3J0IHtcclxuICBnZm1TdHJpa2V0aHJvdWdoRnJvbU1hcmtkb3duLFxyXG4gIGdmbVN0cmlrZXRocm91Z2hUb01hcmtkb3duXHJcbn0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-strikethrough/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-strikethrough/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-strikethrough/lib/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmStrikethroughFromMarkdown\": function() { return /* binding */ gfmStrikethroughFromMarkdown; },\n/* harmony export */   \"gfmStrikethroughToMarkdown\": function() { return /* binding */ gfmStrikethroughToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_to_markdown_lib_util_container_phrasing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/container-phrasing.js */ \"./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/track.js */ \"./node_modules/mdast-util-to-markdown/lib/util/track.js\");\n/**\r\n * @typedef {import('mdast').Delete} Delete\r\n *\r\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\r\n *\r\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\r\n */\r\n\r\n\r\n\r\n\r\n// To do: next major: expose functions.\r\n// To do: next major: use `state`, state utilities.\r\n\r\n/**\r\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\r\n * contain strikethrough.\r\n * So they sort of cancel each other out.\r\n * Note: could use a better name.\r\n *\r\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\r\n *\r\n * @type {Array<ConstructName>}\r\n */\r\nconst constructsWithoutStrikethrough = [\r\n  'autolink',\r\n  'destinationLiteral',\r\n  'destinationRaw',\r\n  'reference',\r\n  'titleQuote',\r\n  'titleApostrophe'\r\n]\r\n\r\nhandleDelete.peek = peekDelete\r\n\r\n/**\r\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\r\n *\r\n * @type {FromMarkdownExtension}\r\n */\r\nconst gfmStrikethroughFromMarkdown = {\r\n  canContainEols: ['delete'],\r\n  enter: {strikethrough: enterStrikethrough},\r\n  exit: {strikethrough: exitStrikethrough}\r\n}\r\n\r\n/**\r\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\r\n *\r\n * @type {ToMarkdownExtension}\r\n */\r\nconst gfmStrikethroughToMarkdown = {\r\n  unsafe: [\r\n    {\r\n      character: '~',\r\n      inConstruct: 'phrasing',\r\n      notInConstruct: constructsWithoutStrikethrough\r\n    }\r\n  ],\r\n  handlers: {delete: handleDelete}\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterStrikethrough(token) {\r\n  this.enter({type: 'delete', children: []}, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitStrikethrough(token) {\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @type {ToMarkdownHandle}\r\n * @param {Delete} node\r\n */\r\nfunction handleDelete(node, _, context, safeOptions) {\r\n  const tracker = (0,mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_0__.track)(safeOptions)\r\n  const exit = context.enter('strikethrough')\r\n  let value = tracker.move('~~')\r\n  value += (0,mdast_util_to_markdown_lib_util_container_phrasing_js__WEBPACK_IMPORTED_MODULE_1__.containerPhrasing)(node, context, {\r\n    ...tracker.current(),\r\n    before: value,\r\n    after: '~'\r\n  })\r\n  value += tracker.move('~~')\r\n  exit()\r\n  return value\r\n}\r\n\r\n/** @type {ToMarkdownHandle} */\r\nfunction peekDelete() {\r\n  return '~'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tc3RyaWtldGhyb3VnaC9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxhQUFhLG1EQUFtRDtBQUNoRSxhQUFhLDhDQUE4QztBQUMzRCxhQUFhLDJDQUEyQztBQUN4RDtBQUNBLGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEseUNBQXlDO0FBQ3REO0FBQ0E7QUFDdUY7QUFDekI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQSxVQUFVLGtDQUFrQztBQUM1QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0EsY0FBYyw2QkFBNkI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQSxrQkFBa0IsK0VBQUs7QUFDdkI7QUFDQTtBQUNBLFdBQVcsd0dBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWdmbS1zdHJpa2V0aHJvdWdoL2xpYi9pbmRleC5qcz82YTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkRlbGV0ZX0gRGVsZXRlXHJcbiAqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bicpLkNvbXBpbGVDb250ZXh0fSBDb21waWxlQ29udGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLWZyb20tbWFya2Rvd24nKS5FeHRlbnNpb259IEZyb21NYXJrZG93bkV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLWZyb20tbWFya2Rvd24nKS5IYW5kbGV9IEZyb21NYXJrZG93bkhhbmRsZVxyXG4gKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLW1hcmtkb3duJykuQ29uc3RydWN0TmFtZX0gQ29uc3RydWN0TmFtZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLW1hcmtkb3duJykuT3B0aW9uc30gVG9NYXJrZG93bkV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLW1hcmtkb3duJykuSGFuZGxlfSBUb01hcmtkb3duSGFuZGxlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtjb250YWluZXJQaHJhc2luZ30gZnJvbSAnbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jb250YWluZXItcGhyYXNpbmcuanMnXHJcbmltcG9ydCB7dHJhY2t9IGZyb20gJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24vbGliL3V0aWwvdHJhY2suanMnXHJcblxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogZXhwb3NlIGZ1bmN0aW9ucy5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IHVzZSBgc3RhdGVgLCBzdGF0ZSB1dGlsaXRpZXMuXHJcblxyXG4vKipcclxuICogTGlzdCBvZiBjb25zdHJ1Y3RzIHRoYXQgb2NjdXIgaW4gcGhyYXNpbmcgKHBhcmFncmFwaHMsIGhlYWRpbmdzKSwgYnV0IGNhbm5vdFxyXG4gKiBjb250YWluIHN0cmlrZXRocm91Z2guXHJcbiAqIFNvIHRoZXkgc29ydCBvZiBjYW5jZWwgZWFjaCBvdGhlciBvdXQuXHJcbiAqIE5vdGU6IGNvdWxkIHVzZSBhIGJldHRlciBuYW1lLlxyXG4gKlxyXG4gKiBOb3RlOiBrZWVwIGluIHN5bmMgd2l0aDogPGh0dHBzOi8vZ2l0aHViLmNvbS9zeW50YXgtdHJlZS9tZGFzdC11dGlsLXRvLW1hcmtkb3duL2Jsb2IvOGNlOGRiZi9saWIvdW5zYWZlLmpzI0wxND5cclxuICpcclxuICogQHR5cGUge0FycmF5PENvbnN0cnVjdE5hbWU+fVxyXG4gKi9cclxuY29uc3QgY29uc3RydWN0c1dpdGhvdXRTdHJpa2V0aHJvdWdoID0gW1xyXG4gICdhdXRvbGluaycsXHJcbiAgJ2Rlc3RpbmF0aW9uTGl0ZXJhbCcsXHJcbiAgJ2Rlc3RpbmF0aW9uUmF3JyxcclxuICAncmVmZXJlbmNlJyxcclxuICAndGl0bGVRdW90ZScsXHJcbiAgJ3RpdGxlQXBvc3Ryb3BoZSdcclxuXVxyXG5cclxuaGFuZGxlRGVsZXRlLnBlZWsgPSBwZWVrRGVsZXRlXHJcblxyXG4vKipcclxuICogRXh0ZW5zaW9uIGZvciBgbWRhc3QtdXRpbC1mcm9tLW1hcmtkb3duYCB0byBlbmFibGUgR0ZNIHN0cmlrZXRocm91Z2guXHJcbiAqXHJcbiAqIEB0eXBlIHtGcm9tTWFya2Rvd25FeHRlbnNpb259XHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2ZtU3RyaWtldGhyb3VnaEZyb21NYXJrZG93biA9IHtcclxuICBjYW5Db250YWluRW9sczogWydkZWxldGUnXSxcclxuICBlbnRlcjoge3N0cmlrZXRocm91Z2g6IGVudGVyU3RyaWtldGhyb3VnaH0sXHJcbiAgZXhpdDoge3N0cmlrZXRocm91Z2g6IGV4aXRTdHJpa2V0aHJvdWdofVxyXG59XHJcblxyXG4vKipcclxuICogRXh0ZW5zaW9uIGZvciBgbWRhc3QtdXRpbC10by1tYXJrZG93bmAgdG8gZW5hYmxlIEdGTSBzdHJpa2V0aHJvdWdoLlxyXG4gKlxyXG4gKiBAdHlwZSB7VG9NYXJrZG93bkV4dGVuc2lvbn1cclxuICovXHJcbmV4cG9ydCBjb25zdCBnZm1TdHJpa2V0aHJvdWdoVG9NYXJrZG93biA9IHtcclxuICB1bnNhZmU6IFtcclxuICAgIHtcclxuICAgICAgY2hhcmFjdGVyOiAnficsXHJcbiAgICAgIGluQ29uc3RydWN0OiAncGhyYXNpbmcnLFxyXG4gICAgICBub3RJbkNvbnN0cnVjdDogY29uc3RydWN0c1dpdGhvdXRTdHJpa2V0aHJvdWdoXHJcbiAgICB9XHJcbiAgXSxcclxuICBoYW5kbGVyczoge2RlbGV0ZTogaGFuZGxlRGVsZXRlfVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZW50ZXJTdHJpa2V0aHJvdWdoKHRva2VuKSB7XHJcbiAgdGhpcy5lbnRlcih7dHlwZTogJ2RlbGV0ZScsIGNoaWxkcmVuOiBbXX0sIHRva2VuKVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZXhpdFN0cmlrZXRocm91Z2godG9rZW4pIHtcclxuICB0aGlzLmV4aXQodG9rZW4pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdHlwZSB7VG9NYXJrZG93bkhhbmRsZX1cclxuICogQHBhcmFtIHtEZWxldGV9IG5vZGVcclxuICovXHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZShub2RlLCBfLCBjb250ZXh0LCBzYWZlT3B0aW9ucykge1xyXG4gIGNvbnN0IHRyYWNrZXIgPSB0cmFjayhzYWZlT3B0aW9ucylcclxuICBjb25zdCBleGl0ID0gY29udGV4dC5lbnRlcignc3RyaWtldGhyb3VnaCcpXHJcbiAgbGV0IHZhbHVlID0gdHJhY2tlci5tb3ZlKCd+ficpXHJcbiAgdmFsdWUgKz0gY29udGFpbmVyUGhyYXNpbmcobm9kZSwgY29udGV4dCwge1xyXG4gICAgLi4udHJhY2tlci5jdXJyZW50KCksXHJcbiAgICBiZWZvcmU6IHZhbHVlLFxyXG4gICAgYWZ0ZXI6ICd+J1xyXG4gIH0pXHJcbiAgdmFsdWUgKz0gdHJhY2tlci5tb3ZlKCd+ficpXHJcbiAgZXhpdCgpXHJcbiAgcmV0dXJuIHZhbHVlXHJcbn1cclxuXHJcbi8qKiBAdHlwZSB7VG9NYXJrZG93bkhhbmRsZX0gKi9cclxuZnVuY3Rpb24gcGVla0RlbGV0ZSgpIHtcclxuICByZXR1cm4gJ34nXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-strikethrough/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-table/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mdast-util-gfm-table/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTableFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmTableFromMarkdown; },\n/* harmony export */   \"gfmTableToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmTableToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm-table/lib/index.js\");\n// Note: types exposed from `index.d.ts`.\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tdGFibGUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDdUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtZ2ZtLXRhYmxlL2luZGV4LmpzPzZjMDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogdHlwZXMgZXhwb3NlZCBmcm9tIGBpbmRleC5kLnRzYC5cclxuZXhwb3J0IHtnZm1UYWJsZUZyb21NYXJrZG93biwgZ2ZtVGFibGVUb01hcmtkb3dufSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-table/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-table/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/mdast-util-gfm-table/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTableFromMarkdown\": function() { return /* binding */ gfmTableFromMarkdown; },\n/* harmony export */   \"gfmTableToMarkdown\": function() { return /* binding */ gfmTableToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_to_markdown_lib_util_container_phrasing_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/container-phrasing.js */ \"./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_handle_inline_code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mdast-util-to-markdown/lib/handle/inline-code.js */ \"./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js\");\n/* harmony import */ var markdown_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! markdown-table */ \"./node_modules/markdown-table/index.js\");\n/**\r\n * @typedef {import('mdast').Table} Table\r\n * @typedef {import('mdast').TableRow} TableRow\r\n * @typedef {import('mdast').TableCell} TableCell\r\n * @typedef {import('mdast').InlineCode} InlineCode\r\n *\r\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\r\n *\r\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\r\n *\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\r\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\r\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {boolean | null | undefined} [tableCellPadding=true]\r\n *   Whether to add a space of padding between delimiters and cells.\r\n * @property {boolean | null | undefined} [tablePipeAlign=true]\r\n *   Whether to align the delimiters.\r\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\r\n *   Function to detect the length of table cell content, used when aligning\r\n *   the delimiters between cells\r\n */\r\n\r\n\r\n\r\n\r\n\r\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\r\n// To do: next major: use `defaultHandlers.inlineCode`.\r\n// To do: next major: expose functions.\r\n\r\n/**\r\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\r\n *\r\n * @type {FromMarkdownExtension}\r\n */\r\nconst gfmTableFromMarkdown = {\r\n  enter: {\r\n    table: enterTable,\r\n    tableData: enterCell,\r\n    tableHeader: enterCell,\r\n    tableRow: enterRow\r\n  },\r\n  exit: {\r\n    codeText: exitCodeText,\r\n    table: exitTable,\r\n    tableData: exit,\r\n    tableHeader: exit,\r\n    tableRow: exit\r\n  }\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterTable(token) {\r\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\r\n  // @ts-expect-error: `align` is custom.\r\n  const align = token._align\r\n  this.enter(\r\n    {\r\n      type: 'table',\r\n      align: align.map((d) => (d === 'none' ? null : d)),\r\n      children: []\r\n    },\r\n    token\r\n  )\r\n  this.setData('inTable', true)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitTable(token) {\r\n  this.exit(token)\r\n  this.setData('inTable')\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterRow(token) {\r\n  this.enter({type: 'tableRow', children: []}, token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exit(token) {\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction enterCell(token) {\r\n  this.enter({type: 'tableCell', children: []}, token)\r\n}\r\n\r\n// Overwrite the default code text data handler to unescape escaped pipes when\r\n// they are in tables.\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitCodeText(token) {\r\n  let value = this.resume()\r\n\r\n  if (this.getData('inTable')) {\r\n    value = value.replace(/\\\\([\\\\|])/g, replace)\r\n  }\r\n\r\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\r\n  node.value = value\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @param {string} $1\r\n * @returns {string}\r\n */\r\nfunction replace($0, $1) {\r\n  // Pipes work, backslashes don’t (but can’t escape pipes).\r\n  return $1 === '|' ? $1 : $0\r\n}\r\n\r\n/**\r\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\r\n * markdown.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {ToMarkdownExtension}\r\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\r\n */\r\nfunction gfmTableToMarkdown(options) {\r\n  const settings = options || {}\r\n  const padding = settings.tableCellPadding\r\n  const alignDelimiters = settings.tablePipeAlign\r\n  const stringLength = settings.stringLength\r\n  const around = padding ? ' ' : '|'\r\n\r\n  return {\r\n    unsafe: [\r\n      {character: '\\r', inConstruct: 'tableCell'},\r\n      {character: '\\n', inConstruct: 'tableCell'},\r\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\r\n      // (unpadded delimiter row), could result in a table.\r\n      {atBreak: true, character: '|', after: '[\\t :-]'},\r\n      // A pipe in a cell must be encoded.\r\n      {character: '|', inConstruct: 'tableCell'},\r\n      // A colon must be followed by a dash, in which case it could start a\r\n      // delimiter row.\r\n      {atBreak: true, character: ':', after: '-'},\r\n      // A delimiter row can also start with a dash, when followed by more\r\n      // dashes, a colon, or a pipe.\r\n      // This is a stricter version than the built in check for lists, thematic\r\n      // breaks, and setex heading underlines though:\r\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\r\n      {atBreak: true, character: '-', after: '[:|-]'}\r\n    ],\r\n    handlers: {\r\n      table: handleTable,\r\n      tableRow: handleTableRow,\r\n      tableCell: handleTableCell,\r\n      inlineCode: inlineCodeWithTable\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @type {ToMarkdownHandle}\r\n   * @param {Table} node\r\n   */\r\n  function handleTable(node, _, context, safeOptions) {\r\n    return serializeData(\r\n      handleTableAsData(node, context, safeOptions),\r\n      node.align\r\n    )\r\n  }\r\n\r\n  /**\r\n   * This function isn’t really used normally, because we handle rows at the\r\n   * table level.\r\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\r\n   *\r\n   * @type {ToMarkdownHandle}\r\n   * @param {TableRow} node\r\n   */\r\n  function handleTableRow(node, _, context, safeOptions) {\r\n    const row = handleTableRowAsData(node, context, safeOptions)\r\n    const value = serializeData([row])\r\n    // `markdown-table` will always add an align row\r\n    return value.slice(0, value.indexOf('\\n'))\r\n  }\r\n\r\n  /**\r\n   * @type {ToMarkdownHandle}\r\n   * @param {TableCell} node\r\n   */\r\n  function handleTableCell(node, _, context, safeOptions) {\r\n    const exit = context.enter('tableCell')\r\n    const subexit = context.enter('phrasing')\r\n    const value = (0,mdast_util_to_markdown_lib_util_container_phrasing_js__WEBPACK_IMPORTED_MODULE_0__.containerPhrasing)(node, context, {\r\n      ...safeOptions,\r\n      before: around,\r\n      after: around\r\n    })\r\n    subexit()\r\n    exit()\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<string>>} matrix\r\n   * @param {Array<string | null | undefined> | null | undefined} [align]\r\n   */\r\n  function serializeData(matrix, align) {\r\n    return (0,markdown_table__WEBPACK_IMPORTED_MODULE_1__.markdownTable)(matrix, {\r\n      align,\r\n      // @ts-expect-error: `markdown-table` types should support `null`.\r\n      alignDelimiters,\r\n      // @ts-expect-error: `markdown-table` types should support `null`.\r\n      padding,\r\n      // @ts-expect-error: `markdown-table` types should support `null`.\r\n      stringLength\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param {Table} node\r\n   * @param {ToMarkdownContext} context\r\n   * @param {SafeOptions} safeOptions\r\n   */\r\n  function handleTableAsData(node, context, safeOptions) {\r\n    const children = node.children\r\n    let index = -1\r\n    /** @type {Array<Array<string>>} */\r\n    const result = []\r\n    const subexit = context.enter('table')\r\n\r\n    while (++index < children.length) {\r\n      result[index] = handleTableRowAsData(\r\n        children[index],\r\n        context,\r\n        safeOptions\r\n      )\r\n    }\r\n\r\n    subexit()\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * @param {TableRow} node\r\n   * @param {ToMarkdownContext} context\r\n   * @param {SafeOptions} safeOptions\r\n   */\r\n  function handleTableRowAsData(node, context, safeOptions) {\r\n    const children = node.children\r\n    let index = -1\r\n    /** @type {Array<string>} */\r\n    const result = []\r\n    const subexit = context.enter('tableRow')\r\n\r\n    while (++index < children.length) {\r\n      // Note: the positional info as used here is incorrect.\r\n      // Making it correct would be impossible due to aligning cells?\r\n      // And it would need copy/pasting `markdown-table` into this project.\r\n      result[index] = handleTableCell(\r\n        children[index],\r\n        node,\r\n        context,\r\n        safeOptions\r\n      )\r\n    }\r\n\r\n    subexit()\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * @type {ToMarkdownHandle}\r\n   * @param {InlineCode} node\r\n   */\r\n  function inlineCodeWithTable(node, parent, context) {\r\n    let value = (0,mdast_util_to_markdown_lib_handle_inline_code_js__WEBPACK_IMPORTED_MODULE_2__.inlineCode)(node, parent, context)\r\n\r\n    if (context.stack.includes('tableCell')) {\r\n      value = value.replace(/\\|/g, '\\\\$&')\r\n    }\r\n\r\n    return value\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tdGFibGUvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQyxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLDJCQUEyQjtBQUN4QyxhQUFhLDRCQUE0QjtBQUN6QztBQUNBLGFBQWEsK0NBQStDO0FBQzVEO0FBQ0EsYUFBYSxtREFBbUQ7QUFDaEUsYUFBYSw4Q0FBOEM7QUFDM0QsYUFBYSwyQ0FBMkM7QUFDeEQ7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLDhDQUE4QztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQSxjQUFjLDRCQUE0QjtBQUMxQztBQUNBLGNBQWMseURBQXlEO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ3VGO0FBQ1o7QUFDL0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQSxjQUFjLCtCQUErQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBLGNBQWMsZ0NBQWdDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsWUFBWTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTywwQ0FBMEM7QUFDakQsT0FBTywwQ0FBMEM7QUFDakQ7QUFDQTtBQUNBLE9BQU8sZ0RBQWdEO0FBQ3ZEO0FBQ0EsT0FBTyx5Q0FBeUM7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sMENBQTBDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osYUFBYSxXQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdHQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxxREFBcUQ7QUFDbEU7QUFDQTtBQUNBLFdBQVcsNkRBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsbUJBQW1CO0FBQ2hDLGFBQWEsYUFBYTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0JBQXNCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkIsYUFBYSxtQkFBbUI7QUFDaEMsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWixhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBLGdCQUFnQiw0RkFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWdmbS10YWJsZS9saWIvaW5kZXguanM/Mjg4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UYWJsZX0gVGFibGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UYWJsZVJvd30gVGFibGVSb3dcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UYWJsZUNlbGx9IFRhYmxlQ2VsbFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLklubGluZUNvZGV9IElubGluZUNvZGVcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWFya2Rvd24tdGFibGUnKS5NYXJrZG93blRhYmxlT3B0aW9uc30gTWFya2Rvd25UYWJsZU9wdGlvbnNcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1mcm9tLW1hcmtkb3duJykuQ29tcGlsZUNvbnRleHR9IENvbXBpbGVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bicpLkV4dGVuc2lvbn0gRnJvbU1hcmtkb3duRXh0ZW5zaW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bicpLkhhbmRsZX0gRnJvbU1hcmtkb3duSGFuZGxlXHJcbiAqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24nKS5PcHRpb25zfSBUb01hcmtkb3duRXh0ZW5zaW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24nKS5IYW5kbGV9IFRvTWFya2Rvd25IYW5kbGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC10by1tYXJrZG93bicpLkNvbnRleHR9IFRvTWFya2Rvd25Db250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24nKS5TYWZlT3B0aW9uc30gU2FmZU9wdGlvbnNcclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYgT3B0aW9uc1xyXG4gKiAgIENvbmZpZ3VyYXRpb24uXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFt0YWJsZUNlbGxQYWRkaW5nPXRydWVdXHJcbiAqICAgV2hldGhlciB0byBhZGQgYSBzcGFjZSBvZiBwYWRkaW5nIGJldHdlZW4gZGVsaW1pdGVycyBhbmQgY2VsbHMuXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFt0YWJsZVBpcGVBbGlnbj10cnVlXVxyXG4gKiAgIFdoZXRoZXIgdG8gYWxpZ24gdGhlIGRlbGltaXRlcnMuXHJcbiAqIEBwcm9wZXJ0eSB7TWFya2Rvd25UYWJsZU9wdGlvbnNbJ3N0cmluZ0xlbmd0aCddIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3N0cmluZ0xlbmd0aF1cclxuICogICBGdW5jdGlvbiB0byBkZXRlY3QgdGhlIGxlbmd0aCBvZiB0YWJsZSBjZWxsIGNvbnRlbnQsIHVzZWQgd2hlbiBhbGlnbmluZ1xyXG4gKiAgIHRoZSBkZWxpbWl0ZXJzIGJldHdlZW4gY2VsbHNcclxuICovXHJcblxyXG5pbXBvcnQge2NvbnRhaW5lclBocmFzaW5nfSBmcm9tICdtZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi91dGlsL2NvbnRhaW5lci1waHJhc2luZy5qcydcclxuaW1wb3J0IHtpbmxpbmVDb2RlfSBmcm9tICdtZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi9oYW5kbGUvaW5saW5lLWNvZGUuanMnXHJcbmltcG9ydCB7bWFya2Rvd25UYWJsZX0gZnJvbSAnbWFya2Rvd24tdGFibGUnXHJcblxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogdXNlIGBzdGF0ZWAgYW5kIGBzdGF0ZWAgdXRpbGl0aWVzIGZyb20gYG1kYXN0LXV0aWwtdG8tbWFya2Rvd25gLlxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogdXNlIGBkZWZhdWx0SGFuZGxlcnMuaW5saW5lQ29kZWAuXHJcbi8vIFRvIGRvOiBuZXh0IG1ham9yOiBleHBvc2UgZnVuY3Rpb25zLlxyXG5cclxuLyoqXHJcbiAqIEV4dGVuc2lvbiBmb3IgYG1kYXN0LXV0aWwtZnJvbS1tYXJrZG93bmAgdG8gZW5hYmxlIEdGTSB0YWJsZXMuXHJcbiAqXHJcbiAqIEB0eXBlIHtGcm9tTWFya2Rvd25FeHRlbnNpb259XHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2ZtVGFibGVGcm9tTWFya2Rvd24gPSB7XHJcbiAgZW50ZXI6IHtcclxuICAgIHRhYmxlOiBlbnRlclRhYmxlLFxyXG4gICAgdGFibGVEYXRhOiBlbnRlckNlbGwsXHJcbiAgICB0YWJsZUhlYWRlcjogZW50ZXJDZWxsLFxyXG4gICAgdGFibGVSb3c6IGVudGVyUm93XHJcbiAgfSxcclxuICBleGl0OiB7XHJcbiAgICBjb2RlVGV4dDogZXhpdENvZGVUZXh0LFxyXG4gICAgdGFibGU6IGV4aXRUYWJsZSxcclxuICAgIHRhYmxlRGF0YTogZXhpdCxcclxuICAgIHRhYmxlSGVhZGVyOiBleGl0LFxyXG4gICAgdGFibGVSb3c6IGV4aXRcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7Q29tcGlsZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtGcm9tTWFya2Rvd25IYW5kbGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBlbnRlclRhYmxlKHRva2VuKSB7XHJcbiAgLyoqIEB0eXBlIHtBcnJheTwnbGVmdCcgfCAncmlnaHQnIHwgJ2NlbnRlcicgfCAnbm9uZSc+fSAqL1xyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3I6IGBhbGlnbmAgaXMgY3VzdG9tLlxyXG4gIGNvbnN0IGFsaWduID0gdG9rZW4uX2FsaWduXHJcbiAgdGhpcy5lbnRlcihcclxuICAgIHtcclxuICAgICAgdHlwZTogJ3RhYmxlJyxcclxuICAgICAgYWxpZ246IGFsaWduLm1hcCgoZCkgPT4gKGQgPT09ICdub25lJyA/IG51bGwgOiBkKSksXHJcbiAgICAgIGNoaWxkcmVuOiBbXVxyXG4gICAgfSxcclxuICAgIHRva2VuXHJcbiAgKVxyXG4gIHRoaXMuc2V0RGF0YSgnaW5UYWJsZScsIHRydWUpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7Q29tcGlsZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtGcm9tTWFya2Rvd25IYW5kbGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBleGl0VGFibGUodG9rZW4pIHtcclxuICB0aGlzLmV4aXQodG9rZW4pXHJcbiAgdGhpcy5zZXREYXRhKCdpblRhYmxlJylcclxufVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtDb21waWxlQ29udGV4dH1cclxuICogQHR5cGUge0Zyb21NYXJrZG93bkhhbmRsZX1cclxuICovXHJcbmZ1bmN0aW9uIGVudGVyUm93KHRva2VuKSB7XHJcbiAgdGhpcy5lbnRlcih7dHlwZTogJ3RhYmxlUm93JywgY2hpbGRyZW46IFtdfSwgdG9rZW4pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7Q29tcGlsZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtGcm9tTWFya2Rvd25IYW5kbGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBleGl0KHRva2VuKSB7XHJcbiAgdGhpcy5leGl0KHRva2VuKVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZW50ZXJDZWxsKHRva2VuKSB7XHJcbiAgdGhpcy5lbnRlcih7dHlwZTogJ3RhYmxlQ2VsbCcsIGNoaWxkcmVuOiBbXX0sIHRva2VuKVxyXG59XHJcblxyXG4vLyBPdmVyd3JpdGUgdGhlIGRlZmF1bHQgY29kZSB0ZXh0IGRhdGEgaGFuZGxlciB0byB1bmVzY2FwZSBlc2NhcGVkIHBpcGVzIHdoZW5cclxuLy8gdGhleSBhcmUgaW4gdGFibGVzLlxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZXhpdENvZGVUZXh0KHRva2VuKSB7XHJcbiAgbGV0IHZhbHVlID0gdGhpcy5yZXN1bWUoKVxyXG5cclxuICBpZiAodGhpcy5nZXREYXRhKCdpblRhYmxlJykpIHtcclxuICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXFxcXChbXFxcXHxdKS9nLCByZXBsYWNlKVxyXG4gIH1cclxuXHJcbiAgY29uc3Qgbm9kZSA9IC8qKiBAdHlwZSB7SW5saW5lQ29kZX0gKi8gKHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGggLSAxXSlcclxuICBub2RlLnZhbHVlID0gdmFsdWVcclxuICB0aGlzLmV4aXQodG9rZW4pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gJDBcclxuICogQHBhcmFtIHtzdHJpbmd9ICQxXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiByZXBsYWNlKCQwLCAkMSkge1xyXG4gIC8vIFBpcGVzIHdvcmssIGJhY2tzbGFzaGVzIGRvbuKAmXQgKGJ1dCBjYW7igJl0IGVzY2FwZSBwaXBlcykuXHJcbiAgcmV0dXJuICQxID09PSAnfCcgPyAkMSA6ICQwXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYW4gZXh0ZW5zaW9uIGZvciBgbWRhc3QtdXRpbC10by1tYXJrZG93bmAgdG8gZW5hYmxlIEdGTSB0YWJsZXMgaW5cclxuICogbWFya2Rvd24uXHJcbiAqXHJcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IFtvcHRpb25zXVxyXG4gKiAgIENvbmZpZ3VyYXRpb24uXHJcbiAqIEByZXR1cm5zIHtUb01hcmtkb3duRXh0ZW5zaW9ufVxyXG4gKiAgIEV4dGVuc2lvbiBmb3IgYG1kYXN0LXV0aWwtdG8tbWFya2Rvd25gIHRvIGVuYWJsZSBHRk0gdGFibGVzLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdmbVRhYmxlVG9NYXJrZG93bihvcHRpb25zKSB7XHJcbiAgY29uc3Qgc2V0dGluZ3MgPSBvcHRpb25zIHx8IHt9XHJcbiAgY29uc3QgcGFkZGluZyA9IHNldHRpbmdzLnRhYmxlQ2VsbFBhZGRpbmdcclxuICBjb25zdCBhbGlnbkRlbGltaXRlcnMgPSBzZXR0aW5ncy50YWJsZVBpcGVBbGlnblxyXG4gIGNvbnN0IHN0cmluZ0xlbmd0aCA9IHNldHRpbmdzLnN0cmluZ0xlbmd0aFxyXG4gIGNvbnN0IGFyb3VuZCA9IHBhZGRpbmcgPyAnICcgOiAnfCdcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHVuc2FmZTogW1xyXG4gICAgICB7Y2hhcmFjdGVyOiAnXFxyJywgaW5Db25zdHJ1Y3Q6ICd0YWJsZUNlbGwnfSxcclxuICAgICAge2NoYXJhY3RlcjogJ1xcbicsIGluQ29uc3RydWN0OiAndGFibGVDZWxsJ30sXHJcbiAgICAgIC8vIEEgcGlwZSwgd2hlbiBmb2xsb3dlZCBieSBhIHRhYiBvciBzcGFjZSAocGFkZGluZyksIG9yIGEgZGFzaCBvciBjb2xvblxyXG4gICAgICAvLyAodW5wYWRkZWQgZGVsaW1pdGVyIHJvdyksIGNvdWxkIHJlc3VsdCBpbiBhIHRhYmxlLlxyXG4gICAgICB7YXRCcmVhazogdHJ1ZSwgY2hhcmFjdGVyOiAnfCcsIGFmdGVyOiAnW1xcdCA6LV0nfSxcclxuICAgICAgLy8gQSBwaXBlIGluIGEgY2VsbCBtdXN0IGJlIGVuY29kZWQuXHJcbiAgICAgIHtjaGFyYWN0ZXI6ICd8JywgaW5Db25zdHJ1Y3Q6ICd0YWJsZUNlbGwnfSxcclxuICAgICAgLy8gQSBjb2xvbiBtdXN0IGJlIGZvbGxvd2VkIGJ5IGEgZGFzaCwgaW4gd2hpY2ggY2FzZSBpdCBjb3VsZCBzdGFydCBhXHJcbiAgICAgIC8vIGRlbGltaXRlciByb3cuXHJcbiAgICAgIHthdEJyZWFrOiB0cnVlLCBjaGFyYWN0ZXI6ICc6JywgYWZ0ZXI6ICctJ30sXHJcbiAgICAgIC8vIEEgZGVsaW1pdGVyIHJvdyBjYW4gYWxzbyBzdGFydCB3aXRoIGEgZGFzaCwgd2hlbiBmb2xsb3dlZCBieSBtb3JlXHJcbiAgICAgIC8vIGRhc2hlcywgYSBjb2xvbiwgb3IgYSBwaXBlLlxyXG4gICAgICAvLyBUaGlzIGlzIGEgc3RyaWN0ZXIgdmVyc2lvbiB0aGFuIHRoZSBidWlsdCBpbiBjaGVjayBmb3IgbGlzdHMsIHRoZW1hdGljXHJcbiAgICAgIC8vIGJyZWFrcywgYW5kIHNldGV4IGhlYWRpbmcgdW5kZXJsaW5lcyB0aG91Z2g6XHJcbiAgICAgIC8vIDxodHRwczovL2dpdGh1Yi5jb20vc3ludGF4LXRyZWUvbWRhc3QtdXRpbC10by1tYXJrZG93bi9ibG9iLzUxYTIwMzgvbGliL3Vuc2FmZS5qcyNMNTc+XHJcbiAgICAgIHthdEJyZWFrOiB0cnVlLCBjaGFyYWN0ZXI6ICctJywgYWZ0ZXI6ICdbOnwtXSd9XHJcbiAgICBdLFxyXG4gICAgaGFuZGxlcnM6IHtcclxuICAgICAgdGFibGU6IGhhbmRsZVRhYmxlLFxyXG4gICAgICB0YWJsZVJvdzogaGFuZGxlVGFibGVSb3csXHJcbiAgICAgIHRhYmxlQ2VsbDogaGFuZGxlVGFibGVDZWxsLFxyXG4gICAgICBpbmxpbmVDb2RlOiBpbmxpbmVDb2RlV2l0aFRhYmxlXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAdHlwZSB7VG9NYXJrZG93bkhhbmRsZX1cclxuICAgKiBAcGFyYW0ge1RhYmxlfSBub2RlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gaGFuZGxlVGFibGUobm9kZSwgXywgY29udGV4dCwgc2FmZU9wdGlvbnMpIHtcclxuICAgIHJldHVybiBzZXJpYWxpemVEYXRhKFxyXG4gICAgICBoYW5kbGVUYWJsZUFzRGF0YShub2RlLCBjb250ZXh0LCBzYWZlT3B0aW9ucyksXHJcbiAgICAgIG5vZGUuYWxpZ25cclxuICAgIClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRoaXMgZnVuY3Rpb24gaXNu4oCZdCByZWFsbHkgdXNlZCBub3JtYWxseSwgYmVjYXVzZSB3ZSBoYW5kbGUgcm93cyBhdCB0aGVcclxuICAgKiB0YWJsZSBsZXZlbC5cclxuICAgKiBCdXQsIGlmIHNvbWVvbmUgcGFzc2VzIGluIGEgdGFibGUgcm93LCB0aGlzIGVuc3VyZXMgd2UgbWFrZSBzb21ld2hhdCBzZW5zZS5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtUb01hcmtkb3duSGFuZGxlfVxyXG4gICAqIEBwYXJhbSB7VGFibGVSb3d9IG5vZGVcclxuICAgKi9cclxuICBmdW5jdGlvbiBoYW5kbGVUYWJsZVJvdyhub2RlLCBfLCBjb250ZXh0LCBzYWZlT3B0aW9ucykge1xyXG4gICAgY29uc3Qgcm93ID0gaGFuZGxlVGFibGVSb3dBc0RhdGEobm9kZSwgY29udGV4dCwgc2FmZU9wdGlvbnMpXHJcbiAgICBjb25zdCB2YWx1ZSA9IHNlcmlhbGl6ZURhdGEoW3Jvd10pXHJcbiAgICAvLyBgbWFya2Rvd24tdGFibGVgIHdpbGwgYWx3YXlzIGFkZCBhbiBhbGlnbiByb3dcclxuICAgIHJldHVybiB2YWx1ZS5zbGljZSgwLCB2YWx1ZS5pbmRleE9mKCdcXG4nKSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEB0eXBlIHtUb01hcmtkb3duSGFuZGxlfVxyXG4gICAqIEBwYXJhbSB7VGFibGVDZWxsfSBub2RlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gaGFuZGxlVGFibGVDZWxsKG5vZGUsIF8sIGNvbnRleHQsIHNhZmVPcHRpb25zKSB7XHJcbiAgICBjb25zdCBleGl0ID0gY29udGV4dC5lbnRlcigndGFibGVDZWxsJylcclxuICAgIGNvbnN0IHN1YmV4aXQgPSBjb250ZXh0LmVudGVyKCdwaHJhc2luZycpXHJcbiAgICBjb25zdCB2YWx1ZSA9IGNvbnRhaW5lclBocmFzaW5nKG5vZGUsIGNvbnRleHQsIHtcclxuICAgICAgLi4uc2FmZU9wdGlvbnMsXHJcbiAgICAgIGJlZm9yZTogYXJvdW5kLFxyXG4gICAgICBhZnRlcjogYXJvdW5kXHJcbiAgICB9KVxyXG4gICAgc3ViZXhpdCgpXHJcbiAgICBleGl0KClcclxuICAgIHJldHVybiB2YWx1ZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtBcnJheTxBcnJheTxzdHJpbmc+Pn0gbWF0cml4XHJcbiAgICogQHBhcmFtIHtBcnJheTxzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkPiB8IG51bGwgfCB1bmRlZmluZWR9IFthbGlnbl1cclxuICAgKi9cclxuICBmdW5jdGlvbiBzZXJpYWxpemVEYXRhKG1hdHJpeCwgYWxpZ24pIHtcclxuICAgIHJldHVybiBtYXJrZG93blRhYmxlKG1hdHJpeCwge1xyXG4gICAgICBhbGlnbixcclxuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYG1hcmtkb3duLXRhYmxlYCB0eXBlcyBzaG91bGQgc3VwcG9ydCBgbnVsbGAuXHJcbiAgICAgIGFsaWduRGVsaW1pdGVycyxcclxuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYG1hcmtkb3duLXRhYmxlYCB0eXBlcyBzaG91bGQgc3VwcG9ydCBgbnVsbGAuXHJcbiAgICAgIHBhZGRpbmcsXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGBtYXJrZG93bi10YWJsZWAgdHlwZXMgc2hvdWxkIHN1cHBvcnQgYG51bGxgLlxyXG4gICAgICBzdHJpbmdMZW5ndGhcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1RhYmxlfSBub2RlXHJcbiAgICogQHBhcmFtIHtUb01hcmtkb3duQ29udGV4dH0gY29udGV4dFxyXG4gICAqIEBwYXJhbSB7U2FmZU9wdGlvbnN9IHNhZmVPcHRpb25zXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gaGFuZGxlVGFibGVBc0RhdGEobm9kZSwgY29udGV4dCwgc2FmZU9wdGlvbnMpIHtcclxuICAgIGNvbnN0IGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlblxyXG4gICAgbGV0IGluZGV4ID0gLTFcclxuICAgIC8qKiBAdHlwZSB7QXJyYXk8QXJyYXk8c3RyaW5nPj59ICovXHJcbiAgICBjb25zdCByZXN1bHQgPSBbXVxyXG4gICAgY29uc3Qgc3ViZXhpdCA9IGNvbnRleHQuZW50ZXIoJ3RhYmxlJylcclxuXHJcbiAgICB3aGlsZSAoKytpbmRleCA8IGNoaWxkcmVuLmxlbmd0aCkge1xyXG4gICAgICByZXN1bHRbaW5kZXhdID0gaGFuZGxlVGFibGVSb3dBc0RhdGEoXHJcbiAgICAgICAgY2hpbGRyZW5baW5kZXhdLFxyXG4gICAgICAgIGNvbnRleHQsXHJcbiAgICAgICAgc2FmZU9wdGlvbnNcclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIHN1YmV4aXQoKVxyXG5cclxuICAgIHJldHVybiByZXN1bHRcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGFibGVSb3d9IG5vZGVcclxuICAgKiBAcGFyYW0ge1RvTWFya2Rvd25Db250ZXh0fSBjb250ZXh0XHJcbiAgICogQHBhcmFtIHtTYWZlT3B0aW9uc30gc2FmZU9wdGlvbnNcclxuICAgKi9cclxuICBmdW5jdGlvbiBoYW5kbGVUYWJsZVJvd0FzRGF0YShub2RlLCBjb250ZXh0LCBzYWZlT3B0aW9ucykge1xyXG4gICAgY29uc3QgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuXHJcbiAgICBsZXQgaW5kZXggPSAtMVxyXG4gICAgLyoqIEB0eXBlIHtBcnJheTxzdHJpbmc+fSAqL1xyXG4gICAgY29uc3QgcmVzdWx0ID0gW11cclxuICAgIGNvbnN0IHN1YmV4aXQgPSBjb250ZXh0LmVudGVyKCd0YWJsZVJvdycpXHJcblxyXG4gICAgd2hpbGUgKCsraW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcclxuICAgICAgLy8gTm90ZTogdGhlIHBvc2l0aW9uYWwgaW5mbyBhcyB1c2VkIGhlcmUgaXMgaW5jb3JyZWN0LlxyXG4gICAgICAvLyBNYWtpbmcgaXQgY29ycmVjdCB3b3VsZCBiZSBpbXBvc3NpYmxlIGR1ZSB0byBhbGlnbmluZyBjZWxscz9cclxuICAgICAgLy8gQW5kIGl0IHdvdWxkIG5lZWQgY29weS9wYXN0aW5nIGBtYXJrZG93bi10YWJsZWAgaW50byB0aGlzIHByb2plY3QuXHJcbiAgICAgIHJlc3VsdFtpbmRleF0gPSBoYW5kbGVUYWJsZUNlbGwoXHJcbiAgICAgICAgY2hpbGRyZW5baW5kZXhdLFxyXG4gICAgICAgIG5vZGUsXHJcbiAgICAgICAgY29udGV4dCxcclxuICAgICAgICBzYWZlT3B0aW9uc1xyXG4gICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgc3ViZXhpdCgpXHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHR5cGUge1RvTWFya2Rvd25IYW5kbGV9XHJcbiAgICogQHBhcmFtIHtJbmxpbmVDb2RlfSBub2RlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gaW5saW5lQ29kZVdpdGhUYWJsZShub2RlLCBwYXJlbnQsIGNvbnRleHQpIHtcclxuICAgIGxldCB2YWx1ZSA9IGlubGluZUNvZGUobm9kZSwgcGFyZW50LCBjb250ZXh0KVxyXG5cclxuICAgIGlmIChjb250ZXh0LnN0YWNrLmluY2x1ZGVzKCd0YWJsZUNlbGwnKSkge1xyXG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcfC9nLCAnXFxcXCQmJylcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdmFsdWVcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-table/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-task-list-item/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-task-list-item/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTaskListItemFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmTaskListItemFromMarkdown; },\n/* harmony export */   \"gfmTaskListItemToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmTaskListItemToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm-task-list-item/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tdGFzay1saXN0LWl0ZW0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR3VCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWdmbS10YXNrLWxpc3QtaXRlbS9pbmRleC5qcz83OGQ1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7XHJcbiAgZ2ZtVGFza0xpc3RJdGVtRnJvbU1hcmtkb3duLFxyXG4gIGdmbVRhc2tMaXN0SXRlbVRvTWFya2Rvd25cclxufSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-task-list-item/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm-task-list-item/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mdast-util-gfm-task-list-item/lib/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTaskListItemFromMarkdown\": function() { return /* binding */ gfmTaskListItemFromMarkdown; },\n/* harmony export */   \"gfmTaskListItemToMarkdown\": function() { return /* binding */ gfmTaskListItemToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_to_markdown_lib_handle_list_item_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-to-markdown/lib/handle/list-item.js */ \"./node_modules/mdast-util-to-markdown/lib/handle/list-item.js\");\n/* harmony import */ var mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-markdown/lib/util/track.js */ \"./node_modules/mdast-util-to-markdown/lib/util/track.js\");\n/**\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('mdast').Paragraph} Paragraph\r\n * @typedef {import('mdast').Parent} Parent\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\r\n */\r\n\r\n/**\r\n * @typedef {Extract<Root | Content, Parent>} Parents\r\n */\r\n\r\n\r\n\r\n\r\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\r\n// `track` from `state`.\r\n// To do: next major: replace exports with functions.\r\n// To do: next major: use `defaulthandlers.listItem`.\r\n\r\n/**\r\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\r\n *\r\n * @type {FromMarkdownExtension}\r\n */\r\nconst gfmTaskListItemFromMarkdown = {\r\n  exit: {\r\n    taskListCheckValueChecked: exitCheck,\r\n    taskListCheckValueUnchecked: exitCheck,\r\n    paragraph: exitParagraphWithTaskListItem\r\n  }\r\n}\r\n\r\n/**\r\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\r\n *\r\n * @type {ToMarkdownExtension}\r\n */\r\nconst gfmTaskListItemToMarkdown = {\r\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\r\n  handlers: {listItem: listItemWithTaskListItem}\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitCheck(token) {\r\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\r\n  // We’re always in a paragraph, in a list item.\r\n  node.checked = token.type === 'taskListCheckValueChecked'\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {FromMarkdownHandle}\r\n */\r\nfunction exitParagraphWithTaskListItem(token) {\r\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\r\n\r\n  if (\r\n    parent &&\r\n    parent.type === 'listItem' &&\r\n    typeof parent.checked === 'boolean'\r\n  ) {\r\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\r\n    const head = node.children[0]\r\n\r\n    if (head && head.type === 'text') {\r\n      const siblings = parent.children\r\n      let index = -1\r\n      /** @type {Paragraph | undefined} */\r\n      let firstParaghraph\r\n\r\n      while (++index < siblings.length) {\r\n        const sibling = siblings[index]\r\n        if (sibling.type === 'paragraph') {\r\n          firstParaghraph = sibling\r\n          break\r\n        }\r\n      }\r\n\r\n      if (firstParaghraph === node) {\r\n        // Must start with a space or a tab.\r\n        head.value = head.value.slice(1)\r\n\r\n        if (head.value.length === 0) {\r\n          node.children.shift()\r\n        } else if (\r\n          node.position &&\r\n          head.position &&\r\n          typeof head.position.start.offset === 'number'\r\n        ) {\r\n          head.position.start.column++\r\n          head.position.start.offset++\r\n          node.position.start = Object.assign({}, head.position.start)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.exit(token)\r\n}\r\n\r\n/**\r\n * @type {ToMarkdownHandle}\r\n * @param {ListItem} node\r\n */\r\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\r\n  const head = node.children[0]\r\n  const checkable =\r\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\r\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\r\n  const tracker = (0,mdast_util_to_markdown_lib_util_track_js__WEBPACK_IMPORTED_MODULE_0__.track)(safeOptions)\r\n\r\n  if (checkable) {\r\n    tracker.move(checkbox)\r\n  }\r\n\r\n  let value = (0,mdast_util_to_markdown_lib_handle_list_item_js__WEBPACK_IMPORTED_MODULE_1__.listItem)(node, parent, context, {\r\n    ...safeOptions,\r\n    ...tracker.current()\r\n  })\r\n\r\n  if (checkable) {\r\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\r\n  }\r\n\r\n  return value\r\n\r\n  /**\r\n   * @param {string} $0\r\n   * @returns {string}\r\n   */\r\n  function check($0) {\r\n    return $0 + checkbox\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0tdGFzay1saXN0LWl0ZW0vbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEseUJBQXlCO0FBQ3RDLGFBQWEsMEJBQTBCO0FBQ3ZDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsbURBQW1EO0FBQ2hFLGFBQWEsOENBQThDO0FBQzNELGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEseUNBQXlDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDO0FBQ0E7QUFDdUU7QUFDVDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ087QUFDUCxZQUFZLDhDQUE4QztBQUMxRCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBLDRCQUE0QixTQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwrRUFBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3RkFBUTtBQUN0QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxxREFBcUQsSUFBSTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWdmbS10YXNrLWxpc3QtaXRlbS9saWIvaW5kZXguanM/ZDg4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBDb250ZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlzdEl0ZW19IExpc3RJdGVtXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGFyYWdyYXBofSBQYXJhZ3JhcGhcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5QYXJlbnR9IFBhcmVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IFJvb3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1mcm9tLW1hcmtkb3duJykuQ29tcGlsZUNvbnRleHR9IENvbXBpbGVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bicpLkV4dGVuc2lvbn0gRnJvbU1hcmtkb3duRXh0ZW5zaW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bicpLkhhbmRsZX0gRnJvbU1hcmtkb3duSGFuZGxlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24nKS5PcHRpb25zfSBUb01hcmtkb3duRXh0ZW5zaW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8tbWFya2Rvd24nKS5IYW5kbGV9IFRvTWFya2Rvd25IYW5kbGVcclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYge0V4dHJhY3Q8Um9vdCB8IENvbnRlbnQsIFBhcmVudD59IFBhcmVudHNcclxuICovXHJcblxyXG5pbXBvcnQge2xpc3RJdGVtfSBmcm9tICdtZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi9oYW5kbGUvbGlzdC1pdGVtLmpzJ1xyXG5pbXBvcnQge3RyYWNrfSBmcm9tICdtZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi91dGlsL3RyYWNrLmpzJ1xyXG5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IHJlbmFtZSBgY29udGV4dGAgLT4gYHN0YXRlYCwgYHNhZmVPcHRpb25zYCAtPiBgaW5mb2AsIHVzZVxyXG4vLyBgdHJhY2tgIGZyb20gYHN0YXRlYC5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IHJlcGxhY2UgZXhwb3J0cyB3aXRoIGZ1bmN0aW9ucy5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IHVzZSBgZGVmYXVsdGhhbmRsZXJzLmxpc3RJdGVtYC5cclxuXHJcbi8qKlxyXG4gKiBFeHRlbnNpb24gZm9yIGBtZGFzdC11dGlsLWZyb20tbWFya2Rvd25gIHRvIGVuYWJsZSBHRk0gdGFzayBsaXN0IGl0ZW1zLlxyXG4gKlxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duRXh0ZW5zaW9ufVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdmbVRhc2tMaXN0SXRlbUZyb21NYXJrZG93biA9IHtcclxuICBleGl0OiB7XHJcbiAgICB0YXNrTGlzdENoZWNrVmFsdWVDaGVja2VkOiBleGl0Q2hlY2ssXHJcbiAgICB0YXNrTGlzdENoZWNrVmFsdWVVbmNoZWNrZWQ6IGV4aXRDaGVjayxcclxuICAgIHBhcmFncmFwaDogZXhpdFBhcmFncmFwaFdpdGhUYXNrTGlzdEl0ZW1cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHRlbnNpb24gZm9yIGBtZGFzdC11dGlsLXRvLW1hcmtkb3duYCB0byBlbmFibGUgR0ZNIHRhc2sgbGlzdCBpdGVtcy5cclxuICpcclxuICogQHR5cGUge1RvTWFya2Rvd25FeHRlbnNpb259XHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2ZtVGFza0xpc3RJdGVtVG9NYXJrZG93biA9IHtcclxuICB1bnNhZmU6IFt7YXRCcmVhazogdHJ1ZSwgY2hhcmFjdGVyOiAnLScsIGFmdGVyOiAnWzp8LV0nfV0sXHJcbiAgaGFuZGxlcnM6IHtsaXN0SXRlbTogbGlzdEl0ZW1XaXRoVGFza0xpc3RJdGVtfVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZXhpdENoZWNrKHRva2VuKSB7XHJcbiAgY29uc3Qgbm9kZSA9IC8qKiBAdHlwZSB7TGlzdEl0ZW19ICovICh0aGlzLnN0YWNrW3RoaXMuc3RhY2subGVuZ3RoIC0gMl0pXHJcbiAgLy8gV2XigJlyZSBhbHdheXMgaW4gYSBwYXJhZ3JhcGgsIGluIGEgbGlzdCBpdGVtLlxyXG4gIG5vZGUuY2hlY2tlZCA9IHRva2VuLnR5cGUgPT09ICd0YXNrTGlzdENoZWNrVmFsdWVDaGVja2VkJ1xyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7RnJvbU1hcmtkb3duSGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gZXhpdFBhcmFncmFwaFdpdGhUYXNrTGlzdEl0ZW0odG9rZW4pIHtcclxuICBjb25zdCBwYXJlbnQgPSAvKiogQHR5cGUge1BhcmVudHN9ICovICh0aGlzLnN0YWNrW3RoaXMuc3RhY2subGVuZ3RoIC0gMl0pXHJcblxyXG4gIGlmIChcclxuICAgIHBhcmVudCAmJlxyXG4gICAgcGFyZW50LnR5cGUgPT09ICdsaXN0SXRlbScgJiZcclxuICAgIHR5cGVvZiBwYXJlbnQuY2hlY2tlZCA9PT0gJ2Jvb2xlYW4nXHJcbiAgKSB7XHJcbiAgICBjb25zdCBub2RlID0gLyoqIEB0eXBlIHtQYXJhZ3JhcGh9ICovICh0aGlzLnN0YWNrW3RoaXMuc3RhY2subGVuZ3RoIC0gMV0pXHJcbiAgICBjb25zdCBoZWFkID0gbm9kZS5jaGlsZHJlblswXVxyXG5cclxuICAgIGlmIChoZWFkICYmIGhlYWQudHlwZSA9PT0gJ3RleHQnKSB7XHJcbiAgICAgIGNvbnN0IHNpYmxpbmdzID0gcGFyZW50LmNoaWxkcmVuXHJcbiAgICAgIGxldCBpbmRleCA9IC0xXHJcbiAgICAgIC8qKiBAdHlwZSB7UGFyYWdyYXBoIHwgdW5kZWZpbmVkfSAqL1xyXG4gICAgICBsZXQgZmlyc3RQYXJhZ2hyYXBoXHJcblxyXG4gICAgICB3aGlsZSAoKytpbmRleCA8IHNpYmxpbmdzLmxlbmd0aCkge1xyXG4gICAgICAgIGNvbnN0IHNpYmxpbmcgPSBzaWJsaW5nc1tpbmRleF1cclxuICAgICAgICBpZiAoc2libGluZy50eXBlID09PSAncGFyYWdyYXBoJykge1xyXG4gICAgICAgICAgZmlyc3RQYXJhZ2hyYXBoID0gc2libGluZ1xyXG4gICAgICAgICAgYnJlYWtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmaXJzdFBhcmFnaHJhcGggPT09IG5vZGUpIHtcclxuICAgICAgICAvLyBNdXN0IHN0YXJ0IHdpdGggYSBzcGFjZSBvciBhIHRhYi5cclxuICAgICAgICBoZWFkLnZhbHVlID0gaGVhZC52YWx1ZS5zbGljZSgxKVxyXG5cclxuICAgICAgICBpZiAoaGVhZC52YWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIG5vZGUuY2hpbGRyZW4uc2hpZnQoKVxyXG4gICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICBub2RlLnBvc2l0aW9uICYmXHJcbiAgICAgICAgICBoZWFkLnBvc2l0aW9uICYmXHJcbiAgICAgICAgICB0eXBlb2YgaGVhZC5wb3NpdGlvbi5zdGFydC5vZmZzZXQgPT09ICdudW1iZXInXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBoZWFkLnBvc2l0aW9uLnN0YXJ0LmNvbHVtbisrXHJcbiAgICAgICAgICBoZWFkLnBvc2l0aW9uLnN0YXJ0Lm9mZnNldCsrXHJcbiAgICAgICAgICBub2RlLnBvc2l0aW9uLnN0YXJ0ID0gT2JqZWN0LmFzc2lnbih7fSwgaGVhZC5wb3NpdGlvbi5zdGFydClcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRoaXMuZXhpdCh0b2tlbilcclxufVxyXG5cclxuLyoqXHJcbiAqIEB0eXBlIHtUb01hcmtkb3duSGFuZGxlfVxyXG4gKiBAcGFyYW0ge0xpc3RJdGVtfSBub2RlXHJcbiAqL1xyXG5mdW5jdGlvbiBsaXN0SXRlbVdpdGhUYXNrTGlzdEl0ZW0obm9kZSwgcGFyZW50LCBjb250ZXh0LCBzYWZlT3B0aW9ucykge1xyXG4gIGNvbnN0IGhlYWQgPSBub2RlLmNoaWxkcmVuWzBdXHJcbiAgY29uc3QgY2hlY2thYmxlID1cclxuICAgIHR5cGVvZiBub2RlLmNoZWNrZWQgPT09ICdib29sZWFuJyAmJiBoZWFkICYmIGhlYWQudHlwZSA9PT0gJ3BhcmFncmFwaCdcclxuICBjb25zdCBjaGVja2JveCA9ICdbJyArIChub2RlLmNoZWNrZWQgPyAneCcgOiAnICcpICsgJ10gJ1xyXG4gIGNvbnN0IHRyYWNrZXIgPSB0cmFjayhzYWZlT3B0aW9ucylcclxuXHJcbiAgaWYgKGNoZWNrYWJsZSkge1xyXG4gICAgdHJhY2tlci5tb3ZlKGNoZWNrYm94KVxyXG4gIH1cclxuXHJcbiAgbGV0IHZhbHVlID0gbGlzdEl0ZW0obm9kZSwgcGFyZW50LCBjb250ZXh0LCB7XHJcbiAgICAuLi5zYWZlT3B0aW9ucyxcclxuICAgIC4uLnRyYWNrZXIuY3VycmVudCgpXHJcbiAgfSlcclxuXHJcbiAgaWYgKGNoZWNrYWJsZSkge1xyXG4gICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9eKD86WyorLV18XFxkK1xcLikoW1xcclxcbl18IHsxLDN9KS8sIGNoZWNrKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHZhbHVlXHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSAkMFxyXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gY2hlY2soJDApIHtcclxuICAgIHJldHVybiAkMCArIGNoZWNrYm94XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm-task-list-item/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/mdast-util-gfm/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmFromMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmFromMarkdown; },\n/* harmony export */   \"gfmToMarkdown\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.gfmToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-gfm/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Options} Options\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBO0FBQzZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWdmbS9pbmRleC5qcz81NmRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLk9wdGlvbnN9IE9wdGlvbnNcclxuICovXHJcblxyXG5leHBvcnQge2dmbUZyb21NYXJrZG93biwgZ2ZtVG9NYXJrZG93bn0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-gfm/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mdast-util-gfm/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmFromMarkdown\": function() { return /* binding */ gfmFromMarkdown; },\n/* harmony export */   \"gfmToMarkdown\": function() { return /* binding */ gfmToMarkdown; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-gfm-autolink-literal */ \"./node_modules/mdast-util-gfm-autolink-literal/index.js\");\n/* harmony import */ var mdast_util_gfm_footnote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-gfm-footnote */ \"./node_modules/mdast-util-gfm-footnote/index.js\");\n/* harmony import */ var mdast_util_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mdast-util-gfm-strikethrough */ \"./node_modules/mdast-util-gfm-strikethrough/index.js\");\n/* harmony import */ var mdast_util_gfm_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mdast-util-gfm-table */ \"./node_modules/mdast-util-gfm-table/index.js\");\n/* harmony import */ var mdast_util_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mdast-util-gfm-task-list-item */ \"./node_modules/mdast-util-gfm-task-list-item/index.js\");\n/**\r\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\r\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\r\n */\r\n\r\n/**\r\n * @typedef {import('mdast-util-gfm-table').Options} Options\r\n *   Configuration.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\r\n * literals, footnotes, strikethrough, tables, tasklists).\r\n *\r\n * @returns {Array<FromMarkdownExtension>}\r\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\r\n *   footnotes, strikethrough, tables, tasklists).\r\n */\r\nfunction gfmFromMarkdown() {\r\n  return [\r\n    mdast_util_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_0__.gfmAutolinkLiteralFromMarkdown,\r\n    (0,mdast_util_gfm_footnote__WEBPACK_IMPORTED_MODULE_1__.gfmFootnoteFromMarkdown)(),\r\n    mdast_util_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_2__.gfmStrikethroughFromMarkdown,\r\n    mdast_util_gfm_table__WEBPACK_IMPORTED_MODULE_3__.gfmTableFromMarkdown,\r\n    mdast_util_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_4__.gfmTaskListItemFromMarkdown\r\n  ]\r\n}\r\n\r\n/**\r\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\r\n * literals, footnotes, strikethrough, tables, tasklists).\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {ToMarkdownExtension}\r\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\r\n *   footnotes, strikethrough, tables, tasklists).\r\n */\r\nfunction gfmToMarkdown(options) {\r\n  return {\r\n    extensions: [\r\n      mdast_util_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_0__.gfmAutolinkLiteralToMarkdown,\r\n      (0,mdast_util_gfm_footnote__WEBPACK_IMPORTED_MODULE_1__.gfmFootnoteToMarkdown)(),\r\n      mdast_util_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_2__.gfmStrikethroughToMarkdown,\r\n      (0,mdast_util_gfm_table__WEBPACK_IMPORTED_MODULE_3__.gfmTableToMarkdown)(options),\r\n      mdast_util_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_4__.gfmTaskListItemToMarkdown\r\n    ]\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1nZm0vbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsOENBQThDO0FBQzNELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0NBQXdDO0FBQ3JEO0FBQ0E7QUFDQTtBQUl3QztBQUlSO0FBSUs7QUFDd0M7QUFJdkM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsSUFBSSwyRkFBOEI7QUFDbEMsSUFBSSxnRkFBdUI7QUFDM0IsSUFBSSxzRkFBNEI7QUFDaEMsSUFBSSxzRUFBb0I7QUFDeEIsSUFBSSxzRkFBMkI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxNQUFNLHlGQUE0QjtBQUNsQyxNQUFNLDhFQUFxQjtBQUMzQixNQUFNLG9GQUEwQjtBQUNoQyxNQUFNLHdFQUFrQjtBQUN4QixNQUFNLG9GQUF5QjtBQUMvQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtZ2ZtL2xpYi9pbmRleC5qcz81NjI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLWZyb20tbWFya2Rvd24nKS5FeHRlbnNpb259IEZyb21NYXJrZG93bkV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLW1hcmtkb3duJykuT3B0aW9uc30gVG9NYXJrZG93bkV4dGVuc2lvblxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLWdmbS10YWJsZScpLk9wdGlvbnN9IE9wdGlvbnNcclxuICogICBDb25maWd1cmF0aW9uLlxyXG4gKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgZ2ZtQXV0b2xpbmtMaXRlcmFsRnJvbU1hcmtkb3duLFxyXG4gIGdmbUF1dG9saW5rTGl0ZXJhbFRvTWFya2Rvd25cclxufSBmcm9tICdtZGFzdC11dGlsLWdmbS1hdXRvbGluay1saXRlcmFsJ1xyXG5pbXBvcnQge1xyXG4gIGdmbUZvb3Rub3RlRnJvbU1hcmtkb3duLFxyXG4gIGdmbUZvb3Rub3RlVG9NYXJrZG93blxyXG59IGZyb20gJ21kYXN0LXV0aWwtZ2ZtLWZvb3Rub3RlJ1xyXG5pbXBvcnQge1xyXG4gIGdmbVN0cmlrZXRocm91Z2hGcm9tTWFya2Rvd24sXHJcbiAgZ2ZtU3RyaWtldGhyb3VnaFRvTWFya2Rvd25cclxufSBmcm9tICdtZGFzdC11dGlsLWdmbS1zdHJpa2V0aHJvdWdoJ1xyXG5pbXBvcnQge2dmbVRhYmxlRnJvbU1hcmtkb3duLCBnZm1UYWJsZVRvTWFya2Rvd259IGZyb20gJ21kYXN0LXV0aWwtZ2ZtLXRhYmxlJ1xyXG5pbXBvcnQge1xyXG4gIGdmbVRhc2tMaXN0SXRlbUZyb21NYXJrZG93bixcclxuICBnZm1UYXNrTGlzdEl0ZW1Ub01hcmtkb3duXHJcbn0gZnJvbSAnbWRhc3QtdXRpbC1nZm0tdGFzay1saXN0LWl0ZW0nXHJcblxyXG4vKipcclxuICogQ3JlYXRlIGFuIGV4dGVuc2lvbiBmb3IgYG1kYXN0LXV0aWwtZnJvbS1tYXJrZG93bmAgdG8gZW5hYmxlIEdGTSAoYXV0b2xpbmtcclxuICogbGl0ZXJhbHMsIGZvb3Rub3Rlcywgc3RyaWtldGhyb3VnaCwgdGFibGVzLCB0YXNrbGlzdHMpLlxyXG4gKlxyXG4gKiBAcmV0dXJucyB7QXJyYXk8RnJvbU1hcmtkb3duRXh0ZW5zaW9uPn1cclxuICogICBFeHRlbnNpb24gZm9yIGBtZGFzdC11dGlsLWZyb20tbWFya2Rvd25gIHRvIGVuYWJsZSBHRk0gKGF1dG9saW5rIGxpdGVyYWxzLFxyXG4gKiAgIGZvb3Rub3Rlcywgc3RyaWtldGhyb3VnaCwgdGFibGVzLCB0YXNrbGlzdHMpLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdmbUZyb21NYXJrZG93bigpIHtcclxuICByZXR1cm4gW1xyXG4gICAgZ2ZtQXV0b2xpbmtMaXRlcmFsRnJvbU1hcmtkb3duLFxyXG4gICAgZ2ZtRm9vdG5vdGVGcm9tTWFya2Rvd24oKSxcclxuICAgIGdmbVN0cmlrZXRocm91Z2hGcm9tTWFya2Rvd24sXHJcbiAgICBnZm1UYWJsZUZyb21NYXJrZG93bixcclxuICAgIGdmbVRhc2tMaXN0SXRlbUZyb21NYXJrZG93blxyXG4gIF1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhbiBleHRlbnNpb24gZm9yIGBtZGFzdC11dGlsLXRvLW1hcmtkb3duYCB0byBlbmFibGUgR0ZNIChhdXRvbGlua1xyXG4gKiBsaXRlcmFscywgZm9vdG5vdGVzLCBzdHJpa2V0aHJvdWdoLCB0YWJsZXMsIHRhc2tsaXN0cykuXHJcbiAqXHJcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IFtvcHRpb25zXVxyXG4gKiAgIENvbmZpZ3VyYXRpb24uXHJcbiAqIEByZXR1cm5zIHtUb01hcmtkb3duRXh0ZW5zaW9ufVxyXG4gKiAgIEV4dGVuc2lvbiBmb3IgYG1kYXN0LXV0aWwtdG8tbWFya2Rvd25gIHRvIGVuYWJsZSBHRk0gKGF1dG9saW5rIGxpdGVyYWxzLFxyXG4gKiAgIGZvb3Rub3Rlcywgc3RyaWtldGhyb3VnaCwgdGFibGVzLCB0YXNrbGlzdHMpLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdmbVRvTWFya2Rvd24ob3B0aW9ucykge1xyXG4gIHJldHVybiB7XHJcbiAgICBleHRlbnNpb25zOiBbXHJcbiAgICAgIGdmbUF1dG9saW5rTGl0ZXJhbFRvTWFya2Rvd24sXHJcbiAgICAgIGdmbUZvb3Rub3RlVG9NYXJrZG93bigpLFxyXG4gICAgICBnZm1TdHJpa2V0aHJvdWdoVG9NYXJrZG93bixcclxuICAgICAgZ2ZtVGFibGVUb01hcmtkb3duKG9wdGlvbnMpLFxyXG4gICAgICBnZm1UYXNrTGlzdEl0ZW1Ub01hcmtkb3duXHJcbiAgICBdXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-gfm/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": function() { return /* reexport safe */ _lib_state_js__WEBPACK_IMPORTED_MODULE_1__.all; },\n/* harmony export */   \"defaultHandlers\": function() { return /* reexport safe */ _lib_handlers_index_js__WEBPACK_IMPORTED_MODULE_0__.handlers; },\n/* harmony export */   \"one\": function() { return /* reexport safe */ _lib_state_js__WEBPACK_IMPORTED_MODULE_1__.one; },\n/* harmony export */   \"toHast\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.toHast; }\n/* harmony export */ });\n/* harmony import */ var _lib_handlers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/handlers/index.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/index.js\");\n/* harmony import */ var _lib_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/state.js */ \"./node_modules/mdast-util-to-hast/lib/state.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-to-hast/lib/index.js\");\n// Note: types exposed from `index.d.ts`.\r\n\r\n// To do: next major: remove.\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNtRTtBQUNuRTtBQUN1QztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvaW5kZXguanM/YmU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOb3RlOiB0eXBlcyBleHBvc2VkIGZyb20gYGluZGV4LmQudHNgLlxyXG5leHBvcnQge2hhbmRsZXJzIGFzIGRlZmF1bHRIYW5kbGVyc30gZnJvbSAnLi9saWIvaGFuZGxlcnMvaW5kZXguanMnXHJcbi8vIFRvIGRvOiBuZXh0IG1ham9yOiByZW1vdmUuXHJcbmV4cG9ydCB7b25lLCBhbGx9IGZyb20gJy4vbGliL3N0YXRlLmpzJ1xyXG5leHBvcnQge3RvSGFzdH0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/footer.js":
/*!*******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/footer.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"footer\": function() { return /* binding */ footer; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n *\r\n * @typedef {import('./state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Generate a hast footer for called footnote definitions.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @returns {Element | undefined}\r\n *   `section` element or `undefined`.\r\n */\r\nfunction footer(state) {\r\n  /** @type {Array<ElementContent>} */\r\n  const listItems = []\r\n  let index = -1\r\n\r\n  while (++index < state.footnoteOrder.length) {\r\n    const def = state.footnoteById[state.footnoteOrder[index]]\r\n\r\n    if (!def) {\r\n      continue\r\n    }\r\n\r\n    const content = state.all(def)\r\n    const id = String(def.identifier).toUpperCase()\r\n    const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(id.toLowerCase())\r\n    let referenceIndex = 0\r\n    /** @type {Array<ElementContent>} */\r\n    const backReferences = []\r\n\r\n    while (++referenceIndex <= state.footnoteCounts[id]) {\r\n      /** @type {Element} */\r\n      const backReference = {\r\n        type: 'element',\r\n        tagName: 'a',\r\n        properties: {\r\n          href:\r\n            '#' +\r\n            state.clobberPrefix +\r\n            'fnref-' +\r\n            safeId +\r\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\r\n          dataFootnoteBackref: true,\r\n          className: ['data-footnote-backref'],\r\n          ariaLabel: state.footnoteBackLabel\r\n        },\r\n        children: [{type: 'text', value: '↩'}]\r\n      }\r\n\r\n      if (referenceIndex > 1) {\r\n        backReference.children.push({\r\n          type: 'element',\r\n          tagName: 'sup',\r\n          children: [{type: 'text', value: String(referenceIndex)}]\r\n        })\r\n      }\r\n\r\n      if (backReferences.length > 0) {\r\n        backReferences.push({type: 'text', value: ' '})\r\n      }\r\n\r\n      backReferences.push(backReference)\r\n    }\r\n\r\n    const tail = content[content.length - 1]\r\n\r\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\r\n      const tailTail = tail.children[tail.children.length - 1]\r\n      if (tailTail && tailTail.type === 'text') {\r\n        tailTail.value += ' '\r\n      } else {\r\n        tail.children.push({type: 'text', value: ' '})\r\n      }\r\n\r\n      tail.children.push(...backReferences)\r\n    } else {\r\n      content.push(...backReferences)\r\n    }\r\n\r\n    /** @type {Element} */\r\n    const listItem = {\r\n      type: 'element',\r\n      tagName: 'li',\r\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\r\n      children: state.wrap(content, true)\r\n    }\r\n\r\n    state.patch(def, listItem)\r\n\r\n    listItems.push(listItem)\r\n  }\r\n\r\n  if (listItems.length === 0) {\r\n    return\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    tagName: 'section',\r\n    properties: {dataFootnotes: true, className: ['footnotes']},\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: state.footnoteLabelTagName,\r\n        properties: {\r\n          // To do: use structured clone.\r\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\r\n          id: 'footnote-label'\r\n        },\r\n        children: [{type: 'text', value: state.footnoteLabel}]\r\n      },\r\n      {type: 'text', value: '\\n'},\r\n      {\r\n        type: 'element',\r\n        tagName: 'ol',\r\n        properties: {},\r\n        children: state.wrap(listItems, true)\r\n      },\r\n      {type: 'text', value: '\\n'}\r\n    ]\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9mb290ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsK0JBQStCO0FBQzVDO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUN3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseUVBQVk7QUFDL0I7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxvQkFBb0IseUJBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBNEM7QUFDbEUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix5QkFBeUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUiw0QkFBNEIseUJBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlDQUF5QztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOENBQThDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsb0JBQW9CLHlDQUF5QztBQUM3RCxPQUFPO0FBQ1AsT0FBTywwQkFBMEI7QUFDakM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsT0FBTztBQUNQLE9BQU87QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvZm9vdGVyLmpzP2I0MTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50Q29udGVudH0gRWxlbWVudENvbnRlbnRcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7bm9ybWFsaXplVXJpfSBmcm9tICdtaWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmknXHJcblxyXG4vKipcclxuICogR2VuZXJhdGUgYSBoYXN0IGZvb3RlciBmb3IgY2FsbGVkIGZvb3Rub3RlIGRlZmluaXRpb25zLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHJldHVybnMge0VsZW1lbnQgfCB1bmRlZmluZWR9XHJcbiAqICAgYHNlY3Rpb25gIGVsZW1lbnQgb3IgYHVuZGVmaW5lZGAuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZm9vdGVyKHN0YXRlKSB7XHJcbiAgLyoqIEB0eXBlIHtBcnJheTxFbGVtZW50Q29udGVudD59ICovXHJcbiAgY29uc3QgbGlzdEl0ZW1zID0gW11cclxuICBsZXQgaW5kZXggPSAtMVxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IHN0YXRlLmZvb3Rub3RlT3JkZXIubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBkZWYgPSBzdGF0ZS5mb290bm90ZUJ5SWRbc3RhdGUuZm9vdG5vdGVPcmRlcltpbmRleF1dXHJcblxyXG4gICAgaWYgKCFkZWYpIHtcclxuICAgICAgY29udGludWVcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBjb250ZW50ID0gc3RhdGUuYWxsKGRlZilcclxuICAgIGNvbnN0IGlkID0gU3RyaW5nKGRlZi5pZGVudGlmaWVyKS50b1VwcGVyQ2FzZSgpXHJcbiAgICBjb25zdCBzYWZlSWQgPSBub3JtYWxpemVVcmkoaWQudG9Mb3dlckNhc2UoKSlcclxuICAgIGxldCByZWZlcmVuY2VJbmRleCA9IDBcclxuICAgIC8qKiBAdHlwZSB7QXJyYXk8RWxlbWVudENvbnRlbnQ+fSAqL1xyXG4gICAgY29uc3QgYmFja1JlZmVyZW5jZXMgPSBbXVxyXG5cclxuICAgIHdoaWxlICgrK3JlZmVyZW5jZUluZGV4IDw9IHN0YXRlLmZvb3Rub3RlQ291bnRzW2lkXSkge1xyXG4gICAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgICAgIGNvbnN0IGJhY2tSZWZlcmVuY2UgPSB7XHJcbiAgICAgICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgICAgIHRhZ05hbWU6ICdhJyxcclxuICAgICAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgICBocmVmOlxyXG4gICAgICAgICAgICAnIycgK1xyXG4gICAgICAgICAgICBzdGF0ZS5jbG9iYmVyUHJlZml4ICtcclxuICAgICAgICAgICAgJ2ZucmVmLScgK1xyXG4gICAgICAgICAgICBzYWZlSWQgK1xyXG4gICAgICAgICAgICAocmVmZXJlbmNlSW5kZXggPiAxID8gJy0nICsgcmVmZXJlbmNlSW5kZXggOiAnJyksXHJcbiAgICAgICAgICBkYXRhRm9vdG5vdGVCYWNrcmVmOiB0cnVlLFxyXG4gICAgICAgICAgY2xhc3NOYW1lOiBbJ2RhdGEtZm9vdG5vdGUtYmFja3JlZiddLFxyXG4gICAgICAgICAgYXJpYUxhYmVsOiBzdGF0ZS5mb290bm90ZUJhY2tMYWJlbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2hpbGRyZW46IFt7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ+KGqSd9XVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAocmVmZXJlbmNlSW5kZXggPiAxKSB7XHJcbiAgICAgICAgYmFja1JlZmVyZW5jZS5jaGlsZHJlbi5wdXNoKHtcclxuICAgICAgICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgICAgICAgIHRhZ05hbWU6ICdzdXAnLFxyXG4gICAgICAgICAgY2hpbGRyZW46IFt7dHlwZTogJ3RleHQnLCB2YWx1ZTogU3RyaW5nKHJlZmVyZW5jZUluZGV4KX1dXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGJhY2tSZWZlcmVuY2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBiYWNrUmVmZXJlbmNlcy5wdXNoKHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnICd9KVxyXG4gICAgICB9XHJcblxyXG4gICAgICBiYWNrUmVmZXJlbmNlcy5wdXNoKGJhY2tSZWZlcmVuY2UpXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGFpbCA9IGNvbnRlbnRbY29udGVudC5sZW5ndGggLSAxXVxyXG5cclxuICAgIGlmICh0YWlsICYmIHRhaWwudHlwZSA9PT0gJ2VsZW1lbnQnICYmIHRhaWwudGFnTmFtZSA9PT0gJ3AnKSB7XHJcbiAgICAgIGNvbnN0IHRhaWxUYWlsID0gdGFpbC5jaGlsZHJlblt0YWlsLmNoaWxkcmVuLmxlbmd0aCAtIDFdXHJcbiAgICAgIGlmICh0YWlsVGFpbCAmJiB0YWlsVGFpbC50eXBlID09PSAndGV4dCcpIHtcclxuICAgICAgICB0YWlsVGFpbC52YWx1ZSArPSAnICdcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0YWlsLmNoaWxkcmVuLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6ICcgJ30pXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRhaWwuY2hpbGRyZW4ucHVzaCguLi5iYWNrUmVmZXJlbmNlcylcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnRlbnQucHVzaCguLi5iYWNrUmVmZXJlbmNlcylcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgICBjb25zdCBsaXN0SXRlbSA9IHtcclxuICAgICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgICB0YWdOYW1lOiAnbGknLFxyXG4gICAgICBwcm9wZXJ0aWVzOiB7aWQ6IHN0YXRlLmNsb2JiZXJQcmVmaXggKyAnZm4tJyArIHNhZmVJZH0sXHJcbiAgICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKGNvbnRlbnQsIHRydWUpXHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGUucGF0Y2goZGVmLCBsaXN0SXRlbSlcclxuXHJcbiAgICBsaXN0SXRlbXMucHVzaChsaXN0SXRlbSlcclxuICB9XHJcblxyXG4gIGlmIChsaXN0SXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm5cclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnc2VjdGlvbicsXHJcbiAgICBwcm9wZXJ0aWVzOiB7ZGF0YUZvb3Rub3RlczogdHJ1ZSwgY2xhc3NOYW1lOiBbJ2Zvb3Rub3RlcyddfSxcclxuICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgIHtcclxuICAgICAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICAgICAgdGFnTmFtZTogc3RhdGUuZm9vdG5vdGVMYWJlbFRhZ05hbWUsXHJcbiAgICAgICAgcHJvcGVydGllczoge1xyXG4gICAgICAgICAgLy8gVG8gZG86IHVzZSBzdHJ1Y3R1cmVkIGNsb25lLlxyXG4gICAgICAgICAgLi4uSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzdGF0ZS5mb290bm90ZUxhYmVsUHJvcGVydGllcykpLFxyXG4gICAgICAgICAgaWQ6ICdmb290bm90ZS1sYWJlbCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNoaWxkcmVuOiBbe3R5cGU6ICd0ZXh0JywgdmFsdWU6IHN0YXRlLmZvb3Rub3RlTGFiZWx9XVxyXG4gICAgICB9LFxyXG4gICAgICB7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ1xcbid9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgICAgIHRhZ05hbWU6ICdvbCcsXHJcbiAgICAgICAgcHJvcGVydGllczoge30sXHJcbiAgICAgICAgY2hpbGRyZW46IHN0YXRlLndyYXAobGlzdEl0ZW1zLCB0cnVlKVxyXG4gICAgICB9LFxyXG4gICAgICB7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ1xcbid9XHJcbiAgICBdXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/footer.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js":
/*!********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"blockquote\": function() { return /* binding */ blockquote; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Blockquote} Blockquote\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `blockquote` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Blockquote} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction blockquote(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'blockquote',\r\n    properties: {},\r\n    children: state.wrap(state.all(node), true)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9ibG9ja3F1b3RlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2Jsb2NrcXVvdGUuanM/ZDNkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5CbG9ja3F1b3RlfSBCbG9ja3F1b3RlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gYW4gbWRhc3QgYGJsb2NrcXVvdGVgIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtCbG9ja3F1b3RlfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGJsb2NrcXVvdGUoc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogJ2Jsb2NrcXVvdGUnLFxyXG4gICAgcHJvcGVydGllczoge30sXHJcbiAgICBjaGlsZHJlbjogc3RhdGUud3JhcChzdGF0ZS5hbGwobm9kZSksIHRydWUpXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcclxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/break.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/break.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hardBreak\": function() { return /* binding */ hardBreak; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {import('mdast').Break} Break\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `break` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Break} node\r\n *   mdast node.\r\n * @returns {Array<Element | Text>}\r\n *   hast element content.\r\n */\r\nfunction hardBreak(state, node) {\r\n  /** @type {Element} */\r\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\r\n  state.patch(node, result)\r\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9icmVhay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLHFCQUFxQjtBQUNsQyxhQUFhLHVCQUF1QjtBQUNwQyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsU0FBUztBQUN0QixrQkFBa0IsOENBQThDO0FBQ2hFO0FBQ0EsMENBQTBDLDBCQUEwQjtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9icmVhay5qcz83NDQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuVGV4dH0gVGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkJyZWFrfSBCcmVha1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGBicmVha2Agbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0JyZWFrfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0FycmF5PEVsZW1lbnQgfCBUZXh0Pn1cclxuICogICBoYXN0IGVsZW1lbnQgY29udGVudC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBoYXJkQnJlYWsoc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ2JyJywgcHJvcGVydGllczoge30sIGNoaWxkcmVuOiBbXX1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIFtzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KSwge3R5cGU6ICd0ZXh0JywgdmFsdWU6ICdcXG4nfV1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/break.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/code.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/code.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"code\": function() { return /* binding */ code; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').Code} Code\r\n * @typedef {import('../state.js').State} State\r\n\r\n */\r\n\r\n/**\r\n * Turn an mdast `code` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Code} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction code(state, node) {\r\n  const value = node.value ? node.value + '\\n' : ''\r\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\r\n  // on for years in remark now.\r\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\r\n  /** @type {Properties} */\r\n  const properties = {}\r\n\r\n  if (lang) {\r\n    properties.className = ['language-' + lang]\r\n  }\r\n\r\n  // Create `<code>`.\r\n  /** @type {Element} */\r\n  let result = {\r\n    type: 'element',\r\n    tagName: 'code',\r\n    properties,\r\n    children: [{type: 'text', value}]\r\n  }\r\n\r\n  if (node.meta) {\r\n    result.data = {meta: node.meta}\r\n  }\r\n\r\n  state.patch(node, result)\r\n  result = state.applyData(node, result)\r\n\r\n  // Create `<pre>`.\r\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\r\n  state.patch(node, result)\r\n  return result\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9jb2RlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvQkFBb0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0NBQStDO0FBQzNEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9jb2RlLmpzP2VhMWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Qcm9wZXJ0aWVzfSBQcm9wZXJ0aWVzXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuQ29kZX0gQ29kZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG5cclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgY29kZWAgbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0NvZGV9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29kZShzdGF0ZSwgbm9kZSkge1xyXG4gIGNvbnN0IHZhbHVlID0gbm9kZS52YWx1ZSA/IG5vZGUudmFsdWUgKyAnXFxuJyA6ICcnXHJcbiAgLy8gVG8gZG86IG5leHQgbWFqb3IsIHVzZSBgbm9kZS5sYW5nYCB3L28gcmVnZXgsIHRoZSBzcGxpdHRpbmfigJlzIGJlZW4gZ29pbmdcclxuICAvLyBvbiBmb3IgeWVhcnMgaW4gcmVtYXJrIG5vdy5cclxuICBjb25zdCBsYW5nID0gbm9kZS5sYW5nID8gbm9kZS5sYW5nLm1hdGNoKC9eW14gXFx0XSsoPz1bIFxcdF18JCkvKSA6IG51bGxcclxuICAvKiogQHR5cGUge1Byb3BlcnRpZXN9ICovXHJcbiAgY29uc3QgcHJvcGVydGllcyA9IHt9XHJcblxyXG4gIGlmIChsYW5nKSB7XHJcbiAgICBwcm9wZXJ0aWVzLmNsYXNzTmFtZSA9IFsnbGFuZ3VhZ2UtJyArIGxhbmddXHJcbiAgfVxyXG5cclxuICAvLyBDcmVhdGUgYDxjb2RlPmAuXHJcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xyXG4gIGxldCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnY29kZScsXHJcbiAgICBwcm9wZXJ0aWVzLFxyXG4gICAgY2hpbGRyZW46IFt7dHlwZTogJ3RleHQnLCB2YWx1ZX1dXHJcbiAgfVxyXG5cclxuICBpZiAobm9kZS5tZXRhKSB7XHJcbiAgICByZXN1bHQuZGF0YSA9IHttZXRhOiBub2RlLm1ldGF9XHJcbiAgfVxyXG5cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmVzdWx0ID0gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxuXHJcbiAgLy8gQ3JlYXRlIGA8cHJlPmAuXHJcbiAgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ3ByZScsIHByb3BlcnRpZXM6IHt9LCBjaGlsZHJlbjogW3Jlc3VsdF19XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/code.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/delete.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/delete.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"strikethrough\": function() { return /* binding */ strikethrough; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Delete} Delete\r\n * @typedef {import('../state.js').State} State\r\n\r\n */\r\n\r\n/**\r\n * Turn an mdast `delete` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Delete} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction strikethrough(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'del',\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9kZWxldGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9kZWxldGUuanM/MmY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5EZWxldGV9IERlbGV0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG5cclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgZGVsZXRlYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7RGVsZXRlfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0cmlrZXRocm91Z2goc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogJ2RlbCcsXHJcbiAgICBwcm9wZXJ0aWVzOiB7fSxcclxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/delete.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js":
/*!******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"emphasis\": function() { return /* binding */ emphasis; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Emphasis} Emphasis\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `emphasis` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Emphasis} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction emphasis(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'em',\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9lbXBoYXNpcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9lbXBoYXNpcy5qcz9lNWMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkVtcGhhc2lzfSBFbXBoYXNpc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGBlbXBoYXNpc2Agbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0VtcGhhc2lzfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGVtcGhhc2lzKHN0YXRlLCBub2RlKSB7XHJcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IHtcclxuICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgIHRhZ05hbWU6ICdlbScsXHJcbiAgICBwcm9wZXJ0aWVzOiB7fSxcclxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"footnoteReference\": function() { return /* binding */ footnoteReference; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `footnoteReference` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {FootnoteReference} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction footnoteReference(state, node) {\r\n  const id = String(node.identifier).toUpperCase()\r\n  const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(id.toLowerCase())\r\n  const index = state.footnoteOrder.indexOf(id)\r\n  /** @type {number} */\r\n  let counter\r\n\r\n  if (index === -1) {\r\n    state.footnoteOrder.push(id)\r\n    state.footnoteCounts[id] = 1\r\n    counter = state.footnoteOrder.length\r\n  } else {\r\n    state.footnoteCounts[id]++\r\n    counter = index + 1\r\n  }\r\n\r\n  const reuseCounter = state.footnoteCounts[id]\r\n\r\n  /** @type {Element} */\r\n  const link = {\r\n    type: 'element',\r\n    tagName: 'a',\r\n    properties: {\r\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\r\n      id:\r\n        state.clobberPrefix +\r\n        'fnref-' +\r\n        safeId +\r\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\r\n      dataFootnoteRef: true,\r\n      ariaDescribedBy: ['footnote-label']\r\n    },\r\n    children: [{type: 'text', value: String(counter)}]\r\n  }\r\n  state.patch(node, link)\r\n\r\n  /** @type {Element} */\r\n  const sup = {\r\n    type: 'element',\r\n    tagName: 'sup',\r\n    properties: {},\r\n    children: [link]\r\n  }\r\n  state.patch(node, sup)\r\n  return state.applyData(node, sup)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS1yZWZlcmVuY2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsbUNBQW1DO0FBQ2hELGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBLGlCQUFpQix5RUFBWTtBQUM3QjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxnQkFBZ0IscUNBQXFDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS1yZWZlcmVuY2UuanM/NzI3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Gb290bm90ZVJlZmVyZW5jZX0gRm9vdG5vdGVSZWZlcmVuY2VcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG5pbXBvcnQge25vcm1hbGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gYW4gbWRhc3QgYGZvb3Rub3RlUmVmZXJlbmNlYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7Rm9vdG5vdGVSZWZlcmVuY2V9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVSZWZlcmVuY2Uoc3RhdGUsIG5vZGUpIHtcclxuICBjb25zdCBpZCA9IFN0cmluZyhub2RlLmlkZW50aWZpZXIpLnRvVXBwZXJDYXNlKClcclxuICBjb25zdCBzYWZlSWQgPSBub3JtYWxpemVVcmkoaWQudG9Mb3dlckNhc2UoKSlcclxuICBjb25zdCBpbmRleCA9IHN0YXRlLmZvb3Rub3RlT3JkZXIuaW5kZXhPZihpZClcclxuICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICBsZXQgY291bnRlclxyXG5cclxuICBpZiAoaW5kZXggPT09IC0xKSB7XHJcbiAgICBzdGF0ZS5mb290bm90ZU9yZGVyLnB1c2goaWQpXHJcbiAgICBzdGF0ZS5mb290bm90ZUNvdW50c1tpZF0gPSAxXHJcbiAgICBjb3VudGVyID0gc3RhdGUuZm9vdG5vdGVPcmRlci5sZW5ndGhcclxuICB9IGVsc2Uge1xyXG4gICAgc3RhdGUuZm9vdG5vdGVDb3VudHNbaWRdKytcclxuICAgIGNvdW50ZXIgPSBpbmRleCArIDFcclxuICB9XHJcblxyXG4gIGNvbnN0IHJldXNlQ291bnRlciA9IHN0YXRlLmZvb3Rub3RlQ291bnRzW2lkXVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgbGluayA9IHtcclxuICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgIHRhZ05hbWU6ICdhJyxcclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgaHJlZjogJyMnICsgc3RhdGUuY2xvYmJlclByZWZpeCArICdmbi0nICsgc2FmZUlkLFxyXG4gICAgICBpZDpcclxuICAgICAgICBzdGF0ZS5jbG9iYmVyUHJlZml4ICtcclxuICAgICAgICAnZm5yZWYtJyArXHJcbiAgICAgICAgc2FmZUlkICtcclxuICAgICAgICAocmV1c2VDb3VudGVyID4gMSA/ICctJyArIHJldXNlQ291bnRlciA6ICcnKSxcclxuICAgICAgZGF0YUZvb3Rub3RlUmVmOiB0cnVlLFxyXG4gICAgICBhcmlhRGVzY3JpYmVkQnk6IFsnZm9vdG5vdGUtbGFiZWwnXVxyXG4gICAgfSxcclxuICAgIGNoaWxkcmVuOiBbe3R5cGU6ICd0ZXh0JywgdmFsdWU6IFN0cmluZyhjb3VudGVyKX1dXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIGxpbmspXHJcblxyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCBzdXAgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnc3VwJyxcclxuICAgIHByb3BlcnRpZXM6IHt9LFxyXG4gICAgY2hpbGRyZW46IFtsaW5rXVxyXG4gIH1cclxuICBzdGF0ZS5wYXRjaChub2RlLCBzdXApXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCBzdXApXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/footnote.js":
/*!******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/footnote.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"footnote\": function() { return /* binding */ footnote; }\n/* harmony export */ });\n/* harmony import */ var _footnote_reference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./footnote-reference.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Footnote} Footnote\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n// To do: when both:\r\n// * <https://github.com/micromark/micromark-extension-footnote>\r\n// * <https://github.com/syntax-tree/mdast-util-footnote>\r\n// …are archived, remove this (also from mdast).\r\n// These inline notes are not used in GFM.\r\n\r\n/**\r\n * Turn an mdast `footnote` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Footnote} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction footnote(state, node) {\r\n  const footnoteById = state.footnoteById\r\n  let no = 1\r\n\r\n  while (no in footnoteById) no++\r\n\r\n  const identifier = String(no)\r\n\r\n  footnoteById[identifier] = {\r\n    type: 'footnoteDefinition',\r\n    identifier,\r\n    children: [{type: 'paragraph', children: node.children}],\r\n    position: node.position\r\n  }\r\n\r\n  return (0,_footnote_reference_js__WEBPACK_IMPORTED_MODULE_0__.footnoteReference)(state, {\r\n    type: 'footnoteReference',\r\n    identifier,\r\n    position: node.position\r\n  })\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUN5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwyQ0FBMkM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5RUFBaUI7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2Zvb3Rub3RlLmpzPzQ1YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuRm9vdG5vdGV9IEZvb3Rub3RlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtmb290bm90ZVJlZmVyZW5jZX0gZnJvbSAnLi9mb290bm90ZS1yZWZlcmVuY2UuanMnXHJcblxyXG4vLyBUbyBkbzogd2hlbiBib3RoOlxyXG4vLyAqIDxodHRwczovL2dpdGh1Yi5jb20vbWljcm9tYXJrL21pY3JvbWFyay1leHRlbnNpb24tZm9vdG5vdGU+XHJcbi8vICogPGh0dHBzOi8vZ2l0aHViLmNvbS9zeW50YXgtdHJlZS9tZGFzdC11dGlsLWZvb3Rub3RlPlxyXG4vLyDigKZhcmUgYXJjaGl2ZWQsIHJlbW92ZSB0aGlzIChhbHNvIGZyb20gbWRhc3QpLlxyXG4vLyBUaGVzZSBpbmxpbmUgbm90ZXMgYXJlIG5vdCB1c2VkIGluIEdGTS5cclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGBmb290bm90ZWAgbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0Zvb3Rub3RlfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGZvb3Rub3RlKHN0YXRlLCBub2RlKSB7XHJcbiAgY29uc3QgZm9vdG5vdGVCeUlkID0gc3RhdGUuZm9vdG5vdGVCeUlkXHJcbiAgbGV0IG5vID0gMVxyXG5cclxuICB3aGlsZSAobm8gaW4gZm9vdG5vdGVCeUlkKSBubysrXHJcblxyXG4gIGNvbnN0IGlkZW50aWZpZXIgPSBTdHJpbmcobm8pXHJcblxyXG4gIGZvb3Rub3RlQnlJZFtpZGVudGlmaWVyXSA9IHtcclxuICAgIHR5cGU6ICdmb290bm90ZURlZmluaXRpb24nLFxyXG4gICAgaWRlbnRpZmllcixcclxuICAgIGNoaWxkcmVuOiBbe3R5cGU6ICdwYXJhZ3JhcGgnLCBjaGlsZHJlbjogbm9kZS5jaGlsZHJlbn1dLFxyXG4gICAgcG9zaXRpb246IG5vZGUucG9zaXRpb25cclxuICB9XHJcblxyXG4gIHJldHVybiBmb290bm90ZVJlZmVyZW5jZShzdGF0ZSwge1xyXG4gICAgdHlwZTogJ2Zvb3Rub3RlUmVmZXJlbmNlJyxcclxuICAgIGlkZW50aWZpZXIsXHJcbiAgICBwb3NpdGlvbjogbm9kZS5wb3NpdGlvblxyXG4gIH0pXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/footnote.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/heading.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/heading.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"heading\": function() { return /* binding */ heading; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Heading} Heading\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `heading` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Heading} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction heading(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'h' + node.depth,\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9oZWFkaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEseUJBQXlCO0FBQ3RDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2hlYWRpbmcuanM/MzYxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5IZWFkaW5nfSBIZWFkaW5nXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gYW4gbWRhc3QgYGhlYWRpbmdgIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtIZWFkaW5nfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGhlYWRpbmcoc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogJ2gnICsgbm9kZS5kZXB0aCxcclxuICAgIHByb3BlcnRpZXM6IHt9LFxyXG4gICAgY2hpbGRyZW46IHN0YXRlLmFsbChub2RlKVxyXG4gIH1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/heading.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/html.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/html.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"html\": function() { return /* binding */ html; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').HTML} Html\r\n * @typedef {import('../state.js').State} State\r\n * @typedef {import('../../index.js').Raw} Raw\r\n */\r\n\r\n/**\r\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\r\n * nothing).\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Html} node\r\n *   mdast node.\r\n * @returns {Raw | Element | null}\r\n *   hast node.\r\n */\r\nfunction html(state, node) {\r\n  if (state.dangerous) {\r\n    /** @type {Raw} */\r\n    const result = {type: 'raw', value: node.value}\r\n    state.patch(node, result)\r\n    return state.applyData(node, result)\r\n  }\r\n\r\n  // To do: next major: return `undefined`.\r\n  return null\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9odG1sLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUsS0FBSztBQUNwQixvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvaHRtbC5qcz8wMzUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkhUTUx9IEh0bWxcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vLi4vaW5kZXguanMnKS5SYXd9IFJhd1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGBodG1sYCBub2RlIGludG8gaGFzdCAoYHJhd2Agbm9kZSBpbiBkYW5nZXJvdXMgbW9kZSwgb3RoZXJ3aXNlXHJcbiAqIG5vdGhpbmcpLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtIdG1sfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge1JhdyB8IEVsZW1lbnQgfCBudWxsfVxyXG4gKiAgIGhhc3Qgbm9kZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBodG1sKHN0YXRlLCBub2RlKSB7XHJcbiAgaWYgKHN0YXRlLmRhbmdlcm91cykge1xyXG4gICAgLyoqIEB0eXBlIHtSYXd9ICovXHJcbiAgICBjb25zdCByZXN1bHQgPSB7dHlwZTogJ3JhdycsIHZhbHVlOiBub2RlLnZhbHVlfVxyXG4gICAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gICAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbiAgfVxyXG5cclxuICAvLyBUbyBkbzogbmV4dCBtYWpvcjogcmV0dXJuIGB1bmRlZmluZWRgLlxyXG4gIHJldHVybiBudWxsXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/html.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imageReference\": function() { return /* binding */ imageReference; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/* harmony import */ var _revert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../revert.js */ \"./node_modules/mdast-util-to-hast/lib/revert.js\");\n/**\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').ImageReference} ImageReference\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `imageReference` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ImageReference} node\r\n *   mdast node.\r\n * @returns {ElementContent | Array<ElementContent>}\r\n *   hast node.\r\n */\r\nfunction imageReference(state, node) {\r\n  const def = state.definition(node.identifier)\r\n\r\n  if (!def) {\r\n    return (0,_revert_js__WEBPACK_IMPORTED_MODULE_0__.revert)(state, node)\r\n  }\r\n\r\n  /** @type {Properties} */\r\n  const properties = {src: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__.normalizeUri)(def.url || ''), alt: node.alt}\r\n\r\n  if (def.title !== null && def.title !== undefined) {\r\n    properties.title = def.title\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {type: 'element', tagName: 'img', properties, children: []}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS1yZWZlcmVuY2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLDJCQUEyQjtBQUN4QyxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ3dEO0FBQ3JCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrREFBTTtBQUNqQjtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCLHNCQUFzQixLQUFLLHlFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS1yZWZlcmVuY2UuanM/YjFlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnRDb250ZW50fSBFbGVtZW50Q29udGVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUHJvcGVydGllc30gUHJvcGVydGllc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkltYWdlUmVmZXJlbmNlfSBJbWFnZVJlZmVyZW5jZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7bm9ybWFsaXplVXJpfSBmcm9tICdtaWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmknXHJcbmltcG9ydCB7cmV2ZXJ0fSBmcm9tICcuLi9yZXZlcnQuanMnXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgaW1hZ2VSZWZlcmVuY2VgIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtJbWFnZVJlZmVyZW5jZX0gbm9kZVxyXG4gKiAgIG1kYXN0IG5vZGUuXHJcbiAqIEByZXR1cm5zIHtFbGVtZW50Q29udGVudCB8IEFycmF5PEVsZW1lbnRDb250ZW50Pn1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2VSZWZlcmVuY2Uoc3RhdGUsIG5vZGUpIHtcclxuICBjb25zdCBkZWYgPSBzdGF0ZS5kZWZpbml0aW9uKG5vZGUuaWRlbnRpZmllcilcclxuXHJcbiAgaWYgKCFkZWYpIHtcclxuICAgIHJldHVybiByZXZlcnQoc3RhdGUsIG5vZGUpXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge1Byb3BlcnRpZXN9ICovXHJcbiAgY29uc3QgcHJvcGVydGllcyA9IHtzcmM6IG5vcm1hbGl6ZVVyaShkZWYudXJsIHx8ICcnKSwgYWx0OiBub2RlLmFsdH1cclxuXHJcbiAgaWYgKGRlZi50aXRsZSAhPT0gbnVsbCAmJiBkZWYudGl0bGUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcHJvcGVydGllcy50aXRsZSA9IGRlZi50aXRsZVxyXG4gIH1cclxuXHJcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnZWxlbWVudCcsIHRhZ05hbWU6ICdpbWcnLCBwcm9wZXJ0aWVzLCBjaGlsZHJlbjogW119XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/image.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/image.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"image\": function() { return /* binding */ image; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').Image} Image\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `image` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Image} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction image(state, node) {\r\n  /** @type {Properties} */\r\n  const properties = {src: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(node.url)}\r\n\r\n  if (node.alt !== null && node.alt !== undefined) {\r\n    properties.alt = node.alt\r\n  }\r\n\r\n  if (node.title !== null && node.title !== undefined) {\r\n    properties.title = node.title\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {type: 'element', tagName: 'img', properties, children: []}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSwyQkFBMkI7QUFDeEMsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUN3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLFlBQVk7QUFDekIsc0JBQXNCLEtBQUsseUVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvaW1hZ2UuanM/MDk5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5JbWFnZX0gSW1hZ2VcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG5pbXBvcnQge25vcm1hbGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gYW4gbWRhc3QgYGltYWdlYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7SW1hZ2V9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2Uoc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge1Byb3BlcnRpZXN9ICovXHJcbiAgY29uc3QgcHJvcGVydGllcyA9IHtzcmM6IG5vcm1hbGl6ZVVyaShub2RlLnVybCl9XHJcblxyXG4gIGlmIChub2RlLmFsdCAhPT0gbnVsbCAmJiBub2RlLmFsdCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICBwcm9wZXJ0aWVzLmFsdCA9IG5vZGUuYWx0XHJcbiAgfVxyXG5cclxuICBpZiAobm9kZS50aXRsZSAhPT0gbnVsbCAmJiBub2RlLnRpdGxlICE9PSB1bmRlZmluZWQpIHtcclxuICAgIHByb3BlcnRpZXMudGl0bGUgPSBub2RlLnRpdGxlXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ2ltZycsIHByb3BlcnRpZXMsIGNoaWxkcmVuOiBbXX1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/image.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handlers\": function() { return /* binding */ handlers; }\n/* harmony export */ });\n/* harmony import */ var _blockquote_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blockquote.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js\");\n/* harmony import */ var _break_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./break.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/break.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./code.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/code.js\");\n/* harmony import */ var _delete_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delete.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/delete.js\");\n/* harmony import */ var _emphasis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./emphasis.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js\");\n/* harmony import */ var _footnote_reference_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./footnote-reference.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\");\n/* harmony import */ var _footnote_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./footnote.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/footnote.js\");\n/* harmony import */ var _heading_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./heading.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/heading.js\");\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./html.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/html.js\");\n/* harmony import */ var _image_reference_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./image-reference.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\");\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./image.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/image.js\");\n/* harmony import */ var _inline_code_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./inline-code.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\");\n/* harmony import */ var _link_reference_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./link-reference.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./link.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/link.js\");\n/* harmony import */ var _list_item_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./list-item.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/list-item.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./list.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/list.js\");\n/* harmony import */ var _paragraph_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./paragraph.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js\");\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./root.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/root.js\");\n/* harmony import */ var _strong_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./strong.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/strong.js\");\n/* harmony import */ var _table_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./table.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/table.js\");\n/* harmony import */ var _table_row_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./table-row.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/table-row.js\");\n/* harmony import */ var _table_cell_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./table-cell.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./text.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/text.js\");\n/* harmony import */ var _thematic_break_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./thematic-break.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Default handlers for nodes.\r\n */\r\nconst handlers = {\r\n  blockquote: _blockquote_js__WEBPACK_IMPORTED_MODULE_0__.blockquote,\r\n  break: _break_js__WEBPACK_IMPORTED_MODULE_1__.hardBreak,\r\n  code: _code_js__WEBPACK_IMPORTED_MODULE_2__.code,\r\n  delete: _delete_js__WEBPACK_IMPORTED_MODULE_3__.strikethrough,\r\n  emphasis: _emphasis_js__WEBPACK_IMPORTED_MODULE_4__.emphasis,\r\n  footnoteReference: _footnote_reference_js__WEBPACK_IMPORTED_MODULE_5__.footnoteReference,\r\n  footnote: _footnote_js__WEBPACK_IMPORTED_MODULE_6__.footnote,\r\n  heading: _heading_js__WEBPACK_IMPORTED_MODULE_7__.heading,\r\n  html: _html_js__WEBPACK_IMPORTED_MODULE_8__.html,\r\n  imageReference: _image_reference_js__WEBPACK_IMPORTED_MODULE_9__.imageReference,\r\n  image: _image_js__WEBPACK_IMPORTED_MODULE_10__.image,\r\n  inlineCode: _inline_code_js__WEBPACK_IMPORTED_MODULE_11__.inlineCode,\r\n  linkReference: _link_reference_js__WEBPACK_IMPORTED_MODULE_12__.linkReference,\r\n  link: _link_js__WEBPACK_IMPORTED_MODULE_13__.link,\r\n  listItem: _list_item_js__WEBPACK_IMPORTED_MODULE_14__.listItem,\r\n  list: _list_js__WEBPACK_IMPORTED_MODULE_15__.list,\r\n  paragraph: _paragraph_js__WEBPACK_IMPORTED_MODULE_16__.paragraph,\r\n  root: _root_js__WEBPACK_IMPORTED_MODULE_17__.root,\r\n  strong: _strong_js__WEBPACK_IMPORTED_MODULE_18__.strong,\r\n  table: _table_js__WEBPACK_IMPORTED_MODULE_19__.table,\r\n  tableCell: _table_cell_js__WEBPACK_IMPORTED_MODULE_20__.tableCell,\r\n  tableRow: _table_row_js__WEBPACK_IMPORTED_MODULE_21__.tableRow,\r\n  text: _text_js__WEBPACK_IMPORTED_MODULE_22__.text,\r\n  thematicBreak: _thematic_break_js__WEBPACK_IMPORTED_MODULE_23__.thematicBreak,\r\n  toml: ignore,\r\n  yaml: ignore,\r\n  definition: ignore,\r\n  footnoteDefinition: ignore\r\n}\r\n\r\n// Return nothing for nodes that are ignored.\r\nfunction ignore() {\r\n  // To do: next major: return `undefined`.\r\n  return null\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ047QUFDTjtBQUNXO0FBQ0g7QUFDbUI7QUFDbkI7QUFDRjtBQUNOO0FBQ3FCO0FBQ25CO0FBQ1c7QUFDTTtBQUNuQjtBQUNTO0FBQ1Q7QUFDVTtBQUNWO0FBQ0k7QUFDRjtBQUNPO0FBQ0U7QUFDWDtBQUNtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWTtBQUNaLFNBQVMsZ0RBQVM7QUFDbEIsTUFBTTtBQUNOLFVBQVUscURBQWE7QUFDdkIsVUFBVTtBQUNWLG1CQUFtQjtBQUNuQixVQUFVO0FBQ1YsU0FBUztBQUNULE1BQU07QUFDTixnQkFBZ0I7QUFDaEIsT0FBTztBQUNQLFlBQVk7QUFDWixlQUFlO0FBQ2YsTUFBTTtBQUNOLFVBQVU7QUFDVixNQUFNO0FBQ04sV0FBVztBQUNYLE1BQU07QUFDTixRQUFRO0FBQ1IsT0FBTztBQUNQLFdBQVc7QUFDWCxVQUFVO0FBQ1YsTUFBTTtBQUNOLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2luZGV4LmpzPzk4MjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtibG9ja3F1b3RlfSBmcm9tICcuL2Jsb2NrcXVvdGUuanMnXHJcbmltcG9ydCB7aGFyZEJyZWFrfSBmcm9tICcuL2JyZWFrLmpzJ1xyXG5pbXBvcnQge2NvZGV9IGZyb20gJy4vY29kZS5qcydcclxuaW1wb3J0IHtzdHJpa2V0aHJvdWdofSBmcm9tICcuL2RlbGV0ZS5qcydcclxuaW1wb3J0IHtlbXBoYXNpc30gZnJvbSAnLi9lbXBoYXNpcy5qcydcclxuaW1wb3J0IHtmb290bm90ZVJlZmVyZW5jZX0gZnJvbSAnLi9mb290bm90ZS1yZWZlcmVuY2UuanMnXHJcbmltcG9ydCB7Zm9vdG5vdGV9IGZyb20gJy4vZm9vdG5vdGUuanMnXHJcbmltcG9ydCB7aGVhZGluZ30gZnJvbSAnLi9oZWFkaW5nLmpzJ1xyXG5pbXBvcnQge2h0bWx9IGZyb20gJy4vaHRtbC5qcydcclxuaW1wb3J0IHtpbWFnZVJlZmVyZW5jZX0gZnJvbSAnLi9pbWFnZS1yZWZlcmVuY2UuanMnXHJcbmltcG9ydCB7aW1hZ2V9IGZyb20gJy4vaW1hZ2UuanMnXHJcbmltcG9ydCB7aW5saW5lQ29kZX0gZnJvbSAnLi9pbmxpbmUtY29kZS5qcydcclxuaW1wb3J0IHtsaW5rUmVmZXJlbmNlfSBmcm9tICcuL2xpbmstcmVmZXJlbmNlLmpzJ1xyXG5pbXBvcnQge2xpbmt9IGZyb20gJy4vbGluay5qcydcclxuaW1wb3J0IHtsaXN0SXRlbX0gZnJvbSAnLi9saXN0LWl0ZW0uanMnXHJcbmltcG9ydCB7bGlzdH0gZnJvbSAnLi9saXN0LmpzJ1xyXG5pbXBvcnQge3BhcmFncmFwaH0gZnJvbSAnLi9wYXJhZ3JhcGguanMnXHJcbmltcG9ydCB7cm9vdH0gZnJvbSAnLi9yb290LmpzJ1xyXG5pbXBvcnQge3N0cm9uZ30gZnJvbSAnLi9zdHJvbmcuanMnXHJcbmltcG9ydCB7dGFibGV9IGZyb20gJy4vdGFibGUuanMnXHJcbmltcG9ydCB7dGFibGVSb3d9IGZyb20gJy4vdGFibGUtcm93LmpzJ1xyXG5pbXBvcnQge3RhYmxlQ2VsbH0gZnJvbSAnLi90YWJsZS1jZWxsLmpzJ1xyXG5pbXBvcnQge3RleHR9IGZyb20gJy4vdGV4dC5qcydcclxuaW1wb3J0IHt0aGVtYXRpY0JyZWFrfSBmcm9tICcuL3RoZW1hdGljLWJyZWFrLmpzJ1xyXG5cclxuLyoqXHJcbiAqIERlZmF1bHQgaGFuZGxlcnMgZm9yIG5vZGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGhhbmRsZXJzID0ge1xyXG4gIGJsb2NrcXVvdGUsXHJcbiAgYnJlYWs6IGhhcmRCcmVhayxcclxuICBjb2RlLFxyXG4gIGRlbGV0ZTogc3RyaWtldGhyb3VnaCxcclxuICBlbXBoYXNpcyxcclxuICBmb290bm90ZVJlZmVyZW5jZSxcclxuICBmb290bm90ZSxcclxuICBoZWFkaW5nLFxyXG4gIGh0bWwsXHJcbiAgaW1hZ2VSZWZlcmVuY2UsXHJcbiAgaW1hZ2UsXHJcbiAgaW5saW5lQ29kZSxcclxuICBsaW5rUmVmZXJlbmNlLFxyXG4gIGxpbmssXHJcbiAgbGlzdEl0ZW0sXHJcbiAgbGlzdCxcclxuICBwYXJhZ3JhcGgsXHJcbiAgcm9vdCxcclxuICBzdHJvbmcsXHJcbiAgdGFibGUsXHJcbiAgdGFibGVDZWxsLFxyXG4gIHRhYmxlUm93LFxyXG4gIHRleHQsXHJcbiAgdGhlbWF0aWNCcmVhayxcclxuICB0b21sOiBpZ25vcmUsXHJcbiAgeWFtbDogaWdub3JlLFxyXG4gIGRlZmluaXRpb246IGlnbm9yZSxcclxuICBmb290bm90ZURlZmluaXRpb246IGlnbm9yZVxyXG59XHJcblxyXG4vLyBSZXR1cm4gbm90aGluZyBmb3Igbm9kZXMgdGhhdCBhcmUgaWdub3JlZC5cclxuZnVuY3Rpb24gaWdub3JlKCkge1xyXG4gIC8vIFRvIGRvOiBuZXh0IG1ham9yOiByZXR1cm4gYHVuZGVmaW5lZGAuXHJcbiAgcmV0dXJuIG51bGxcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inlineCode\": function() { return /* binding */ inlineCode; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {import('mdast').InlineCode} InlineCode\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `inlineCode` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {InlineCode} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction inlineCode(state, node) {\r\n  /** @type {Text} */\r\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\r\n  state.patch(node, text)\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'code',\r\n    properties: {},\r\n    children: [text]\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmxpbmUtY29kZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLHFCQUFxQjtBQUNsQyxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsTUFBTTtBQUNuQixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmxpbmUtY29kZS5qcz84ZGE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuVGV4dH0gVGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLklubGluZUNvZGV9IElubGluZUNvZGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgaW5saW5lQ29kZWAgbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0lubGluZUNvZGV9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaW5saW5lQ29kZShzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7VGV4dH0gKi9cclxuICBjb25zdCB0ZXh0ID0ge3R5cGU6ICd0ZXh0JywgdmFsdWU6IG5vZGUudmFsdWUucmVwbGFjZSgvXFxyP1xcbnxcXHIvZywgJyAnKX1cclxuICBzdGF0ZS5wYXRjaChub2RlLCB0ZXh0KVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogJ2NvZGUnLFxyXG4gICAgcHJvcGVydGllczoge30sXHJcbiAgICBjaGlsZHJlbjogW3RleHRdXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcclxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js":
/*!************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linkReference\": function() { return /* binding */ linkReference; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/* harmony import */ var _revert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../revert.js */ \"./node_modules/mdast-util-to-hast/lib/revert.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').LinkReference} LinkReference\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `linkReference` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {LinkReference} node\r\n *   mdast node.\r\n * @returns {ElementContent | Array<ElementContent>}\r\n *   hast node.\r\n */\r\nfunction linkReference(state, node) {\r\n  const def = state.definition(node.identifier)\r\n\r\n  if (!def) {\r\n    return (0,_revert_js__WEBPACK_IMPORTED_MODULE_0__.revert)(state, node)\r\n  }\r\n\r\n  /** @type {Properties} */\r\n  const properties = {href: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__.normalizeUri)(def.url || '')}\r\n\r\n  if (def.title !== null && def.title !== undefined) {\r\n    properties.title = def.title\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'a',\r\n    properties,\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLXJlZmVyZW5jZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDd0Q7QUFDckI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLGVBQWU7QUFDMUI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrREFBTTtBQUNqQjtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCLHNCQUFzQixNQUFNLHlFQUFZO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2xpbmstcmVmZXJlbmNlLmpzPzk4YTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50Q29udGVudH0gRWxlbWVudENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5MaW5rUmVmZXJlbmNlfSBMaW5rUmVmZXJlbmNlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtub3JtYWxpemVVcml9IGZyb20gJ21pY3JvbWFyay11dGlsLXNhbml0aXplLXVyaSdcclxuaW1wb3J0IHtyZXZlcnR9IGZyb20gJy4uL3JldmVydC5qcydcclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGBsaW5rUmVmZXJlbmNlYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7TGlua1JlZmVyZW5jZX0gbm9kZVxyXG4gKiAgIG1kYXN0IG5vZGUuXHJcbiAqIEByZXR1cm5zIHtFbGVtZW50Q29udGVudCB8IEFycmF5PEVsZW1lbnRDb250ZW50Pn1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbGlua1JlZmVyZW5jZShzdGF0ZSwgbm9kZSkge1xyXG4gIGNvbnN0IGRlZiA9IHN0YXRlLmRlZmluaXRpb24obm9kZS5pZGVudGlmaWVyKVxyXG5cclxuICBpZiAoIWRlZikge1xyXG4gICAgcmV0dXJuIHJldmVydChzdGF0ZSwgbm9kZSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cclxuICBjb25zdCBwcm9wZXJ0aWVzID0ge2hyZWY6IG5vcm1hbGl6ZVVyaShkZWYudXJsIHx8ICcnKX1cclxuXHJcbiAgaWYgKGRlZi50aXRsZSAhPT0gbnVsbCAmJiBkZWYudGl0bGUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcHJvcGVydGllcy50aXRsZSA9IGRlZi50aXRsZVxyXG4gIH1cclxuXHJcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IHtcclxuICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgIHRhZ05hbWU6ICdhJyxcclxuICAgIHByb3BlcnRpZXMsXHJcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcclxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/link.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/link.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"link\": function() { return /* binding */ link; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').Link} Link\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `link` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Link} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction link(state, node) {\r\n  /** @type {Properties} */\r\n  const properties = {href: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(node.url)}\r\n\r\n  if (node.title !== null && node.title !== undefined) {\r\n    properties.title = node.title\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'a',\r\n    properties,\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLDJCQUEyQjtBQUN4QyxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ3dEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsWUFBWTtBQUN6QixzQkFBc0IsTUFBTSx5RUFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLmpzPzcyMWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Qcm9wZXJ0aWVzfSBQcm9wZXJ0aWVzXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlua30gTGlua1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7bm9ybWFsaXplVXJpfSBmcm9tICdtaWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmknXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgbGlua2Agbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0xpbmt9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbGluayhzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cclxuICBjb25zdCBwcm9wZXJ0aWVzID0ge2hyZWY6IG5vcm1hbGl6ZVVyaShub2RlLnVybCl9XHJcblxyXG4gIGlmIChub2RlLnRpdGxlICE9PSBudWxsICYmIG5vZGUudGl0bGUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcHJvcGVydGllcy50aXRsZSA9IG5vZGUudGl0bGVcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnYScsXHJcbiAgICBwcm9wZXJ0aWVzLFxyXG4gICAgY2hpbGRyZW46IHN0YXRlLmFsbChub2RlKVxyXG4gIH1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/link.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/list-item.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/list-item.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"listItem\": function() { return /* binding */ listItem; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('mdast').Parent} Parent\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * @typedef {Root | Content} Nodes\r\n * @typedef {Extract<Nodes, Parent>} Parents\r\n */\r\n\r\n/**\r\n * Turn an mdast `listItem` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ListItem} node\r\n *   mdast node.\r\n * @param {Parents | null | undefined} parent\r\n *   Parent of `node`.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction listItem(state, node, parent) {\r\n  const results = state.all(node)\r\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\r\n  /** @type {Properties} */\r\n  const properties = {}\r\n  /** @type {Array<ElementContent>} */\r\n  const children = []\r\n\r\n  if (typeof node.checked === 'boolean') {\r\n    const head = results[0]\r\n    /** @type {Element} */\r\n    let paragraph\r\n\r\n    if (head && head.type === 'element' && head.tagName === 'p') {\r\n      paragraph = head\r\n    } else {\r\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\r\n      results.unshift(paragraph)\r\n    }\r\n\r\n    if (paragraph.children.length > 0) {\r\n      paragraph.children.unshift({type: 'text', value: ' '})\r\n    }\r\n\r\n    paragraph.children.unshift({\r\n      type: 'element',\r\n      tagName: 'input',\r\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\r\n      children: []\r\n    })\r\n\r\n    // According to github-markdown-css, this class hides bullet.\r\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\r\n    properties.className = ['task-list-item']\r\n  }\r\n\r\n  let index = -1\r\n\r\n  while (++index < results.length) {\r\n    const child = results[index]\r\n\r\n    // Add eols before nodes, except if this is a loose, first paragraph.\r\n    if (\r\n      loose ||\r\n      index !== 0 ||\r\n      child.type !== 'element' ||\r\n      child.tagName !== 'p'\r\n    ) {\r\n      children.push({type: 'text', value: '\\n'})\r\n    }\r\n\r\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\r\n      children.push(...child.children)\r\n    } else {\r\n      children.push(child)\r\n    }\r\n  }\r\n\r\n  const tail = results[results.length - 1]\r\n\r\n  // Add a final eol.\r\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\r\n    children.push({type: 'text', value: '\\n'})\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {type: 'element', tagName: 'li', properties, children}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n\r\n/**\r\n * @param {Parents} node\r\n * @return {Boolean}\r\n */\r\nfunction listLoose(node) {\r\n  let loose = false\r\n  if (node.type === 'list') {\r\n    loose = node.spread || false\r\n    const children = node.children\r\n    let index = -1\r\n\r\n    while (!loose && ++index < children.length) {\r\n      loose = listItemLoose(children[index])\r\n    }\r\n  }\r\n\r\n  return loose\r\n}\r\n\r\n/**\r\n * @param {ListItem} node\r\n * @return {Boolean}\r\n */\r\nfunction listItemLoose(node) {\r\n  const spread = node.spread\r\n\r\n  return spread === undefined || spread === null\r\n    ? node.children.length > 1\r\n    : spread\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LWl0ZW0uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSwyQkFBMkI7QUFDeEMsYUFBYSx5QkFBeUI7QUFDdEMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0IsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLFlBQVk7QUFDekI7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixtQkFBbUIsNkNBQTZDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHlCQUF5QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUF3RDtBQUMzRTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMEJBQTBCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvbGlzdC1pdGVtLmpzPzRkYTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50Q29udGVudH0gRWxlbWVudENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBDb250ZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlzdEl0ZW19IExpc3RJdGVtXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGFyZW50fSBQYXJlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIHtSb290IHwgQ29udGVudH0gTm9kZXNcclxuICogQHR5cGVkZWYge0V4dHJhY3Q8Tm9kZXMsIFBhcmVudD59IFBhcmVudHNcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgbGlzdEl0ZW1gIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtMaXN0SXRlbX0gbm9kZVxyXG4gKiAgIG1kYXN0IG5vZGUuXHJcbiAqIEBwYXJhbSB7UGFyZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IHBhcmVudFxyXG4gKiAgIFBhcmVudCBvZiBgbm9kZWAuXHJcbiAqIEByZXR1cm5zIHtFbGVtZW50fVxyXG4gKiAgIGhhc3Qgbm9kZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBsaXN0SXRlbShzdGF0ZSwgbm9kZSwgcGFyZW50KSB7XHJcbiAgY29uc3QgcmVzdWx0cyA9IHN0YXRlLmFsbChub2RlKVxyXG4gIGNvbnN0IGxvb3NlID0gcGFyZW50ID8gbGlzdExvb3NlKHBhcmVudCkgOiBsaXN0SXRlbUxvb3NlKG5vZGUpXHJcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xyXG4gIGNvbnN0IHByb3BlcnRpZXMgPSB7fVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8RWxlbWVudENvbnRlbnQ+fSAqL1xyXG4gIGNvbnN0IGNoaWxkcmVuID0gW11cclxuXHJcbiAgaWYgKHR5cGVvZiBub2RlLmNoZWNrZWQgPT09ICdib29sZWFuJykge1xyXG4gICAgY29uc3QgaGVhZCA9IHJlc3VsdHNbMF1cclxuICAgIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICAgIGxldCBwYXJhZ3JhcGhcclxuXHJcbiAgICBpZiAoaGVhZCAmJiBoZWFkLnR5cGUgPT09ICdlbGVtZW50JyAmJiBoZWFkLnRhZ05hbWUgPT09ICdwJykge1xyXG4gICAgICBwYXJhZ3JhcGggPSBoZWFkXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBwYXJhZ3JhcGggPSB7dHlwZTogJ2VsZW1lbnQnLCB0YWdOYW1lOiAncCcsIHByb3BlcnRpZXM6IHt9LCBjaGlsZHJlbjogW119XHJcbiAgICAgIHJlc3VsdHMudW5zaGlmdChwYXJhZ3JhcGgpXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHBhcmFncmFwaC5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHBhcmFncmFwaC5jaGlsZHJlbi51bnNoaWZ0KHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnICd9KVxyXG4gICAgfVxyXG5cclxuICAgIHBhcmFncmFwaC5jaGlsZHJlbi51bnNoaWZ0KHtcclxuICAgICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgICB0YWdOYW1lOiAnaW5wdXQnLFxyXG4gICAgICBwcm9wZXJ0aWVzOiB7dHlwZTogJ2NoZWNrYm94JywgY2hlY2tlZDogbm9kZS5jaGVja2VkLCBkaXNhYmxlZDogdHJ1ZX0sXHJcbiAgICAgIGNoaWxkcmVuOiBbXVxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBBY2NvcmRpbmcgdG8gZ2l0aHViLW1hcmtkb3duLWNzcywgdGhpcyBjbGFzcyBoaWRlcyBidWxsZXQuXHJcbiAgICAvLyBTZWU6IDxodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2dpdGh1Yi1tYXJrZG93bi1jc3M+LlxyXG4gICAgcHJvcGVydGllcy5jbGFzc05hbWUgPSBbJ3Rhc2stbGlzdC1pdGVtJ11cclxuICB9XHJcblxyXG4gIGxldCBpbmRleCA9IC0xXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgcmVzdWx0cy5sZW5ndGgpIHtcclxuICAgIGNvbnN0IGNoaWxkID0gcmVzdWx0c1tpbmRleF1cclxuXHJcbiAgICAvLyBBZGQgZW9scyBiZWZvcmUgbm9kZXMsIGV4Y2VwdCBpZiB0aGlzIGlzIGEgbG9vc2UsIGZpcnN0IHBhcmFncmFwaC5cclxuICAgIGlmIChcclxuICAgICAgbG9vc2UgfHxcclxuICAgICAgaW5kZXggIT09IDAgfHxcclxuICAgICAgY2hpbGQudHlwZSAhPT0gJ2VsZW1lbnQnIHx8XHJcbiAgICAgIGNoaWxkLnRhZ05hbWUgIT09ICdwJ1xyXG4gICAgKSB7XHJcbiAgICAgIGNoaWxkcmVuLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6ICdcXG4nfSlcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY2hpbGQudHlwZSA9PT0gJ2VsZW1lbnQnICYmIGNoaWxkLnRhZ05hbWUgPT09ICdwJyAmJiAhbG9vc2UpIHtcclxuICAgICAgY2hpbGRyZW4ucHVzaCguLi5jaGlsZC5jaGlsZHJlbilcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGQpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YWlsID0gcmVzdWx0c1tyZXN1bHRzLmxlbmd0aCAtIDFdXHJcblxyXG4gIC8vIEFkZCBhIGZpbmFsIGVvbC5cclxuICBpZiAodGFpbCAmJiAobG9vc2UgfHwgdGFpbC50eXBlICE9PSAnZWxlbWVudCcgfHwgdGFpbC50YWdOYW1lICE9PSAncCcpKSB7XHJcbiAgICBjaGlsZHJlbi5wdXNoKHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnXFxuJ30pXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ2xpJywgcHJvcGVydGllcywgY2hpbGRyZW59XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtQYXJlbnRzfSBub2RlXHJcbiAqIEByZXR1cm4ge0Jvb2xlYW59XHJcbiAqL1xyXG5mdW5jdGlvbiBsaXN0TG9vc2Uobm9kZSkge1xyXG4gIGxldCBsb29zZSA9IGZhbHNlXHJcbiAgaWYgKG5vZGUudHlwZSA9PT0gJ2xpc3QnKSB7XHJcbiAgICBsb29zZSA9IG5vZGUuc3ByZWFkIHx8IGZhbHNlXHJcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW5cclxuICAgIGxldCBpbmRleCA9IC0xXHJcblxyXG4gICAgd2hpbGUgKCFsb29zZSAmJiArK2luZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XHJcbiAgICAgIGxvb3NlID0gbGlzdEl0ZW1Mb29zZShjaGlsZHJlbltpbmRleF0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbG9vc2VcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7TGlzdEl0ZW19IG5vZGVcclxuICogQHJldHVybiB7Qm9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIGxpc3RJdGVtTG9vc2Uobm9kZSkge1xyXG4gIGNvbnN0IHNwcmVhZCA9IG5vZGUuc3ByZWFkXHJcblxyXG4gIHJldHVybiBzcHJlYWQgPT09IHVuZGVmaW5lZCB8fCBzcHJlYWQgPT09IG51bGxcclxuICAgID8gbm9kZS5jaGlsZHJlbi5sZW5ndGggPiAxXHJcbiAgICA6IHNwcmVhZFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/list-item.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/list.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/list.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"list\": function() { return /* binding */ list; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').List} List\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `list` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {List} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction list(state, node) {\r\n  /** @type {Properties} */\r\n  const properties = {}\r\n  const results = state.all(node)\r\n  let index = -1\r\n\r\n  if (typeof node.start === 'number' && node.start !== 1) {\r\n    properties.start = node.start\r\n  }\r\n\r\n  // Like GitHub, add a class for custom styling.\r\n  while (++index < results.length) {\r\n    const child = results[index]\r\n\r\n    if (\r\n      child.type === 'element' &&\r\n      child.tagName === 'li' &&\r\n      child.properties &&\r\n      Array.isArray(child.properties.className) &&\r\n      child.properties.className.includes('task-list-item')\r\n    ) {\r\n      properties.className = ['contains-task-list']\r\n      break\r\n    }\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: node.ordered ? 'ol' : 'ul',\r\n    properties,\r\n    children: state.wrap(results, true)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvbGlzdC5qcz8xODZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUHJvcGVydGllc30gUHJvcGVydGllc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkxpc3R9IExpc3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgbGlzdGAgbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge0xpc3R9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbGlzdChzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cclxuICBjb25zdCBwcm9wZXJ0aWVzID0ge31cclxuICBjb25zdCByZXN1bHRzID0gc3RhdGUuYWxsKG5vZGUpXHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgaWYgKHR5cGVvZiBub2RlLnN0YXJ0ID09PSAnbnVtYmVyJyAmJiBub2RlLnN0YXJ0ICE9PSAxKSB7XHJcbiAgICBwcm9wZXJ0aWVzLnN0YXJ0ID0gbm9kZS5zdGFydFxyXG4gIH1cclxuXHJcbiAgLy8gTGlrZSBHaXRIdWIsIGFkZCBhIGNsYXNzIGZvciBjdXN0b20gc3R5bGluZy5cclxuICB3aGlsZSAoKytpbmRleCA8IHJlc3VsdHMubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBjaGlsZCA9IHJlc3VsdHNbaW5kZXhdXHJcblxyXG4gICAgaWYgKFxyXG4gICAgICBjaGlsZC50eXBlID09PSAnZWxlbWVudCcgJiZcclxuICAgICAgY2hpbGQudGFnTmFtZSA9PT0gJ2xpJyAmJlxyXG4gICAgICBjaGlsZC5wcm9wZXJ0aWVzICYmXHJcbiAgICAgIEFycmF5LmlzQXJyYXkoY2hpbGQucHJvcGVydGllcy5jbGFzc05hbWUpICYmXHJcbiAgICAgIGNoaWxkLnByb3BlcnRpZXMuY2xhc3NOYW1lLmluY2x1ZGVzKCd0YXNrLWxpc3QtaXRlbScpXHJcbiAgICApIHtcclxuICAgICAgcHJvcGVydGllcy5jbGFzc05hbWUgPSBbJ2NvbnRhaW5zLXRhc2stbGlzdCddXHJcbiAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogbm9kZS5vcmRlcmVkID8gJ29sJyA6ICd1bCcsXHJcbiAgICBwcm9wZXJ0aWVzLFxyXG4gICAgY2hpbGRyZW46IHN0YXRlLndyYXAocmVzdWx0cywgdHJ1ZSlcclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/list.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"paragraph\": function() { return /* binding */ paragraph; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Paragraph} Paragraph\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `paragraph` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Paragraph} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction paragraph(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'p',\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9wYXJhZ3JhcGguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSwyQkFBMkI7QUFDeEMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsV0FBVztBQUN0QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvcGFyYWdyYXBoLmpzP2EwNzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGFyYWdyYXBofSBQYXJhZ3JhcGhcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgcGFyYWdyYXBoYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7UGFyYWdyYXBofSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcmFncmFwaChzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAncCcsXHJcbiAgICBwcm9wZXJ0aWVzOiB7fSxcclxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/root.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/root.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"root\": function() { return /* binding */ root; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Root} HastRoot\r\n * @typedef {import('hast').Element} HastElement\r\n * @typedef {import('mdast').Root} MdastRoot\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `root` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastRoot} node\r\n *   mdast node.\r\n * @returns {HastRoot | HastElement}\r\n *   hast node.\r\n */\r\nfunction root(state, node) {\r\n  /** @type {HastRoot} */\r\n  const result = {type: 'root', children: state.wrap(state.all(node))}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9yb290LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxVQUFVO0FBQ3ZCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvcm9vdC5qcz8wZWMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUm9vdH0gSGFzdFJvb3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEhhc3RFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gTWRhc3RSb290XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gYW4gbWRhc3QgYHJvb3RgIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtNZGFzdFJvb3R9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7SGFzdFJvb3QgfCBIYXN0RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcm9vdChzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7SGFzdFJvb3R9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdyb290JywgY2hpbGRyZW46IHN0YXRlLndyYXAoc3RhdGUuYWxsKG5vZGUpKX1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/root.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/strong.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/strong.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"strong\": function() { return /* binding */ strong; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Strong} Strong\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `strong` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Strong} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction strong(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'strong',\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9zdHJvbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvc3Ryb25nLmpzPzA5ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuU3Ryb25nfSBTdHJvbmdcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgc3Ryb25nYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7U3Ryb25nfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0cm9uZyhzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnc3Ryb25nJyxcclxuICAgIHByb3BlcnRpZXM6IHt9LFxyXG4gICAgY2hpbGRyZW46IHN0YXRlLmFsbChub2RlKVxyXG4gIH1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/strong.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js":
/*!********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tableCell\": function() { return /* binding */ tableCell; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').TableCell} TableCell\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `tableCell` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {TableCell} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction tableCell(state, node) {\r\n  // Note: this function is normally not called: see `table-row` for how rows\r\n  // and their cells are compiled.\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'td', // Assume body cell.\r\n    properties: {},\r\n    children: state.all(node)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS1jZWxsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS1jZWxsLmpzPzU3OGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuVGFibGVDZWxsfSBUYWJsZUNlbGxcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgdGFibGVDZWxsYCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7VGFibGVDZWxsfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRhYmxlQ2VsbChzdGF0ZSwgbm9kZSkge1xyXG4gIC8vIE5vdGU6IHRoaXMgZnVuY3Rpb24gaXMgbm9ybWFsbHkgbm90IGNhbGxlZDogc2VlIGB0YWJsZS1yb3dgIGZvciBob3cgcm93c1xyXG4gIC8vIGFuZCB0aGVpciBjZWxscyBhcmUgY29tcGlsZWQuXHJcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IHtcclxuICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgIHRhZ05hbWU6ICd0ZCcsIC8vIEFzc3VtZSBib2R5IGNlbGwuXHJcbiAgICBwcm9wZXJ0aWVzOiB7fSxcclxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/table-row.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table-row.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tableRow\": function() { return /* binding */ tableRow; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').Parent} Parent\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast').TableRow} TableRow\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * @typedef {Root | Content} Nodes\r\n * @typedef {Extract<Nodes, Parent>} Parents\r\n */\r\n\r\n/**\r\n * Turn an mdast `tableRow` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {TableRow} node\r\n *   mdast node.\r\n * @param {Parents | null | undefined} parent\r\n *   Parent of `node`.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction tableRow(state, node, parent) {\r\n  const siblings = parent ? parent.children : undefined\r\n  // Generate a body row when without parent.\r\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\r\n  const tagName = rowIndex === 0 ? 'th' : 'td'\r\n  const align = parent && parent.type === 'table' ? parent.align : undefined\r\n  const length = align ? align.length : node.children.length\r\n  let cellIndex = -1\r\n  /** @type {Array<ElementContent>} */\r\n  const cells = []\r\n\r\n  while (++cellIndex < length) {\r\n    // Note: can also be undefined.\r\n    const cell = node.children[cellIndex]\r\n    /** @type {Properties} */\r\n    const properties = {}\r\n    const alignValue = align ? align[cellIndex] : undefined\r\n\r\n    if (alignValue) {\r\n      properties.align = alignValue\r\n    }\r\n\r\n    /** @type {Element} */\r\n    let result = {type: 'element', tagName, properties, children: []}\r\n\r\n    if (cell) {\r\n      result.children = state.all(cell)\r\n      state.patch(cell, result)\r\n      result = state.applyData(node, result)\r\n    }\r\n\r\n    cells.push(result)\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'tr',\r\n    properties: {},\r\n    children: state.wrap(cells, true)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS1yb3cuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSwyQkFBMkI7QUFDeEMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSx5QkFBeUI7QUFDdEMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSwwQkFBMEI7QUFDdkMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0IsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsWUFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvdGFibGUtcm93LmpzPzE4YzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Qcm9wZXJ0aWVzfSBQcm9wZXJ0aWVzXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50Q29udGVudH0gRWxlbWVudENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBDb250ZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGFyZW50fSBQYXJlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuVGFibGVSb3d9IFRhYmxlUm93XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIHtSb290IHwgQ29udGVudH0gTm9kZXNcclxuICogQHR5cGVkZWYge0V4dHJhY3Q8Tm9kZXMsIFBhcmVudD59IFBhcmVudHNcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgdGFibGVSb3dgIG5vZGUgaW50byBoYXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtUYWJsZVJvd30gbm9kZVxyXG4gKiAgIG1kYXN0IG5vZGUuXHJcbiAqIEBwYXJhbSB7UGFyZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IHBhcmVudFxyXG4gKiAgIFBhcmVudCBvZiBgbm9kZWAuXHJcbiAqIEByZXR1cm5zIHtFbGVtZW50fVxyXG4gKiAgIGhhc3Qgbm9kZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0YWJsZVJvdyhzdGF0ZSwgbm9kZSwgcGFyZW50KSB7XHJcbiAgY29uc3Qgc2libGluZ3MgPSBwYXJlbnQgPyBwYXJlbnQuY2hpbGRyZW4gOiB1bmRlZmluZWRcclxuICAvLyBHZW5lcmF0ZSBhIGJvZHkgcm93IHdoZW4gd2l0aG91dCBwYXJlbnQuXHJcbiAgY29uc3Qgcm93SW5kZXggPSBzaWJsaW5ncyA/IHNpYmxpbmdzLmluZGV4T2Yobm9kZSkgOiAxXHJcbiAgY29uc3QgdGFnTmFtZSA9IHJvd0luZGV4ID09PSAwID8gJ3RoJyA6ICd0ZCdcclxuICBjb25zdCBhbGlnbiA9IHBhcmVudCAmJiBwYXJlbnQudHlwZSA9PT0gJ3RhYmxlJyA/IHBhcmVudC5hbGlnbiA6IHVuZGVmaW5lZFxyXG4gIGNvbnN0IGxlbmd0aCA9IGFsaWduID8gYWxpZ24ubGVuZ3RoIDogbm9kZS5jaGlsZHJlbi5sZW5ndGhcclxuICBsZXQgY2VsbEluZGV4ID0gLTFcclxuICAvKiogQHR5cGUge0FycmF5PEVsZW1lbnRDb250ZW50Pn0gKi9cclxuICBjb25zdCBjZWxscyA9IFtdXHJcblxyXG4gIHdoaWxlICgrK2NlbGxJbmRleCA8IGxlbmd0aCkge1xyXG4gICAgLy8gTm90ZTogY2FuIGFsc28gYmUgdW5kZWZpbmVkLlxyXG4gICAgY29uc3QgY2VsbCA9IG5vZGUuY2hpbGRyZW5bY2VsbEluZGV4XVxyXG4gICAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xyXG4gICAgY29uc3QgcHJvcGVydGllcyA9IHt9XHJcbiAgICBjb25zdCBhbGlnblZhbHVlID0gYWxpZ24gPyBhbGlnbltjZWxsSW5kZXhdIDogdW5kZWZpbmVkXHJcblxyXG4gICAgaWYgKGFsaWduVmFsdWUpIHtcclxuICAgICAgcHJvcGVydGllcy5hbGlnbiA9IGFsaWduVmFsdWVcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgICBsZXQgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZSwgcHJvcGVydGllcywgY2hpbGRyZW46IFtdfVxyXG5cclxuICAgIGlmIChjZWxsKSB7XHJcbiAgICAgIHJlc3VsdC5jaGlsZHJlbiA9IHN0YXRlLmFsbChjZWxsKVxyXG4gICAgICBzdGF0ZS5wYXRjaChjZWxsLCByZXN1bHQpXHJcbiAgICAgIHJlc3VsdCA9IHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbiAgICB9XHJcblxyXG4gICAgY2VsbHMucHVzaChyZXN1bHQpXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXHJcbiAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgdHlwZTogJ2VsZW1lbnQnLFxyXG4gICAgdGFnTmFtZTogJ3RyJyxcclxuICAgIHByb3BlcnRpZXM6IHt9LFxyXG4gICAgY2hpbGRyZW46IHN0YXRlLndyYXAoY2VsbHMsIHRydWUpXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcclxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/table-row.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/table.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"table\": function() { return /* binding */ table; }\n/* harmony export */ });\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-position */ \"./node_modules/unist-util-position/index.js\");\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Table} Table\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `table` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Table} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction table(state, node) {\r\n  const rows = state.all(node)\r\n  const firstRow = rows.shift()\r\n  /** @type {Array<Element>} */\r\n  const tableContent = []\r\n\r\n  if (firstRow) {\r\n    /** @type {Element} */\r\n    const head = {\r\n      type: 'element',\r\n      tagName: 'thead',\r\n      properties: {},\r\n      children: state.wrap([firstRow], true)\r\n    }\r\n    state.patch(node.children[0], head)\r\n    tableContent.push(head)\r\n  }\r\n\r\n  if (rows.length > 0) {\r\n    /** @type {Element} */\r\n    const body = {\r\n      type: 'element',\r\n      tagName: 'tbody',\r\n      properties: {},\r\n      children: state.wrap(rows, true)\r\n    }\r\n\r\n    const start = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_0__.pointStart)(node.children[1])\r\n    const end = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_0__.pointEnd)(node.children[node.children.length - 1])\r\n    if (start.line && end.line) body.position = {start, end}\r\n    tableContent.push(body)\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'table',\r\n    properties: {},\r\n    children: state.wrap(tableContent, true)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSx1QkFBdUI7QUFDcEMsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUN3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLCtEQUFVO0FBQzVCLGdCQUFnQiw2REFBUTtBQUN4QixpREFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL3RhYmxlLmpzPzRiMWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuVGFibGV9IFRhYmxlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtwb2ludFN0YXJ0LCBwb2ludEVuZH0gZnJvbSAndW5pc3QtdXRpbC1wb3NpdGlvbidcclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGB0YWJsZWAgbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge1RhYmxlfSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0VsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRhYmxlKHN0YXRlLCBub2RlKSB7XHJcbiAgY29uc3Qgcm93cyA9IHN0YXRlLmFsbChub2RlKVxyXG4gIGNvbnN0IGZpcnN0Um93ID0gcm93cy5zaGlmdCgpXHJcbiAgLyoqIEB0eXBlIHtBcnJheTxFbGVtZW50Pn0gKi9cclxuICBjb25zdCB0YWJsZUNvbnRlbnQgPSBbXVxyXG5cclxuICBpZiAoZmlyc3RSb3cpIHtcclxuICAgIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICAgIGNvbnN0IGhlYWQgPSB7XHJcbiAgICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgICAgdGFnTmFtZTogJ3RoZWFkJyxcclxuICAgICAgcHJvcGVydGllczoge30sXHJcbiAgICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKFtmaXJzdFJvd10sIHRydWUpXHJcbiAgICB9XHJcbiAgICBzdGF0ZS5wYXRjaChub2RlLmNoaWxkcmVuWzBdLCBoZWFkKVxyXG4gICAgdGFibGVDb250ZW50LnB1c2goaGVhZClcclxuICB9XHJcblxyXG4gIGlmIChyb3dzLmxlbmd0aCA+IDApIHtcclxuICAgIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICAgIGNvbnN0IGJvZHkgPSB7XHJcbiAgICAgIHR5cGU6ICdlbGVtZW50JyxcclxuICAgICAgdGFnTmFtZTogJ3Rib2R5JyxcclxuICAgICAgcHJvcGVydGllczoge30sXHJcbiAgICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKHJvd3MsIHRydWUpXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3RhcnQgPSBwb2ludFN0YXJ0KG5vZGUuY2hpbGRyZW5bMV0pXHJcbiAgICBjb25zdCBlbmQgPSBwb2ludEVuZChub2RlLmNoaWxkcmVuW25vZGUuY2hpbGRyZW4ubGVuZ3RoIC0gMV0pXHJcbiAgICBpZiAoc3RhcnQubGluZSAmJiBlbmQubGluZSkgYm9keS5wb3NpdGlvbiA9IHtzdGFydCwgZW5kfVxyXG4gICAgdGFibGVDb250ZW50LnB1c2goYm9keSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAndGFibGUnLFxyXG4gICAgcHJvcGVydGllczoge30sXHJcbiAgICBjaGlsZHJlbjogc3RhdGUud3JhcCh0YWJsZUNvbnRlbnQsIHRydWUpXHJcbiAgfVxyXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcclxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/table.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/text.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/text.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"text\": function() { return /* binding */ text; }\n/* harmony export */ });\n/* harmony import */ var trim_lines__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! trim-lines */ \"./node_modules/trim-lines/index.js\");\n/**\r\n * @typedef {import('hast').Element} HastElement\r\n * @typedef {import('hast').Text} HastText\r\n * @typedef {import('mdast').Text} MdastText\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n\r\n\r\n/**\r\n * Turn an mdast `text` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastText} node\r\n *   mdast node.\r\n * @returns {HastText | HastElement}\r\n *   hast node.\r\n */\r\nfunction text(state, node) {\r\n  /** @type {HastText} */\r\n  const result = {type: 'text', value: (0,trim_lines__WEBPACK_IMPORTED_MODULE_0__.trimLines)(String(node.value))}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90ZXh0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLHFCQUFxQjtBQUNsQyxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ29DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxXQUFXO0FBQ3RCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsVUFBVTtBQUN2QixrQkFBa0IscUJBQXFCLHFEQUFTO0FBQ2hEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90ZXh0LmpzPzc3ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBIYXN0RWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuVGV4dH0gSGFzdFRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UZXh0fSBNZGFzdFRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG5pbXBvcnQge3RyaW1MaW5lc30gZnJvbSAndHJpbS1saW5lcydcclxuXHJcbi8qKlxyXG4gKiBUdXJuIGFuIG1kYXN0IGB0ZXh0YCBub2RlIGludG8gaGFzdC5cclxuICpcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXHJcbiAqIEBwYXJhbSB7TWRhc3RUZXh0fSBub2RlXHJcbiAqICAgbWRhc3Qgbm9kZS5cclxuICogQHJldHVybnMge0hhc3RUZXh0IHwgSGFzdEVsZW1lbnR9XHJcbiAqICAgaGFzdCBub2RlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRleHQoc3RhdGUsIG5vZGUpIHtcclxuICAvKiogQHR5cGUge0hhc3RUZXh0fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAndGV4dCcsIHZhbHVlOiB0cmltTGluZXMoU3RyaW5nKG5vZGUudmFsdWUpKX1cclxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXHJcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/text.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js":
/*!************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"thematicBreak\": function() { return /* binding */ thematicBreak; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n/**\r\n * Turn an mdast `thematicBreak` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ThematicBreak} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction thematicBreak(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'hr',\r\n    properties: {},\r\n    children: []\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90aGVtYXRpYy1icmVhay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90aGVtYXRpYy1icmVhay5qcz8zMGZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlRoZW1hdGljQnJlYWt9IFRoZW1hdGljQnJlYWtcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcclxuICovXHJcblxyXG4vKipcclxuICogVHVybiBhbiBtZGFzdCBgdGhlbWF0aWNCcmVha2Agbm9kZSBpbnRvIGhhc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxyXG4gKiBAcGFyYW0ge1RoZW1hdGljQnJlYWt9IG5vZGVcclxuICogICBtZGFzdCBub2RlLlxyXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cclxuICogICBoYXN0IG5vZGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdGhlbWF0aWNCcmVhayhzdGF0ZSwgbm9kZSkge1xyXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiAnZWxlbWVudCcsXHJcbiAgICB0YWdOYW1lOiAnaHInLFxyXG4gICAgcHJvcGVydGllczoge30sXHJcbiAgICBjaGlsZHJlbjogW11cclxuICB9XHJcbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxyXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toHast\": function() { return /* binding */ toHast; }\n/* harmony export */ });\n/* harmony import */ var _footer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./footer.js */ \"./node_modules/mdast-util-to-hast/lib/footer.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"./node_modules/mdast-util-to-hast/lib/state.js\");\n/**\r\n * @typedef {import('hast').Content} HastContent\r\n * @typedef {import('hast').Root} HastRoot\r\n *\r\n * @typedef {import('mdast').Content} MdastContent\r\n * @typedef {import('mdast').Root} MdastRoot\r\n *\r\n * @typedef {import('./state.js').Options} Options\r\n */\r\n\r\n/**\r\n * @typedef {HastRoot | HastContent} HastNodes\r\n * @typedef {MdastRoot | MdastContent} MdastNodes\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Transform mdast to hast.\r\n *\r\n * ##### Notes\r\n *\r\n * ###### HTML\r\n *\r\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\r\n * as semistandard `raw` nodes.\r\n * Most utilities ignore `raw` nodes but two notable ones don’t:\r\n *\r\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\r\n *     output the raw HTML.\r\n *     This is typically discouraged as noted by the option name but is useful\r\n *     if you completely trust authors\r\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\r\n *     into standard hast nodes (`element`, `text`, etc).\r\n *     This is a heavy task as it needs a full HTML parser, but it is the only\r\n *     way to support untrusted content\r\n *\r\n * ###### Footnotes\r\n *\r\n * Many options supported here relate to footnotes.\r\n * Footnotes are not specified by CommonMark, which we follow by default.\r\n * They are supported by GitHub, so footnotes can be enabled in markdown with\r\n * `mdast-util-gfm`.\r\n *\r\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\r\n * that explains footnotes, which is hidden for sighted users but shown to\r\n * assistive technology.\r\n * When your page is not in English, you must define translated values.\r\n *\r\n * Back references use ARIA attributes, but the section label itself uses a\r\n * heading that is hidden with an `sr-only` class.\r\n * To show it to sighted users, define different attributes in\r\n * `footnoteLabelProperties`.\r\n *\r\n * ###### Clobbering\r\n *\r\n * Footnotes introduces a problem, as it links footnote calls to footnote\r\n * definitions on the page through `id` attributes generated from user content,\r\n * which results in DOM clobbering.\r\n *\r\n * DOM clobbering is this:\r\n *\r\n * ```html\r\n * <p id=x></p>\r\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\r\n * ```\r\n *\r\n * Elements by their ID are made available by browsers on the `window` object,\r\n * which is a security risk.\r\n * Using a prefix solves this problem.\r\n *\r\n * More information on how to handle clobbering and the prefix is explained in\r\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\r\n *\r\n * ###### Unknown nodes\r\n *\r\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\r\n * The default behavior for unknown nodes is:\r\n *\r\n * *   when the node has a `value` (and doesn’t have `data.hName`,\r\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\r\n *     node\r\n * *   otherwise, create a `<div>` element (which could be changed with\r\n *     `data.hName`), with its children mapped from mdast to hast as well\r\n *\r\n * This behavior can be changed by passing an `unknownHandler`.\r\n *\r\n * @param {MdastNodes} tree\r\n *   mdast tree.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {HastNodes | null | undefined}\r\n *   hast tree.\r\n */\r\n// To do: next major: always return a single `root`.\r\nfunction toHast(tree, options) {\r\n  const state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.createState)(tree, options)\r\n  const node = state.one(tree, null)\r\n  const foot = (0,_footer_js__WEBPACK_IMPORTED_MODULE_1__.footer)(state)\r\n\r\n  if (foot) {\r\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\r\n    // content.\r\n    // So assume `node` is a parent node.\r\n    node.children.push({type: 'text', value: '\\n'}, foot)\r\n  }\r\n\r\n  // To do: next major: always return root?\r\n  return Array.isArray(node) ? {type: 'root', children: node} : node\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEMsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxhQUFhLDBCQUEwQjtBQUN2QztBQUNBO0FBQ2tDO0FBQ0k7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLHNEQUFXO0FBQzNCO0FBQ0EsZUFBZSxrREFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsOEJBQThCO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2luZGV4LmpzPzRmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Db250ZW50fSBIYXN0Q29udGVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUm9vdH0gSGFzdFJvb3RcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBNZGFzdENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBNZGFzdFJvb3RcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zdGF0ZS5qcycpLk9wdGlvbnN9IE9wdGlvbnNcclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYge0hhc3RSb290IHwgSGFzdENvbnRlbnR9IEhhc3ROb2Rlc1xyXG4gKiBAdHlwZWRlZiB7TWRhc3RSb290IHwgTWRhc3RDb250ZW50fSBNZGFzdE5vZGVzXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtmb290ZXJ9IGZyb20gJy4vZm9vdGVyLmpzJ1xyXG5pbXBvcnQge2NyZWF0ZVN0YXRlfSBmcm9tICcuL3N0YXRlLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRyYW5zZm9ybSBtZGFzdCB0byBoYXN0LlxyXG4gKlxyXG4gKiAjIyMjIyBOb3Rlc1xyXG4gKlxyXG4gKiAjIyMjIyMgSFRNTFxyXG4gKlxyXG4gKiBSYXcgSFRNTCBpcyBhdmFpbGFibGUgaW4gbWRhc3QgYXMgYGh0bWxgIG5vZGVzIGFuZCBjYW4gYmUgZW1iZWRkZWQgaW4gaGFzdFxyXG4gKiBhcyBzZW1pc3RhbmRhcmQgYHJhd2Agbm9kZXMuXHJcbiAqIE1vc3QgdXRpbGl0aWVzIGlnbm9yZSBgcmF3YCBub2RlcyBidXQgdHdvIG5vdGFibGUgb25lcyBkb27igJl0OlxyXG4gKlxyXG4gKiAqICAgYGhhc3QtdXRpbC10by1odG1sYCBhbHNvIGhhcyBhbiBvcHRpb24gYGFsbG93RGFuZ2Vyb3VzSHRtbGAgd2hpY2ggd2lsbFxyXG4gKiAgICAgb3V0cHV0IHRoZSByYXcgSFRNTC5cclxuICogICAgIFRoaXMgaXMgdHlwaWNhbGx5IGRpc2NvdXJhZ2VkIGFzIG5vdGVkIGJ5IHRoZSBvcHRpb24gbmFtZSBidXQgaXMgdXNlZnVsXHJcbiAqICAgICBpZiB5b3UgY29tcGxldGVseSB0cnVzdCBhdXRob3JzXHJcbiAqICogICBgaGFzdC11dGlsLXJhd2AgY2FuIGhhbmRsZSB0aGUgcmF3IGVtYmVkZGVkIEhUTUwgc3RyaW5ncyBieSBwYXJzaW5nIHRoZW1cclxuICogICAgIGludG8gc3RhbmRhcmQgaGFzdCBub2RlcyAoYGVsZW1lbnRgLCBgdGV4dGAsIGV0YykuXHJcbiAqICAgICBUaGlzIGlzIGEgaGVhdnkgdGFzayBhcyBpdCBuZWVkcyBhIGZ1bGwgSFRNTCBwYXJzZXIsIGJ1dCBpdCBpcyB0aGUgb25seVxyXG4gKiAgICAgd2F5IHRvIHN1cHBvcnQgdW50cnVzdGVkIGNvbnRlbnRcclxuICpcclxuICogIyMjIyMjIEZvb3Rub3Rlc1xyXG4gKlxyXG4gKiBNYW55IG9wdGlvbnMgc3VwcG9ydGVkIGhlcmUgcmVsYXRlIHRvIGZvb3Rub3Rlcy5cclxuICogRm9vdG5vdGVzIGFyZSBub3Qgc3BlY2lmaWVkIGJ5IENvbW1vbk1hcmssIHdoaWNoIHdlIGZvbGxvdyBieSBkZWZhdWx0LlxyXG4gKiBUaGV5IGFyZSBzdXBwb3J0ZWQgYnkgR2l0SHViLCBzbyBmb290bm90ZXMgY2FuIGJlIGVuYWJsZWQgaW4gbWFya2Rvd24gd2l0aFxyXG4gKiBgbWRhc3QtdXRpbC1nZm1gLlxyXG4gKlxyXG4gKiBUaGUgb3B0aW9ucyBgZm9vdG5vdGVCYWNrTGFiZWxgIGFuZCBgZm9vdG5vdGVMYWJlbGAgZGVmaW5lIG5hdHVyYWwgbGFuZ3VhZ2VcclxuICogdGhhdCBleHBsYWlucyBmb290bm90ZXMsIHdoaWNoIGlzIGhpZGRlbiBmb3Igc2lnaHRlZCB1c2VycyBidXQgc2hvd24gdG9cclxuICogYXNzaXN0aXZlIHRlY2hub2xvZ3kuXHJcbiAqIFdoZW4geW91ciBwYWdlIGlzIG5vdCBpbiBFbmdsaXNoLCB5b3UgbXVzdCBkZWZpbmUgdHJhbnNsYXRlZCB2YWx1ZXMuXHJcbiAqXHJcbiAqIEJhY2sgcmVmZXJlbmNlcyB1c2UgQVJJQSBhdHRyaWJ1dGVzLCBidXQgdGhlIHNlY3Rpb24gbGFiZWwgaXRzZWxmIHVzZXMgYVxyXG4gKiBoZWFkaW5nIHRoYXQgaXMgaGlkZGVuIHdpdGggYW4gYHNyLW9ubHlgIGNsYXNzLlxyXG4gKiBUbyBzaG93IGl0IHRvIHNpZ2h0ZWQgdXNlcnMsIGRlZmluZSBkaWZmZXJlbnQgYXR0cmlidXRlcyBpblxyXG4gKiBgZm9vdG5vdGVMYWJlbFByb3BlcnRpZXNgLlxyXG4gKlxyXG4gKiAjIyMjIyMgQ2xvYmJlcmluZ1xyXG4gKlxyXG4gKiBGb290bm90ZXMgaW50cm9kdWNlcyBhIHByb2JsZW0sIGFzIGl0IGxpbmtzIGZvb3Rub3RlIGNhbGxzIHRvIGZvb3Rub3RlXHJcbiAqIGRlZmluaXRpb25zIG9uIHRoZSBwYWdlIHRocm91Z2ggYGlkYCBhdHRyaWJ1dGVzIGdlbmVyYXRlZCBmcm9tIHVzZXIgY29udGVudCxcclxuICogd2hpY2ggcmVzdWx0cyBpbiBET00gY2xvYmJlcmluZy5cclxuICpcclxuICogRE9NIGNsb2JiZXJpbmcgaXMgdGhpczpcclxuICpcclxuICogYGBgaHRtbFxyXG4gKiA8cCBpZD14PjwvcD5cclxuICogPHNjcmlwdD5hbGVydCh4KSAvLyBgeGAgbm93IHJlZmVycyB0byB0aGUgRE9NIGBwI3hgIGVsZW1lbnQ8L3NjcmlwdD5cclxuICogYGBgXHJcbiAqXHJcbiAqIEVsZW1lbnRzIGJ5IHRoZWlyIElEIGFyZSBtYWRlIGF2YWlsYWJsZSBieSBicm93c2VycyBvbiB0aGUgYHdpbmRvd2Agb2JqZWN0LFxyXG4gKiB3aGljaCBpcyBhIHNlY3VyaXR5IHJpc2suXHJcbiAqIFVzaW5nIGEgcHJlZml4IHNvbHZlcyB0aGlzIHByb2JsZW0uXHJcbiAqXHJcbiAqIE1vcmUgaW5mb3JtYXRpb24gb24gaG93IHRvIGhhbmRsZSBjbG9iYmVyaW5nIGFuZCB0aGUgcHJlZml4IGlzIGV4cGxhaW5lZCBpblxyXG4gKiBFeGFtcGxlOiBoZWFkaW5ncyAoRE9NIGNsb2JiZXJpbmcpIGluIGByZWh5cGUtc2FuaXRpemVgLlxyXG4gKlxyXG4gKiAjIyMjIyMgVW5rbm93biBub2Rlc1xyXG4gKlxyXG4gKiBVbmtub3duIG5vZGVzIGFyZSBub2RlcyB3aXRoIGEgdHlwZSB0aGF0IGlzbuKAmXQgaW4gYGhhbmRsZXJzYCBvciBgcGFzc1Rocm91Z2hgLlxyXG4gKiBUaGUgZGVmYXVsdCBiZWhhdmlvciBmb3IgdW5rbm93biBub2RlcyBpczpcclxuICpcclxuICogKiAgIHdoZW4gdGhlIG5vZGUgaGFzIGEgYHZhbHVlYCAoYW5kIGRvZXNu4oCZdCBoYXZlIGBkYXRhLmhOYW1lYCxcclxuICogICAgIGBkYXRhLmhQcm9wZXJ0aWVzYCwgb3IgYGRhdGEuaENoaWxkcmVuYCwgc2VlIGxhdGVyKSwgY3JlYXRlIGEgaGFzdCBgdGV4dGBcclxuICogICAgIG5vZGVcclxuICogKiAgIG90aGVyd2lzZSwgY3JlYXRlIGEgYDxkaXY+YCBlbGVtZW50ICh3aGljaCBjb3VsZCBiZSBjaGFuZ2VkIHdpdGhcclxuICogICAgIGBkYXRhLmhOYW1lYCksIHdpdGggaXRzIGNoaWxkcmVuIG1hcHBlZCBmcm9tIG1kYXN0IHRvIGhhc3QgYXMgd2VsbFxyXG4gKlxyXG4gKiBUaGlzIGJlaGF2aW9yIGNhbiBiZSBjaGFuZ2VkIGJ5IHBhc3NpbmcgYW4gYHVua25vd25IYW5kbGVyYC5cclxuICpcclxuICogQHBhcmFtIHtNZGFzdE5vZGVzfSB0cmVlXHJcbiAqICAgbWRhc3QgdHJlZS5cclxuICogQHBhcmFtIHtPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXHJcbiAqICAgQ29uZmlndXJhdGlvbi5cclxuICogQHJldHVybnMge0hhc3ROb2RlcyB8IG51bGwgfCB1bmRlZmluZWR9XHJcbiAqICAgaGFzdCB0cmVlLlxyXG4gKi9cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IGFsd2F5cyByZXR1cm4gYSBzaW5nbGUgYHJvb3RgLlxyXG5leHBvcnQgZnVuY3Rpb24gdG9IYXN0KHRyZWUsIG9wdGlvbnMpIHtcclxuICBjb25zdCBzdGF0ZSA9IGNyZWF0ZVN0YXRlKHRyZWUsIG9wdGlvbnMpXHJcbiAgY29uc3Qgbm9kZSA9IHN0YXRlLm9uZSh0cmVlLCBudWxsKVxyXG4gIGNvbnN0IGZvb3QgPSBmb290ZXIoc3RhdGUpXHJcblxyXG4gIGlmIChmb290KSB7XHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIElmIHRoZXJl4oCZcyBhIGZvb3RlciwgdGhlcmUgd2VyZSBkZWZpbml0aW9ucywgbWVhbmluZyBibG9ja1xyXG4gICAgLy8gY29udGVudC5cclxuICAgIC8vIFNvIGFzc3VtZSBgbm9kZWAgaXMgYSBwYXJlbnQgbm9kZS5cclxuICAgIG5vZGUuY2hpbGRyZW4ucHVzaCh7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ1xcbid9LCBmb290KVxyXG4gIH1cclxuXHJcbiAgLy8gVG8gZG86IG5leHQgbWFqb3I6IGFsd2F5cyByZXR1cm4gcm9vdD9cclxuICByZXR1cm4gQXJyYXkuaXNBcnJheShub2RlKSA/IHt0eXBlOiAncm9vdCcsIGNoaWxkcmVuOiBub2RlfSA6IG5vZGVcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/revert.js":
/*!*******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/revert.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"revert\": function() { return /* binding */ revert; }\n/* harmony export */ });\n/**\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n *\r\n * @typedef {import('mdast').Content} Content\r\n * @typedef {import('mdast').Reference} Reference\r\n * @typedef {import('mdast').Root} Root\r\n *\r\n * @typedef {import('./state.js').State} State\r\n */\r\n\r\n/**\r\n * @typedef {Root | Content} Nodes\r\n * @typedef {Extract<Nodes, Reference>} References\r\n */\r\n\r\n// To do: next major: always return array.\r\n\r\n/**\r\n * Return the content of a reference without definition as plain text.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {References} node\r\n *   Reference node (image, link).\r\n * @returns {ElementContent | Array<ElementContent>}\r\n *   hast content.\r\n */\r\nfunction revert(state, node) {\r\n  const subtype = node.referenceType\r\n  let suffix = ']'\r\n\r\n  if (subtype === 'collapsed') {\r\n    suffix += '[]'\r\n  } else if (subtype === 'full') {\r\n    suffix += '[' + (node.label || node.identifier) + ']'\r\n  }\r\n\r\n  if (node.type === 'imageReference') {\r\n    return {type: 'text', value: '![' + node.alt + suffix}\r\n  }\r\n\r\n  const contents = state.all(node)\r\n  const head = contents[0]\r\n\r\n  if (head && head.type === 'text') {\r\n    head.value = '[' + head.value\r\n  } else {\r\n    contents.unshift({type: 'text', value: '['})\r\n  }\r\n\r\n  const tail = contents[contents.length - 1]\r\n\r\n  if (tail && tail.type === 'text') {\r\n    tail.value += suffix\r\n  } else {\r\n    contents.push({type: 'text', value: suffix})\r\n  }\r\n\r\n  return contents\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9yZXZlcnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSwrQkFBK0I7QUFDNUM7QUFDQSxhQUFhLHlCQUF5QjtBQUN0QyxhQUFhLDJCQUEyQjtBQUN4QyxhQUFhLHNCQUFzQjtBQUNuQztBQUNBLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0JBQWdCO0FBQzdCLGFBQWEsMkJBQTJCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osc0JBQXNCLHlCQUF5QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osbUJBQW1CLDRCQUE0QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9yZXZlcnQuanM/YjU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnRDb250ZW50fSBFbGVtZW50Q29udGVudFxyXG4gKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkNvbnRlbnR9IENvbnRlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5SZWZlcmVuY2V9IFJlZmVyZW5jZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IFJvb3RcclxuICpcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7Um9vdCB8IENvbnRlbnR9IE5vZGVzXHJcbiAqIEB0eXBlZGVmIHtFeHRyYWN0PE5vZGVzLCBSZWZlcmVuY2U+fSBSZWZlcmVuY2VzXHJcbiAqL1xyXG5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IGFsd2F5cyByZXR1cm4gYXJyYXkuXHJcblxyXG4vKipcclxuICogUmV0dXJuIHRoZSBjb250ZW50IG9mIGEgcmVmZXJlbmNlIHdpdGhvdXQgZGVmaW5pdGlvbiBhcyBwbGFpbiB0ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cclxuICogQHBhcmFtIHtSZWZlcmVuY2VzfSBub2RlXHJcbiAqICAgUmVmZXJlbmNlIG5vZGUgKGltYWdlLCBsaW5rKS5cclxuICogQHJldHVybnMge0VsZW1lbnRDb250ZW50IHwgQXJyYXk8RWxlbWVudENvbnRlbnQ+fVxyXG4gKiAgIGhhc3QgY29udGVudC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZXZlcnQoc3RhdGUsIG5vZGUpIHtcclxuICBjb25zdCBzdWJ0eXBlID0gbm9kZS5yZWZlcmVuY2VUeXBlXHJcbiAgbGV0IHN1ZmZpeCA9ICddJ1xyXG5cclxuICBpZiAoc3VidHlwZSA9PT0gJ2NvbGxhcHNlZCcpIHtcclxuICAgIHN1ZmZpeCArPSAnW10nXHJcbiAgfSBlbHNlIGlmIChzdWJ0eXBlID09PSAnZnVsbCcpIHtcclxuICAgIHN1ZmZpeCArPSAnWycgKyAobm9kZS5sYWJlbCB8fCBub2RlLmlkZW50aWZpZXIpICsgJ10nXHJcbiAgfVxyXG5cclxuICBpZiAobm9kZS50eXBlID09PSAnaW1hZ2VSZWZlcmVuY2UnKSB7XHJcbiAgICByZXR1cm4ge3R5cGU6ICd0ZXh0JywgdmFsdWU6ICchWycgKyBub2RlLmFsdCArIHN1ZmZpeH1cclxuICB9XHJcblxyXG4gIGNvbnN0IGNvbnRlbnRzID0gc3RhdGUuYWxsKG5vZGUpXHJcbiAgY29uc3QgaGVhZCA9IGNvbnRlbnRzWzBdXHJcblxyXG4gIGlmIChoZWFkICYmIGhlYWQudHlwZSA9PT0gJ3RleHQnKSB7XHJcbiAgICBoZWFkLnZhbHVlID0gJ1snICsgaGVhZC52YWx1ZVxyXG4gIH0gZWxzZSB7XHJcbiAgICBjb250ZW50cy51bnNoaWZ0KHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnWyd9KVxyXG4gIH1cclxuXHJcbiAgY29uc3QgdGFpbCA9IGNvbnRlbnRzW2NvbnRlbnRzLmxlbmd0aCAtIDFdXHJcblxyXG4gIGlmICh0YWlsICYmIHRhaWwudHlwZSA9PT0gJ3RleHQnKSB7XHJcbiAgICB0YWlsLnZhbHVlICs9IHN1ZmZpeFxyXG4gIH0gZWxzZSB7XHJcbiAgICBjb250ZW50cy5wdXNoKHt0eXBlOiAndGV4dCcsIHZhbHVlOiBzdWZmaXh9KVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGNvbnRlbnRzXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/revert.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-hast/lib/state.js":
/*!******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/state.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": function() { return /* binding */ all; },\n/* harmony export */   \"createState\": function() { return /* binding */ createState; },\n/* harmony export */   \"one\": function() { return /* binding */ one; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/index.js\");\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unist-util-position */ \"./node_modules/unist-util-position/index.js\");\n/* harmony import */ var unist_util_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-generated */ \"./node_modules/unist-util-generated/index.js\");\n/* harmony import */ var mdast_util_definitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-definitions */ \"./node_modules/mdast-util-definitions/index.js\");\n/* harmony import */ var _handlers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers/index.js */ \"./node_modules/mdast-util-to-hast/lib/handlers/index.js\");\n/**\r\n * @typedef {import('hast').Content} HastContent\r\n * @typedef {import('hast').Element} HastElement\r\n * @typedef {import('hast').ElementContent} HastElementContent\r\n * @typedef {import('hast').Properties} HastProperties\r\n * @typedef {import('hast').Root} HastRoot\r\n * @typedef {import('hast').Text} HastText\r\n *\r\n * @typedef {import('mdast').Content} MdastContent\r\n * @typedef {import('mdast').Definition} MdastDefinition\r\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\r\n * @typedef {import('mdast').Parent} MdastParent\r\n * @typedef {import('mdast').Root} MdastRoot\r\n */\r\n\r\n/**\r\n * @typedef {HastRoot | HastContent} HastNodes\r\n * @typedef {MdastRoot | MdastContent} MdastNodes\r\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\r\n *\r\n * @typedef EmbeddedHastFields\r\n *   hast fields.\r\n * @property {string | null | undefined} [hName]\r\n *   Generate a specific element with this tag name instead.\r\n * @property {HastProperties | null | undefined} [hProperties]\r\n *   Generate an element with these properties instead.\r\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\r\n *   Generate an element with this content instead.\r\n *\r\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\r\n *   mdast data with embedded hast fields.\r\n *\r\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\r\n *   mdast node with embedded hast data.\r\n *\r\n * @typedef PointLike\r\n *   Point-like value.\r\n * @property {number | null | undefined} [line]\r\n *   Line.\r\n * @property {number | null | undefined} [column]\r\n *   Column.\r\n * @property {number | null | undefined} [offset]\r\n *   Offset.\r\n *\r\n * @typedef PositionLike\r\n *   Position-like value.\r\n * @property {PointLike | null | undefined} [start]\r\n *   Point-like value.\r\n * @property {PointLike | null | undefined} [end]\r\n *   Point-like value.\r\n *\r\n * @callback Handler\r\n *   Handle a node.\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {any} node\r\n *   mdast node to handle.\r\n * @param {MdastParents | null | undefined} parent\r\n *   Parent of `node`.\r\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\r\n *   hast node.\r\n *\r\n * @callback HFunctionProps\r\n *   Signature of `state` for when props are passed.\r\n * @param {MdastNodes | PositionLike | null | undefined} node\r\n *   mdast node or unist position.\r\n * @param {string} tagName\r\n *   HTML tag name.\r\n * @param {HastProperties} props\r\n *   Properties.\r\n * @param {Array<HastElementContent> | null | undefined} [children]\r\n *   hast content.\r\n * @returns {HastElement}\r\n *   Compiled element.\r\n *\r\n * @callback HFunctionNoProps\r\n *   Signature of `state` for when no props are passed.\r\n * @param {MdastNodes | PositionLike | null | undefined} node\r\n *   mdast node or unist position.\r\n * @param {string} tagName\r\n *   HTML tag name.\r\n * @param {Array<HastElementContent> | null | undefined} [children]\r\n *   hast content.\r\n * @returns {HastElement}\r\n *   Compiled element.\r\n *\r\n * @typedef HFields\r\n *   Info on `state`.\r\n * @property {boolean} dangerous\r\n *   Whether HTML is allowed.\r\n * @property {string} clobberPrefix\r\n *   Prefix to use to prevent DOM clobbering.\r\n * @property {string} footnoteLabel\r\n *   Label to use to introduce the footnote section.\r\n * @property {string} footnoteLabelTagName\r\n *   HTML used for the footnote label.\r\n * @property {HastProperties} footnoteLabelProperties\r\n *   Properties on the HTML tag used for the footnote label.\r\n * @property {string} footnoteBackLabel\r\n *   Label to use from backreferences back to their footnote call.\r\n * @property {(identifier: string) => MdastDefinition | null} definition\r\n *   Definition cache.\r\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\r\n *   Footnote definitions by their identifier.\r\n * @property {Array<string>} footnoteOrder\r\n *   Identifiers of order when footnote calls first appear in tree order.\r\n * @property {Record<string, number>} footnoteCounts\r\n *   Counts for how often the same footnote was called.\r\n * @property {Handlers} handlers\r\n *   Applied handlers.\r\n * @property {Handler} unknownHandler\r\n *   Handler for any none not in `passThrough` or otherwise handled.\r\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\r\n *   Copy a node’s positional info.\r\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\r\n *   Honor the `data` of `from`, and generate an element instead of `node`.\r\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\r\n *   Transform an mdast node to hast.\r\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\r\n *   Transform the children of an mdast parent to hast.\r\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\r\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\r\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\r\n *   Like `state` but lower-level and usable on non-elements.\r\n *   Deprecated: use `patch` and `applyData`.\r\n * @property {Array<string>} passThrough\r\n *   List of node types to pass through untouched (except for their children).\r\n *\r\n * @typedef Options\r\n *   Configuration (optional).\r\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\r\n *   Whether to persist raw HTML in markdown in the hast tree.\r\n * @property {string | null | undefined} [clobberPrefix='user-content-']\r\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\r\n *   *clobbering*.\r\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\r\n *   Label to use from backreferences back to their footnote call (affects\r\n *   screen readers).\r\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\r\n *   Label to use for the footnotes section (affects screen readers).\r\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\r\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\r\n *   is always added as footnote calls use it with `aria-describedby` to\r\n *   provide an accessible label).\r\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\r\n *   Tag name to use for the footnote label.\r\n * @property {Handlers | null | undefined} [handlers]\r\n *   Extra handlers for nodes.\r\n * @property {Array<string> | null | undefined} [passThrough]\r\n *   List of custom mdast node types to pass through (keep) in hast (note that\r\n *   the node itself is passed, but eventual children are transformed).\r\n * @property {Handler | null | undefined} [unknownHandler]\r\n *   Handler for all unknown nodes.\r\n *\r\n * @typedef {Record<string, Handler>} Handlers\r\n *   Handle nodes.\r\n *\r\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\r\n *   Info passed around.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Create `state` from an mdast tree.\r\n *\r\n * @param {MdastNodes} tree\r\n *   mdast node to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {State}\r\n *   `state` function.\r\n */\r\nfunction createState(tree, options) {\r\n  const settings = options || {}\r\n  const dangerous = settings.allowDangerousHtml || false\r\n  /** @type {Record<string, MdastFootnoteDefinition>} */\r\n  const footnoteById = {}\r\n\r\n  // To do: next major: add `options` to state, remove:\r\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\r\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\r\n  // `unknownHandler`.\r\n\r\n  // To do: next major: move to `state.options.allowDangerousHtml`.\r\n  state.dangerous = dangerous\r\n  // To do: next major: move to `state.options`.\r\n  state.clobberPrefix =\r\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\r\n      ? 'user-content-'\r\n      : settings.clobberPrefix\r\n  // To do: next major: move to `state.options`.\r\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\r\n  // To do: next major: move to `state.options`.\r\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\r\n  // To do: next major: move to `state.options`.\r\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\r\n    className: ['sr-only']\r\n  }\r\n  // To do: next major: move to `state.options`.\r\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\r\n  // To do: next major: move to `state.options`.\r\n  state.unknownHandler = settings.unknownHandler\r\n  // To do: next major: move to `state.options`.\r\n  state.passThrough = settings.passThrough\r\n\r\n  state.handlers = {..._handlers_index_js__WEBPACK_IMPORTED_MODULE_0__.handlers, ...settings.handlers}\r\n\r\n  // To do: next major: replace utility with `definitionById` object, so we\r\n  // only walk once (as we need footnotes too).\r\n  state.definition = (0,mdast_util_definitions__WEBPACK_IMPORTED_MODULE_1__.definitions)(tree)\r\n  state.footnoteById = footnoteById\r\n  /** @type {Array<string>} */\r\n  state.footnoteOrder = []\r\n  /** @type {Record<string, number>} */\r\n  state.footnoteCounts = {}\r\n\r\n  state.patch = patch\r\n  state.applyData = applyData\r\n  state.one = oneBound\r\n  state.all = allBound\r\n  state.wrap = wrap\r\n  // To do: next major: remove `augment`.\r\n  state.augment = augment\r\n\r\n  ;(0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(tree, 'footnoteDefinition', (definition) => {\r\n    const id = String(definition.identifier).toUpperCase()\r\n\r\n    // Mimick CM behavior of link definitions.\r\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\r\n    if (!own.call(footnoteById, id)) {\r\n      footnoteById[id] = definition\r\n    }\r\n  })\r\n\r\n  // @ts-expect-error Hush, it’s fine!\r\n  return state\r\n\r\n  /**\r\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\r\n   *\r\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\r\n   * @param {HastElementContent} right\r\n   * @returns {HastElementContent}\r\n   */\r\n  /* c8 ignore start */\r\n  // To do: next major: remove.\r\n  function augment(left, right) {\r\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\r\n    if (left && 'data' in left && left.data) {\r\n      /** @type {MdastData} */\r\n      const data = left.data\r\n\r\n      if (data.hName) {\r\n        if (right.type !== 'element') {\r\n          right = {\r\n            type: 'element',\r\n            tagName: '',\r\n            properties: {},\r\n            children: []\r\n          }\r\n        }\r\n\r\n        right.tagName = data.hName\r\n      }\r\n\r\n      if (right.type === 'element' && data.hProperties) {\r\n        right.properties = {...right.properties, ...data.hProperties}\r\n      }\r\n\r\n      if ('children' in right && right.children && data.hChildren) {\r\n        right.children = data.hChildren\r\n      }\r\n    }\r\n\r\n    if (left) {\r\n      const ctx = 'type' in left ? left : {position: left}\r\n\r\n      if (!(0,unist_util_generated__WEBPACK_IMPORTED_MODULE_3__.generated)(ctx)) {\r\n        // @ts-expect-error: fine.\r\n        right.position = {start: (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.pointStart)(ctx), end: (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.pointEnd)(ctx)}\r\n      }\r\n    }\r\n\r\n    return right\r\n  }\r\n  /* c8 ignore stop */\r\n\r\n  /**\r\n   * Create an element for `node`.\r\n   *\r\n   * @type {HFunctionProps}\r\n   */\r\n  /* c8 ignore start */\r\n  // To do: next major: remove.\r\n  function state(node, tagName, props, children) {\r\n    if (Array.isArray(props)) {\r\n      children = props\r\n      props = {}\r\n    }\r\n\r\n    // @ts-expect-error augmenting an element yields an element.\r\n    return augment(node, {\r\n      type: 'element',\r\n      tagName,\r\n      properties: props || {},\r\n      children: children || []\r\n    })\r\n  }\r\n  /* c8 ignore stop */\r\n\r\n  /**\r\n   * Transform an mdast node into a hast node.\r\n   *\r\n   * @param {MdastNodes} node\r\n   *   mdast node.\r\n   * @param {MdastParents | null | undefined} [parent]\r\n   *   Parent of `node`.\r\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\r\n   *   Resulting hast node.\r\n   */\r\n  function oneBound(node, parent) {\r\n    // @ts-expect-error: that’s a state :)\r\n    return one(state, node, parent)\r\n  }\r\n\r\n  /**\r\n   * Transform the children of an mdast node into hast nodes.\r\n   *\r\n   * @param {MdastNodes} parent\r\n   *   mdast node to compile\r\n   * @returns {Array<HastElementContent>}\r\n   *   Resulting hast nodes.\r\n   */\r\n  function allBound(parent) {\r\n    // @ts-expect-error: that’s a state :)\r\n    return all(state, parent)\r\n  }\r\n}\r\n\r\n/**\r\n * Copy a node’s positional info.\r\n *\r\n * @param {MdastNodes} from\r\n *   mdast node to copy from.\r\n * @param {HastNodes} to\r\n *   hast node to copy into.\r\n * @returns {void}\r\n *   Nothing.\r\n */\r\nfunction patch(from, to) {\r\n  if (from.position) to.position = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.position)(from)\r\n}\r\n\r\n/**\r\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\r\n *\r\n * @template {HastNodes} Type\r\n *   Node type.\r\n * @param {MdastNodes} from\r\n *   mdast node to use data from.\r\n * @param {Type} to\r\n *   hast node to change.\r\n * @returns {Type | HastElement}\r\n *   Nothing.\r\n */\r\nfunction applyData(from, to) {\r\n  /** @type {Type | HastElement} */\r\n  let result = to\r\n\r\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\r\n  if (from && from.data) {\r\n    const hName = from.data.hName\r\n    const hChildren = from.data.hChildren\r\n    const hProperties = from.data.hProperties\r\n\r\n    if (typeof hName === 'string') {\r\n      // Transforming the node resulted in an element with a different name\r\n      // than wanted:\r\n      if (result.type === 'element') {\r\n        result.tagName = hName\r\n      }\r\n      // Transforming the node resulted in a non-element, which happens for\r\n      // raw, text, and root nodes (unless custom handlers are passed).\r\n      // The intent is likely to keep the content around (otherwise: pass\r\n      // `hChildren`).\r\n      else {\r\n        result = {\r\n          type: 'element',\r\n          tagName: hName,\r\n          properties: {},\r\n          children: []\r\n        }\r\n\r\n        // To do: next major: take the children from the `root`, or inject the\r\n        // raw/text/comment or so into the element?\r\n        // if ('children' in node) {\r\n        //   // @ts-expect-error: assume `children` are allowed in elements.\r\n        //   result.children = node.children\r\n        // } else {\r\n        //   // @ts-expect-error: assume `node` is allowed in elements.\r\n        //   result.children.push(node)\r\n        // }\r\n      }\r\n    }\r\n\r\n    if (result.type === 'element' && hProperties) {\r\n      result.properties = {...result.properties, ...hProperties}\r\n    }\r\n\r\n    if (\r\n      'children' in result &&\r\n      result.children &&\r\n      hChildren !== null &&\r\n      hChildren !== undefined\r\n    ) {\r\n      // @ts-expect-error: assume valid children are defined.\r\n      result.children = hChildren\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Transform an mdast node into a hast node.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastNodes} node\r\n *   mdast node.\r\n * @param {MdastParents | null | undefined} [parent]\r\n *   Parent of `node`.\r\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\r\n *   Resulting hast node.\r\n */\r\n// To do: next major: do not expose, keep bound.\r\nfunction one(state, node, parent) {\r\n  const type = node && node.type\r\n\r\n  // Fail on non-nodes.\r\n  if (!type) {\r\n    throw new Error('Expected node, got `' + node + '`')\r\n  }\r\n\r\n  if (own.call(state.handlers, type)) {\r\n    return state.handlers[type](state, node, parent)\r\n  }\r\n\r\n  if (state.passThrough && state.passThrough.includes(type)) {\r\n    // To do: next major: deep clone.\r\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\r\n    return 'children' in node ? {...node, children: all(state, node)} : node\r\n  }\r\n\r\n  if (state.unknownHandler) {\r\n    return state.unknownHandler(state, node, parent)\r\n  }\r\n\r\n  return defaultUnknownHandler(state, node)\r\n}\r\n\r\n/**\r\n * Transform the children of an mdast node into hast nodes.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastNodes} parent\r\n *   mdast node to compile\r\n * @returns {Array<HastElementContent>}\r\n *   Resulting hast nodes.\r\n */\r\n// To do: next major: do not expose, keep bound.\r\nfunction all(state, parent) {\r\n  /** @type {Array<HastElementContent>} */\r\n  const values = []\r\n\r\n  if ('children' in parent) {\r\n    const nodes = parent.children\r\n    let index = -1\r\n    while (++index < nodes.length) {\r\n      const result = one(state, nodes[index], parent)\r\n\r\n      // To do: see if we van clean this? Can we merge texts?\r\n      if (result) {\r\n        if (index && nodes[index - 1].type === 'break') {\r\n          if (!Array.isArray(result) && result.type === 'text') {\r\n            result.value = result.value.replace(/^\\s+/, '')\r\n          }\r\n\r\n          if (!Array.isArray(result) && result.type === 'element') {\r\n            const head = result.children[0]\r\n\r\n            if (head && head.type === 'text') {\r\n              head.value = head.value.replace(/^\\s+/, '')\r\n            }\r\n          }\r\n        }\r\n\r\n        if (Array.isArray(result)) {\r\n          values.push(...result)\r\n        } else {\r\n          values.push(result)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return values\r\n}\r\n\r\n/**\r\n * Transform an unknown node.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastNodes} node\r\n *   Unknown mdast node.\r\n * @returns {HastText | HastElement}\r\n *   Resulting hast node.\r\n */\r\nfunction defaultUnknownHandler(state, node) {\r\n  const data = node.data || {}\r\n  /** @type {HastText | HastElement} */\r\n  const result =\r\n    'value' in node &&\r\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\r\n      ? {type: 'text', value: node.value}\r\n      : {\r\n          type: 'element',\r\n          tagName: 'div',\r\n          properties: {},\r\n          children: all(state, node)\r\n        }\r\n\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n\r\n/**\r\n * Wrap `nodes` with line endings between each node.\r\n *\r\n * @template {HastContent} Type\r\n *   Node type.\r\n * @param {Array<Type>} nodes\r\n *   List of nodes to wrap.\r\n * @param {boolean | null | undefined} [loose=false]\r\n *   Whether to add line endings at start and end.\r\n * @returns {Array<Type | HastText>}\r\n *   Wrapped nodes.\r\n */\r\nfunction wrap(nodes, loose) {\r\n  /** @type {Array<Type | HastText>} */\r\n  const result = []\r\n  let index = -1\r\n\r\n  if (loose) {\r\n    result.push({type: 'text', value: '\\n'})\r\n  }\r\n\r\n  while (++index < nodes.length) {\r\n    if (index) result.push({type: 'text', value: '\\n'})\r\n    result.push(nodes[index])\r\n  }\r\n\r\n  if (loose && nodes.length > 0) {\r\n    result.push({type: 'text', value: '\\n'})\r\n  }\r\n\r\n  return result\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-hast/lib/state.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inlineCode\": function() { return /* binding */ inlineCode; }\n/* harmony export */ });\n/* harmony import */ var _util_pattern_compile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/pattern-compile.js */ \"./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js\");\n/**\r\n * @typedef {import('mdast').InlineCode} InlineCode\r\n * @typedef {import('../types.js').Parent} Parent\r\n * @typedef {import('../types.js').State} State\r\n */\r\n\r\n\r\n\r\ninlineCode.peek = inlineCodePeek\r\n\r\n/**\r\n * @param {InlineCode} node\r\n * @param {Parent | undefined} _\r\n * @param {State} state\r\n * @returns {string}\r\n */\r\nfunction inlineCode(node, _, state) {\r\n  let value = node.value || ''\r\n  let sequence = '`'\r\n  let index = -1\r\n\r\n  // If there is a single grave accent on its own in the code, use a fence of\r\n  // two.\r\n  // If there are two in a row, use one.\r\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\r\n    sequence += '`'\r\n  }\r\n\r\n  // If this is not just spaces or eols (tabs don’t count), and either the\r\n  // first or last character are a space, eol, or tick, then pad with spaces.\r\n  if (\r\n    /[^ \\r\\n]/.test(value) &&\r\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\r\n  ) {\r\n    value = ' ' + value + ' '\r\n  }\r\n\r\n  // We have a potential problem: certain characters after eols could result in\r\n  // blocks being seen.\r\n  // For example, if someone injected the string `'\\n# b'`, then that would\r\n  // result in an ATX heading.\r\n  // We can’t escape characters in `inlineCode`, but because eols are\r\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\r\n  // them out.\r\n  while (++index < state.unsafe.length) {\r\n    const pattern = state.unsafe[index]\r\n    const expression = (0,_util_pattern_compile_js__WEBPACK_IMPORTED_MODULE_0__.patternCompile)(pattern)\r\n    /** @type {RegExpExecArray | null} */\r\n    let match\r\n\r\n    // Only look for `atBreak`s.\r\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\r\n    // CR.\r\n    if (!pattern.atBreak) continue\r\n\r\n    while ((match = expression.exec(value))) {\r\n      let position = match.index\r\n\r\n      // Support CRLF (patterns only look for one of the characters).\r\n      if (\r\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\r\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\r\n      ) {\r\n        position--\r\n      }\r\n\r\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\r\n    }\r\n  }\r\n\r\n  return sequence + value + sequence\r\n}\r\n\r\n/**\r\n * @returns {string}\r\n */\r\nfunction inlineCodePeek() {\r\n  return '`'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvaGFuZGxlL2lubGluZS1jb2RlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDhCQUE4QjtBQUMzQyxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ3lEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsb0JBQW9CO0FBQy9CLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0VBQWM7QUFDckMsZUFBZSx3QkFBd0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvaGFuZGxlL2lubGluZS1jb2RlLmpzPzFjNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuSW5saW5lQ29kZX0gSW5saW5lQ29kZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlBhcmVudH0gUGFyZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtwYXR0ZXJuQ29tcGlsZX0gZnJvbSAnLi4vdXRpbC9wYXR0ZXJuLWNvbXBpbGUuanMnXHJcblxyXG5pbmxpbmVDb2RlLnBlZWsgPSBpbmxpbmVDb2RlUGVla1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7SW5saW5lQ29kZX0gbm9kZVxyXG4gKiBAcGFyYW0ge1BhcmVudCB8IHVuZGVmaW5lZH0gX1xyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlubGluZUNvZGUobm9kZSwgXywgc3RhdGUpIHtcclxuICBsZXQgdmFsdWUgPSBub2RlLnZhbHVlIHx8ICcnXHJcbiAgbGV0IHNlcXVlbmNlID0gJ2AnXHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgLy8gSWYgdGhlcmUgaXMgYSBzaW5nbGUgZ3JhdmUgYWNjZW50IG9uIGl0cyBvd24gaW4gdGhlIGNvZGUsIHVzZSBhIGZlbmNlIG9mXHJcbiAgLy8gdHdvLlxyXG4gIC8vIElmIHRoZXJlIGFyZSB0d28gaW4gYSByb3csIHVzZSBvbmUuXHJcbiAgd2hpbGUgKG5ldyBSZWdFeHAoJyhefFteYF0pJyArIHNlcXVlbmNlICsgJyhbXmBdfCQpJykudGVzdCh2YWx1ZSkpIHtcclxuICAgIHNlcXVlbmNlICs9ICdgJ1xyXG4gIH1cclxuXHJcbiAgLy8gSWYgdGhpcyBpcyBub3QganVzdCBzcGFjZXMgb3IgZW9scyAodGFicyBkb27igJl0IGNvdW50KSwgYW5kIGVpdGhlciB0aGVcclxuICAvLyBmaXJzdCBvciBsYXN0IGNoYXJhY3RlciBhcmUgYSBzcGFjZSwgZW9sLCBvciB0aWNrLCB0aGVuIHBhZCB3aXRoIHNwYWNlcy5cclxuICBpZiAoXHJcbiAgICAvW14gXFxyXFxuXS8udGVzdCh2YWx1ZSkgJiZcclxuICAgICgoL15bIFxcclxcbl0vLnRlc3QodmFsdWUpICYmIC9bIFxcclxcbl0kLy50ZXN0KHZhbHVlKSkgfHwgL15gfGAkLy50ZXN0KHZhbHVlKSlcclxuICApIHtcclxuICAgIHZhbHVlID0gJyAnICsgdmFsdWUgKyAnICdcclxuICB9XHJcblxyXG4gIC8vIFdlIGhhdmUgYSBwb3RlbnRpYWwgcHJvYmxlbTogY2VydGFpbiBjaGFyYWN0ZXJzIGFmdGVyIGVvbHMgY291bGQgcmVzdWx0IGluXHJcbiAgLy8gYmxvY2tzIGJlaW5nIHNlZW4uXHJcbiAgLy8gRm9yIGV4YW1wbGUsIGlmIHNvbWVvbmUgaW5qZWN0ZWQgdGhlIHN0cmluZyBgJ1xcbiMgYidgLCB0aGVuIHRoYXQgd291bGRcclxuICAvLyByZXN1bHQgaW4gYW4gQVRYIGhlYWRpbmcuXHJcbiAgLy8gV2UgY2Fu4oCZdCBlc2NhcGUgY2hhcmFjdGVycyBpbiBgaW5saW5lQ29kZWAsIGJ1dCBiZWNhdXNlIGVvbHMgYXJlXHJcbiAgLy8gdHJhbnNmb3JtZWQgdG8gc3BhY2VzIHdoZW4gZ29pbmcgZnJvbSBtYXJrZG93biB0byBIVE1MIGFueXdheSwgd2UgY2FuIHN3YXBcclxuICAvLyB0aGVtIG91dC5cclxuICB3aGlsZSAoKytpbmRleCA8IHN0YXRlLnVuc2FmZS5sZW5ndGgpIHtcclxuICAgIGNvbnN0IHBhdHRlcm4gPSBzdGF0ZS51bnNhZmVbaW5kZXhdXHJcbiAgICBjb25zdCBleHByZXNzaW9uID0gcGF0dGVybkNvbXBpbGUocGF0dGVybilcclxuICAgIC8qKiBAdHlwZSB7UmVnRXhwRXhlY0FycmF5IHwgbnVsbH0gKi9cclxuICAgIGxldCBtYXRjaFxyXG5cclxuICAgIC8vIE9ubHkgbG9vayBmb3IgYGF0QnJlYWtgcy5cclxuICAgIC8vIEJ0dzogbm90ZSB0aGF0IGBhdEJyZWFrYCBwYXR0ZXJucyB3aWxsIGFsd2F5cyBzdGFydCB0aGUgcmVnZXggYXQgTEYgb3JcclxuICAgIC8vIENSLlxyXG4gICAgaWYgKCFwYXR0ZXJuLmF0QnJlYWspIGNvbnRpbnVlXHJcblxyXG4gICAgd2hpbGUgKChtYXRjaCA9IGV4cHJlc3Npb24uZXhlYyh2YWx1ZSkpKSB7XHJcbiAgICAgIGxldCBwb3NpdGlvbiA9IG1hdGNoLmluZGV4XHJcblxyXG4gICAgICAvLyBTdXBwb3J0IENSTEYgKHBhdHRlcm5zIG9ubHkgbG9vayBmb3Igb25lIG9mIHRoZSBjaGFyYWN0ZXJzKS5cclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZhbHVlLmNoYXJDb2RlQXQocG9zaXRpb24pID09PSAxMCAvKiBgXFxuYCAqLyAmJlxyXG4gICAgICAgIHZhbHVlLmNoYXJDb2RlQXQocG9zaXRpb24gLSAxKSA9PT0gMTMgLyogYFxccmAgKi9cclxuICAgICAgKSB7XHJcbiAgICAgICAgcG9zaXRpb24tLVxyXG4gICAgICB9XHJcblxyXG4gICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDAsIHBvc2l0aW9uKSArICcgJyArIHZhbHVlLnNsaWNlKG1hdGNoLmluZGV4ICsgMSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBzZXF1ZW5jZSArIHZhbHVlICsgc2VxdWVuY2VcclxufVxyXG5cclxuLyoqXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBpbmxpbmVDb2RlUGVlaygpIHtcclxuICByZXR1cm4gJ2AnXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/handle/list-item.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/handle/list-item.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"listItem\": function() { return /* binding */ listItem; }\n/* harmony export */ });\n/* harmony import */ var _util_check_bullet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/check-bullet.js */ \"./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js\");\n/* harmony import */ var _util_check_list_item_indent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/check-list-item-indent.js */ \"./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js\");\n/**\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('../types.js').Map} Map\r\n * @typedef {import('../types.js').Parent} Parent\r\n * @typedef {import('../types.js').State} State\r\n * @typedef {import('../types.js').Info} Info\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {ListItem} node\r\n * @param {Parent | undefined} parent\r\n * @param {State} state\r\n * @param {Info} info\r\n * @returns {string}\r\n */\r\nfunction listItem(node, parent, state, info) {\r\n  const listItemIndent = (0,_util_check_list_item_indent_js__WEBPACK_IMPORTED_MODULE_0__.checkListItemIndent)(state)\r\n  let bullet = state.bulletCurrent || (0,_util_check_bullet_js__WEBPACK_IMPORTED_MODULE_1__.checkBullet)(state)\r\n\r\n  // Add the marker value for ordered lists.\r\n  if (parent && parent.type === 'list' && parent.ordered) {\r\n    bullet =\r\n      (typeof parent.start === 'number' && parent.start > -1\r\n        ? parent.start\r\n        : 1) +\r\n      (state.options.incrementListMarker === false\r\n        ? 0\r\n        : parent.children.indexOf(node)) +\r\n      bullet\r\n  }\r\n\r\n  let size = bullet.length + 1\r\n\r\n  if (\r\n    listItemIndent === 'tab' ||\r\n    (listItemIndent === 'mixed' &&\r\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\r\n  ) {\r\n    size = Math.ceil(size / 4) * 4\r\n  }\r\n\r\n  const tracker = state.createTracker(info)\r\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\r\n  tracker.shift(size)\r\n  const exit = state.enter('listItem')\r\n  const value = state.indentLines(\r\n    state.containerFlow(node, tracker.current()),\r\n    map\r\n  )\r\n  exit()\r\n\r\n  return value\r\n\r\n  /** @type {Map} */\r\n  function map(line, index, blank) {\r\n    if (index) {\r\n      return (blank ? '' : ' '.repeat(size)) + line\r\n    }\r\n\r\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvaGFuZGxlL2xpc3QtaXRlbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsMEJBQTBCO0FBQ3ZDLGFBQWEsMkJBQTJCO0FBQ3hDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDbUQ7QUFDa0I7QUFDckU7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLG9CQUFvQjtBQUMvQixXQUFXLE9BQU87QUFDbEIsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNPO0FBQ1AseUJBQXlCLG9GQUFtQjtBQUM1QyxzQ0FBc0Msa0VBQVc7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsS0FBSztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi9oYW5kbGUvbGlzdC1pdGVtLmpzPzM2YWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlzdEl0ZW19IExpc3RJdGVtXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuTWFwfSBNYXBcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5QYXJlbnR9IFBhcmVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkluZm99IEluZm9cclxuICovXHJcblxyXG5pbXBvcnQge2NoZWNrQnVsbGV0fSBmcm9tICcuLi91dGlsL2NoZWNrLWJ1bGxldC5qcydcclxuaW1wb3J0IHtjaGVja0xpc3RJdGVtSW5kZW50fSBmcm9tICcuLi91dGlsL2NoZWNrLWxpc3QtaXRlbS1pbmRlbnQuanMnXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtMaXN0SXRlbX0gbm9kZVxyXG4gKiBAcGFyYW0ge1BhcmVudCB8IHVuZGVmaW5lZH0gcGFyZW50XHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqIEBwYXJhbSB7SW5mb30gaW5mb1xyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGxpc3RJdGVtKG5vZGUsIHBhcmVudCwgc3RhdGUsIGluZm8pIHtcclxuICBjb25zdCBsaXN0SXRlbUluZGVudCA9IGNoZWNrTGlzdEl0ZW1JbmRlbnQoc3RhdGUpXHJcbiAgbGV0IGJ1bGxldCA9IHN0YXRlLmJ1bGxldEN1cnJlbnQgfHwgY2hlY2tCdWxsZXQoc3RhdGUpXHJcblxyXG4gIC8vIEFkZCB0aGUgbWFya2VyIHZhbHVlIGZvciBvcmRlcmVkIGxpc3RzLlxyXG4gIGlmIChwYXJlbnQgJiYgcGFyZW50LnR5cGUgPT09ICdsaXN0JyAmJiBwYXJlbnQub3JkZXJlZCkge1xyXG4gICAgYnVsbGV0ID1cclxuICAgICAgKHR5cGVvZiBwYXJlbnQuc3RhcnQgPT09ICdudW1iZXInICYmIHBhcmVudC5zdGFydCA+IC0xXHJcbiAgICAgICAgPyBwYXJlbnQuc3RhcnRcclxuICAgICAgICA6IDEpICtcclxuICAgICAgKHN0YXRlLm9wdGlvbnMuaW5jcmVtZW50TGlzdE1hcmtlciA9PT0gZmFsc2VcclxuICAgICAgICA/IDBcclxuICAgICAgICA6IHBhcmVudC5jaGlsZHJlbi5pbmRleE9mKG5vZGUpKSArXHJcbiAgICAgIGJ1bGxldFxyXG4gIH1cclxuXHJcbiAgbGV0IHNpemUgPSBidWxsZXQubGVuZ3RoICsgMVxyXG5cclxuICBpZiAoXHJcbiAgICBsaXN0SXRlbUluZGVudCA9PT0gJ3RhYicgfHxcclxuICAgIChsaXN0SXRlbUluZGVudCA9PT0gJ21peGVkJyAmJlxyXG4gICAgICAoKHBhcmVudCAmJiBwYXJlbnQudHlwZSA9PT0gJ2xpc3QnICYmIHBhcmVudC5zcHJlYWQpIHx8IG5vZGUuc3ByZWFkKSlcclxuICApIHtcclxuICAgIHNpemUgPSBNYXRoLmNlaWwoc2l6ZSAvIDQpICogNFxyXG4gIH1cclxuXHJcbiAgY29uc3QgdHJhY2tlciA9IHN0YXRlLmNyZWF0ZVRyYWNrZXIoaW5mbylcclxuICB0cmFja2VyLm1vdmUoYnVsbGV0ICsgJyAnLnJlcGVhdChzaXplIC0gYnVsbGV0Lmxlbmd0aCkpXHJcbiAgdHJhY2tlci5zaGlmdChzaXplKVxyXG4gIGNvbnN0IGV4aXQgPSBzdGF0ZS5lbnRlcignbGlzdEl0ZW0nKVxyXG4gIGNvbnN0IHZhbHVlID0gc3RhdGUuaW5kZW50TGluZXMoXHJcbiAgICBzdGF0ZS5jb250YWluZXJGbG93KG5vZGUsIHRyYWNrZXIuY3VycmVudCgpKSxcclxuICAgIG1hcFxyXG4gIClcclxuICBleGl0KClcclxuXHJcbiAgcmV0dXJuIHZhbHVlXHJcblxyXG4gIC8qKiBAdHlwZSB7TWFwfSAqL1xyXG4gIGZ1bmN0aW9uIG1hcChsaW5lLCBpbmRleCwgYmxhbmspIHtcclxuICAgIGlmIChpbmRleCkge1xyXG4gICAgICByZXR1cm4gKGJsYW5rID8gJycgOiAnICcucmVwZWF0KHNpemUpKSArIGxpbmVcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKGJsYW5rID8gYnVsbGV0IDogYnVsbGV0ICsgJyAnLnJlcGVhdChzaXplIC0gYnVsbGV0Lmxlbmd0aCkpICsgbGluZVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/handle/list-item.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/association.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/association.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"association\": function() { return /* binding */ association; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_decode_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-decode-string */ \"./node_modules/micromark-util-decode-string/dev/index.js\");\n/**\r\n * @typedef {import('../types.js').AssociationId} AssociationId\r\n */\r\n\r\n\r\n\r\n/**\r\n * Get an identifier from an association to match it to others.\r\n *\r\n * Associations are nodes that match to something else through an ID:\r\n * <https://github.com/syntax-tree/mdast#association>.\r\n *\r\n * The `label` of an association is the string value: character escapes and\r\n * references work, and casing is intact.\r\n * The `identifier` is used to match one association to another:\r\n * controversially, character escapes and references don’t work in this\r\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\r\n *\r\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\r\n * matches `a b`.\r\n * So, we do prefer the label when figuring out how we’re going to serialize:\r\n * it has whitespace, casing, and we can ignore most useless character\r\n * escapes and all character references.\r\n *\r\n * @type {AssociationId}\r\n */\r\nfunction association(node) {\r\n  if (node.label || !node.identifier) {\r\n    return node.label || ''\r\n  }\r\n\r\n  return (0,micromark_util_decode_string__WEBPACK_IMPORTED_MODULE_0__.decodeString)(node.identifier)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9hc3NvY2lhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQTtBQUN5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMEVBQVk7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8tbWFya2Rvd24vbGliL3V0aWwvYXNzb2NpYXRpb24uanM/OTBjNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5Bc3NvY2lhdGlvbklkfSBBc3NvY2lhdGlvbklkXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtkZWNvZGVTdHJpbmd9IGZyb20gJ21pY3JvbWFyay11dGlsLWRlY29kZS1zdHJpbmcnXHJcblxyXG4vKipcclxuICogR2V0IGFuIGlkZW50aWZpZXIgZnJvbSBhbiBhc3NvY2lhdGlvbiB0byBtYXRjaCBpdCB0byBvdGhlcnMuXHJcbiAqXHJcbiAqIEFzc29jaWF0aW9ucyBhcmUgbm9kZXMgdGhhdCBtYXRjaCB0byBzb21ldGhpbmcgZWxzZSB0aHJvdWdoIGFuIElEOlxyXG4gKiA8aHR0cHM6Ly9naXRodWIuY29tL3N5bnRheC10cmVlL21kYXN0I2Fzc29jaWF0aW9uPi5cclxuICpcclxuICogVGhlIGBsYWJlbGAgb2YgYW4gYXNzb2NpYXRpb24gaXMgdGhlIHN0cmluZyB2YWx1ZTogY2hhcmFjdGVyIGVzY2FwZXMgYW5kXHJcbiAqIHJlZmVyZW5jZXMgd29yaywgYW5kIGNhc2luZyBpcyBpbnRhY3QuXHJcbiAqIFRoZSBgaWRlbnRpZmllcmAgaXMgdXNlZCB0byBtYXRjaCBvbmUgYXNzb2NpYXRpb24gdG8gYW5vdGhlcjpcclxuICogY29udHJvdmVyc2lhbGx5LCBjaGFyYWN0ZXIgZXNjYXBlcyBhbmQgcmVmZXJlbmNlcyBkb27igJl0IHdvcmsgaW4gdGhpc1xyXG4gKiBtYXRjaGluZzogYCZjb3B5O2AgZG9lcyBub3QgbWF0Y2ggYMKpYCwgYW5kIGBcXCtgIGRvZXMgbm90IG1hdGNoIGArYC5cclxuICpcclxuICogQnV0IGNhc2luZyBpcyBpZ25vcmVkIChhbmQgd2hpdGVzcGFjZSkgaXMgdHJpbW1lZCBhbmQgY29sbGFwc2VkOiBgIEFcXG5iYFxyXG4gKiBtYXRjaGVzIGBhIGJgLlxyXG4gKiBTbywgd2UgZG8gcHJlZmVyIHRoZSBsYWJlbCB3aGVuIGZpZ3VyaW5nIG91dCBob3cgd2XigJlyZSBnb2luZyB0byBzZXJpYWxpemU6XHJcbiAqIGl0IGhhcyB3aGl0ZXNwYWNlLCBjYXNpbmcsIGFuZCB3ZSBjYW4gaWdub3JlIG1vc3QgdXNlbGVzcyBjaGFyYWN0ZXJcclxuICogZXNjYXBlcyBhbmQgYWxsIGNoYXJhY3RlciByZWZlcmVuY2VzLlxyXG4gKlxyXG4gKiBAdHlwZSB7QXNzb2NpYXRpb25JZH1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhc3NvY2lhdGlvbihub2RlKSB7XHJcbiAgaWYgKG5vZGUubGFiZWwgfHwgIW5vZGUuaWRlbnRpZmllcikge1xyXG4gICAgcmV0dXJuIG5vZGUubGFiZWwgfHwgJydcclxuICB9XHJcblxyXG4gIHJldHVybiBkZWNvZGVTdHJpbmcobm9kZS5pZGVudGlmaWVyKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/association.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkBullet\": function() { return /* binding */ checkBullet; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').State} State\r\n * @typedef {import('../types.js').Options} Options\r\n */\r\n\r\n/**\r\n * @param {State} state\r\n * @returns {Exclude<Options['bullet'], null | undefined>}\r\n */\r\nfunction checkBullet(state) {\r\n  const marker = state.options.bullet || '*'\r\n\r\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\r\n    throw new Error(\r\n      'Cannot serialize items with `' +\r\n        marker +\r\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\r\n    )\r\n  }\r\n\r\n  return marker\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jaGVjay1idWxsZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUMsYUFBYSwrQkFBK0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi91dGlsL2NoZWNrLWJ1bGxldC5qcz85NzE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLk9wdGlvbnN9IE9wdGlvbnNcclxuICovXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcclxuICogQHJldHVybnMge0V4Y2x1ZGU8T3B0aW9uc1snYnVsbGV0J10sIG51bGwgfCB1bmRlZmluZWQ+fVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrQnVsbGV0KHN0YXRlKSB7XHJcbiAgY29uc3QgbWFya2VyID0gc3RhdGUub3B0aW9ucy5idWxsZXQgfHwgJyonXHJcblxyXG4gIGlmIChtYXJrZXIgIT09ICcqJyAmJiBtYXJrZXIgIT09ICcrJyAmJiBtYXJrZXIgIT09ICctJykge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAnQ2Fubm90IHNlcmlhbGl6ZSBpdGVtcyB3aXRoIGAnICtcclxuICAgICAgICBtYXJrZXIgK1xyXG4gICAgICAgICdgIGZvciBgb3B0aW9ucy5idWxsZXRgLCBleHBlY3RlZCBgKmAsIGArYCwgb3IgYC1gJ1xyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1hcmtlclxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkListItemIndent\": function() { return /* binding */ checkListItemIndent; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').State} State\r\n * @typedef {import('../types.js').Options} Options\r\n */\r\n\r\n/**\r\n * @param {State} state\r\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\r\n */\r\nfunction checkListItemIndent(state) {\r\n  const style = state.options.listItemIndent || 'tab'\r\n\r\n  // To do: remove in a major.\r\n  // @ts-expect-error: deprecated.\r\n  if (style === 1 || style === '1') {\r\n    return 'one'\r\n  }\r\n\r\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\r\n    throw new Error(\r\n      'Cannot serialize items with `' +\r\n        style +\r\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\r\n    )\r\n  }\r\n\r\n  return style\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jaGVjay1saXN0LWl0ZW0taW5kZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsK0JBQStCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jaGVjay1saXN0LWl0ZW0taW5kZW50LmpzP2IxYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuT3B0aW9uc30gT3B0aW9uc1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiBAcmV0dXJucyB7RXhjbHVkZTxPcHRpb25zWydsaXN0SXRlbUluZGVudCddLCBudWxsIHwgdW5kZWZpbmVkPn1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjaGVja0xpc3RJdGVtSW5kZW50KHN0YXRlKSB7XHJcbiAgY29uc3Qgc3R5bGUgPSBzdGF0ZS5vcHRpb25zLmxpc3RJdGVtSW5kZW50IHx8ICd0YWInXHJcblxyXG4gIC8vIFRvIGRvOiByZW1vdmUgaW4gYSBtYWpvci5cclxuICAvLyBAdHMtZXhwZWN0LWVycm9yOiBkZXByZWNhdGVkLlxyXG4gIGlmIChzdHlsZSA9PT0gMSB8fCBzdHlsZSA9PT0gJzEnKSB7XHJcbiAgICByZXR1cm4gJ29uZSdcclxuICB9XHJcblxyXG4gIGlmIChzdHlsZSAhPT0gJ3RhYicgJiYgc3R5bGUgIT09ICdvbmUnICYmIHN0eWxlICE9PSAnbWl4ZWQnKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICdDYW5ub3Qgc2VyaWFsaXplIGl0ZW1zIHdpdGggYCcgK1xyXG4gICAgICAgIHN0eWxlICtcclxuICAgICAgICAnYCBmb3IgYG9wdGlvbnMubGlzdEl0ZW1JbmRlbnRgLCBleHBlY3RlZCBgdGFiYCwgYG9uZWAsIG9yIGBtaXhlZGAnXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICByZXR1cm4gc3R5bGVcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/container-flow.js":
/*!************************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/container-flow.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"containerFlow\": function() { return /* binding */ containerFlow; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').FlowContent} FlowContent\r\n * @typedef {import('../types.js').Node} Node\r\n * @typedef {import('../types.js').Parent} Parent\r\n * @typedef {import('../types.js').State} State\r\n * @typedef {import('../types.js').TrackFields} TrackFields\r\n */\r\n\r\n/**\r\n * @param {Parent & {children: Array<FlowContent>}} parent\r\n *   Parent of flow nodes.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {TrackFields} info\r\n *   Info on where we are in the document we are generating.\r\n * @returns {string}\r\n *   Serialized children, joined by (blank) lines.\r\n */\r\nfunction containerFlow(parent, state, info) {\r\n  const indexStack = state.indexStack\r\n  const children = parent.children || []\r\n  const tracker = state.createTracker(info)\r\n  /** @type {Array<string>} */\r\n  const results = []\r\n  let index = -1\r\n\r\n  indexStack.push(-1)\r\n\r\n  while (++index < children.length) {\r\n    const child = children[index]\r\n\r\n    indexStack[indexStack.length - 1] = index\r\n\r\n    results.push(\r\n      tracker.move(\r\n        state.handle(child, parent, state, {\r\n          before: '\\n',\r\n          after: '\\n',\r\n          ...tracker.current()\r\n        })\r\n      )\r\n    )\r\n\r\n    if (child.type !== 'list') {\r\n      state.bulletLastUsed = undefined\r\n    }\r\n\r\n    if (index < children.length - 1) {\r\n      results.push(\r\n        tracker.move(between(child, children[index + 1], parent, state))\r\n      )\r\n    }\r\n  }\r\n\r\n  indexStack.pop()\r\n\r\n  return results.join('')\r\n}\r\n\r\n/**\r\n * @param {Node} left\r\n * @param {Node} right\r\n * @param {Parent} parent\r\n * @param {State} state\r\n * @returns {string}\r\n */\r\nfunction between(left, right, parent, state) {\r\n  let index = state.join.length\r\n\r\n  while (index--) {\r\n    const result = state.join[index](left, right, parent, state)\r\n\r\n    if (result === true || result === 1) {\r\n      break\r\n    }\r\n\r\n    if (typeof result === 'number') {\r\n      return '\\n'.repeat(1 + result)\r\n    }\r\n\r\n    if (result === false) {\r\n      return '\\n\\n<!---->\\n\\n'\r\n    }\r\n  }\r\n\r\n  return '\\n\\n'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jb250YWluZXItZmxvdy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLDRCQUE0QjtBQUN6QyxhQUFhLDhCQUE4QjtBQUMzQyxhQUFhLDZCQUE2QjtBQUMxQyxhQUFhLG1DQUFtQztBQUNoRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVUsK0JBQStCO0FBQ3BEO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsTUFBTTtBQUNqQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jb250YWluZXItZmxvdy5qcz9kMzhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkZsb3dDb250ZW50fSBGbG93Q29udGVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLk5vZGV9IE5vZGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5QYXJlbnR9IFBhcmVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlRyYWNrRmllbGRzfSBUcmFja0ZpZWxkc1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1BhcmVudCAmIHtjaGlsZHJlbjogQXJyYXk8Rmxvd0NvbnRlbnQ+fX0gcGFyZW50XHJcbiAqICAgUGFyZW50IG9mIGZsb3cgbm9kZXMuXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxyXG4gKiBAcGFyYW0ge1RyYWNrRmllbGRzfSBpbmZvXHJcbiAqICAgSW5mbyBvbiB3aGVyZSB3ZSBhcmUgaW4gdGhlIGRvY3VtZW50IHdlIGFyZSBnZW5lcmF0aW5nLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIFNlcmlhbGl6ZWQgY2hpbGRyZW4sIGpvaW5lZCBieSAoYmxhbmspIGxpbmVzLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbnRhaW5lckZsb3cocGFyZW50LCBzdGF0ZSwgaW5mbykge1xyXG4gIGNvbnN0IGluZGV4U3RhY2sgPSBzdGF0ZS5pbmRleFN0YWNrXHJcbiAgY29uc3QgY2hpbGRyZW4gPSBwYXJlbnQuY2hpbGRyZW4gfHwgW11cclxuICBjb25zdCB0cmFja2VyID0gc3RhdGUuY3JlYXRlVHJhY2tlcihpbmZvKVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn0gKi9cclxuICBjb25zdCByZXN1bHRzID0gW11cclxuICBsZXQgaW5kZXggPSAtMVxyXG5cclxuICBpbmRleFN0YWNrLnB1c2goLTEpXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBjaGlsZCA9IGNoaWxkcmVuW2luZGV4XVxyXG5cclxuICAgIGluZGV4U3RhY2tbaW5kZXhTdGFjay5sZW5ndGggLSAxXSA9IGluZGV4XHJcblxyXG4gICAgcmVzdWx0cy5wdXNoKFxyXG4gICAgICB0cmFja2VyLm1vdmUoXHJcbiAgICAgICAgc3RhdGUuaGFuZGxlKGNoaWxkLCBwYXJlbnQsIHN0YXRlLCB7XHJcbiAgICAgICAgICBiZWZvcmU6ICdcXG4nLFxyXG4gICAgICAgICAgYWZ0ZXI6ICdcXG4nLFxyXG4gICAgICAgICAgLi4udHJhY2tlci5jdXJyZW50KClcclxuICAgICAgICB9KVxyXG4gICAgICApXHJcbiAgICApXHJcblxyXG4gICAgaWYgKGNoaWxkLnR5cGUgIT09ICdsaXN0Jykge1xyXG4gICAgICBzdGF0ZS5idWxsZXRMYXN0VXNlZCA9IHVuZGVmaW5lZFxyXG4gICAgfVxyXG5cclxuICAgIGlmIChpbmRleCA8IGNoaWxkcmVuLmxlbmd0aCAtIDEpIHtcclxuICAgICAgcmVzdWx0cy5wdXNoKFxyXG4gICAgICAgIHRyYWNrZXIubW92ZShiZXR3ZWVuKGNoaWxkLCBjaGlsZHJlbltpbmRleCArIDFdLCBwYXJlbnQsIHN0YXRlKSlcclxuICAgICAgKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW5kZXhTdGFjay5wb3AoKVxyXG5cclxuICByZXR1cm4gcmVzdWx0cy5qb2luKCcnKVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtOb2RlfSBsZWZ0XHJcbiAqIEBwYXJhbSB7Tm9kZX0gcmlnaHRcclxuICogQHBhcmFtIHtQYXJlbnR9IHBhcmVudFxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gYmV0d2VlbihsZWZ0LCByaWdodCwgcGFyZW50LCBzdGF0ZSkge1xyXG4gIGxldCBpbmRleCA9IHN0YXRlLmpvaW4ubGVuZ3RoXHJcblxyXG4gIHdoaWxlIChpbmRleC0tKSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBzdGF0ZS5qb2luW2luZGV4XShsZWZ0LCByaWdodCwgcGFyZW50LCBzdGF0ZSlcclxuXHJcbiAgICBpZiAocmVzdWx0ID09PSB0cnVlIHx8IHJlc3VsdCA9PT0gMSkge1xyXG4gICAgICBicmVha1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnbnVtYmVyJykge1xyXG4gICAgICByZXR1cm4gJ1xcbicucmVwZWF0KDEgKyByZXN1bHQpXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIHtcclxuICAgICAgcmV0dXJuICdcXG5cXG48IS0tLS0+XFxuXFxuJ1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuICdcXG5cXG4nXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/container-flow.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"containerPhrasing\": function() { return /* binding */ containerPhrasing; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').Handle} Handle\r\n * @typedef {import('../types.js').Info} Info\r\n * @typedef {import('../types.js').Parent} Parent\r\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\r\n * @typedef {import('../types.js').State} State\r\n */\r\n\r\n/**\r\n * Serialize the children of a parent that contains phrasing children.\r\n *\r\n * These children will be joined flush together.\r\n *\r\n * @param {Parent & {children: Array<PhrasingContent>}} parent\r\n *   Parent of flow nodes.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Info} info\r\n *   Info on where we are in the document we are generating.\r\n * @returns {string}\r\n *   Serialized children, joined together.\r\n */\r\nfunction containerPhrasing(parent, state, info) {\r\n  const indexStack = state.indexStack\r\n  const children = parent.children || []\r\n  /** @type {Array<string>} */\r\n  const results = []\r\n  let index = -1\r\n  let before = info.before\r\n\r\n  indexStack.push(-1)\r\n  let tracker = state.createTracker(info)\r\n\r\n  while (++index < children.length) {\r\n    const child = children[index]\r\n    /** @type {string} */\r\n    let after\r\n\r\n    indexStack[indexStack.length - 1] = index\r\n\r\n    if (index + 1 < children.length) {\r\n      /** @type {Handle} */\r\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\r\n      let handle = state.handle.handlers[children[index + 1].type]\r\n      /** @type {Handle} */\r\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\r\n      if (handle && handle.peek) handle = handle.peek\r\n      after = handle\r\n        ? handle(children[index + 1], parent, state, {\r\n            before: '',\r\n            after: '',\r\n            ...tracker.current()\r\n          }).charAt(0)\r\n        : ''\r\n    } else {\r\n      after = info.after\r\n    }\r\n\r\n    // In some cases, html (text) can be found in phrasing right after an eol.\r\n    // When we’d serialize that, in most cases that would be seen as html\r\n    // (flow).\r\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\r\n    // reasonable approach: replace that eol with a space.\r\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\r\n    if (\r\n      results.length > 0 &&\r\n      (before === '\\r' || before === '\\n') &&\r\n      child.type === 'html'\r\n    ) {\r\n      results[results.length - 1] = results[results.length - 1].replace(\r\n        /(\\r?\\n|\\r)$/,\r\n        ' '\r\n      )\r\n      before = ' '\r\n\r\n      // To do: does this work to reset tracker?\r\n      tracker = state.createTracker(info)\r\n      tracker.move(results.join(''))\r\n    }\r\n\r\n    results.push(\r\n      tracker.move(\r\n        state.handle(child, parent, state, {\r\n          ...tracker.current(),\r\n          before,\r\n          after\r\n        })\r\n      )\r\n    )\r\n\r\n    before = results[results.length - 1].slice(-1)\r\n  }\r\n\r\n  indexStack.pop()\r\n\r\n  return results.join('')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9jb250YWluZXItcGhyYXNpbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0MsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSw4QkFBOEI7QUFDM0MsYUFBYSx1Q0FBdUM7QUFDcEQsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVUsbUNBQW1DO0FBQ3hEO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8tbWFya2Rvd24vbGliL3V0aWwvY29udGFpbmVyLXBocmFzaW5nLmpzPzkyNmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuSGFuZGxlfSBIYW5kbGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5JbmZvfSBJbmZvXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuUGFyZW50fSBQYXJlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5QaHJhc2luZ0NvbnRlbnR9IFBocmFzaW5nQ29udGVudFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBTZXJpYWxpemUgdGhlIGNoaWxkcmVuIG9mIGEgcGFyZW50IHRoYXQgY29udGFpbnMgcGhyYXNpbmcgY2hpbGRyZW4uXHJcbiAqXHJcbiAqIFRoZXNlIGNoaWxkcmVuIHdpbGwgYmUgam9pbmVkIGZsdXNoIHRvZ2V0aGVyLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1BhcmVudCAmIHtjaGlsZHJlbjogQXJyYXk8UGhyYXNpbmdDb250ZW50Pn19IHBhcmVudFxyXG4gKiAgIFBhcmVudCBvZiBmbG93IG5vZGVzLlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxyXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cclxuICogQHBhcmFtIHtJbmZvfSBpbmZvXHJcbiAqICAgSW5mbyBvbiB3aGVyZSB3ZSBhcmUgaW4gdGhlIGRvY3VtZW50IHdlIGFyZSBnZW5lcmF0aW5nLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIFNlcmlhbGl6ZWQgY2hpbGRyZW4sIGpvaW5lZCB0b2dldGhlci5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjb250YWluZXJQaHJhc2luZyhwYXJlbnQsIHN0YXRlLCBpbmZvKSB7XHJcbiAgY29uc3QgaW5kZXhTdGFjayA9IHN0YXRlLmluZGV4U3RhY2tcclxuICBjb25zdCBjaGlsZHJlbiA9IHBhcmVudC5jaGlsZHJlbiB8fCBbXVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn0gKi9cclxuICBjb25zdCByZXN1bHRzID0gW11cclxuICBsZXQgaW5kZXggPSAtMVxyXG4gIGxldCBiZWZvcmUgPSBpbmZvLmJlZm9yZVxyXG5cclxuICBpbmRleFN0YWNrLnB1c2goLTEpXHJcbiAgbGV0IHRyYWNrZXIgPSBzdGF0ZS5jcmVhdGVUcmFja2VyKGluZm8pXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBjaGlsZCA9IGNoaWxkcmVuW2luZGV4XVxyXG4gICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXHJcbiAgICBsZXQgYWZ0ZXJcclxuXHJcbiAgICBpbmRleFN0YWNrW2luZGV4U3RhY2subGVuZ3RoIC0gMV0gPSBpbmRleFxyXG5cclxuICAgIGlmIChpbmRleCArIDEgPCBjaGlsZHJlbi5sZW5ndGgpIHtcclxuICAgICAgLyoqIEB0eXBlIHtIYW5kbGV9ICovXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGh1c2gsIGl04oCZcyBhY3R1YWxseSBhIGB6d2l0Y2hgLlxyXG4gICAgICBsZXQgaGFuZGxlID0gc3RhdGUuaGFuZGxlLmhhbmRsZXJzW2NoaWxkcmVuW2luZGV4ICsgMV0udHlwZV1cclxuICAgICAgLyoqIEB0eXBlIHtIYW5kbGV9ICovXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGh1c2gsIGl04oCZcyBhY3R1YWxseSBhIGB6d2l0Y2hgLlxyXG4gICAgICBpZiAoaGFuZGxlICYmIGhhbmRsZS5wZWVrKSBoYW5kbGUgPSBoYW5kbGUucGVla1xyXG4gICAgICBhZnRlciA9IGhhbmRsZVxyXG4gICAgICAgID8gaGFuZGxlKGNoaWxkcmVuW2luZGV4ICsgMV0sIHBhcmVudCwgc3RhdGUsIHtcclxuICAgICAgICAgICAgYmVmb3JlOiAnJyxcclxuICAgICAgICAgICAgYWZ0ZXI6ICcnLFxyXG4gICAgICAgICAgICAuLi50cmFja2VyLmN1cnJlbnQoKVxyXG4gICAgICAgICAgfSkuY2hhckF0KDApXHJcbiAgICAgICAgOiAnJ1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYWZ0ZXIgPSBpbmZvLmFmdGVyXHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW4gc29tZSBjYXNlcywgaHRtbCAodGV4dCkgY2FuIGJlIGZvdW5kIGluIHBocmFzaW5nIHJpZ2h0IGFmdGVyIGFuIGVvbC5cclxuICAgIC8vIFdoZW4gd2XigJlkIHNlcmlhbGl6ZSB0aGF0LCBpbiBtb3N0IGNhc2VzIHRoYXQgd291bGQgYmUgc2VlbiBhcyBodG1sXHJcbiAgICAvLyAoZmxvdykuXHJcbiAgICAvLyBBcyB3ZSBjYW7igJl0IGVzY2FwZSBvciBzbyB0byBwcmV2ZW50IGl0IGZyb20gaGFwcGVuaW5nLCB3ZSB0YWtlIGEgc29tZXdoYXRcclxuICAgIC8vIHJlYXNvbmFibGUgYXBwcm9hY2g6IHJlcGxhY2UgdGhhdCBlb2wgd2l0aCBhIHNwYWNlLlxyXG4gICAgLy8gU2VlOiA8aHR0cHM6Ly9naXRodWIuY29tL3N5bnRheC10cmVlL21kYXN0LXV0aWwtdG8tbWFya2Rvd24vaXNzdWVzLzE1PlxyXG4gICAgaWYgKFxyXG4gICAgICByZXN1bHRzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgKGJlZm9yZSA9PT0gJ1xccicgfHwgYmVmb3JlID09PSAnXFxuJykgJiZcclxuICAgICAgY2hpbGQudHlwZSA9PT0gJ2h0bWwnXHJcbiAgICApIHtcclxuICAgICAgcmVzdWx0c1tyZXN1bHRzLmxlbmd0aCAtIDFdID0gcmVzdWx0c1tyZXN1bHRzLmxlbmd0aCAtIDFdLnJlcGxhY2UoXHJcbiAgICAgICAgLyhcXHI/XFxufFxccikkLyxcclxuICAgICAgICAnICdcclxuICAgICAgKVxyXG4gICAgICBiZWZvcmUgPSAnICdcclxuXHJcbiAgICAgIC8vIFRvIGRvOiBkb2VzIHRoaXMgd29yayB0byByZXNldCB0cmFja2VyP1xyXG4gICAgICB0cmFja2VyID0gc3RhdGUuY3JlYXRlVHJhY2tlcihpbmZvKVxyXG4gICAgICB0cmFja2VyLm1vdmUocmVzdWx0cy5qb2luKCcnKSlcclxuICAgIH1cclxuXHJcbiAgICByZXN1bHRzLnB1c2goXHJcbiAgICAgIHRyYWNrZXIubW92ZShcclxuICAgICAgICBzdGF0ZS5oYW5kbGUoY2hpbGQsIHBhcmVudCwgc3RhdGUsIHtcclxuICAgICAgICAgIC4uLnRyYWNrZXIuY3VycmVudCgpLFxyXG4gICAgICAgICAgYmVmb3JlLFxyXG4gICAgICAgICAgYWZ0ZXJcclxuICAgICAgICB9KVxyXG4gICAgICApXHJcbiAgICApXHJcblxyXG4gICAgYmVmb3JlID0gcmVzdWx0c1tyZXN1bHRzLmxlbmd0aCAtIDFdLnNsaWNlKC0xKVxyXG4gIH1cclxuXHJcbiAgaW5kZXhTdGFjay5wb3AoKVxyXG5cclxuICByZXR1cm4gcmVzdWx0cy5qb2luKCcnKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"indentLines\": function() { return /* binding */ indentLines; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').IndentLines} IndentLines\r\n */\r\n\r\nconst eol = /\\r?\\n|\\r/g\r\n\r\n/**\r\n * @type {IndentLines}\r\n */\r\nfunction indentLines(value, map) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  let start = 0\r\n  let line = 0\r\n  /** @type {RegExpExecArray | null} */\r\n  let match\r\n\r\n  while ((match = eol.exec(value))) {\r\n    one(value.slice(start, match.index))\r\n    result.push(match[0])\r\n    start = match.index + match[0].length\r\n    line++\r\n  }\r\n\r\n  one(value.slice(start))\r\n\r\n  return result.join('')\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  function one(value) {\r\n    result.push(map(value, line, !value))\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9pbmRlbnQtbGluZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1AsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9pbmRlbnQtbGluZXMuanM/ZTdkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5JbmRlbnRMaW5lc30gSW5kZW50TGluZXNcclxuICovXHJcblxyXG5jb25zdCBlb2wgPSAvXFxyP1xcbnxcXHIvZ1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlIHtJbmRlbnRMaW5lc31cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpbmRlbnRMaW5lcyh2YWx1ZSwgbWFwKSB7XHJcbiAgLyoqIEB0eXBlIHtBcnJheTxzdHJpbmc+fSAqL1xyXG4gIGNvbnN0IHJlc3VsdCA9IFtdXHJcbiAgbGV0IHN0YXJ0ID0gMFxyXG4gIGxldCBsaW5lID0gMFxyXG4gIC8qKiBAdHlwZSB7UmVnRXhwRXhlY0FycmF5IHwgbnVsbH0gKi9cclxuICBsZXQgbWF0Y2hcclxuXHJcbiAgd2hpbGUgKChtYXRjaCA9IGVvbC5leGVjKHZhbHVlKSkpIHtcclxuICAgIG9uZSh2YWx1ZS5zbGljZShzdGFydCwgbWF0Y2guaW5kZXgpKVxyXG4gICAgcmVzdWx0LnB1c2gobWF0Y2hbMF0pXHJcbiAgICBzdGFydCA9IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoXHJcbiAgICBsaW5lKytcclxuICB9XHJcblxyXG4gIG9uZSh2YWx1ZS5zbGljZShzdGFydCkpXHJcblxyXG4gIHJldHVybiByZXN1bHQuam9pbignJylcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gb25lKHZhbHVlKSB7XHJcbiAgICByZXN1bHQucHVzaChtYXAodmFsdWUsIGxpbmUsICF2YWx1ZSkpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"patternCompile\": function() { return /* binding */ patternCompile; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').Unsafe} Unsafe\r\n */\r\n\r\n/**\r\n * @param {Unsafe} pattern\r\n * @returns {RegExp}\r\n */\r\nfunction patternCompile(pattern) {\r\n  if (!pattern._compiled) {\r\n    const before =\r\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\r\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\r\n\r\n    pattern._compiled = new RegExp(\r\n      (before ? '(' + before + ')' : '') +\r\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\r\n        pattern.character +\r\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\r\n      'g'\r\n    )\r\n  }\r\n\r\n  return pattern._compiled\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9wYXR0ZXJuLWNvbXBpbGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9wYXR0ZXJuLWNvbXBpbGUuanM/NTMxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5VbnNhZmV9IFVuc2FmZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1Vuc2FmZX0gcGF0dGVyblxyXG4gKiBAcmV0dXJucyB7UmVnRXhwfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBhdHRlcm5Db21waWxlKHBhdHRlcm4pIHtcclxuICBpZiAoIXBhdHRlcm4uX2NvbXBpbGVkKSB7XHJcbiAgICBjb25zdCBiZWZvcmUgPVxyXG4gICAgICAocGF0dGVybi5hdEJyZWFrID8gJ1tcXFxcclxcXFxuXVtcXFxcdCBdKicgOiAnJykgK1xyXG4gICAgICAocGF0dGVybi5iZWZvcmUgPyAnKD86JyArIHBhdHRlcm4uYmVmb3JlICsgJyknIDogJycpXHJcblxyXG4gICAgcGF0dGVybi5fY29tcGlsZWQgPSBuZXcgUmVnRXhwKFxyXG4gICAgICAoYmVmb3JlID8gJygnICsgYmVmb3JlICsgJyknIDogJycpICtcclxuICAgICAgICAoL1t8XFxcXHt9KClbXFxdXiQrKj8uLV0vLnRlc3QocGF0dGVybi5jaGFyYWN0ZXIpID8gJ1xcXFwnIDogJycpICtcclxuICAgICAgICBwYXR0ZXJuLmNoYXJhY3RlciArXHJcbiAgICAgICAgKHBhdHRlcm4uYWZ0ZXIgPyAnKD86JyArIHBhdHRlcm4uYWZ0ZXIgKyAnKScgOiAnJyksXHJcbiAgICAgICdnJ1xyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHBhdHRlcm4uX2NvbXBpbGVkXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"patternInScope\": function() { return /* binding */ patternInScope; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').Unsafe} Unsafe\r\n * @typedef {import('../types.js').ConstructName} ConstructName\r\n */\r\n\r\n/**\r\n * @param {Array<ConstructName>} stack\r\n * @param {Unsafe} pattern\r\n * @returns {boolean}\r\n */\r\nfunction patternInScope(stack, pattern) {\r\n  return (\r\n    listInScope(stack, pattern.inConstruct, true) &&\r\n    !listInScope(stack, pattern.notInConstruct, false)\r\n  )\r\n}\r\n\r\n/**\r\n * @param {Array<ConstructName>} stack\r\n * @param {Unsafe['inConstruct']} list\r\n * @param {boolean} none\r\n * @returns {boolean}\r\n */\r\nfunction listInScope(stack, list, none) {\r\n  if (typeof list === 'string') {\r\n    list = [list]\r\n  }\r\n\r\n  if (!list || list.length === 0) {\r\n    return none\r\n  }\r\n\r\n  let index = -1\r\n\r\n  while (++index < list.length) {\r\n    if (stack.includes(list[index])) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9wYXR0ZXJuLWluLXNjb3BlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEscUNBQXFDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi91dGlsL3BhdHRlcm4taW4tc2NvcGUuanM/NDBjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5VbnNhZmV9IFVuc2FmZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLkNvbnN0cnVjdE5hbWV9IENvbnN0cnVjdE5hbWVcclxuICovXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtBcnJheTxDb25zdHJ1Y3ROYW1lPn0gc3RhY2tcclxuICogQHBhcmFtIHtVbnNhZmV9IHBhdHRlcm5cclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcGF0dGVybkluU2NvcGUoc3RhY2ssIHBhdHRlcm4pIHtcclxuICByZXR1cm4gKFxyXG4gICAgbGlzdEluU2NvcGUoc3RhY2ssIHBhdHRlcm4uaW5Db25zdHJ1Y3QsIHRydWUpICYmXHJcbiAgICAhbGlzdEluU2NvcGUoc3RhY2ssIHBhdHRlcm4ubm90SW5Db25zdHJ1Y3QsIGZhbHNlKVxyXG4gIClcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7QXJyYXk8Q29uc3RydWN0TmFtZT59IHN0YWNrXHJcbiAqIEBwYXJhbSB7VW5zYWZlWydpbkNvbnN0cnVjdCddfSBsaXN0XHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gbm9uZVxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIGxpc3RJblNjb3BlKHN0YWNrLCBsaXN0LCBub25lKSB7XHJcbiAgaWYgKHR5cGVvZiBsaXN0ID09PSAnc3RyaW5nJykge1xyXG4gICAgbGlzdCA9IFtsaXN0XVxyXG4gIH1cclxuXHJcbiAgaWYgKCFsaXN0IHx8IGxpc3QubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gbm9uZVxyXG4gIH1cclxuXHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBsaXN0Lmxlbmd0aCkge1xyXG4gICAgaWYgKHN0YWNrLmluY2x1ZGVzKGxpc3RbaW5kZXhdKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZhbHNlXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/safe.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/safe.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"safe\": function() { return /* binding */ safe; }\n/* harmony export */ });\n/* harmony import */ var _pattern_compile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pattern-compile.js */ \"./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js\");\n/* harmony import */ var _pattern_in_scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pattern-in-scope.js */ \"./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js\");\n/**\r\n * @typedef {import('../types.js').State} State\r\n * @typedef {import('../types.js').SafeConfig} SafeConfig\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Make a string safe for embedding in markdown constructs.\r\n *\r\n * In markdown, almost all punctuation characters can, in certain cases,\r\n * result in something.\r\n * Whether they do is highly subjective to where they happen and in what\r\n * they happen.\r\n *\r\n * To solve this, `mdast-util-to-markdown` tracks:\r\n *\r\n * * Characters before and after something;\r\n * * What “constructs” we are in.\r\n *\r\n * This information is then used by this function to escape or encode\r\n * special characters.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {string | null | undefined} input\r\n *   Raw value to make safe.\r\n * @param {SafeConfig} config\r\n *   Configuration.\r\n * @returns {string}\r\n *   Serialized markdown safe for embedding.\r\n */\r\nfunction safe(state, input, config) {\r\n  const value = (config.before || '') + (input || '') + (config.after || '')\r\n  /** @type {Array<number>} */\r\n  const positions = []\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\r\n  const infos = {}\r\n  let index = -1\r\n\r\n  while (++index < state.unsafe.length) {\r\n    const pattern = state.unsafe[index]\r\n\r\n    if (!(0,_pattern_in_scope_js__WEBPACK_IMPORTED_MODULE_0__.patternInScope)(state.stack, pattern)) {\r\n      continue\r\n    }\r\n\r\n    const expression = (0,_pattern_compile_js__WEBPACK_IMPORTED_MODULE_1__.patternCompile)(pattern)\r\n    /** @type {RegExpExecArray | null} */\r\n    let match\r\n\r\n    while ((match = expression.exec(value))) {\r\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\r\n      const after = 'after' in pattern\r\n      const position = match.index + (before ? match[1].length : 0)\r\n\r\n      if (positions.includes(position)) {\r\n        if (infos[position].before && !before) {\r\n          infos[position].before = false\r\n        }\r\n\r\n        if (infos[position].after && !after) {\r\n          infos[position].after = false\r\n        }\r\n      } else {\r\n        positions.push(position)\r\n        infos[position] = {before, after}\r\n      }\r\n    }\r\n  }\r\n\r\n  positions.sort(numerical)\r\n\r\n  let start = config.before ? config.before.length : 0\r\n  const end = value.length - (config.after ? config.after.length : 0)\r\n  index = -1\r\n\r\n  while (++index < positions.length) {\r\n    const position = positions[index]\r\n\r\n    // Character before or after matched:\r\n    if (position < start || position >= end) {\r\n      continue\r\n    }\r\n\r\n    // If this character is supposed to be escaped because it has a condition on\r\n    // the next character, and the next character is definitly being escaped,\r\n    // then skip this escape.\r\n    if (\r\n      (position + 1 < end &&\r\n        positions[index + 1] === position + 1 &&\r\n        infos[position].after &&\r\n        !infos[position + 1].before &&\r\n        !infos[position + 1].after) ||\r\n      (positions[index - 1] === position - 1 &&\r\n        infos[position].before &&\r\n        !infos[position - 1].before &&\r\n        !infos[position - 1].after)\r\n    ) {\r\n      continue\r\n    }\r\n\r\n    if (start !== position) {\r\n      // If we have to use a character reference, an ampersand would be more\r\n      // correct, but as backslashes only care about punctuation, either will\r\n      // do the trick\r\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\r\n    }\r\n\r\n    start = position\r\n\r\n    if (\r\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\r\n      (!config.encode || !config.encode.includes(value.charAt(position)))\r\n    ) {\r\n      // Character escape.\r\n      result.push('\\\\')\r\n    } else {\r\n      // Character reference.\r\n      result.push(\r\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\r\n      )\r\n      start++\r\n    }\r\n  }\r\n\r\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\r\n\r\n  return result.join('')\r\n}\r\n\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {number}\r\n */\r\nfunction numerical(a, b) {\r\n  return a - b\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {string} after\r\n * @returns {string}\r\n */\r\nfunction escapeBackslashes(value, after) {\r\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\r\n  /** @type {Array<number>} */\r\n  const positions = []\r\n  /** @type {Array<string>} */\r\n  const results = []\r\n  const whole = value + after\r\n  let index = -1\r\n  let start = 0\r\n  /** @type {RegExpExecArray | null} */\r\n  let match\r\n\r\n  while ((match = expression.exec(whole))) {\r\n    positions.push(match.index)\r\n  }\r\n\r\n  while (++index < positions.length) {\r\n    if (start !== positions[index]) {\r\n      results.push(value.slice(start, positions[index]))\r\n    }\r\n\r\n    results.push('\\\\')\r\n    start = positions[index]\r\n  }\r\n\r\n  results.push(value.slice(start))\r\n\r\n  return results.join('')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9zYWZlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUMsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQTtBQUNtRDtBQUNDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLDJCQUEyQjtBQUN0QztBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEsZ0JBQWdCLGdDQUFnQyxHQUFHO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0VBQWM7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1FQUFjO0FBQ3JDLGVBQWUsd0JBQXdCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLDBFQUEwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBLHNDQUFzQztBQUN0QyxhQUFhLGVBQWU7QUFDNUI7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC9zYWZlLmpzPzc5MzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuU2FmZUNvbmZpZ30gU2FmZUNvbmZpZ1xyXG4gKi9cclxuXHJcbmltcG9ydCB7cGF0dGVybkNvbXBpbGV9IGZyb20gJy4vcGF0dGVybi1jb21waWxlLmpzJ1xyXG5pbXBvcnQge3BhdHRlcm5JblNjb3BlfSBmcm9tICcuL3BhdHRlcm4taW4tc2NvcGUuanMnXHJcblxyXG4vKipcclxuICogTWFrZSBhIHN0cmluZyBzYWZlIGZvciBlbWJlZGRpbmcgaW4gbWFya2Rvd24gY29uc3RydWN0cy5cclxuICpcclxuICogSW4gbWFya2Rvd24sIGFsbW9zdCBhbGwgcHVuY3R1YXRpb24gY2hhcmFjdGVycyBjYW4sIGluIGNlcnRhaW4gY2FzZXMsXHJcbiAqIHJlc3VsdCBpbiBzb21ldGhpbmcuXHJcbiAqIFdoZXRoZXIgdGhleSBkbyBpcyBoaWdobHkgc3ViamVjdGl2ZSB0byB3aGVyZSB0aGV5IGhhcHBlbiBhbmQgaW4gd2hhdFxyXG4gKiB0aGV5IGhhcHBlbi5cclxuICpcclxuICogVG8gc29sdmUgdGhpcywgYG1kYXN0LXV0aWwtdG8tbWFya2Rvd25gIHRyYWNrczpcclxuICpcclxuICogKiBDaGFyYWN0ZXJzIGJlZm9yZSBhbmQgYWZ0ZXIgc29tZXRoaW5nO1xyXG4gKiAqIFdoYXQg4oCcY29uc3RydWN0c+KAnSB3ZSBhcmUgaW4uXHJcbiAqXHJcbiAqIFRoaXMgaW5mb3JtYXRpb24gaXMgdGhlbiB1c2VkIGJ5IHRoaXMgZnVuY3Rpb24gdG8gZXNjYXBlIG9yIGVuY29kZVxyXG4gKiBzcGVjaWFsIGNoYXJhY3RlcnMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXHJcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxyXG4gKiBAcGFyYW0ge3N0cmluZyB8IG51bGwgfCB1bmRlZmluZWR9IGlucHV0XHJcbiAqICAgUmF3IHZhbHVlIHRvIG1ha2Ugc2FmZS5cclxuICogQHBhcmFtIHtTYWZlQ29uZmlnfSBjb25maWdcclxuICogICBDb25maWd1cmF0aW9uLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIFNlcmlhbGl6ZWQgbWFya2Rvd24gc2FmZSBmb3IgZW1iZWRkaW5nLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHNhZmUoc3RhdGUsIGlucHV0LCBjb25maWcpIHtcclxuICBjb25zdCB2YWx1ZSA9IChjb25maWcuYmVmb3JlIHx8ICcnKSArIChpbnB1dCB8fCAnJykgKyAoY29uZmlnLmFmdGVyIHx8ICcnKVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8bnVtYmVyPn0gKi9cclxuICBjb25zdCBwb3NpdGlvbnMgPSBbXVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn0gKi9cclxuICBjb25zdCByZXN1bHQgPSBbXVxyXG4gIC8qKiBAdHlwZSB7UmVjb3JkPG51bWJlciwge2JlZm9yZTogYm9vbGVhbiwgYWZ0ZXI6IGJvb2xlYW59Pn0gKi9cclxuICBjb25zdCBpbmZvcyA9IHt9XHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBzdGF0ZS51bnNhZmUubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBwYXR0ZXJuID0gc3RhdGUudW5zYWZlW2luZGV4XVxyXG5cclxuICAgIGlmICghcGF0dGVybkluU2NvcGUoc3RhdGUuc3RhY2ssIHBhdHRlcm4pKSB7XHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZXhwcmVzc2lvbiA9IHBhdHRlcm5Db21waWxlKHBhdHRlcm4pXHJcbiAgICAvKiogQHR5cGUge1JlZ0V4cEV4ZWNBcnJheSB8IG51bGx9ICovXHJcbiAgICBsZXQgbWF0Y2hcclxuXHJcbiAgICB3aGlsZSAoKG1hdGNoID0gZXhwcmVzc2lvbi5leGVjKHZhbHVlKSkpIHtcclxuICAgICAgY29uc3QgYmVmb3JlID0gJ2JlZm9yZScgaW4gcGF0dGVybiB8fCBCb29sZWFuKHBhdHRlcm4uYXRCcmVhaylcclxuICAgICAgY29uc3QgYWZ0ZXIgPSAnYWZ0ZXInIGluIHBhdHRlcm5cclxuICAgICAgY29uc3QgcG9zaXRpb24gPSBtYXRjaC5pbmRleCArIChiZWZvcmUgPyBtYXRjaFsxXS5sZW5ndGggOiAwKVxyXG5cclxuICAgICAgaWYgKHBvc2l0aW9ucy5pbmNsdWRlcyhwb3NpdGlvbikpIHtcclxuICAgICAgICBpZiAoaW5mb3NbcG9zaXRpb25dLmJlZm9yZSAmJiAhYmVmb3JlKSB7XHJcbiAgICAgICAgICBpbmZvc1twb3NpdGlvbl0uYmVmb3JlID0gZmFsc2VcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChpbmZvc1twb3NpdGlvbl0uYWZ0ZXIgJiYgIWFmdGVyKSB7XHJcbiAgICAgICAgICBpbmZvc1twb3NpdGlvbl0uYWZ0ZXIgPSBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwb3NpdGlvbnMucHVzaChwb3NpdGlvbilcclxuICAgICAgICBpbmZvc1twb3NpdGlvbl0gPSB7YmVmb3JlLCBhZnRlcn1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcG9zaXRpb25zLnNvcnQobnVtZXJpY2FsKVxyXG5cclxuICBsZXQgc3RhcnQgPSBjb25maWcuYmVmb3JlID8gY29uZmlnLmJlZm9yZS5sZW5ndGggOiAwXHJcbiAgY29uc3QgZW5kID0gdmFsdWUubGVuZ3RoIC0gKGNvbmZpZy5hZnRlciA/IGNvbmZpZy5hZnRlci5sZW5ndGggOiAwKVxyXG4gIGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBwb3NpdGlvbnMubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBwb3NpdGlvbiA9IHBvc2l0aW9uc1tpbmRleF1cclxuXHJcbiAgICAvLyBDaGFyYWN0ZXIgYmVmb3JlIG9yIGFmdGVyIG1hdGNoZWQ6XHJcbiAgICBpZiAocG9zaXRpb24gPCBzdGFydCB8fCBwb3NpdGlvbiA+PSBlbmQpIHtcclxuICAgICAgY29udGludWVcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB0aGlzIGNoYXJhY3RlciBpcyBzdXBwb3NlZCB0byBiZSBlc2NhcGVkIGJlY2F1c2UgaXQgaGFzIGEgY29uZGl0aW9uIG9uXHJcbiAgICAvLyB0aGUgbmV4dCBjaGFyYWN0ZXIsIGFuZCB0aGUgbmV4dCBjaGFyYWN0ZXIgaXMgZGVmaW5pdGx5IGJlaW5nIGVzY2FwZWQsXHJcbiAgICAvLyB0aGVuIHNraXAgdGhpcyBlc2NhcGUuXHJcbiAgICBpZiAoXHJcbiAgICAgIChwb3NpdGlvbiArIDEgPCBlbmQgJiZcclxuICAgICAgICBwb3NpdGlvbnNbaW5kZXggKyAxXSA9PT0gcG9zaXRpb24gKyAxICYmXHJcbiAgICAgICAgaW5mb3NbcG9zaXRpb25dLmFmdGVyICYmXHJcbiAgICAgICAgIWluZm9zW3Bvc2l0aW9uICsgMV0uYmVmb3JlICYmXHJcbiAgICAgICAgIWluZm9zW3Bvc2l0aW9uICsgMV0uYWZ0ZXIpIHx8XHJcbiAgICAgIChwb3NpdGlvbnNbaW5kZXggLSAxXSA9PT0gcG9zaXRpb24gLSAxICYmXHJcbiAgICAgICAgaW5mb3NbcG9zaXRpb25dLmJlZm9yZSAmJlxyXG4gICAgICAgICFpbmZvc1twb3NpdGlvbiAtIDFdLmJlZm9yZSAmJlxyXG4gICAgICAgICFpbmZvc1twb3NpdGlvbiAtIDFdLmFmdGVyKVxyXG4gICAgKSB7XHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHN0YXJ0ICE9PSBwb3NpdGlvbikge1xyXG4gICAgICAvLyBJZiB3ZSBoYXZlIHRvIHVzZSBhIGNoYXJhY3RlciByZWZlcmVuY2UsIGFuIGFtcGVyc2FuZCB3b3VsZCBiZSBtb3JlXHJcbiAgICAgIC8vIGNvcnJlY3QsIGJ1dCBhcyBiYWNrc2xhc2hlcyBvbmx5IGNhcmUgYWJvdXQgcHVuY3R1YXRpb24sIGVpdGhlciB3aWxsXHJcbiAgICAgIC8vIGRvIHRoZSB0cmlja1xyXG4gICAgICByZXN1bHQucHVzaChlc2NhcGVCYWNrc2xhc2hlcyh2YWx1ZS5zbGljZShzdGFydCwgcG9zaXRpb24pLCAnXFxcXCcpKVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0ID0gcG9zaXRpb25cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIC9bIS0vOi1AWy1gey1+XS8udGVzdCh2YWx1ZS5jaGFyQXQocG9zaXRpb24pKSAmJlxyXG4gICAgICAoIWNvbmZpZy5lbmNvZGUgfHwgIWNvbmZpZy5lbmNvZGUuaW5jbHVkZXModmFsdWUuY2hhckF0KHBvc2l0aW9uKSkpXHJcbiAgICApIHtcclxuICAgICAgLy8gQ2hhcmFjdGVyIGVzY2FwZS5cclxuICAgICAgcmVzdWx0LnB1c2goJ1xcXFwnKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gQ2hhcmFjdGVyIHJlZmVyZW5jZS5cclxuICAgICAgcmVzdWx0LnB1c2goXHJcbiAgICAgICAgJyYjeCcgKyB2YWx1ZS5jaGFyQ29kZUF0KHBvc2l0aW9uKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSArICc7J1xyXG4gICAgICApXHJcbiAgICAgIHN0YXJ0KytcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlc3VsdC5wdXNoKGVzY2FwZUJhY2tzbGFzaGVzKHZhbHVlLnNsaWNlKHN0YXJ0LCBlbmQpLCBjb25maWcuYWZ0ZXIpKVxyXG5cclxuICByZXR1cm4gcmVzdWx0LmpvaW4oJycpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge251bWJlcn0gYVxyXG4gKiBAcGFyYW0ge251bWJlcn0gYlxyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gKi9cclxuZnVuY3Rpb24gbnVtZXJpY2FsKGEsIGIpIHtcclxuICByZXR1cm4gYSAtIGJcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gKiBAcGFyYW0ge3N0cmluZ30gYWZ0ZXJcclxuICogQHJldHVybnMge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVzY2FwZUJhY2tzbGFzaGVzKHZhbHVlLCBhZnRlcikge1xyXG4gIGNvbnN0IGV4cHJlc3Npb24gPSAvXFxcXCg/PVshLS86LUBbLWB7LX5dKS9nXHJcbiAgLyoqIEB0eXBlIHtBcnJheTxudW1iZXI+fSAqL1xyXG4gIGNvbnN0IHBvc2l0aW9ucyA9IFtdXHJcbiAgLyoqIEB0eXBlIHtBcnJheTxzdHJpbmc+fSAqL1xyXG4gIGNvbnN0IHJlc3VsdHMgPSBbXVxyXG4gIGNvbnN0IHdob2xlID0gdmFsdWUgKyBhZnRlclxyXG4gIGxldCBpbmRleCA9IC0xXHJcbiAgbGV0IHN0YXJ0ID0gMFxyXG4gIC8qKiBAdHlwZSB7UmVnRXhwRXhlY0FycmF5IHwgbnVsbH0gKi9cclxuICBsZXQgbWF0Y2hcclxuXHJcbiAgd2hpbGUgKChtYXRjaCA9IGV4cHJlc3Npb24uZXhlYyh3aG9sZSkpKSB7XHJcbiAgICBwb3NpdGlvbnMucHVzaChtYXRjaC5pbmRleClcclxuICB9XHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgcG9zaXRpb25zLmxlbmd0aCkge1xyXG4gICAgaWYgKHN0YXJ0ICE9PSBwb3NpdGlvbnNbaW5kZXhdKSB7XHJcbiAgICAgIHJlc3VsdHMucHVzaCh2YWx1ZS5zbGljZShzdGFydCwgcG9zaXRpb25zW2luZGV4XSkpXHJcbiAgICB9XHJcblxyXG4gICAgcmVzdWx0cy5wdXNoKCdcXFxcJylcclxuICAgIHN0YXJ0ID0gcG9zaXRpb25zW2luZGV4XVxyXG4gIH1cclxuXHJcbiAgcmVzdWx0cy5wdXNoKHZhbHVlLnNsaWNlKHN0YXJ0KSlcclxuXHJcbiAgcmV0dXJuIHJlc3VsdHMuam9pbignJylcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/safe.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-markdown/lib/util/track.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-markdown/lib/util/track.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"track\": function() { return /* binding */ track; }\n/* harmony export */ });\n/**\r\n * @typedef {import('../types.js').CreateTracker} CreateTracker\r\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\r\n * @typedef {import('../types.js').TrackMove} TrackMove\r\n * @typedef {import('../types.js').TrackShift} TrackShift\r\n */\r\n\r\n/**\r\n * Track positional info in the output.\r\n *\r\n * @type {CreateTracker}\r\n */\r\nfunction track(config) {\r\n  // Defaults are used to prevent crashes when older utilities somehow activate\r\n  // this code.\r\n  /* c8 ignore next 5 */\r\n  const options = config || {}\r\n  const now = options.now || {}\r\n  let lineShift = options.lineShift || 0\r\n  let line = now.line || 1\r\n  let column = now.column || 1\r\n\r\n  return {move, current, shift}\r\n\r\n  /**\r\n   * Get the current tracked info.\r\n   *\r\n   * @type {TrackCurrent}\r\n   */\r\n  function current() {\r\n    return {now: {line, column}, lineShift}\r\n  }\r\n\r\n  /**\r\n   * Define an increased line shift (the typical indent for lines).\r\n   *\r\n   * @type {TrackShift}\r\n   */\r\n  function shift(value) {\r\n    lineShift += value\r\n  }\r\n\r\n  /**\r\n   * Move past some generated markdown.\r\n   *\r\n   * @type {TrackMove}\r\n   */\r\n  function move(input) {\r\n    // eslint-disable-next-line unicorn/prefer-default-parameters\r\n    const value = input || ''\r\n    const chunks = value.split(/\\r?\\n|\\r/g)\r\n    const tail = chunks[chunks.length - 1]\r\n    line += chunks.length - 1\r\n    column =\r\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\r\n    return value\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1tYXJrZG93bi9saWIvdXRpbC90cmFjay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHFDQUFxQztBQUNsRCxhQUFhLG9DQUFvQztBQUNqRCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLGtDQUFrQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFlBQVksTUFBTSxhQUFhO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8tbWFya2Rvd24vbGliL3V0aWwvdHJhY2suanM/NWIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5DcmVhdGVUcmFja2VyfSBDcmVhdGVUcmFja2VyXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3R5cGVzLmpzJykuVHJhY2tDdXJyZW50fSBUcmFja0N1cnJlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5UcmFja01vdmV9IFRyYWNrTW92ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi90eXBlcy5qcycpLlRyYWNrU2hpZnR9IFRyYWNrU2hpZnRcclxuICovXHJcblxyXG4vKipcclxuICogVHJhY2sgcG9zaXRpb25hbCBpbmZvIGluIHRoZSBvdXRwdXQuXHJcbiAqXHJcbiAqIEB0eXBlIHtDcmVhdGVUcmFja2VyfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRyYWNrKGNvbmZpZykge1xyXG4gIC8vIERlZmF1bHRzIGFyZSB1c2VkIHRvIHByZXZlbnQgY3Jhc2hlcyB3aGVuIG9sZGVyIHV0aWxpdGllcyBzb21laG93IGFjdGl2YXRlXHJcbiAgLy8gdGhpcyBjb2RlLlxyXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDUgKi9cclxuICBjb25zdCBvcHRpb25zID0gY29uZmlnIHx8IHt9XHJcbiAgY29uc3Qgbm93ID0gb3B0aW9ucy5ub3cgfHwge31cclxuICBsZXQgbGluZVNoaWZ0ID0gb3B0aW9ucy5saW5lU2hpZnQgfHwgMFxyXG4gIGxldCBsaW5lID0gbm93LmxpbmUgfHwgMVxyXG4gIGxldCBjb2x1bW4gPSBub3cuY29sdW1uIHx8IDFcclxuXHJcbiAgcmV0dXJuIHttb3ZlLCBjdXJyZW50LCBzaGlmdH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IHRoZSBjdXJyZW50IHRyYWNrZWQgaW5mby5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtUcmFja0N1cnJlbnR9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gY3VycmVudCgpIHtcclxuICAgIHJldHVybiB7bm93OiB7bGluZSwgY29sdW1ufSwgbGluZVNoaWZ0fVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVmaW5lIGFuIGluY3JlYXNlZCBsaW5lIHNoaWZ0ICh0aGUgdHlwaWNhbCBpbmRlbnQgZm9yIGxpbmVzKS5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtUcmFja1NoaWZ0fVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHNoaWZ0KHZhbHVlKSB7XHJcbiAgICBsaW5lU2hpZnQgKz0gdmFsdWVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1vdmUgcGFzdCBzb21lIGdlbmVyYXRlZCBtYXJrZG93bi5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtUcmFja01vdmV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gbW92ZShpbnB1dCkge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vcHJlZmVyLWRlZmF1bHQtcGFyYW1ldGVyc1xyXG4gICAgY29uc3QgdmFsdWUgPSBpbnB1dCB8fCAnJ1xyXG4gICAgY29uc3QgY2h1bmtzID0gdmFsdWUuc3BsaXQoL1xccj9cXG58XFxyL2cpXHJcbiAgICBjb25zdCB0YWlsID0gY2h1bmtzW2NodW5rcy5sZW5ndGggLSAxXVxyXG4gICAgbGluZSArPSBjaHVua3MubGVuZ3RoIC0gMVxyXG4gICAgY29sdW1uID1cclxuICAgICAgY2h1bmtzLmxlbmd0aCA9PT0gMSA/IGNvbHVtbiArIHRhaWwubGVuZ3RoIDogMSArIHRhaWwubGVuZ3RoICsgbGluZVNoaWZ0XHJcbiAgICByZXR1cm4gdmFsdWVcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-markdown/lib/util/track.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-string/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mdast-util-to-string/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toString\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.toString; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/mdast-util-to-string/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Options} Options\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1zdHJpbmcvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsa0NBQWtDO0FBQy9DO0FBQ0E7QUFDdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8tc3RyaW5nL2luZGV4LmpzP2U0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuT3B0aW9uc30gT3B0aW9uc1xyXG4gKi9cclxuXHJcbmV4cG9ydCB7dG9TdHJpbmd9IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-string/index.js\n"));

/***/ }),

/***/ "./node_modules/mdast-util-to-string/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/mdast-util-to-string/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toString\": function() { return /* binding */ toString; }\n/* harmony export */ });\n/**\r\n * @typedef {import('mdast').Root|import('mdast').Content} Node\r\n *\r\n * @typedef Options\r\n *   Configuration (optional).\r\n * @property {boolean | null | undefined} [includeImageAlt=true]\r\n *   Whether to use `alt` for `image`s.\r\n * @property {boolean | null | undefined} [includeHtml=true]\r\n *   Whether to use `value` of HTML.\r\n */\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\n/**\r\n * Get the text content of a node or list of nodes.\r\n *\r\n * Prefers the node’s plain-text fields, otherwise serializes its children,\r\n * and if the given value is an array, serialize the nodes in it.\r\n *\r\n * @param {unknown} value\r\n *   Thing to serialize, typically `Node`.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {string}\r\n *   Serialized `value`.\r\n */\r\nfunction toString(value, options) {\r\n  const settings = options || emptyOptions\r\n  const includeImageAlt =\r\n    typeof settings.includeImageAlt === 'boolean'\r\n      ? settings.includeImageAlt\r\n      : true\r\n  const includeHtml =\r\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\r\n\r\n  return one(value, includeImageAlt, includeHtml)\r\n}\r\n\r\n/**\r\n * One node or several nodes.\r\n *\r\n * @param {unknown} value\r\n *   Thing to serialize.\r\n * @param {boolean} includeImageAlt\r\n *   Include image `alt`s.\r\n * @param {boolean} includeHtml\r\n *   Include HTML.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nfunction one(value, includeImageAlt, includeHtml) {\r\n  if (node(value)) {\r\n    if ('value' in value) {\r\n      return value.type === 'html' && !includeHtml ? '' : value.value\r\n    }\r\n\r\n    if (includeImageAlt && 'alt' in value && value.alt) {\r\n      return value.alt\r\n    }\r\n\r\n    if ('children' in value) {\r\n      return all(value.children, includeImageAlt, includeHtml)\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return all(value, includeImageAlt, includeHtml)\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\n/**\r\n * Serialize a list of nodes.\r\n *\r\n * @param {Array<unknown>} values\r\n *   Thing to serialize.\r\n * @param {boolean} includeImageAlt\r\n *   Include image `alt`s.\r\n * @param {boolean} includeHtml\r\n *   Include HTML.\r\n * @returns {string}\r\n *   Serialized nodes.\r\n */\r\nfunction all(values, includeImageAlt, includeHtml) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[index] = one(values[index], includeImageAlt, includeHtml)\r\n  }\r\n\r\n  return result.join('')\r\n}\r\n\r\n/**\r\n * Check if `value` looks like a node.\r\n *\r\n * @param {unknown} value\r\n *   Thing.\r\n * @returns {value is Node}\r\n *   Whether `value` is a node.\r\n */\r\nfunction node(value) {\r\n  return Boolean(value && typeof value === 'object')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1zdHJpbmcvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsOENBQThDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNEJBQTRCO0FBQzFDO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLXN0cmluZy9saWIvaW5kZXguanM/ZjYzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fGltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBOb2RlXHJcbiAqXHJcbiAqIEB0eXBlZGVmIE9wdGlvbnNcclxuICogICBDb25maWd1cmF0aW9uIChvcHRpb25hbCkuXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtpbmNsdWRlSW1hZ2VBbHQ9dHJ1ZV1cclxuICogICBXaGV0aGVyIHRvIHVzZSBgYWx0YCBmb3IgYGltYWdlYHMuXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtpbmNsdWRlSHRtbD10cnVlXVxyXG4gKiAgIFdoZXRoZXIgdG8gdXNlIGB2YWx1ZWAgb2YgSFRNTC5cclxuICovXHJcblxyXG4vKiogQHR5cGUge09wdGlvbnN9ICovXHJcbmNvbnN0IGVtcHR5T3B0aW9ucyA9IHt9XHJcblxyXG4vKipcclxuICogR2V0IHRoZSB0ZXh0IGNvbnRlbnQgb2YgYSBub2RlIG9yIGxpc3Qgb2Ygbm9kZXMuXHJcbiAqXHJcbiAqIFByZWZlcnMgdGhlIG5vZGXigJlzIHBsYWluLXRleHQgZmllbGRzLCBvdGhlcndpc2Ugc2VyaWFsaXplcyBpdHMgY2hpbGRyZW4sXHJcbiAqIGFuZCBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYW4gYXJyYXksIHNlcmlhbGl6ZSB0aGUgbm9kZXMgaW4gaXQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7dW5rbm93bn0gdmFsdWVcclxuICogICBUaGluZyB0byBzZXJpYWxpemUsIHR5cGljYWxseSBgTm9kZWAuXHJcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IFtvcHRpb25zXVxyXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBTZXJpYWxpemVkIGB2YWx1ZWAuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUsIG9wdGlvbnMpIHtcclxuICBjb25zdCBzZXR0aW5ncyA9IG9wdGlvbnMgfHwgZW1wdHlPcHRpb25zXHJcbiAgY29uc3QgaW5jbHVkZUltYWdlQWx0ID1cclxuICAgIHR5cGVvZiBzZXR0aW5ncy5pbmNsdWRlSW1hZ2VBbHQgPT09ICdib29sZWFuJ1xyXG4gICAgICA/IHNldHRpbmdzLmluY2x1ZGVJbWFnZUFsdFxyXG4gICAgICA6IHRydWVcclxuICBjb25zdCBpbmNsdWRlSHRtbCA9XHJcbiAgICB0eXBlb2Ygc2V0dGluZ3MuaW5jbHVkZUh0bWwgPT09ICdib29sZWFuJyA/IHNldHRpbmdzLmluY2x1ZGVIdG1sIDogdHJ1ZVxyXG5cclxuICByZXR1cm4gb25lKHZhbHVlLCBpbmNsdWRlSW1hZ2VBbHQsIGluY2x1ZGVIdG1sKVxyXG59XHJcblxyXG4vKipcclxuICogT25lIG5vZGUgb3Igc2V2ZXJhbCBub2Rlcy5cclxuICpcclxuICogQHBhcmFtIHt1bmtub3dufSB2YWx1ZVxyXG4gKiAgIFRoaW5nIHRvIHNlcmlhbGl6ZS5cclxuICogQHBhcmFtIHtib29sZWFufSBpbmNsdWRlSW1hZ2VBbHRcclxuICogICBJbmNsdWRlIGltYWdlIGBhbHRgcy5cclxuICogQHBhcmFtIHtib29sZWFufSBpbmNsdWRlSHRtbFxyXG4gKiAgIEluY2x1ZGUgSFRNTC5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBTZXJpYWxpemVkIG5vZGUuXHJcbiAqL1xyXG5mdW5jdGlvbiBvbmUodmFsdWUsIGluY2x1ZGVJbWFnZUFsdCwgaW5jbHVkZUh0bWwpIHtcclxuICBpZiAobm9kZSh2YWx1ZSkpIHtcclxuICAgIGlmICgndmFsdWUnIGluIHZhbHVlKSB7XHJcbiAgICAgIHJldHVybiB2YWx1ZS50eXBlID09PSAnaHRtbCcgJiYgIWluY2x1ZGVIdG1sID8gJycgOiB2YWx1ZS52YWx1ZVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChpbmNsdWRlSW1hZ2VBbHQgJiYgJ2FsdCcgaW4gdmFsdWUgJiYgdmFsdWUuYWx0KSB7XHJcbiAgICAgIHJldHVybiB2YWx1ZS5hbHRcclxuICAgIH1cclxuXHJcbiAgICBpZiAoJ2NoaWxkcmVuJyBpbiB2YWx1ZSkge1xyXG4gICAgICByZXR1cm4gYWxsKHZhbHVlLmNoaWxkcmVuLCBpbmNsdWRlSW1hZ2VBbHQsIGluY2x1ZGVIdG1sKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XHJcbiAgICByZXR1cm4gYWxsKHZhbHVlLCBpbmNsdWRlSW1hZ2VBbHQsIGluY2x1ZGVIdG1sKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuICcnXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTZXJpYWxpemUgYSBsaXN0IG9mIG5vZGVzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PHVua25vd24+fSB2YWx1ZXNcclxuICogICBUaGluZyB0byBzZXJpYWxpemUuXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5jbHVkZUltYWdlQWx0XHJcbiAqICAgSW5jbHVkZSBpbWFnZSBgYWx0YHMuXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5jbHVkZUh0bWxcclxuICogICBJbmNsdWRlIEhUTUwuXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqICAgU2VyaWFsaXplZCBub2Rlcy5cclxuICovXHJcbmZ1bmN0aW9uIGFsbCh2YWx1ZXMsIGluY2x1ZGVJbWFnZUFsdCwgaW5jbHVkZUh0bWwpIHtcclxuICAvKiogQHR5cGUge0FycmF5PHN0cmluZz59ICovXHJcbiAgY29uc3QgcmVzdWx0ID0gW11cclxuICBsZXQgaW5kZXggPSAtMVxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IHZhbHVlcy5sZW5ndGgpIHtcclxuICAgIHJlc3VsdFtpbmRleF0gPSBvbmUodmFsdWVzW2luZGV4XSwgaW5jbHVkZUltYWdlQWx0LCBpbmNsdWRlSHRtbClcclxuICB9XHJcblxyXG4gIHJldHVybiByZXN1bHQuam9pbignJylcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIGB2YWx1ZWAgbG9va3MgbGlrZSBhIG5vZGUuXHJcbiAqXHJcbiAqIEBwYXJhbSB7dW5rbm93bn0gdmFsdWVcclxuICogICBUaGluZy5cclxuICogQHJldHVybnMge3ZhbHVlIGlzIE5vZGV9XHJcbiAqICAgV2hldGhlciBgdmFsdWVgIGlzIGEgbm9kZS5cclxuICovXHJcbmZ1bmN0aW9uIG5vZGUodmFsdWUpIHtcclxuICByZXR1cm4gQm9vbGVhbih2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mdast-util-to-string/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"attention\": function() { return /* reexport safe */ _lib_attention_js__WEBPACK_IMPORTED_MODULE_0__.attention; },\n/* harmony export */   \"autolink\": function() { return /* reexport safe */ _lib_autolink_js__WEBPACK_IMPORTED_MODULE_1__.autolink; },\n/* harmony export */   \"blankLine\": function() { return /* reexport safe */ _lib_blank_line_js__WEBPACK_IMPORTED_MODULE_2__.blankLine; },\n/* harmony export */   \"blockQuote\": function() { return /* reexport safe */ _lib_block_quote_js__WEBPACK_IMPORTED_MODULE_3__.blockQuote; },\n/* harmony export */   \"characterEscape\": function() { return /* reexport safe */ _lib_character_escape_js__WEBPACK_IMPORTED_MODULE_4__.characterEscape; },\n/* harmony export */   \"characterReference\": function() { return /* reexport safe */ _lib_character_reference_js__WEBPACK_IMPORTED_MODULE_5__.characterReference; },\n/* harmony export */   \"codeFenced\": function() { return /* reexport safe */ _lib_code_fenced_js__WEBPACK_IMPORTED_MODULE_6__.codeFenced; },\n/* harmony export */   \"codeIndented\": function() { return /* reexport safe */ _lib_code_indented_js__WEBPACK_IMPORTED_MODULE_7__.codeIndented; },\n/* harmony export */   \"codeText\": function() { return /* reexport safe */ _lib_code_text_js__WEBPACK_IMPORTED_MODULE_8__.codeText; },\n/* harmony export */   \"content\": function() { return /* reexport safe */ _lib_content_js__WEBPACK_IMPORTED_MODULE_9__.content; },\n/* harmony export */   \"definition\": function() { return /* reexport safe */ _lib_definition_js__WEBPACK_IMPORTED_MODULE_10__.definition; },\n/* harmony export */   \"hardBreakEscape\": function() { return /* reexport safe */ _lib_hard_break_escape_js__WEBPACK_IMPORTED_MODULE_11__.hardBreakEscape; },\n/* harmony export */   \"headingAtx\": function() { return /* reexport safe */ _lib_heading_atx_js__WEBPACK_IMPORTED_MODULE_12__.headingAtx; },\n/* harmony export */   \"htmlFlow\": function() { return /* reexport safe */ _lib_html_flow_js__WEBPACK_IMPORTED_MODULE_13__.htmlFlow; },\n/* harmony export */   \"htmlText\": function() { return /* reexport safe */ _lib_html_text_js__WEBPACK_IMPORTED_MODULE_14__.htmlText; },\n/* harmony export */   \"labelEnd\": function() { return /* reexport safe */ _lib_label_end_js__WEBPACK_IMPORTED_MODULE_15__.labelEnd; },\n/* harmony export */   \"labelStartImage\": function() { return /* reexport safe */ _lib_label_start_image_js__WEBPACK_IMPORTED_MODULE_16__.labelStartImage; },\n/* harmony export */   \"labelStartLink\": function() { return /* reexport safe */ _lib_label_start_link_js__WEBPACK_IMPORTED_MODULE_17__.labelStartLink; },\n/* harmony export */   \"lineEnding\": function() { return /* reexport safe */ _lib_line_ending_js__WEBPACK_IMPORTED_MODULE_18__.lineEnding; },\n/* harmony export */   \"list\": function() { return /* reexport safe */ _lib_list_js__WEBPACK_IMPORTED_MODULE_19__.list; },\n/* harmony export */   \"setextUnderline\": function() { return /* reexport safe */ _lib_setext_underline_js__WEBPACK_IMPORTED_MODULE_20__.setextUnderline; },\n/* harmony export */   \"thematicBreak\": function() { return /* reexport safe */ _lib_thematic_break_js__WEBPACK_IMPORTED_MODULE_21__.thematicBreak; }\n/* harmony export */ });\n/* harmony import */ var _lib_attention_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/attention.js */ \"./node_modules/micromark-core-commonmark/dev/lib/attention.js\");\n/* harmony import */ var _lib_autolink_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/autolink.js */ \"./node_modules/micromark-core-commonmark/dev/lib/autolink.js\");\n/* harmony import */ var _lib_blank_line_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/blank-line.js */ \"./node_modules/micromark-core-commonmark/dev/lib/blank-line.js\");\n/* harmony import */ var _lib_block_quote_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/block-quote.js */ \"./node_modules/micromark-core-commonmark/dev/lib/block-quote.js\");\n/* harmony import */ var _lib_character_escape_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/character-escape.js */ \"./node_modules/micromark-core-commonmark/dev/lib/character-escape.js\");\n/* harmony import */ var _lib_character_reference_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/character-reference.js */ \"./node_modules/micromark-core-commonmark/dev/lib/character-reference.js\");\n/* harmony import */ var _lib_code_fenced_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/code-fenced.js */ \"./node_modules/micromark-core-commonmark/dev/lib/code-fenced.js\");\n/* harmony import */ var _lib_code_indented_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/code-indented.js */ \"./node_modules/micromark-core-commonmark/dev/lib/code-indented.js\");\n/* harmony import */ var _lib_code_text_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/code-text.js */ \"./node_modules/micromark-core-commonmark/dev/lib/code-text.js\");\n/* harmony import */ var _lib_content_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/content.js */ \"./node_modules/micromark-core-commonmark/dev/lib/content.js\");\n/* harmony import */ var _lib_definition_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/definition.js */ \"./node_modules/micromark-core-commonmark/dev/lib/definition.js\");\n/* harmony import */ var _lib_hard_break_escape_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lib/hard-break-escape.js */ \"./node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js\");\n/* harmony import */ var _lib_heading_atx_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/heading-atx.js */ \"./node_modules/micromark-core-commonmark/dev/lib/heading-atx.js\");\n/* harmony import */ var _lib_html_flow_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/html-flow.js */ \"./node_modules/micromark-core-commonmark/dev/lib/html-flow.js\");\n/* harmony import */ var _lib_html_text_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/html-text.js */ \"./node_modules/micromark-core-commonmark/dev/lib/html-text.js\");\n/* harmony import */ var _lib_label_end_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/label-end.js */ \"./node_modules/micromark-core-commonmark/dev/lib/label-end.js\");\n/* harmony import */ var _lib_label_start_image_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lib/label-start-image.js */ \"./node_modules/micromark-core-commonmark/dev/lib/label-start-image.js\");\n/* harmony import */ var _lib_label_start_link_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lib/label-start-link.js */ \"./node_modules/micromark-core-commonmark/dev/lib/label-start-link.js\");\n/* harmony import */ var _lib_line_ending_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./lib/line-ending.js */ \"./node_modules/micromark-core-commonmark/dev/lib/line-ending.js\");\n/* harmony import */ var _lib_list_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lib/list.js */ \"./node_modules/micromark-core-commonmark/dev/lib/list.js\");\n/* harmony import */ var _lib_setext_underline_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./lib/setext-underline.js */ \"./node_modules/micromark-core-commonmark/dev/lib/setext-underline.js\");\n/* harmony import */ var _lib_thematic_break_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./lib/thematic-break.js */ \"./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDRjtBQUNHO0FBQ0U7QUFDVTtBQUNNO0FBQ2hCO0FBQ0k7QUFDUjtBQUNIO0FBQ007QUFDWTtBQUNYO0FBQ0o7QUFDQTtBQUNBO0FBQ2U7QUFDRjtBQUNUO0FBQ2I7QUFDdUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvaW5kZXguanM/MDk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2F0dGVudGlvbn0gZnJvbSAnLi9saWIvYXR0ZW50aW9uLmpzJ1xyXG5leHBvcnQge2F1dG9saW5rfSBmcm9tICcuL2xpYi9hdXRvbGluay5qcydcclxuZXhwb3J0IHtibGFua0xpbmV9IGZyb20gJy4vbGliL2JsYW5rLWxpbmUuanMnXHJcbmV4cG9ydCB7YmxvY2tRdW90ZX0gZnJvbSAnLi9saWIvYmxvY2stcXVvdGUuanMnXHJcbmV4cG9ydCB7Y2hhcmFjdGVyRXNjYXBlfSBmcm9tICcuL2xpYi9jaGFyYWN0ZXItZXNjYXBlLmpzJ1xyXG5leHBvcnQge2NoYXJhY3RlclJlZmVyZW5jZX0gZnJvbSAnLi9saWIvY2hhcmFjdGVyLXJlZmVyZW5jZS5qcydcclxuZXhwb3J0IHtjb2RlRmVuY2VkfSBmcm9tICcuL2xpYi9jb2RlLWZlbmNlZC5qcydcclxuZXhwb3J0IHtjb2RlSW5kZW50ZWR9IGZyb20gJy4vbGliL2NvZGUtaW5kZW50ZWQuanMnXHJcbmV4cG9ydCB7Y29kZVRleHR9IGZyb20gJy4vbGliL2NvZGUtdGV4dC5qcydcclxuZXhwb3J0IHtjb250ZW50fSBmcm9tICcuL2xpYi9jb250ZW50LmpzJ1xyXG5leHBvcnQge2RlZmluaXRpb259IGZyb20gJy4vbGliL2RlZmluaXRpb24uanMnXHJcbmV4cG9ydCB7aGFyZEJyZWFrRXNjYXBlfSBmcm9tICcuL2xpYi9oYXJkLWJyZWFrLWVzY2FwZS5qcydcclxuZXhwb3J0IHtoZWFkaW5nQXR4fSBmcm9tICcuL2xpYi9oZWFkaW5nLWF0eC5qcydcclxuZXhwb3J0IHtodG1sRmxvd30gZnJvbSAnLi9saWIvaHRtbC1mbG93LmpzJ1xyXG5leHBvcnQge2h0bWxUZXh0fSBmcm9tICcuL2xpYi9odG1sLXRleHQuanMnXHJcbmV4cG9ydCB7bGFiZWxFbmR9IGZyb20gJy4vbGliL2xhYmVsLWVuZC5qcydcclxuZXhwb3J0IHtsYWJlbFN0YXJ0SW1hZ2V9IGZyb20gJy4vbGliL2xhYmVsLXN0YXJ0LWltYWdlLmpzJ1xyXG5leHBvcnQge2xhYmVsU3RhcnRMaW5rfSBmcm9tICcuL2xpYi9sYWJlbC1zdGFydC1saW5rLmpzJ1xyXG5leHBvcnQge2xpbmVFbmRpbmd9IGZyb20gJy4vbGliL2xpbmUtZW5kaW5nLmpzJ1xyXG5leHBvcnQge2xpc3R9IGZyb20gJy4vbGliL2xpc3QuanMnXHJcbmV4cG9ydCB7c2V0ZXh0VW5kZXJsaW5lfSBmcm9tICcuL2xpYi9zZXRleHQtdW5kZXJsaW5lLmpzJ1xyXG5leHBvcnQge3RoZW1hdGljQnJlYWt9IGZyb20gJy4vbGliL3RoZW1hdGljLWJyZWFrLmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/attention.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/attention.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"attention\": function() { return /* binding */ attention; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-classify-character */ \"./node_modules/micromark-util-classify-character/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"./node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Point} Point\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst attention = {\r\n  name: 'attention',\r\n  tokenize: tokenizeAttention,\r\n  resolveAll: resolveAllAttention\r\n}\r\n\r\n/**\r\n * Take all events and resolve attention to emphasis or strong.\r\n *\r\n * @type {Resolver}\r\n */\r\nfunction resolveAllAttention(events, context) {\r\n  let index = -1\r\n  /** @type {number} */\r\n  let open\r\n  /** @type {Token} */\r\n  let group\r\n  /** @type {Token} */\r\n  let text\r\n  /** @type {Token} */\r\n  let openingSequence\r\n  /** @type {Token} */\r\n  let closingSequence\r\n  /** @type {number} */\r\n  let use\r\n  /** @type {Array<Event>} */\r\n  let nextEvents\r\n  /** @type {number} */\r\n  let offset\r\n\r\n  // Walk through all events.\r\n  //\r\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\r\n  // a bottleneck for malicious stuff.\r\n  while (++index < events.length) {\r\n    // Find a token that can close.\r\n    if (\r\n      events[index][0] === 'enter' &&\r\n      events[index][1].type === 'attentionSequence' &&\r\n      events[index][1]._close\r\n    ) {\r\n      open = index\r\n\r\n      // Now walk back to find an opener.\r\n      while (open--) {\r\n        // Find a token that can open the closer.\r\n        if (\r\n          events[open][0] === 'exit' &&\r\n          events[open][1].type === 'attentionSequence' &&\r\n          events[open][1]._open &&\r\n          // If the markers are the same:\r\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\r\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\r\n        ) {\r\n          // If the opening can close or the closing can open,\r\n          // and the close size *is not* a multiple of three,\r\n          // but the sum of the opening and closing size *is* multiple of three,\r\n          // then don’t match.\r\n          if (\r\n            (events[open][1]._close || events[index][1]._open) &&\r\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\r\n            !(\r\n              (events[open][1].end.offset -\r\n                events[open][1].start.offset +\r\n                events[index][1].end.offset -\r\n                events[index][1].start.offset) %\r\n              3\r\n            )\r\n          ) {\r\n            continue\r\n          }\r\n\r\n          // Number of markers to use from the sequence.\r\n          use =\r\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\r\n            events[index][1].end.offset - events[index][1].start.offset > 1\r\n              ? 2\r\n              : 1\r\n\r\n          const start = Object.assign({}, events[open][1].end)\r\n          const end = Object.assign({}, events[index][1].start)\r\n          movePoint(start, -use)\r\n          movePoint(end, use)\r\n\r\n          openingSequence = {\r\n            type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongSequence : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisSequence,\r\n            start,\r\n            end: Object.assign({}, events[open][1].end)\r\n          }\r\n          closingSequence = {\r\n            type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongSequence : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisSequence,\r\n            start: Object.assign({}, events[index][1].start),\r\n            end\r\n          }\r\n          text = {\r\n            type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongText : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisText,\r\n            start: Object.assign({}, events[open][1].end),\r\n            end: Object.assign({}, events[index][1].start)\r\n          }\r\n          group = {\r\n            type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strong : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasis,\r\n            start: Object.assign({}, openingSequence.start),\r\n            end: Object.assign({}, closingSequence.end)\r\n          }\r\n\r\n          events[open][1].end = Object.assign({}, openingSequence.start)\r\n          events[index][1].start = Object.assign({}, closingSequence.end)\r\n\r\n          nextEvents = []\r\n\r\n          // If there are more markers in the opening, add them before.\r\n          if (events[open][1].end.offset - events[open][1].start.offset) {\r\n            nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\r\n              ['enter', events[open][1], context],\r\n              ['exit', events[open][1], context]\r\n            ])\r\n          }\r\n\r\n          // Opening.\r\n          nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\r\n            ['enter', group, context],\r\n            ['enter', openingSequence, context],\r\n            ['exit', openingSequence, context],\r\n            ['enter', text, context]\r\n          ])\r\n\r\n          // Always populated by defaults.\r\n          ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n            context.parser.constructs.insideSpan.null,\r\n            'expected `insideSpan` to be populated'\r\n          )\r\n\r\n          // Between.\r\n          nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(\r\n            nextEvents,\r\n            (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(\r\n              context.parser.constructs.insideSpan.null,\r\n              events.slice(open + 1, index),\r\n              context\r\n            )\r\n          )\r\n\r\n          // Closing.\r\n          nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\r\n            ['exit', text, context],\r\n            ['enter', closingSequence, context],\r\n            ['exit', closingSequence, context],\r\n            ['exit', group, context]\r\n          ])\r\n\r\n          // If there are more markers in the closing, add them after.\r\n          if (events[index][1].end.offset - events[index][1].start.offset) {\r\n            offset = 2\r\n            nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\r\n              ['enter', events[index][1], context],\r\n              ['exit', events[index][1], context]\r\n            ])\r\n          } else {\r\n            offset = 0\r\n          }\r\n\r\n          (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open - 1, index - open + 3, nextEvents)\r\n\r\n          index = open + nextEvents.length - offset - 2\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove remaining sequences.\r\n  index = -1\r\n\r\n  while (++index < events.length) {\r\n    if (events[index][1].type === 'attentionSequence') {\r\n      events[index][1].type = 'data'\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeAttention(effects, ok) {\r\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\r\n  const previous = this.previous\r\n  const before = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__.classifyCharacter)(previous)\r\n\r\n  /** @type {NonNullable<Code>} */\r\n  let marker\r\n\r\n  return start\r\n\r\n  /**\r\n   * Before a sequence.\r\n   *\r\n   * ```markdown\r\n   * > | **\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.underscore,\r\n      'expected asterisk or underscore'\r\n    )\r\n    marker = code\r\n    effects.enter('attentionSequence')\r\n    return inside(code)\r\n  }\r\n\r\n  /**\r\n   * In a sequence.\r\n   *\r\n   * ```markdown\r\n   * > | **\r\n   *     ^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      return inside\r\n    }\r\n\r\n    const token = effects.exit('attentionSequence')\r\n\r\n    // To do: next major: move this to resolver, just like `markdown-rs`.\r\n    const after = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__.classifyCharacter)(code)\r\n\r\n    // Always populated by defaults.\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(attentionMarkers, 'expected `attentionMarkers` to be populated')\r\n\r\n    const open =\r\n      !after ||\r\n      (after === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.characterGroupPunctuation && before) ||\r\n      attentionMarkers.includes(code)\r\n    const close =\r\n      !before ||\r\n      (before === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.characterGroupPunctuation && after) ||\r\n      attentionMarkers.includes(previous)\r\n\r\n    token._open = Boolean(\r\n      marker === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk ? open : open && (before || !close)\r\n    )\r\n    token._close = Boolean(\r\n      marker === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk ? close : close && (after || !open)\r\n    )\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Move a point a bit.\r\n *\r\n * Note: `move` only works inside lines! It’s not possible to move past other\r\n * chunks (replacement characters, tabs, or line endings).\r\n *\r\n * @param {Point} point\r\n * @param {number} offset\r\n * @returns {void}\r\n */\r\nfunction movePoint(point, offset) {\r\n  point.column += offset\r\n  point.offset += offset\r\n  point._bufferIndex += offset\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/attention.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/autolink.js":
/*!********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/autolink.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"autolink\": function() { return /* binding */ autolink; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst autolink = {name: 'autolink', tokenize: tokenizeAutolink}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeAutolink(effects, ok, nok) {\r\n  let size = 0\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of an autolink.\r\n   *\r\n   * ```markdown\r\n   * > | a<https://example.com>b\r\n   *      ^\r\n   * > | a<user@example.com>b\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan, 'expected `<`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolink)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol)\r\n    return open\r\n  }\r\n\r\n  /**\r\n   * After `<`, at protocol or atext.\r\n   *\r\n   * ```markdown\r\n   * > | a<https://example.com>b\r\n   *       ^\r\n   * > | a<user@example.com>b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return schemeOrEmailAtext\r\n    }\r\n\r\n    return emailAtext(code)\r\n  }\r\n\r\n  /**\r\n   * At second byte of protocol or atext.\r\n   *\r\n   * ```markdown\r\n   * > | a<https://example.com>b\r\n   *        ^\r\n   * > | a<user@example.com>b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function schemeOrEmailAtext(code) {\r\n    // ASCII alphanumeric and `+`, `-`, and `.`.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)\r\n    ) {\r\n      // Count the previous alphabetical from `open` too.\r\n      size = 1\r\n      return schemeInsideOrEmailAtext(code)\r\n    }\r\n\r\n    return emailAtext(code)\r\n  }\r\n\r\n  /**\r\n   * In ambiguous protocol or atext.\r\n   *\r\n   * ```markdown\r\n   * > | a<https://example.com>b\r\n   *        ^\r\n   * > | a<user@example.com>b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function schemeInsideOrEmailAtext(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) {\r\n      effects.consume(code)\r\n      size = 0\r\n      return urlInside\r\n    }\r\n\r\n    // ASCII alphanumeric and `+`, `-`, and `.`.\r\n    if (\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign ||\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash ||\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot ||\r\n        (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) &&\r\n      size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.autolinkSchemeSizeMax\r\n    ) {\r\n      effects.consume(code)\r\n      return schemeInsideOrEmailAtext\r\n    }\r\n\r\n    size = 0\r\n    return emailAtext(code)\r\n  }\r\n\r\n  /**\r\n   * After protocol, in URL.\r\n   *\r\n   * ```markdown\r\n   * > | a<https://example.com>b\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function urlInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol)\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolink)\r\n      return ok\r\n    }\r\n\r\n    // ASCII control, space, or `<`.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.space ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiControl)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return urlInside\r\n  }\r\n\r\n  /**\r\n   * In email atext.\r\n   *\r\n   * ```markdown\r\n   * > | a<user.name@example.com>b\r\n   *              ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailAtext(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.atSign) {\r\n      effects.consume(code)\r\n      return emailAtSignOrDot\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAtext)(code)) {\r\n      effects.consume(code)\r\n      return emailAtext\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In label, after at-sign or dot.\r\n   *\r\n   * ```markdown\r\n   * > | a<user.name@example.com>b\r\n   *                 ^       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailAtSignOrDot(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code) ? emailLabel(code) : nok(code)\r\n  }\r\n\r\n  /**\r\n   * In label, where `.` and `>` are allowed.\r\n   *\r\n   * ```markdown\r\n   * > | a<user.name@example.com>b\r\n   *                   ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailLabel(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\r\n      effects.consume(code)\r\n      size = 0\r\n      return emailAtSignOrDot\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      // Exit, then change the token type.\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol).type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkEmail\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolink)\r\n      return ok\r\n    }\r\n\r\n    return emailValue(code)\r\n  }\r\n\r\n  /**\r\n   * In label, where `.` and `>` are *not* allowed.\r\n   *\r\n   * Though, this is also used in `emailLabel` to parse other values.\r\n   *\r\n   * ```markdown\r\n   * > | a<user.name@ex-ample.com>b\r\n   *                    ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailValue(code) {\r\n    // ASCII alphanumeric or `-`.\r\n    if (\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) &&\r\n      size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.autolinkDomainSizeMax\r\n    ) {\r\n      const next = code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash ? emailValue : emailLabel\r\n      effects.consume(code)\r\n      return next\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/autolink.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/blank-line.js":
/*!**********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/blank-line.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"blankLine\": function() { return /* binding */ blankLine; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst blankLine = {tokenize: tokenizeBlankLine, partial: true}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeBlankLine(effects, ok, nok) {\r\n  return start\r\n\r\n  /**\r\n   * Start of blank line.\r\n   *\r\n   * > 👉 **Note**: `␠` represents a space character.\r\n   *\r\n   * ```markdown\r\n   * > | ␠␠␊\r\n   *     ^\r\n   * > | ␊\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_1__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix)(code)\r\n      : after(code)\r\n  }\r\n\r\n  /**\r\n   * At eof/eol, after optional whitespace.\r\n   *\r\n   * > 👉 **Note**: `␠` represents a space character.\r\n   *\r\n   * ```markdown\r\n   * > | ␠␠␊\r\n   *       ^\r\n   * > | ␊\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownLineEnding)(code) ? ok(code) : nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2JsYW5rLWxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDb0Q7QUFDc0I7QUFDdEI7QUFDQTtBQUNwRDtBQUNBLFdBQVcsV0FBVztBQUNmLG1CQUFtQjtBQUMxQjtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsV0FBVyx1RUFBYTtBQUN4QixRQUFRLHFFQUFZLGlCQUFpQiw0RUFBZ0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxvQkFBb0IscUVBQVMsSUFBSSw0RUFBa0I7QUFDbkQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2JsYW5rLWxpbmUuanM/YzdmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcclxuICovXHJcblxyXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXHJcbmltcG9ydCB7bWFya2Rvd25MaW5lRW5kaW5nLCBtYXJrZG93blNwYWNlfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xyXG5cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmV4cG9ydCBjb25zdCBibGFua0xpbmUgPSB7dG9rZW5pemU6IHRva2VuaXplQmxhbmtMaW5lLCBwYXJ0aWFsOiB0cnVlfVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtUb2tlbml6ZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtUb2tlbml6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbml6ZUJsYW5rTGluZShlZmZlY3RzLCBvaywgbm9rKSB7XHJcbiAgcmV0dXJuIHN0YXJ0XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IG9mIGJsYW5rIGxpbmUuXHJcbiAgICpcclxuICAgKiA+IPCfkYkgKipOb3RlKio6IGDikKBgIHJlcHJlc2VudHMgYSBzcGFjZSBjaGFyYWN0ZXIuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCDikKDikKDikIpcclxuICAgKiAgICAgXlxyXG4gICAqID4gfCDikIpcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIHJldHVybiBtYXJrZG93blNwYWNlKGNvZGUpXHJcbiAgICAgID8gZmFjdG9yeVNwYWNlKGVmZmVjdHMsIGFmdGVyLCB0eXBlcy5saW5lUHJlZml4KShjb2RlKVxyXG4gICAgICA6IGFmdGVyKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBdCBlb2YvZW9sLCBhZnRlciBvcHRpb25hbCB3aGl0ZXNwYWNlLlxyXG4gICAqXHJcbiAgICogPiDwn5GJICoqTm90ZSoqOiBg4pCgYCByZXByZXNlbnRzIGEgc3BhY2UgY2hhcmFjdGVyLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwg4pCg4pCg4pCKXHJcbiAgICogICAgICAgXlxyXG4gICAqID4gfCDikIpcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGFmdGVyKGNvZGUpIHtcclxuICAgIHJldHVybiBjb2RlID09PSBjb2Rlcy5lb2YgfHwgbWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpID8gb2soY29kZSkgOiBub2soY29kZSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/blank-line.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/block-quote.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/block-quote.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"blockQuote\": function() { return /* binding */ blockQuote; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Exiter} Exiter\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst blockQuote = {\r\n  name: 'blockQuote',\r\n  tokenize: tokenizeBlockQuoteStart,\r\n  continuation: {tokenize: tokenizeBlockQuoteContinuation},\r\n  exit\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of block quote.\r\n   *\r\n   * ```markdown\r\n   * > | > a\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      const state = self.containerState\r\n\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(state, 'expected `containerState` to be defined in container')\r\n\r\n      if (!state.open) {\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuote, {_container: true})\r\n        state.open = true\r\n      }\r\n\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix)\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuoteMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuoteMarker)\r\n      return after\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `>`, before optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | > a\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefixWhitespace)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefixWhitespace)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix)\r\n      return ok\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix)\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Start of block quote continuation.\r\n *\r\n * ```markdown\r\n *   | > a\r\n * > | > b\r\n *     ^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return contStart\r\n\r\n  /**\r\n   * Start of block quote continuation.\r\n   *\r\n   * Also used to parse the first block quote opening.\r\n   *\r\n   * ```markdown\r\n   *   | > a\r\n   * > | > b\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contStart(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      // Always populated by defaults.\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n        self.parser.constructs.disable.null,\r\n        'expected `disable.null` to be populated'\r\n      )\r\n\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(\r\n        effects,\r\n        contBefore,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n        self.parser.constructs.disable.null.includes('codeIndented')\r\n          ? undefined\r\n          : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize\r\n      )(code)\r\n    }\r\n\r\n    return contBefore(code)\r\n  }\r\n\r\n  /**\r\n   * At `>`, after optional whitespace.\r\n   *\r\n   * Also used to parse the first block quote opening.\r\n   *\r\n   * ```markdown\r\n   *   | > a\r\n   * > | > b\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contBefore(code) {\r\n    return effects.attempt(blockQuote, ok, nok)(code)\r\n  }\r\n}\r\n\r\n/** @type {Exiter} */\r\nfunction exit(effects) {\r\n  effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuote)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2Jsb2NrLXF1b3RlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDb0Q7QUFDRTtBQUNGO0FBQ1E7QUFDUjtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxXQUFXO0FBQ2Y7QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLHlDQUF5QztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsaUJBQWlCLDZFQUFpQjtBQUNsQztBQUNBO0FBQ0EsTUFBTSwrQ0FBTTtBQUNaO0FBQ0E7QUFDQSxzQkFBc0IsNEVBQWdCLEdBQUcsaUJBQWlCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrRkFBc0I7QUFDMUMsb0JBQW9CLGtGQUFzQjtBQUMxQztBQUNBLG1CQUFtQixrRkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsUUFBUSx1RUFBYTtBQUNyQixvQkFBb0IsNEZBQWdDO0FBQ3BEO0FBQ0EsbUJBQW1CLDRGQUFnQztBQUNuRCxtQkFBbUIsa0ZBQXNCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrRkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFFBQVEsdUVBQWE7QUFDckI7QUFDQSxNQUFNLDhDQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHFFQUFZO0FBQ3pCO0FBQ0E7QUFDQSxRQUFRLDRFQUFnQjtBQUN4QjtBQUNBO0FBQ0EsWUFBWSxpRkFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxlQUFlLDRFQUFnQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2Jsb2NrLXF1b3RlLmpzPzA1MmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5FeGl0ZXJ9IEV4aXRlclxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcclxuICovXHJcblxyXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXHJcbmltcG9ydCB7bWFya2Rvd25TcGFjZX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmV4cG9ydCBjb25zdCBibG9ja1F1b3RlID0ge1xyXG4gIG5hbWU6ICdibG9ja1F1b3RlJyxcclxuICB0b2tlbml6ZTogdG9rZW5pemVCbG9ja1F1b3RlU3RhcnQsXHJcbiAgY29udGludWF0aW9uOiB7dG9rZW5pemU6IHRva2VuaXplQmxvY2tRdW90ZUNvbnRpbnVhdGlvbn0sXHJcbiAgZXhpdFxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge1Rva2VuaXplQ29udGV4dH1cclxuICogQHR5cGUge1Rva2VuaXplcn1cclxuICovXHJcbmZ1bmN0aW9uIHRva2VuaXplQmxvY2tRdW90ZVN0YXJ0KGVmZmVjdHMsIG9rLCBub2spIHtcclxuICBjb25zdCBzZWxmID0gdGhpc1xyXG5cclxuICByZXR1cm4gc3RhcnRcclxuXHJcbiAgLyoqXHJcbiAgICogU3RhcnQgb2YgYmxvY2sgcXVvdGUuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCA+IGFcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbikge1xyXG4gICAgICBjb25zdCBzdGF0ZSA9IHNlbGYuY29udGFpbmVyU3RhdGVcclxuXHJcbiAgICAgIGFzc2VydChzdGF0ZSwgJ2V4cGVjdGVkIGBjb250YWluZXJTdGF0ZWAgdG8gYmUgZGVmaW5lZCBpbiBjb250YWluZXInKVxyXG5cclxuICAgICAgaWYgKCFzdGF0ZS5vcGVuKSB7XHJcbiAgICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5ibG9ja1F1b3RlLCB7X2NvbnRhaW5lcjogdHJ1ZX0pXHJcbiAgICAgICAgc3RhdGUub3BlbiA9IHRydWVcclxuICAgICAgfVxyXG5cclxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5ibG9ja1F1b3RlUHJlZml4KVxyXG4gICAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmJsb2NrUXVvdGVNYXJrZXIpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuYmxvY2tRdW90ZU1hcmtlcilcclxuICAgICAgcmV0dXJuIGFmdGVyXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgYD5gLCBiZWZvcmUgb3B0aW9uYWwgd2hpdGVzcGFjZS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8ID4gYVxyXG4gICAqICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGFmdGVyKGNvZGUpIHtcclxuICAgIGlmIChtYXJrZG93blNwYWNlKGNvZGUpKSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuYmxvY2tRdW90ZVByZWZpeFdoaXRlc3BhY2UpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuYmxvY2tRdW90ZVByZWZpeFdoaXRlc3BhY2UpXHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5ibG9ja1F1b3RlUHJlZml4KVxyXG4gICAgICByZXR1cm4gb2tcclxuICAgIH1cclxuXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMuYmxvY2tRdW90ZVByZWZpeClcclxuICAgIHJldHVybiBvayhjb2RlKVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFN0YXJ0IG9mIGJsb2NrIHF1b3RlIGNvbnRpbnVhdGlvbi5cclxuICpcclxuICogYGBgbWFya2Rvd25cclxuICogICB8ID4gYVxyXG4gKiA+IHwgPiBiXHJcbiAqICAgICBeXHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gdG9rZW5pemVCbG9ja1F1b3RlQ29udGludWF0aW9uKGVmZmVjdHMsIG9rLCBub2spIHtcclxuICBjb25zdCBzZWxmID0gdGhpc1xyXG5cclxuICByZXR1cm4gY29udFN0YXJ0XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IG9mIGJsb2NrIHF1b3RlIGNvbnRpbnVhdGlvbi5cclxuICAgKlxyXG4gICAqIEFsc28gdXNlZCB0byBwYXJzZSB0aGUgZmlyc3QgYmxvY2sgcXVvdGUgb3BlbmluZy5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogICB8ID4gYVxyXG4gICAqID4gfCA+IGJcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGNvbnRTdGFydChjb2RlKSB7XHJcbiAgICBpZiAobWFya2Rvd25TcGFjZShjb2RlKSkge1xyXG4gICAgICAvLyBBbHdheXMgcG9wdWxhdGVkIGJ5IGRlZmF1bHRzLlxyXG4gICAgICBhc3NlcnQoXHJcbiAgICAgICAgc2VsZi5wYXJzZXIuY29uc3RydWN0cy5kaXNhYmxlLm51bGwsXHJcbiAgICAgICAgJ2V4cGVjdGVkIGBkaXNhYmxlLm51bGxgIHRvIGJlIHBvcHVsYXRlZCdcclxuICAgICAgKVxyXG5cclxuICAgICAgcmV0dXJuIGZhY3RvcnlTcGFjZShcclxuICAgICAgICBlZmZlY3RzLFxyXG4gICAgICAgIGNvbnRCZWZvcmUsXHJcbiAgICAgICAgdHlwZXMubGluZVByZWZpeCxcclxuICAgICAgICBzZWxmLnBhcnNlci5jb25zdHJ1Y3RzLmRpc2FibGUubnVsbC5pbmNsdWRlcygnY29kZUluZGVudGVkJylcclxuICAgICAgICAgID8gdW5kZWZpbmVkXHJcbiAgICAgICAgICA6IGNvbnN0YW50cy50YWJTaXplXHJcbiAgICAgICkoY29kZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY29udEJlZm9yZShjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXQgYD5gLCBhZnRlciBvcHRpb25hbCB3aGl0ZXNwYWNlLlxyXG4gICAqXHJcbiAgICogQWxzbyB1c2VkIHRvIHBhcnNlIHRoZSBmaXJzdCBibG9jayBxdW90ZSBvcGVuaW5nLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiAgIHwgPiBhXHJcbiAgICogPiB8ID4gYlxyXG4gICAqICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gY29udEJlZm9yZShjb2RlKSB7XHJcbiAgICByZXR1cm4gZWZmZWN0cy5hdHRlbXB0KGJsb2NrUXVvdGUsIG9rLCBub2spKGNvZGUpXHJcbiAgfVxyXG59XHJcblxyXG4vKiogQHR5cGUge0V4aXRlcn0gKi9cclxuZnVuY3Rpb24gZXhpdChlZmZlY3RzKSB7XHJcbiAgZWZmZWN0cy5leGl0KHR5cGVzLmJsb2NrUXVvdGUpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/block-quote.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/character-escape.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/character-escape.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"characterEscape\": function() { return /* binding */ characterEscape; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst characterEscape = {\r\n  name: 'characterEscape',\r\n  tokenize: tokenizeCharacterEscape\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeCharacterEscape(effects, ok, nok) {\r\n  return start\r\n\r\n  /**\r\n   * Start of character escape.\r\n   *\r\n   * ```markdown\r\n   * > | a\\*b\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash, 'expected `\\\\`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscape)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker)\r\n    return inside\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at punctuation.\r\n   *\r\n   * ```markdown\r\n   * > | a\\*b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    // ASCII punctuation.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiPunctuation)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscapeValue)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscapeValue)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscape)\r\n      return ok\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2NoYXJhY3Rlci1lc2NhcGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDeUQ7QUFDTDtBQUNBO0FBQ2I7QUFDdkM7QUFDQSxXQUFXLFdBQVc7QUFDZjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsSUFBSSwrQ0FBTSxVQUFVLDJFQUFlO0FBQ25DLGtCQUFrQixpRkFBcUI7QUFDdkMsa0JBQWtCLDhFQUFrQjtBQUNwQztBQUNBLGlCQUFpQiw4RUFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBFQUFnQjtBQUN4QixvQkFBb0Isc0ZBQTBCO0FBQzlDO0FBQ0EsbUJBQW1CLHNGQUEwQjtBQUM3QyxtQkFBbUIsaUZBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2NoYXJhY3Rlci1lc2NhcGUuanM/ZTUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcclxuICovXHJcblxyXG5pbXBvcnQge2FzY2lpUHVuY3R1YXRpb259IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmV4cG9ydCBjb25zdCBjaGFyYWN0ZXJFc2NhcGUgPSB7XHJcbiAgbmFtZTogJ2NoYXJhY3RlckVzY2FwZScsXHJcbiAgdG9rZW5pemU6IHRva2VuaXplQ2hhcmFjdGVyRXNjYXBlXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gdG9rZW5pemVDaGFyYWN0ZXJFc2NhcGUoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIHJldHVybiBzdGFydFxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBvZiBjaGFyYWN0ZXIgZXNjYXBlLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgYVxcKmJcclxuICAgKiAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XHJcbiAgICBhc3NlcnQoY29kZSA9PT0gY29kZXMuYmFja3NsYXNoLCAnZXhwZWN0ZWQgYFxcXFxgJylcclxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuY2hhcmFjdGVyRXNjYXBlKVxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5lc2NhcGVNYXJrZXIpXHJcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5lc2NhcGVNYXJrZXIpXHJcbiAgICByZXR1cm4gaW5zaWRlXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBZnRlciBgXFxgLCBhdCBwdW5jdHVhdGlvbi5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IGFcXCpiXHJcbiAgICogICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGluc2lkZShjb2RlKSB7XHJcbiAgICAvLyBBU0NJSSBwdW5jdHVhdGlvbi5cclxuICAgIGlmIChhc2NpaVB1bmN0dWF0aW9uKGNvZGUpKSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuY2hhcmFjdGVyRXNjYXBlVmFsdWUpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuY2hhcmFjdGVyRXNjYXBlVmFsdWUpXHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5jaGFyYWN0ZXJFc2NhcGUpXHJcbiAgICAgIHJldHVybiBva1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBub2soY29kZSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/character-escape.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/character-reference.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/character-reference.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"characterReference\": function() { return /* binding */ characterReference; }\n/* harmony export */ });\n/* harmony import */ var decode_named_character_reference__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! decode-named-character-reference */ \"./node_modules/decode-named-character-reference/index.dom.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst characterReference = {\r\n  name: 'characterReference',\r\n  tokenize: tokenizeCharacterReference\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeCharacterReference(effects, ok, nok) {\r\n  const self = this\r\n  let size = 0\r\n  /** @type {number} */\r\n  let max\r\n  /** @type {(code: Code) => boolean} */\r\n  let test\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of character reference.\r\n   *\r\n   * ```markdown\r\n   * > | a&amp;b\r\n   *      ^\r\n   * > | a&#123;b\r\n   *      ^\r\n   * > | a&#x9;b\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.ampersand, 'expected `&`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReference)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker)\r\n    return open\r\n  }\r\n\r\n  /**\r\n   * After `&`, at `#` for numeric references or alphanumeric for named\r\n   * references.\r\n   *\r\n   * ```markdown\r\n   * > | a&amp;b\r\n   *       ^\r\n   * > | a&#123;b\r\n   *       ^\r\n   * > | a&#x9;b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.numberSign) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerNumeric)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerNumeric)\r\n      return numeric\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue)\r\n    max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceNamedSizeMax\r\n    test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric\r\n    return value(code)\r\n  }\r\n\r\n  /**\r\n   * After `#`, at `x` for hexadecimals or digit for decimals.\r\n   *\r\n   * ```markdown\r\n   * > | a&#123;b\r\n   *        ^\r\n   * > | a&#x9;b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function numeric(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseX || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseX) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerHexadecimal)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerHexadecimal)\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue)\r\n      max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceHexadecimalSizeMax\r\n      test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiHexDigit\r\n      return value\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue)\r\n    max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceDecimalSizeMax\r\n    test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiDigit\r\n    return value(code)\r\n  }\r\n\r\n  /**\r\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\r\n   *\r\n   * The character reference kind defines what and how many characters are\r\n   * allowed.\r\n   *\r\n   * ```markdown\r\n   * > | a&amp;b\r\n   *       ^^^\r\n   * > | a&#123;b\r\n   *        ^^^\r\n   * > | a&#x9;b\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function value(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.semicolon && size) {\r\n      const token = effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue)\r\n\r\n      if (\r\n        test === micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric &&\r\n        !(0,decode_named_character_reference__WEBPACK_IMPORTED_MODULE_5__.decodeNamedCharacterReference)(self.sliceSerialize(token))\r\n      ) {\r\n        return nok(code)\r\n      }\r\n\r\n      // To do: `markdown-rs` uses a different name:\r\n      // `CharacterReferenceMarkerSemi`.\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReference)\r\n      return ok\r\n    }\r\n\r\n    if (test(code) && size++ < max) {\r\n      effects.consume(code)\r\n      return value\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/character-reference.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/code-fenced.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/code-fenced.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"codeFenced\": function() { return /* binding */ codeFenced; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst nonLazyContinuation = {\r\n  tokenize: tokenizeNonLazyContinuation,\r\n  partial: true\r\n}\r\n\r\n/** @type {Construct} */\r\nconst codeFenced = {\r\n  name: 'codeFenced',\r\n  tokenize: tokenizeCodeFenced,\r\n  concrete: true\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeCodeFenced(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {Construct} */\r\n  const closeStart = {tokenize: tokenizeCloseStart, partial: true}\r\n  let initialPrefix = 0\r\n  let sizeOpen = 0\r\n  /** @type {NonNullable<Code>} */\r\n  let marker\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of code.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *     ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // To do: parse whitespace like `markdown-rs`.\r\n    return beforeSequenceOpen(code)\r\n  }\r\n\r\n  /**\r\n   * In opening fence, after prefix, at sequence.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *     ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function beforeSequenceOpen(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde,\r\n      'expected `` ` `` or `~`'\r\n    )\r\n\r\n    const tail = self.events[self.events.length - 1]\r\n    initialPrefix =\r\n      tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix\r\n        ? tail[2].sliceSerialize(tail[1], true).length\r\n        : 0\r\n\r\n    marker = code\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFenced)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFence)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceSequence)\r\n    return sequenceOpen(code)\r\n  }\r\n\r\n  /**\r\n   * In opening fence sequence.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *      ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequenceOpen(code) {\r\n    if (code === marker) {\r\n      sizeOpen++\r\n      effects.consume(code)\r\n      return sequenceOpen\r\n    }\r\n\r\n    if (sizeOpen < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.codeFencedSequenceSizeMin) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceSequence)\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(effects, infoBefore, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)(code)\r\n      : infoBefore(code)\r\n  }\r\n\r\n  /**\r\n   * In opening fence, after the sequence (and optional whitespace), before info.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *        ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function infoBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFence)\r\n      return self.interrupt\r\n        ? ok(code)\r\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceInfo)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString})\r\n    return info(code)\r\n  }\r\n\r\n  /**\r\n   * In info.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *        ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function info(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceInfo)\r\n      return infoBefore(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceInfo)\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(effects, metaBefore, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent && code === marker) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return info\r\n  }\r\n\r\n  /**\r\n   * In opening fence, after info and whitespace, before meta.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js eval\r\n   *           ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function metaBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      return infoBefore(code)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceMeta)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString})\r\n    return meta(code)\r\n  }\r\n\r\n  /**\r\n   * In meta.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js eval\r\n   *           ^\r\n   *   | alert(1)\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function meta(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceMeta)\r\n      return infoBefore(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent && code === marker) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return meta\r\n  }\r\n\r\n  /**\r\n   * At eol/eof in code, before a non-lazy closing fence or content.\r\n   *\r\n   * ```markdown\r\n   * > | ~~~js\r\n   *          ^\r\n   * > | alert(1)\r\n   *             ^\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atNonLazyBreak(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), 'expected eol')\r\n    return effects.attempt(closeStart, after, contentBefore)(code)\r\n  }\r\n\r\n  /**\r\n   * Before code content, not a closing fence, at eol.\r\n   *\r\n   * ```markdown\r\n   *   | ~~~js\r\n   * > | alert(1)\r\n   *             ^\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contentBefore(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), 'expected eol')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    return contentStart\r\n  }\r\n\r\n  /**\r\n   * Before code content, not a closing fence.\r\n   *\r\n   * ```markdown\r\n   *   | ~~~js\r\n   * > | alert(1)\r\n   *     ^\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contentStart(code) {\r\n    return initialPrefix > 0 && (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(\r\n          effects,\r\n          beforeContentChunk,\r\n          micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n          initialPrefix + 1\r\n        )(code)\r\n      : beforeContentChunk(code)\r\n  }\r\n\r\n  /**\r\n   * Before code content, after optional prefix.\r\n   *\r\n   * ```markdown\r\n   *   | ~~~js\r\n   * > | alert(1)\r\n   *     ^\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function beforeContentChunk(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFlowValue)\r\n    return contentChunk(code)\r\n  }\r\n\r\n  /**\r\n   * In code content.\r\n   *\r\n   * ```markdown\r\n   *   | ~~~js\r\n   * > | alert(1)\r\n   *     ^^^^^^^^\r\n   *   | ~~~\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contentChunk(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFlowValue)\r\n      return beforeContentChunk(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return contentChunk\r\n  }\r\n\r\n  /**\r\n   * After code.\r\n   *\r\n   * ```markdown\r\n   *   | ~~~js\r\n   *   | alert(1)\r\n   * > | ~~~\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFenced)\r\n    return ok(code)\r\n  }\r\n\r\n  /**\r\n   * @this {TokenizeContext}\r\n   * @type {Tokenizer}\r\n   */\r\n  function tokenizeCloseStart(effects, ok, nok) {\r\n    let size = 0\r\n\r\n    return startBefore\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @type {State}\r\n     */\r\n    function startBefore(code) {\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), 'expected eol')\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      return start\r\n    }\r\n\r\n    /**\r\n     * Before closing fence, at optional whitespace.\r\n     *\r\n     * ```markdown\r\n     *   | ~~~js\r\n     *   | alert(1)\r\n     * > | ~~~\r\n     *     ^\r\n     * ```\r\n     *\r\n     * @type {State}\r\n     */\r\n    function start(code) {\r\n      // Always populated by defaults.\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n        self.parser.constructs.disable.null,\r\n        'expected `disable.null` to be populated'\r\n      )\r\n\r\n      // To do: `enter` here or in next state?\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFence)\r\n      return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n        ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(\r\n            effects,\r\n            beforeSequenceClose,\r\n            micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n            self.parser.constructs.disable.null.includes('codeIndented')\r\n              ? undefined\r\n              : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.tabSize\r\n          )(code)\r\n        : beforeSequenceClose(code)\r\n    }\r\n\r\n    /**\r\n     * In closing fence, after optional whitespace, at sequence.\r\n     *\r\n     * ```markdown\r\n     *   | ~~~js\r\n     *   | alert(1)\r\n     * > | ~~~\r\n     *     ^\r\n     * ```\r\n     *\r\n     * @type {State}\r\n     */\r\n    function beforeSequenceClose(code) {\r\n      if (code === marker) {\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceSequence)\r\n        return sequenceClose(code)\r\n      }\r\n\r\n      return nok(code)\r\n    }\r\n\r\n    /**\r\n     * In closing fence sequence.\r\n     *\r\n     * ```markdown\r\n     *   | ~~~js\r\n     *   | alert(1)\r\n     * > | ~~~\r\n     *     ^\r\n     * ```\r\n     *\r\n     * @type {State}\r\n     */\r\n    function sequenceClose(code) {\r\n      if (code === marker) {\r\n        size++\r\n        effects.consume(code)\r\n        return sequenceClose\r\n      }\r\n\r\n      if (size >= sizeOpen) {\r\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFenceSequence)\r\n        return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n          ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(effects, sequenceCloseAfter, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)(code)\r\n          : sequenceCloseAfter(code)\r\n      }\r\n\r\n      return nok(code)\r\n    }\r\n\r\n    /**\r\n     * After closing fence sequence, after optional whitespace.\r\n     *\r\n     * ```markdown\r\n     *   | ~~~js\r\n     *   | alert(1)\r\n     * > | ~~~\r\n     *        ^\r\n     * ```\r\n     *\r\n     * @type {State}\r\n     */\r\n    function sequenceCloseAfter(code) {\r\n      if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFencedFence)\r\n        return ok(code)\r\n      }\r\n\r\n      return nok(code)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return start\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), 'expected eol')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    return lineStart\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function lineStart(code) {\r\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/code-fenced.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/code-indented.js":
/*!*************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/code-indented.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"codeIndented\": function() { return /* binding */ codeIndented; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst codeIndented = {\r\n  name: 'codeIndented',\r\n  tokenize: tokenizeCodeIndented\r\n}\r\n\r\n/** @type {Construct} */\r\nconst furtherStart = {tokenize: tokenizeFurtherStart, partial: true}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeCodeIndented(effects, ok, nok) {\r\n  const self = this\r\n  return start\r\n\r\n  /**\r\n   * Start of code (indented).\r\n   *\r\n   * > **Parsing note**: it is not needed to check if this first line is a\r\n   * > filled line (that it has a non-whitespace character), because blank lines\r\n   * > are parsed already, so we never run into that.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // To do: manually check if interrupting like `markdown-rs`.\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownSpace)(code))\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeIndented)\r\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\r\n    // so that we can drop the next state.\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(\r\n      effects,\r\n      afterPrefix,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n      micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize + 1\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * At start, after 1 or 4 spaces.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function afterPrefix(code) {\r\n    const tail = self.events[self.events.length - 1]\r\n    return tail &&\r\n      tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix &&\r\n      tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize\r\n      ? atBreak(code)\r\n      : nok(code)\r\n  }\r\n\r\n  /**\r\n   * At a break.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *         ^  ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atBreak(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.eof) {\r\n      return after(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\r\n      return effects.attempt(furtherStart, atBreak, after)(code)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFlowValue)\r\n    return inside(code)\r\n  }\r\n\r\n  /**\r\n   * In code content.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *         ^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeFlowValue)\r\n      return atBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return inside\r\n  }\r\n\r\n  /** @type {State} */\r\n  function after(code) {\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.codeIndented)\r\n    // To do: allow interrupting like `markdown-rs`.\r\n    // Feel free to interrupt.\r\n    // tokenizer.interrupt = false\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeFurtherStart(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return furtherStart\r\n\r\n  /**\r\n   * At eol, trying to parse another indent.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *            ^\r\n   *   |     bbb\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function furtherStart(code) {\r\n    // To do: improve `lazy` / `pierce` handling.\r\n    // If this is a lazy line, it can’t be code.\r\n    if (self.parser.lazy[self.now().line]) {\r\n      return nok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      return furtherStart\r\n    }\r\n\r\n    // To do: the code here in `micromark-js` is a bit different from\r\n    // `markdown-rs` because there it can attempt spaces.\r\n    // We can’t yet.\r\n    //\r\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\r\n    // so that we can drop the next state.\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(\r\n      effects,\r\n      afterPrefix,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n      micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize + 1\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * At start, after 1 or 4 spaces.\r\n   *\r\n   * ```markdown\r\n   * > |     aaa\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function afterPrefix(code) {\r\n    const tail = self.events[self.events.length - 1]\r\n    return tail &&\r\n      tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix &&\r\n      tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize\r\n      ? ok(code)\r\n      : (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)\r\n      ? furtherStart(code)\r\n      : nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/code-indented.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/code-text.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/code-text.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"codeText\": function() { return /* binding */ codeText; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Previous} Previous\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst codeText = {\r\n  name: 'codeText',\r\n  tokenize: tokenizeCodeText,\r\n  resolve: resolveCodeText,\r\n  previous\r\n}\r\n\r\n// To do: next major: don’t resolve, like `markdown-rs`.\r\n/** @type {Resolver} */\r\nfunction resolveCodeText(events) {\r\n  let tailExitIndex = events.length - 4\r\n  let headEnterIndex = 3\r\n  /** @type {number} */\r\n  let index\r\n  /** @type {number | undefined} */\r\n  let enter\r\n\r\n  // If we start and end with an EOL or a space.\r\n  if (\r\n    (events[headEnterIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding ||\r\n      events[headEnterIndex][1].type === 'space') &&\r\n    (events[tailExitIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding ||\r\n      events[tailExitIndex][1].type === 'space')\r\n  ) {\r\n    index = headEnterIndex\r\n\r\n    // And we have data.\r\n    while (++index < tailExitIndex) {\r\n      if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData) {\r\n        // Then we have padding.\r\n        events[headEnterIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextPadding\r\n        events[tailExitIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextPadding\r\n        headEnterIndex += 2\r\n        tailExitIndex -= 2\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  // Merge adjacent spaces and data.\r\n  index = headEnterIndex - 1\r\n  tailExitIndex++\r\n\r\n  while (++index <= tailExitIndex) {\r\n    if (enter === undefined) {\r\n      if (\r\n        index !== tailExitIndex &&\r\n        events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding\r\n      ) {\r\n        enter = index\r\n      }\r\n    } else if (\r\n      index === tailExitIndex ||\r\n      events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding\r\n    ) {\r\n      events[enter][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData\r\n\r\n      if (index !== enter + 2) {\r\n        events[enter][1].end = events[index - 1][1].end\r\n        events.splice(enter + 2, index - enter - 2)\r\n        tailExitIndex -= index - enter - 2\r\n        index = enter + 2\r\n      }\r\n\r\n      enter = undefined\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Previous}\r\n */\r\nfunction previous(code) {\r\n  // If there is a previous code, there will always be a tail.\r\n  return (\r\n    code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent ||\r\n    this.events[this.events.length - 1][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.characterEscape\r\n  )\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeCodeText(effects, ok, nok) {\r\n  const self = this\r\n  let sizeOpen = 0\r\n  /** @type {number} */\r\n  let size\r\n  /** @type {Token} */\r\n  let token\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of code (text).\r\n   *\r\n   * ```markdown\r\n   * > | `a`\r\n   *     ^\r\n   * > | \\`a`\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent, 'expected `` ` ``')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(previous.call(self, self.previous), 'expected correct previous')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeText)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence)\r\n    return sequenceOpen(code)\r\n  }\r\n\r\n  /**\r\n   * In opening sequence.\r\n   *\r\n   * ```markdown\r\n   * > | `a`\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequenceOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\r\n      effects.consume(code)\r\n      sizeOpen++\r\n      return sequenceOpen\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence)\r\n    return between(code)\r\n  }\r\n\r\n  /**\r\n   * Between something and something else.\r\n   *\r\n   * ```markdown\r\n   * > | `a`\r\n   *      ^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function between(code) {\r\n    // EOF.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    // To do: next major: don’t do spaces in resolve, but when compiling,\r\n    // like `markdown-rs`.\r\n    // Tabs don’t work, and virtual spaces don’t make sense.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.space) {\r\n      effects.enter('space')\r\n      effects.consume(code)\r\n      effects.exit('space')\r\n      return between\r\n    }\r\n\r\n    // Closing fence? Could also be data.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\r\n      token = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence)\r\n      size = 0\r\n      return sequenceClose(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      return between\r\n    }\r\n\r\n    // Data.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData)\r\n    return data(code)\r\n  }\r\n\r\n  /**\r\n   * In data.\r\n   *\r\n   * ```markdown\r\n   * > | `a`\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function data(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.space ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData)\r\n      return between(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * In closing sequence.\r\n   *\r\n   * ```markdown\r\n   * > | `a`\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequenceClose(code) {\r\n    // More.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\r\n      effects.consume(code)\r\n      size++\r\n      return sequenceClose\r\n    }\r\n\r\n    // Done!\r\n    if (size === sizeOpen) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeText)\r\n      return ok(code)\r\n    }\r\n\r\n    // More or less accents: mark as data.\r\n    token.type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData\r\n    return data(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/code-text.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/content.js":
/*!*******************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/content.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"content\": function() { return /* binding */ content; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-subtokenize */ \"./node_modules/micromark-util-subtokenize/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * No name because it must not be turned off.\r\n * @type {Construct}\r\n */\r\nconst content = {tokenize: tokenizeContent, resolve: resolveContent}\r\n\r\n/** @type {Construct} */\r\nconst continuationConstruct = {tokenize: tokenizeContinuation, partial: true}\r\n\r\n/**\r\n * Content is transparent: it’s parsed right now. That way, definitions are also\r\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\r\n *\r\n * @type {Resolver}\r\n */\r\nfunction resolveContent(events) {\r\n  ;(0,micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_1__.subtokenize)(events)\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeContent(effects, ok) {\r\n  /** @type {Token | undefined} */\r\n  let previous\r\n\r\n  return chunkStart\r\n\r\n  /**\r\n   * Before a content chunk.\r\n   *\r\n   * ```markdown\r\n   * > | abc\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function chunkStart(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof && !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code),\r\n      'expected no eof or eol'\r\n    )\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.content)\r\n    previous = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent, {\r\n      contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeContent\r\n    })\r\n    return chunkInside(code)\r\n  }\r\n\r\n  /**\r\n   * In a content chunk.\r\n   *\r\n   * ```markdown\r\n   * > | abc\r\n   *     ^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function chunkInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\r\n      return contentEnd(code)\r\n    }\r\n\r\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\r\n    // is stitched together resolving.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      return effects.check(\r\n        continuationConstruct,\r\n        contentContinue,\r\n        contentEnd\r\n      )(code)\r\n    }\r\n\r\n    // Data.\r\n    effects.consume(code)\r\n    return chunkInside\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contentEnd(code) {\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.content)\r\n    return ok(code)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function contentContinue(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), 'expected eol')\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent)\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(previous, 'expected previous token')\r\n    previous.next = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent, {\r\n      contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeContent,\r\n      previous\r\n    })\r\n    previous = previous.next\r\n    return chunkInside\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeContinuation(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return startLookahead\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function startLookahead(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), 'expected a line ending')\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding)\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(effects, prefixed, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function prefixed(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      return nok(code)\r\n    }\r\n\r\n    // Always populated by defaults.\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.parser.constructs.disable.null,\r\n      'expected `disable.null` to be populated'\r\n    )\r\n\r\n    const tail = self.events[self.events.length - 1]\r\n\r\n    if (\r\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\r\n      tail &&\r\n      tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix &&\r\n      tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize\r\n    ) {\r\n      return ok(code)\r\n    }\r\n\r\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/content.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/definition.js":
/*!**********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/definition.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"definition\": function() { return /* binding */ definition; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_destination__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-destination */ \"./node_modules/micromark-factory-destination/dev/index.js\");\n/* harmony import */ var micromark_factory_label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-label */ \"./node_modules/micromark-factory-label/dev/index.js\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_factory_title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! micromark-factory-title */ \"./node_modules/micromark-factory-title/dev/index.js\");\n/* harmony import */ var micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-whitespace */ \"./node_modules/micromark-factory-whitespace/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst definition = {name: 'definition', tokenize: tokenizeDefinition}\r\n\r\n/** @type {Construct} */\r\nconst titleBefore = {tokenize: tokenizeTitleBefore, partial: true}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeDefinition(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {string} */\r\n  let identifier\r\n\r\n  return start\r\n\r\n  /**\r\n   * At start of a definition.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // Do not interrupt paragraphs (but do follow definitions).\r\n    // To do: do `interrupt` the way `markdown-rs` does.\r\n    // To do: parse whitespace the way `markdown-rs` does.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definition)\r\n    return before(code)\r\n  }\r\n\r\n  /**\r\n   * After optional whitespace, at `[`.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function before(code) {\r\n    // To do: parse whitespace the way `markdown-rs` does.\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket, 'expected `[`')\r\n    return micromark_factory_label__WEBPACK_IMPORTED_MODULE_3__.factoryLabel.call(\r\n      self,\r\n      effects,\r\n      labelAfter,\r\n      // Note: we don’t need to reset the way `markdown-rs` does.\r\n      nok,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionLabel,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionLabelMarker,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionLabelString\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * After label.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelAfter(code) {\r\n    identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_4__.normalizeIdentifier)(\r\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\r\n    )\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionMarker)\r\n      return markerAfter\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After marker.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function markerAfter(code) {\r\n    // Note: whitespace is optional.\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)\r\n      ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__.factoryWhitespace)(effects, destinationBefore)(code)\r\n      : destinationBefore(code)\r\n  }\r\n\r\n  /**\r\n   * Before destination.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function destinationBefore(code) {\r\n    return (0,micromark_factory_destination__WEBPACK_IMPORTED_MODULE_7__.factoryDestination)(\r\n      effects,\r\n      destinationAfter,\r\n      // Note: we don’t need to reset the way `markdown-rs` does.\r\n      nok,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionDestination,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionDestinationLiteral,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionDestinationLiteralMarker,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionDestinationRaw,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionDestinationString\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * After destination.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function destinationAfter(code) {\r\n    return effects.attempt(titleBefore, after, after)(code)\r\n  }\r\n\r\n  /**\r\n   * After definition.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b\r\n   *           ^\r\n   * > | [a]: b \"c\"\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_8__.factorySpace)(effects, afterWhitespace, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code)\r\n      : afterWhitespace(code)\r\n  }\r\n\r\n  /**\r\n   * After definition, after optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b\r\n   *           ^\r\n   * > | [a]: b \"c\"\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function afterWhitespace(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definition)\r\n\r\n      // Note: we don’t care about uniqueness.\r\n      // It’s likely that that doesn’t happen very frequently.\r\n      // It is more likely that it wastes precious time.\r\n      self.parser.defined.push(identifier)\r\n\r\n      // To do: `markdown-rs` interrupt.\r\n      // // You’d be interrupting.\r\n      // tokenizer.interrupt = true\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeTitleBefore(effects, ok, nok) {\r\n  return titleBefore\r\n\r\n  /**\r\n   * After destination, at whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b\r\n   *           ^\r\n   * > | [a]: b \"c\"\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function titleBefore(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)\r\n      ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__.factoryWhitespace)(effects, beforeMarker)(code)\r\n      : nok(code)\r\n  }\r\n\r\n  /**\r\n   * At title.\r\n   *\r\n   * ```markdown\r\n   *   | [a]: b\r\n   * > | \"c\"\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function beforeMarker(code) {\r\n    return (0,micromark_factory_title__WEBPACK_IMPORTED_MODULE_9__.factoryTitle)(\r\n      effects,\r\n      titleAfter,\r\n      nok,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionTitle,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionTitleMarker,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definitionTitleString\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * After title.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function titleAfter(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_8__.factorySpace)(\r\n          effects,\r\n          titleAfterOptionalWhitespace,\r\n          micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace\r\n        )(code)\r\n      : titleAfterOptionalWhitespace(code)\r\n  }\r\n\r\n  /**\r\n   * After title, after optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a]: b \"c\"\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function titleAfterOptionalWhitespace(code) {\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code) ? ok(code) : nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/definition.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hardBreakEscape\": function() { return /* binding */ hardBreakEscape; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst hardBreakEscape = {\r\n  name: 'hardBreakEscape',\r\n  tokenize: tokenizeHardBreakEscape\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\r\n  return start\r\n\r\n  /**\r\n   * Start of a hard break (escape).\r\n   *\r\n   * ```markdown\r\n   * > | a\\\r\n   *      ^\r\n   *   | b\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash, 'expected `\\\\`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.hardBreakEscape)\r\n    effects.consume(code)\r\n    return after\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at eol.\r\n   *\r\n   * ```markdown\r\n   * > | a\\\r\n   *       ^\r\n   *   | b\r\n   * ```\r\n   *\r\n   *  @type {State}\r\n   */\r\n  function after(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.hardBreakEscape)\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2hhcmQtYnJlYWstZXNjYXBlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQzJEO0FBQ1A7QUFDQTtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxXQUFXO0FBQ2Y7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsSUFBSSwrQ0FBTSxVQUFVLDJFQUFlO0FBQ25DLGtCQUFrQixpRkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFFBQVEsNEVBQWtCO0FBQzFCLG1CQUFtQixpRkFBcUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvaGFyZC1icmVhay1lc2NhcGUuanM/YWI3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcclxuICovXHJcblxyXG5pbXBvcnQge21hcmtkb3duTGluZUVuZGluZ30gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7dHlwZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC90eXBlcy5qcydcclxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXHJcblxyXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cclxuZXhwb3J0IGNvbnN0IGhhcmRCcmVha0VzY2FwZSA9IHtcclxuICBuYW1lOiAnaGFyZEJyZWFrRXNjYXBlJyxcclxuICB0b2tlbml6ZTogdG9rZW5pemVIYXJkQnJlYWtFc2NhcGVcclxufVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtUb2tlbml6ZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtUb2tlbml6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbml6ZUhhcmRCcmVha0VzY2FwZShlZmZlY3RzLCBvaywgbm9rKSB7XHJcbiAgcmV0dXJuIHN0YXJ0XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IG9mIGEgaGFyZCBicmVhayAoZXNjYXBlKS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IGFcXFxyXG4gICAqICAgICAgXlxyXG4gICAqICAgfCBiXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xyXG4gICAgYXNzZXJ0KGNvZGUgPT09IGNvZGVzLmJhY2tzbGFzaCwgJ2V4cGVjdGVkIGBcXFxcYCcpXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmhhcmRCcmVha0VzY2FwZSlcclxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgcmV0dXJuIGFmdGVyXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBZnRlciBgXFxgLCBhdCBlb2wuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBhXFxcclxuICAgKiAgICAgICBeXHJcbiAgICogICB8IGJcclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqICBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xyXG4gICAgaWYgKG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuaGFyZEJyZWFrRXNjYXBlKVxyXG4gICAgICByZXR1cm4gb2soY29kZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/heading-atx.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/heading-atx.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"headingAtx\": function() { return /* binding */ headingAtx; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst headingAtx = {\r\n  name: 'headingAtx',\r\n  tokenize: tokenizeHeadingAtx,\r\n  resolve: resolveHeadingAtx\r\n}\r\n\r\n/** @type {Resolver} */\r\nfunction resolveHeadingAtx(events, context) {\r\n  let contentEnd = events.length - 2\r\n  let contentStart = 3\r\n  /** @type {Token} */\r\n  let content\r\n  /** @type {Token} */\r\n  let text\r\n\r\n  // Prefix whitespace, part of the opening.\r\n  if (events[contentStart][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace) {\r\n    contentStart += 2\r\n  }\r\n\r\n  // Suffix whitespace, part of the closing.\r\n  if (\r\n    contentEnd - 2 > contentStart &&\r\n    events[contentEnd][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace\r\n  ) {\r\n    contentEnd -= 2\r\n  }\r\n\r\n  if (\r\n    events[contentEnd][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence &&\r\n    (contentStart === contentEnd - 1 ||\r\n      (contentEnd - 4 > contentStart &&\r\n        events[contentEnd - 2][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace))\r\n  ) {\r\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\r\n  }\r\n\r\n  if (contentEnd > contentStart) {\r\n    content = {\r\n      type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText,\r\n      start: events[contentStart][1].start,\r\n      end: events[contentEnd][1].end\r\n    }\r\n    text = {\r\n      type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkText,\r\n      start: events[contentStart][1].start,\r\n      end: events[contentEnd][1].end,\r\n      contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.contentTypeText\r\n    }\r\n\r\n    ;(0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__.splice)(events, contentStart, contentEnd - contentStart + 1, [\r\n      ['enter', content, context],\r\n      ['enter', text, context],\r\n      ['exit', text, context],\r\n      ['exit', content, context]\r\n    ])\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeHeadingAtx(effects, ok, nok) {\r\n  let size = 0\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of a heading (atx).\r\n   *\r\n   * ```markdown\r\n   * > | ## aa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // To do: parse indent like `markdown-rs`.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeading)\r\n    return before(code)\r\n  }\r\n\r\n  /**\r\n   * After optional whitespace, at `#`.\r\n   *\r\n   * ```markdown\r\n   * > | ## aa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function before(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign, 'expected `#`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence)\r\n    return sequenceOpen(code)\r\n  }\r\n\r\n  /**\r\n   * In opening sequence.\r\n   *\r\n   * ```markdown\r\n   * > | ## aa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequenceOpen(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign &&\r\n      size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.atxHeadingOpeningFenceSizeMax\r\n    ) {\r\n      effects.consume(code)\r\n      return sequenceOpen\r\n    }\r\n\r\n    // Always at least one `#`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence)\r\n      return atBreak(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After something, before something else.\r\n   *\r\n   * ```markdown\r\n   * > | ## aa\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atBreak(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence)\r\n      return sequenceFurther(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeading)\r\n      // To do: interrupt like `markdown-rs`.\r\n      // // Feel free to interrupt.\r\n      // tokenizer.interrupt = false\r\n      return ok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownSpace)(code)) {\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(effects, atBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code)\r\n    }\r\n\r\n    // To do: generate `data` tokens, add the `text` token later.\r\n    // Needs edit map, see: `markdown.rs`.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText)\r\n    return data(code)\r\n  }\r\n\r\n  /**\r\n   * In further sequence (after whitespace).\r\n   *\r\n   * Could be normal “visible” hashes in the heading or a final sequence.\r\n   *\r\n   * ```markdown\r\n   * > | ## aa ##\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequenceFurther(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign) {\r\n      effects.consume(code)\r\n      return sequenceFurther\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence)\r\n    return atBreak(code)\r\n  }\r\n\r\n  /**\r\n   * In text.\r\n   *\r\n   * ```markdown\r\n   * > | ## aa\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function data(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText)\r\n      return atBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return data\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/heading-atx.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/html-flow.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/html-flow.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"htmlFlow\": function() { return /* binding */ htmlFlow; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-html-tag-name */ \"./node_modules/micromark-util-html-tag-name/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var _blank_line_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blank-line.js */ \"./node_modules/micromark-core-commonmark/dev/lib/blank-line.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst htmlFlow = {\r\n  name: 'htmlFlow',\r\n  tokenize: tokenizeHtmlFlow,\r\n  resolveTo: resolveToHtmlFlow,\r\n  concrete: true\r\n}\r\n\r\n/** @type {Construct} */\r\nconst blankLineBefore = {tokenize: tokenizeBlankLineBefore, partial: true}\r\nconst nonLazyContinuationStart = {\r\n  tokenize: tokenizeNonLazyContinuationStart,\r\n  partial: true\r\n}\r\n\r\n/** @type {Resolver} */\r\nfunction resolveToHtmlFlow(events) {\r\n  let index = events.length\r\n\r\n  while (index--) {\r\n    if (\r\n      events[index][0] === 'enter' &&\r\n      events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow\r\n    ) {\r\n      break\r\n    }\r\n  }\r\n\r\n  if (index > 1 && events[index - 2][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix) {\r\n    // Add the prefix start to the HTML token.\r\n    events[index][1].start = events[index - 2][1].start\r\n    // Add the prefix start to the HTML line token.\r\n    events[index + 1][1].start = events[index - 2][1].start\r\n    // Remove the line prefix.\r\n    events.splice(index - 2, 2)\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeHtmlFlow(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {number} */\r\n  let marker\r\n  /** @type {boolean} */\r\n  let closingTag\r\n  /** @type {string} */\r\n  let buffer\r\n  /** @type {number} */\r\n  let index\r\n  /** @type {Code} */\r\n  let markerB\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of HTML (flow).\r\n   *\r\n   * ```markdown\r\n   * > | <x />\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // To do: parse indent like `markdown-rs`.\r\n    return before(code)\r\n  }\r\n\r\n  /**\r\n   * At `<`, after optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | <x />\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function before(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan, 'expected `<`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData)\r\n    effects.consume(code)\r\n    return open\r\n  }\r\n\r\n  /**\r\n   * After `<`, at tag name or other stuff.\r\n   *\r\n   * ```markdown\r\n   * > | <x />\r\n   *      ^\r\n   * > | <!doctype>\r\n   *      ^\r\n   * > | <!--xxx-->\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.exclamationMark) {\r\n      effects.consume(code)\r\n      return declarationOpen\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\r\n      effects.consume(code)\r\n      closingTag = true\r\n      return tagCloseStart\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.questionMark) {\r\n      effects.consume(code)\r\n      marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlInstruction\r\n      // To do:\r\n      // tokenizer.concrete = true\r\n      // To do: use `markdown-rs` style interrupt.\r\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\r\n      // right now, so we do need to search for `>`, similar to declarations.\r\n      return self.interrupt ? ok : continuationDeclarationInside\r\n    }\r\n\r\n    // ASCII alphabetical.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      // @ts-expect-error: not null.\r\n      buffer = String.fromCharCode(code)\r\n      return tagName\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `<!`, at declaration, comment, or CDATA.\r\n   *\r\n   * ```markdown\r\n   * > | <!doctype>\r\n   *       ^\r\n   * > | <!--xxx-->\r\n   *       ^\r\n   * > | <![CDATA[>&<]]>\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function declarationOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      effects.consume(code)\r\n      marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment\r\n      return commentOpenInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket) {\r\n      effects.consume(code)\r\n      marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlCdata\r\n      index = 0\r\n      return cdataOpenInside\r\n    }\r\n\r\n    // ASCII alphabetical.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlDeclaration\r\n      // // Do not form containers.\r\n      // tokenizer.concrete = true\r\n      return self.interrupt ? ok : continuationDeclarationInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `<!-`, inside a comment, at another `-`.\r\n   *\r\n   * ```markdown\r\n   * > | <!--xxx-->\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function commentOpenInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      effects.consume(code)\r\n      // // Do not form containers.\r\n      // tokenizer.concrete = true\r\n      return self.interrupt ? ok : continuationDeclarationInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `<![`, inside CDATA, expecting `CDATA[`.\r\n   *\r\n   * ```markdown\r\n   * > | <![CDATA[>&<]]>\r\n   *        ^^^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function cdataOpenInside(code) {\r\n    const value = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.cdataOpeningString\r\n\r\n    if (code === value.charCodeAt(index++)) {\r\n      effects.consume(code)\r\n\r\n      if (index === value.length) {\r\n        // // Do not form containers.\r\n        // tokenizer.concrete = true\r\n        return self.interrupt ? ok : continuation\r\n      }\r\n\r\n      return cdataOpenInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `</`, in closing tag, at tag name.\r\n   *\r\n   * ```markdown\r\n   * > | </x>\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagCloseStart(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      // @ts-expect-error: not null.\r\n      buffer = String.fromCharCode(code)\r\n      return tagName\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In tag name.\r\n   *\r\n   * ```markdown\r\n   * > | <ab>\r\n   *      ^^\r\n   * > | </ab>\r\n   *       ^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagName(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      const slash = code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash\r\n      const name = buffer.toLowerCase()\r\n\r\n      if (!slash && !closingTag && micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlRawNames.includes(name)) {\r\n        marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRaw\r\n        // // Do not form containers.\r\n        // tokenizer.concrete = true\r\n        return self.interrupt ? ok(code) : continuation(code)\r\n      }\r\n\r\n      if (micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlBlockNames.includes(buffer.toLowerCase())) {\r\n        marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlBasic\r\n\r\n        if (slash) {\r\n          effects.consume(code)\r\n          return basicSelfClosing\r\n        }\r\n\r\n        // // Do not form containers.\r\n        // tokenizer.concrete = true\r\n        return self.interrupt ? ok(code) : continuation(code)\r\n      }\r\n\r\n      marker = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComplete\r\n      // Do not support complete HTML when interrupting.\r\n      return self.interrupt && !self.parser.lazy[self.now().line]\r\n        ? nok(code)\r\n        : closingTag\r\n        ? completeClosingTagAfter(code)\r\n        : completeAttributeNameBefore(code)\r\n    }\r\n\r\n    // ASCII alphanumerical and `-`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric)(code)) {\r\n      effects.consume(code)\r\n      buffer += String.fromCharCode(code)\r\n      return tagName\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After closing slash of a basic tag name.\r\n   *\r\n   * ```markdown\r\n   * > | <div/>\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function basicSelfClosing(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\r\n      effects.consume(code)\r\n      // // Do not form containers.\r\n      // tokenizer.concrete = true\r\n      return self.interrupt ? ok : continuation\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After closing slash of a complete tag name.\r\n   *\r\n   * ```markdown\r\n   * > | <x/>\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeClosingTagAfter(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return completeClosingTagAfter\r\n    }\r\n\r\n    return completeEnd(code)\r\n  }\r\n\r\n  /**\r\n   * At an attribute name.\r\n   *\r\n   * At first, this state is used after a complete tag name, after whitespace,\r\n   * where it expects optional attributes or the end of the tag.\r\n   * It is also reused after attributes, when expecting more optional\r\n   * attributes.\r\n   *\r\n   * ```markdown\r\n   * > | <a />\r\n   *        ^\r\n   * > | <a :b>\r\n   *        ^\r\n   * > | <a _b>\r\n   *        ^\r\n   * > | <a b>\r\n   *        ^\r\n   * > | <a >\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeNameBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\r\n      effects.consume(code)\r\n      return completeEnd\r\n    }\r\n\r\n    // ASCII alphanumerical and `:` and `_`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return completeAttributeName\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return completeAttributeNameBefore\r\n    }\r\n\r\n    return completeEnd(code)\r\n  }\r\n\r\n  /**\r\n   * In attribute name.\r\n   *\r\n   * ```markdown\r\n   * > | <a :b>\r\n   *         ^\r\n   * > | <a _b>\r\n   *         ^\r\n   * > | <a b>\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeName(code) {\r\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dot ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.underscore ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric)(code)\r\n    ) {\r\n      effects.consume(code)\r\n      return completeAttributeName\r\n    }\r\n\r\n    return completeAttributeNameAfter(code)\r\n  }\r\n\r\n  /**\r\n   * After attribute name, at an optional initializer, the end of the tag, or\r\n   * whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | <a b>\r\n   *         ^\r\n   * > | <a b=c>\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeNameAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo) {\r\n      effects.consume(code)\r\n      return completeAttributeValueBefore\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return completeAttributeNameAfter\r\n    }\r\n\r\n    return completeAttributeNameBefore(code)\r\n  }\r\n\r\n  /**\r\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\r\n   * whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | <a b=c>\r\n   *          ^\r\n   * > | <a b=\"c\">\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeValueBefore(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.apostrophe) {\r\n      effects.consume(code)\r\n      markerB = code\r\n      return completeAttributeValueQuoted\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return completeAttributeValueBefore\r\n    }\r\n\r\n    return completeAttributeValueUnquoted(code)\r\n  }\r\n\r\n  /**\r\n   * In double or single quoted attribute value.\r\n   *\r\n   * ```markdown\r\n   * > | <a b=\"c\">\r\n   *           ^\r\n   * > | <a b='c'>\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeValueQuoted(code) {\r\n    if (code === markerB) {\r\n      effects.consume(code)\r\n      markerB = null\r\n      return completeAttributeValueQuotedAfter\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return completeAttributeValueQuoted\r\n  }\r\n\r\n  /**\r\n   * In unquoted attribute value.\r\n   *\r\n   * ```markdown\r\n   * > | <a b=c>\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeValueUnquoted(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return completeAttributeNameAfter(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return completeAttributeValueUnquoted\r\n  }\r\n\r\n  /**\r\n   * After double or single quoted attribute value, before whitespace or the\r\n   * end of the tag.\r\n   *\r\n   * ```markdown\r\n   * > | <a b=\"c\">\r\n   *            ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAttributeValueQuotedAfter(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n    ) {\r\n      return completeAttributeNameBefore(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In certain circumstances of a complete tag where only an `>` is allowed.\r\n   *\r\n   * ```markdown\r\n   * > | <a b=\"c\">\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeEnd(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\r\n      effects.consume(code)\r\n      return completeAfter\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `>` in a complete tag.\r\n   *\r\n   * ```markdown\r\n   * > | <x>\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function completeAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      // // Do not form containers.\r\n      // tokenizer.concrete = true\r\n      return continuation(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return completeAfter\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In continuation of any HTML kind.\r\n   *\r\n   * ```markdown\r\n   * > | <!--xxx-->\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuation(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment) {\r\n      effects.consume(code)\r\n      return continuationCommentInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRaw) {\r\n      effects.consume(code)\r\n      return continuationRawTagOpen\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlDeclaration) {\r\n      effects.consume(code)\r\n      return continuationClose\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.questionMark && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlInstruction) {\r\n      effects.consume(code)\r\n      return continuationDeclarationInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightSquareBracket && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlCdata) {\r\n      effects.consume(code)\r\n      return continuationCdataInside\r\n    }\r\n\r\n    if (\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code) &&\r\n      (marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlBasic || marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComplete)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData)\r\n      return effects.check(\r\n        blankLineBefore,\r\n        continuationAfter,\r\n        continuationStart\r\n      )(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData)\r\n      return continuationStart(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return continuation\r\n  }\r\n\r\n  /**\r\n   * In continuation, at eol.\r\n   *\r\n   * ```markdown\r\n   * > | <x>\r\n   *        ^\r\n   *   | asd\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationStart(code) {\r\n    return effects.check(\r\n      nonLazyContinuationStart,\r\n      continuationStartNonLazy,\r\n      continuationAfter\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * In continuation, at eol, before non-lazy content.\r\n   *\r\n   * ```markdown\r\n   * > | <x>\r\n   *        ^\r\n   *   | asd\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationStartNonLazy(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code))\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n    return continuationBefore\r\n  }\r\n\r\n  /**\r\n   * In continuation, before non-lazy content.\r\n   *\r\n   * ```markdown\r\n   *   | <x>\r\n   * > | asd\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      return continuationStart(code)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData)\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In comment continuation, after one `-`, expecting another.\r\n   *\r\n   * ```markdown\r\n   * > | <!--xxx-->\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationCommentInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      effects.consume(code)\r\n      return continuationDeclarationInside\r\n    }\r\n\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In raw continuation, after `<`, at `/`.\r\n   *\r\n   * ```markdown\r\n   * > | <script>console.log(1)</script>\r\n   *                            ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationRawTagOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\r\n      effects.consume(code)\r\n      buffer = ''\r\n      return continuationRawEndTag\r\n    }\r\n\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In raw continuation, after `</`, in a raw tag name.\r\n   *\r\n   * ```markdown\r\n   * > | <script>console.log(1)</script>\r\n   *                             ^^^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationRawEndTag(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\r\n      const name = buffer.toLowerCase()\r\n\r\n      if (micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlRawNames.includes(name)) {\r\n        effects.consume(code)\r\n        return continuationClose\r\n      }\r\n\r\n      return continuation(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code) && buffer.length < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRawSizeMax) {\r\n      effects.consume(code)\r\n      // @ts-expect-error: not null.\r\n      buffer += String.fromCharCode(code)\r\n      return continuationRawEndTag\r\n    }\r\n\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In cdata continuation, after `]`, expecting `]>`.\r\n   *\r\n   * ```markdown\r\n   * > | <![CDATA[>&<]]>\r\n   *                  ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationCdataInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightSquareBracket) {\r\n      effects.consume(code)\r\n      return continuationDeclarationInside\r\n    }\r\n\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In declaration or instruction continuation, at `>`.\r\n   *\r\n   * ```markdown\r\n   * > | <!-->\r\n   *         ^\r\n   * > | <?>\r\n   *       ^\r\n   * > | <!q>\r\n   *        ^\r\n   * > | <!--ab-->\r\n   *             ^\r\n   * > | <![CDATA[>&<]]>\r\n   *                   ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationDeclarationInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\r\n      effects.consume(code)\r\n      return continuationClose\r\n    }\r\n\r\n    // More dashes.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash && marker === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment) {\r\n      effects.consume(code)\r\n      return continuationDeclarationInside\r\n    }\r\n\r\n    return continuation(code)\r\n  }\r\n\r\n  /**\r\n   * In closed continuation: everything we get until the eol/eof is part of it.\r\n   *\r\n   * ```markdown\r\n   * > | <!doctype>\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationClose(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData)\r\n      return continuationAfter(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return continuationClose\r\n  }\r\n\r\n  /**\r\n   * Done.\r\n   *\r\n   * ```markdown\r\n   * > | <!doctype>\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function continuationAfter(code) {\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow)\r\n    // // Feel free to interrupt.\r\n    // tokenizer.interrupt = false\r\n    // // No longer concrete.\r\n    // tokenizer.concrete = false\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return start\r\n\r\n  /**\r\n   * At eol, before continuation.\r\n   *\r\n   * ```markdown\r\n   * > | * ```js\r\n   *            ^\r\n   *   | b\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      return after\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * A continuation.\r\n   *\r\n   * ```markdown\r\n   *   | * ```js\r\n   * > | b\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\r\n  return start\r\n\r\n  /**\r\n   * Before eol, expecting blank line.\r\n   *\r\n   * ```markdown\r\n   * > | <div>\r\n   *          ^\r\n   *   |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), 'expected a line ending')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n    return effects.attempt(_blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine, ok, nok)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/html-flow.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/html-text.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/html-text.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"htmlText\": function() { return /* binding */ htmlText; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst htmlText = {name: 'htmlText', tokenize: tokenizeHtmlText}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeHtmlText(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {NonNullable<Code> | undefined} */\r\n  let marker\r\n  /** @type {number} */\r\n  let index\r\n  /** @type {State} */\r\n  let returnState\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of HTML (text).\r\n   *\r\n   * ```markdown\r\n   * > | a <b> c\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan, 'expected `<`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlText)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData)\r\n    effects.consume(code)\r\n    return open\r\n  }\r\n\r\n  /**\r\n   * After `<`, at tag name or other stuff.\r\n   *\r\n   * ```markdown\r\n   * > | a <b> c\r\n   *        ^\r\n   * > | a <!doctype> c\r\n   *        ^\r\n   * > | a <!--b--> c\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.exclamationMark) {\r\n      effects.consume(code)\r\n      return declarationOpen\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\r\n      effects.consume(code)\r\n      return tagCloseStart\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.questionMark) {\r\n      effects.consume(code)\r\n      return instruction\r\n    }\r\n\r\n    // ASCII alphabetical.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return tagOpen\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `<!`, at declaration, comment, or CDATA.\r\n   *\r\n   * ```markdown\r\n   * > | a <!doctype> c\r\n   *         ^\r\n   * > | a <!--b--> c\r\n   *         ^\r\n   * > | a <![CDATA[>&<]]> c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function declarationOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\r\n      effects.consume(code)\r\n      return commentOpenInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket) {\r\n      effects.consume(code)\r\n      index = 0\r\n      return cdataOpenInside\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return declaration\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In a comment, after `<!-`, at another `-`.\r\n   *\r\n   * ```markdown\r\n   * > | a <!--b--> c\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function commentOpenInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\r\n      effects.consume(code)\r\n      return commentEnd\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In comment.\r\n   *\r\n   * ```markdown\r\n   * > | a <!--b--> c\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function comment(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\r\n      effects.consume(code)\r\n      return commentClose\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = comment\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return comment\r\n  }\r\n\r\n  /**\r\n   * In comment, after `-`.\r\n   *\r\n   * ```markdown\r\n   * > | a <!--b--> c\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function commentClose(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\r\n      effects.consume(code)\r\n      return commentEnd\r\n    }\r\n\r\n    return comment(code)\r\n  }\r\n\r\n  /**\r\n   * In comment, after `--`.\r\n   *\r\n   * ```markdown\r\n   * > | a <!--b--> c\r\n   *              ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function commentEnd(code) {\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan\r\n      ? end(code)\r\n      : code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash\r\n      ? commentClose(code)\r\n      : comment(code)\r\n  }\r\n\r\n  /**\r\n   * After `<![`, in CDATA, expecting `CDATA[`.\r\n   *\r\n   * ```markdown\r\n   * > | a <![CDATA[>&<]]> b\r\n   *          ^^^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function cdataOpenInside(code) {\r\n    const value = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.cdataOpeningString\r\n\r\n    if (code === value.charCodeAt(index++)) {\r\n      effects.consume(code)\r\n      return index === value.length ? cdata : cdataOpenInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In CDATA.\r\n   *\r\n   * ```markdown\r\n   * > | a <![CDATA[>&<]]> b\r\n   *                ^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function cdata(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.consume(code)\r\n      return cdataClose\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = cdata\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return cdata\r\n  }\r\n\r\n  /**\r\n   * In CDATA, after `]`, at another `]`.\r\n   *\r\n   * ```markdown\r\n   * > | a <![CDATA[>&<]]> b\r\n   *                    ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function cdataClose(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.consume(code)\r\n      return cdataEnd\r\n    }\r\n\r\n    return cdata(code)\r\n  }\r\n\r\n  /**\r\n   * In CDATA, after `]]`, at `>`.\r\n   *\r\n   * ```markdown\r\n   * > | a <![CDATA[>&<]]> b\r\n   *                     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function cdataEnd(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      return end(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.consume(code)\r\n      return cdataEnd\r\n    }\r\n\r\n    return cdata(code)\r\n  }\r\n\r\n  /**\r\n   * In declaration.\r\n   *\r\n   * ```markdown\r\n   * > | a <!b> c\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function declaration(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      return end(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = declaration\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return declaration\r\n  }\r\n\r\n  /**\r\n   * In instruction.\r\n   *\r\n   * ```markdown\r\n   * > | a <?b?> c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function instruction(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.questionMark) {\r\n      effects.consume(code)\r\n      return instructionClose\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = instruction\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return instruction\r\n  }\r\n\r\n  /**\r\n   * In instruction, after `?`, at `>`.\r\n   *\r\n   * ```markdown\r\n   * > | a <?b?> c\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function instructionClose(code) {\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ? end(code) : instruction(code)\r\n  }\r\n\r\n  /**\r\n   * After `</`, in closing tag, at tag name.\r\n   *\r\n   * ```markdown\r\n   * > | a </b> c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagCloseStart(code) {\r\n    // ASCII alphabetical.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return tagClose\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `</x`, in a tag name.\r\n   *\r\n   * ```markdown\r\n   * > | a </b> c\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagClose(code) {\r\n    // ASCII alphanumerical and `-`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) {\r\n      effects.consume(code)\r\n      return tagClose\r\n    }\r\n\r\n    return tagCloseBetween(code)\r\n  }\r\n\r\n  /**\r\n   * In closing tag, after tag name.\r\n   *\r\n   * ```markdown\r\n   * > | a </b> c\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagCloseBetween(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = tagCloseBetween\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return tagCloseBetween\r\n    }\r\n\r\n    return end(code)\r\n  }\r\n\r\n  /**\r\n   * After `<x`, in opening tag name.\r\n   *\r\n   * ```markdown\r\n   * > | a <b> c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpen(code) {\r\n    // ASCII alphanumerical and `-`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) {\r\n      effects.consume(code)\r\n      return tagOpen\r\n    }\r\n\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In opening tag, after tag name.\r\n   *\r\n   * ```markdown\r\n   * > | a <b> c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenBetween(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\r\n      effects.consume(code)\r\n      return end\r\n    }\r\n\r\n    // ASCII alphabetical and `:` and `_`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeName\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = tagOpenBetween\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return tagOpenBetween\r\n    }\r\n\r\n    return end(code)\r\n  }\r\n\r\n  /**\r\n   * In attribute name.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c> d\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeName(code) {\r\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)\r\n    ) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeName\r\n    }\r\n\r\n    return tagOpenAttributeNameAfter(code)\r\n  }\r\n\r\n  /**\r\n   * After attribute name, before initializer, the end of the tag, or\r\n   * whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c> d\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeNameAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeValueBefore\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = tagOpenAttributeNameAfter\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeNameAfter\r\n    }\r\n\r\n    return tagOpenBetween(code)\r\n  }\r\n\r\n  /**\r\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\r\n   * whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c=d> e\r\n   *            ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeValueBefore(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe) {\r\n      effects.consume(code)\r\n      marker = code\r\n      return tagOpenAttributeValueQuoted\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = tagOpenAttributeValueBefore\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeValueBefore\r\n    }\r\n\r\n    effects.consume(code)\r\n    return tagOpenAttributeValueUnquoted\r\n  }\r\n\r\n  /**\r\n   * In double or single quoted attribute value.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c=\"d\"> e\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeValueQuoted(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      marker = undefined\r\n      return tagOpenAttributeValueQuotedAfter\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      returnState = tagOpenAttributeValueQuoted\r\n      return lineEndingBefore(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return tagOpenAttributeValueQuoted\r\n  }\r\n\r\n  /**\r\n   * In unquoted attribute value.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c=d> e\r\n   *            ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeValueUnquoted(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return tagOpenAttributeValueUnquoted\r\n  }\r\n\r\n  /**\r\n   * After double or single quoted attribute value, before whitespace or the end\r\n   * of the tag.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c=\"d\"> e\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function tagOpenAttributeValueQuotedAfter(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In certain circumstances of a tag where only an `>` is allowed.\r\n   *\r\n   * ```markdown\r\n   * > | a <b c=\"d\"> e\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function end(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlText)\r\n      return ok\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * At eol.\r\n   *\r\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\r\n   * > empty tokens.\r\n   *\r\n   * ```markdown\r\n   * > | a <!--a\r\n   *            ^\r\n   *   | b-->\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function lineEndingBefore(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(returnState, 'expected return state')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), 'expected eol')\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    return lineEndingAfter\r\n  }\r\n\r\n  /**\r\n   * After eol, at optional whitespace.\r\n   *\r\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\r\n   * > empty tokens.\r\n   *\r\n   * ```markdown\r\n   *   | a <!--a\r\n   * > | b-->\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function lineEndingAfter(code) {\r\n    // Always populated by defaults.\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.parser.constructs.disable.null,\r\n      'expected `disable.null` to be populated'\r\n    )\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(\r\n          effects,\r\n          lineEndingAfterPrefix,\r\n          micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix,\r\n          self.parser.constructs.disable.null.includes('codeIndented')\r\n            ? undefined\r\n            : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize\r\n        )(code)\r\n      : lineEndingAfterPrefix(code)\r\n  }\r\n\r\n  /**\r\n   * After eol, after optional whitespace.\r\n   *\r\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\r\n   * > empty tokens.\r\n   *\r\n   * ```markdown\r\n   *   | a <!--a\r\n   * > | b-->\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function lineEndingAfterPrefix(code) {\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData)\r\n    return returnState(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/html-text.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/label-end.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/label-end.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"labelEnd\": function() { return /* binding */ labelEnd; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_destination__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! micromark-factory-destination */ \"./node_modules/micromark-factory-destination/dev/index.js\");\n/* harmony import */ var micromark_factory_label__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! micromark-factory-label */ \"./node_modules/micromark-factory-label/dev/index.js\");\n/* harmony import */ var micromark_factory_title__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! micromark-factory-title */ \"./node_modules/micromark-factory-title/dev/index.js\");\n/* harmony import */ var micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-whitespace */ \"./node_modules/micromark-factory-whitespace/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"./node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst labelEnd = {\r\n  name: 'labelEnd',\r\n  tokenize: tokenizeLabelEnd,\r\n  resolveTo: resolveToLabelEnd,\r\n  resolveAll: resolveAllLabelEnd\r\n}\r\n\r\n/** @type {Construct} */\r\nconst resourceConstruct = {tokenize: tokenizeResource}\r\n/** @type {Construct} */\r\nconst referenceFullConstruct = {tokenize: tokenizeReferenceFull}\r\n/** @type {Construct} */\r\nconst referenceCollapsedConstruct = {tokenize: tokenizeReferenceCollapsed}\r\n\r\n/** @type {Resolver} */\r\nfunction resolveAllLabelEnd(events) {\r\n  let index = -1\r\n\r\n  while (++index < events.length) {\r\n    const token = events[index][1]\r\n\r\n    if (\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd\r\n    ) {\r\n      // Remove the marker.\r\n      events.splice(index + 1, token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage ? 4 : 2)\r\n      token.type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data\r\n      index++\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/** @type {Resolver} */\r\nfunction resolveToLabelEnd(events, context) {\r\n  let index = events.length\r\n  let offset = 0\r\n  /** @type {Token} */\r\n  let token\r\n  /** @type {number | undefined} */\r\n  let open\r\n  /** @type {number | undefined} */\r\n  let close\r\n  /** @type {Array<Event>} */\r\n  let media\r\n\r\n  // Find an opening.\r\n  while (index--) {\r\n    token = events[index][1]\r\n\r\n    if (open) {\r\n      // If we see another link, or inactive link label, we’ve been here before.\r\n      if (\r\n        token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.link ||\r\n        (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink && token._inactive)\r\n      ) {\r\n        break\r\n      }\r\n\r\n      // Mark other link openings as inactive, as we can’t have links in\r\n      // links.\r\n      if (events[index][0] === 'enter' && token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) {\r\n        token._inactive = true\r\n      }\r\n    } else if (close) {\r\n      if (\r\n        events[index][0] === 'enter' &&\r\n        (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage || token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) &&\r\n        !token._balanced\r\n      ) {\r\n        open = index\r\n\r\n        if (token.type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) {\r\n          offset = 2\r\n          break\r\n        }\r\n      }\r\n    } else if (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd) {\r\n      close = index\r\n    }\r\n  }\r\n\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(open !== undefined, '`open` is supposed to be found')\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(close !== undefined, '`close` is supposed to be found')\r\n\r\n  const group = {\r\n    type: events[open][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.link : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.image,\r\n    start: Object.assign({}, events[open][1].start),\r\n    end: Object.assign({}, events[events.length - 1][1].end)\r\n  }\r\n\r\n  const label = {\r\n    type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.label,\r\n    start: Object.assign({}, events[open][1].start),\r\n    end: Object.assign({}, events[close][1].end)\r\n  }\r\n\r\n  const text = {\r\n    type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelText,\r\n    start: Object.assign({}, events[open + offset + 2][1].end),\r\n    end: Object.assign({}, events[close - 2][1].start)\r\n  }\r\n\r\n  media = [\r\n    ['enter', group, context],\r\n    ['enter', label, context]\r\n  ]\r\n\r\n  // Opening marker.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, events.slice(open + 1, open + offset + 3))\r\n\r\n  // Text open.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [['enter', text, context]])\r\n\r\n  // Always populated by defaults.\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n    context.parser.constructs.insideSpan.null,\r\n    'expected `insideSpan.null` to be populated'\r\n  )\r\n  // Between.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(\r\n    media,\r\n    (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(\r\n      context.parser.constructs.insideSpan.null,\r\n      events.slice(open + offset + 4, close - 3),\r\n      context\r\n    )\r\n  )\r\n\r\n  // Text close, marker close, label close.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [\r\n    ['exit', text, context],\r\n    events[close - 2],\r\n    events[close - 1],\r\n    ['exit', label, context]\r\n  ])\r\n\r\n  // Reference, resource, or so.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, events.slice(close + 1))\r\n\r\n  // Media close.\r\n  media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [['exit', group, context]])\r\n\r\n  ;(0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open, events.length, media)\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeLabelEnd(effects, ok, nok) {\r\n  const self = this\r\n  let index = self.events.length\r\n  /** @type {Token} */\r\n  let labelStart\r\n  /** @type {boolean} */\r\n  let defined\r\n\r\n  // Find an opening.\r\n  while (index--) {\r\n    if (\r\n      (self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage ||\r\n        self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) &&\r\n      !self.events[index][1]._balanced\r\n    ) {\r\n      labelStart = self.events[index][1]\r\n      break\r\n    }\r\n  }\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of label end.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *       ^\r\n   * > | [a][b] c\r\n   *       ^\r\n   * > | [a][] b\r\n   *       ^\r\n   * > | [a] b\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightSquareBracket, 'expected `]`')\r\n\r\n    // If there is not an okay opening.\r\n    if (!labelStart) {\r\n      return nok(code)\r\n    }\r\n\r\n    // If the corresponding label (link) start is marked as inactive,\r\n    // it means we’d be wrapping a link, like this:\r\n    //\r\n    // ```markdown\r\n    // > | a [b [c](d) e](f) g.\r\n    //                  ^\r\n    // ```\r\n    //\r\n    // We can’t have that, so it’s just balanced brackets.\r\n    if (labelStart._inactive) {\r\n      return labelEndNok(code)\r\n    }\r\n\r\n    defined = self.parser.defined.includes(\r\n      (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__.normalizeIdentifier)(\r\n        self.sliceSerialize({start: labelStart.end, end: self.now()})\r\n      )\r\n    )\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelMarker)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd)\r\n    return after\r\n  }\r\n\r\n  /**\r\n   * After `]`.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *       ^\r\n   * > | [a][b] c\r\n   *       ^\r\n   * > | [a][] b\r\n   *       ^\r\n   * > | [a] b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\r\n    // an extension.\r\n\r\n    // Resource (`[asd](fgh)`)?\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis) {\r\n      return effects.attempt(\r\n        resourceConstruct,\r\n        labelEndOk,\r\n        defined ? labelEndOk : labelEndNok\r\n      )(code)\r\n    }\r\n\r\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket) {\r\n      return effects.attempt(\r\n        referenceFullConstruct,\r\n        labelEndOk,\r\n        defined ? referenceNotFull : labelEndNok\r\n      )(code)\r\n    }\r\n\r\n    // Shortcut (`[asd]`) reference?\r\n    return defined ? labelEndOk(code) : labelEndNok(code)\r\n  }\r\n\r\n  /**\r\n   * After `]`, at `[`, but not at a full reference.\r\n   *\r\n   * > 👉 **Note**: we only get here if the label is defined.\r\n   *\r\n   * ```markdown\r\n   * > | [a][] b\r\n   *        ^\r\n   * > | [a] b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function referenceNotFull(code) {\r\n    return effects.attempt(\r\n      referenceCollapsedConstruct,\r\n      labelEndOk,\r\n      labelEndNok\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * Done, we found something.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *           ^\r\n   * > | [a][b] c\r\n   *           ^\r\n   * > | [a][] b\r\n   *          ^\r\n   * > | [a] b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelEndOk(code) {\r\n    // Note: `markdown-rs` does a bunch of stuff here.\r\n    return ok(code)\r\n  }\r\n\r\n  /**\r\n   * Done, it’s nothing.\r\n   *\r\n   * There was an okay opening, but we didn’t match anything.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b c\r\n   *        ^\r\n   * > | [a][b c\r\n   *        ^\r\n   * > | [a] b\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelEndNok(code) {\r\n    labelStart._balanced = true\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeResource(effects, ok, nok) {\r\n  return resourceStart\r\n\r\n  /**\r\n   * At a resource.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceStart(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis, 'expected left paren')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resource)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker)\r\n    return resourceBefore\r\n  }\r\n\r\n  /**\r\n   * In resource, after `(`, at optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceBefore(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_6__.markdownLineEndingOrSpace)(code)\r\n      ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_7__.factoryWhitespace)(effects, resourceOpen)(code)\r\n      : resourceOpen(code)\r\n  }\r\n\r\n  /**\r\n   * In resource, after optional whitespace, at `)` or a destination.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightParenthesis) {\r\n      return resourceEnd(code)\r\n    }\r\n\r\n    return (0,micromark_factory_destination__WEBPACK_IMPORTED_MODULE_8__.factoryDestination)(\r\n      effects,\r\n      resourceDestinationAfter,\r\n      resourceDestinationMissing,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestination,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationLiteral,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationLiteralMarker,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationRaw,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationString,\r\n      micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_9__.constants.linkResourceDestinationBalanceMax\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * In resource, after destination, at optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) c\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceDestinationAfter(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_6__.markdownLineEndingOrSpace)(code)\r\n      ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_7__.factoryWhitespace)(effects, resourceBetween)(code)\r\n      : resourceEnd(code)\r\n  }\r\n\r\n  /**\r\n   * At invalid destination.\r\n   *\r\n   * ```markdown\r\n   * > | [a](<<) b\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceDestinationMissing(code) {\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In resource, after destination and whitespace, at `(` or title.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b ) c\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceBetween(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis\r\n    ) {\r\n      return (0,micromark_factory_title__WEBPACK_IMPORTED_MODULE_10__.factoryTitle)(\r\n        effects,\r\n        resourceTitleAfter,\r\n        nok,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitle,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitleMarker,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitleString\r\n      )(code)\r\n    }\r\n\r\n    return resourceEnd(code)\r\n  }\r\n\r\n  /**\r\n   * In resource, after title, at optional whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b \"c\") d\r\n   *              ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceTitleAfter(code) {\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_6__.markdownLineEndingOrSpace)(code)\r\n      ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_7__.factoryWhitespace)(effects, resourceEnd)(code)\r\n      : resourceEnd(code)\r\n  }\r\n\r\n  /**\r\n   * In resource, at `)`.\r\n   *\r\n   * ```markdown\r\n   * > | [a](b) d\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function resourceEnd(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightParenthesis) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resource)\r\n      return ok\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeReferenceFull(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return referenceFull\r\n\r\n  /**\r\n   * In a reference (full), at the `[`.\r\n   *\r\n   * ```markdown\r\n   * > | [a][b] d\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function referenceFull(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket, 'expected left bracket')\r\n    return micromark_factory_label__WEBPACK_IMPORTED_MODULE_11__.factoryLabel.call(\r\n      self,\r\n      effects,\r\n      referenceFullAfter,\r\n      referenceFullMissing,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceString\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * In a reference (full), after `]`.\r\n   *\r\n   * ```markdown\r\n   * > | [a][b] d\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function referenceFullAfter(code) {\r\n    return self.parser.defined.includes(\r\n      (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__.normalizeIdentifier)(\r\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\r\n      )\r\n    )\r\n      ? ok(code)\r\n      : nok(code)\r\n  }\r\n\r\n  /**\r\n   * In reference (full) that was missing.\r\n   *\r\n   * ```markdown\r\n   * > | [a][b d\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function referenceFullMissing(code) {\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\r\n  return referenceCollapsedStart\r\n\r\n  /**\r\n   * In reference (collapsed), at `[`.\r\n   *\r\n   * > 👉 **Note**: we only get here if the label is defined.\r\n   *\r\n   * ```markdown\r\n   * > | [a][] d\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function referenceCollapsedStart(code) {\r\n    // We only attempt a collapsed label if there’s a `[`.\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket, 'expected left bracket')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker)\r\n    return referenceCollapsedOpen\r\n  }\r\n\r\n  /**\r\n   * In reference (collapsed), at `]`.\r\n   *\r\n   * > 👉 **Note**: we only get here if the label is defined.\r\n   *\r\n   * ```markdown\r\n   * > | [a][] d\r\n   *         ^\r\n   * ```\r\n   *\r\n   *  @type {State}\r\n   */\r\n  function referenceCollapsedOpen(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightSquareBracket) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference)\r\n      return ok\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLWVuZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLHlDQUF5QztBQUN0RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ2dFO0FBQ1o7QUFDQTtBQUNVO0FBQ0k7QUFDZjtBQUNvQjtBQUNsQjtBQUNEO0FBQ1E7QUFDUjtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxXQUFXO0FBQ2Y7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEIsMkJBQTJCO0FBQzNCLFdBQVcsV0FBVztBQUN0QixnQ0FBZ0M7QUFDaEMsV0FBVyxXQUFXO0FBQ3RCLHFDQUFxQztBQUNyQztBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0RUFBZ0I7QUFDckMscUJBQXFCLDJFQUFlO0FBQ3BDLHFCQUFxQiwwRUFBYztBQUNuQztBQUNBO0FBQ0EsOENBQThDLDRFQUFnQjtBQUM5RCxtQkFBbUIsc0VBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsYUFBYSxvQkFBb0I7QUFDakM7QUFDQSxhQUFhLG9CQUFvQjtBQUNqQztBQUNBLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0VBQVU7QUFDakMsd0JBQXdCLDJFQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwyRUFBZTtBQUN4RTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQWdCLG1CQUFtQiwyRUFBZTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyRUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0JBQXdCLDBFQUFjO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw4Q0FBTTtBQUNSLEVBQUUsK0NBQU07QUFDUjtBQUNBO0FBQ0EsbUNBQW1DLDJFQUFlLEdBQUcsc0VBQVUsR0FBRyx1RUFBVztBQUM3RSwyQkFBMkI7QUFDM0IseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUVBQVc7QUFDckIsMkJBQTJCO0FBQzNCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxVQUFVLDJFQUFlO0FBQ3pCLDJCQUEyQjtBQUMzQix5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsNERBQUk7QUFDZDtBQUNBO0FBQ0EsVUFBVSw0REFBSTtBQUNkO0FBQ0E7QUFDQSxFQUFFLCtDQUFNO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFJO0FBQ2Q7QUFDQSxJQUFJLHNFQUFVO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFJO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFJO0FBQ2Q7QUFDQTtBQUNBLFVBQVUsNERBQUk7QUFDZDtBQUNBLEVBQUUsK0RBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDRFQUFnQjtBQUN0RCx1Q0FBdUMsMkVBQWU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLElBQUksK0NBQU0sVUFBVSxvRkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0ZBQW1CO0FBQ3pCLDZCQUE2Qix1Q0FBdUM7QUFDcEU7QUFDQTtBQUNBLGtCQUFrQiwwRUFBYztBQUNoQyxrQkFBa0IsNkVBQWlCO0FBQ25DO0FBQ0EsaUJBQWlCLDZFQUFpQjtBQUNsQyxpQkFBaUIsMEVBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUZBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUZBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsSUFBSSwrQ0FBTSxVQUFVLGlGQUFxQjtBQUN6QyxrQkFBa0IsMEVBQWM7QUFDaEMsa0JBQWtCLGdGQUFvQjtBQUN0QztBQUNBLGlCQUFpQixnRkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsV0FBVyxtRkFBeUI7QUFDcEMsUUFBUSwrRUFBaUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsaUJBQWlCLGtGQUFzQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxXQUFXLGlGQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFGQUF5QjtBQUMvQixNQUFNLDRGQUFnQztBQUN0QyxNQUFNLGtHQUFzQztBQUM1QyxNQUFNLHdGQUE0QjtBQUNsQyxNQUFNLDJGQUErQjtBQUNyQyxNQUFNLDJHQUEyQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxXQUFXLG1GQUF5QjtBQUNwQyxRQUFRLCtFQUFpQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0VBQW1CO0FBQ2xDLGVBQWUsNEVBQWdCO0FBQy9CLGVBQWUsaUZBQXFCO0FBQ3BDO0FBQ0EsYUFBYSxzRUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxRQUFRLCtFQUFtQjtBQUMzQixRQUFRLHFGQUF5QjtBQUNqQyxRQUFRLHFGQUF5QjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxXQUFXLG1GQUF5QjtBQUNwQyxRQUFRLCtFQUFpQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxpQkFBaUIsa0ZBQXNCO0FBQ3ZDLG9CQUFvQixnRkFBb0I7QUFDeEM7QUFDQSxtQkFBbUIsZ0ZBQW9CO0FBQ3ZDLG1CQUFtQiwwRUFBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxJQUFJLCtDQUFNLFVBQVUsbUZBQXVCO0FBQzNDLFdBQVcsdUVBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSwyRUFBZTtBQUNyQixNQUFNLGlGQUFxQjtBQUMzQixNQUFNLGlGQUFxQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0ZBQW1CO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxJQUFJLCtDQUFNLFVBQVUsbUZBQXVCO0FBQzNDLGtCQUFrQiwyRUFBZTtBQUNqQyxrQkFBa0IsaUZBQXFCO0FBQ3ZDO0FBQ0EsaUJBQWlCLGlGQUFxQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsaUJBQWlCLG9GQUF3QjtBQUN6QyxvQkFBb0IsaUZBQXFCO0FBQ3pDO0FBQ0EsbUJBQW1CLGlGQUFxQjtBQUN4QyxtQkFBbUIsMkVBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvbGFiZWwtZW5kLmpzP2E2ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5FdmVudH0gRXZlbnRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5SZXNvbHZlcn0gUmVzb2x2ZXJcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5TdGF0ZX0gU3RhdGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbn0gVG9rZW5cclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZUNvbnRleHR9IFRva2VuaXplQ29udGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplcn0gVG9rZW5pemVyXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtmYWN0b3J5RGVzdGluYXRpb259IGZyb20gJ21pY3JvbWFyay1mYWN0b3J5LWRlc3RpbmF0aW9uJ1xyXG5pbXBvcnQge2ZhY3RvcnlMYWJlbH0gZnJvbSAnbWljcm9tYXJrLWZhY3RvcnktbGFiZWwnXHJcbmltcG9ydCB7ZmFjdG9yeVRpdGxlfSBmcm9tICdtaWNyb21hcmstZmFjdG9yeS10aXRsZSdcclxuaW1wb3J0IHtmYWN0b3J5V2hpdGVzcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktd2hpdGVzcGFjZSdcclxuaW1wb3J0IHttYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXHJcbmltcG9ydCB7cHVzaCwgc3BsaWNlfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaHVua2VkJ1xyXG5pbXBvcnQge25vcm1hbGl6ZUlkZW50aWZpZXJ9IGZyb20gJ21pY3JvbWFyay11dGlsLW5vcm1hbGl6ZS1pZGVudGlmaWVyJ1xyXG5pbXBvcnQge3Jlc29sdmVBbGx9IGZyb20gJ21pY3JvbWFyay11dGlsLXJlc29sdmUtYWxsJ1xyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmV4cG9ydCBjb25zdCBsYWJlbEVuZCA9IHtcclxuICBuYW1lOiAnbGFiZWxFbmQnLFxyXG4gIHRva2VuaXplOiB0b2tlbml6ZUxhYmVsRW5kLFxyXG4gIHJlc29sdmVUbzogcmVzb2x2ZVRvTGFiZWxFbmQsXHJcbiAgcmVzb2x2ZUFsbDogcmVzb2x2ZUFsbExhYmVsRW5kXHJcbn1cclxuXHJcbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xyXG5jb25zdCByZXNvdXJjZUNvbnN0cnVjdCA9IHt0b2tlbml6ZTogdG9rZW5pemVSZXNvdXJjZX1cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmNvbnN0IHJlZmVyZW5jZUZ1bGxDb25zdHJ1Y3QgPSB7dG9rZW5pemU6IHRva2VuaXplUmVmZXJlbmNlRnVsbH1cclxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXHJcbmNvbnN0IHJlZmVyZW5jZUNvbGxhcHNlZENvbnN0cnVjdCA9IHt0b2tlbml6ZTogdG9rZW5pemVSZWZlcmVuY2VDb2xsYXBzZWR9XHJcblxyXG4vKiogQHR5cGUge1Jlc29sdmVyfSAqL1xyXG5mdW5jdGlvbiByZXNvbHZlQWxsTGFiZWxFbmQoZXZlbnRzKSB7XHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBldmVudHMubGVuZ3RoKSB7XHJcbiAgICBjb25zdCB0b2tlbiA9IGV2ZW50c1tpbmRleF1bMV1cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIHRva2VuLnR5cGUgPT09IHR5cGVzLmxhYmVsSW1hZ2UgfHxcclxuICAgICAgdG9rZW4udHlwZSA9PT0gdHlwZXMubGFiZWxMaW5rIHx8XHJcbiAgICAgIHRva2VuLnR5cGUgPT09IHR5cGVzLmxhYmVsRW5kXHJcbiAgICApIHtcclxuICAgICAgLy8gUmVtb3ZlIHRoZSBtYXJrZXIuXHJcbiAgICAgIGV2ZW50cy5zcGxpY2UoaW5kZXggKyAxLCB0b2tlbi50eXBlID09PSB0eXBlcy5sYWJlbEltYWdlID8gNCA6IDIpXHJcbiAgICAgIHRva2VuLnR5cGUgPSB0eXBlcy5kYXRhXHJcbiAgICAgIGluZGV4KytcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBldmVudHNcclxufVxyXG5cclxuLyoqIEB0eXBlIHtSZXNvbHZlcn0gKi9cclxuZnVuY3Rpb24gcmVzb2x2ZVRvTGFiZWxFbmQoZXZlbnRzLCBjb250ZXh0KSB7XHJcbiAgbGV0IGluZGV4ID0gZXZlbnRzLmxlbmd0aFxyXG4gIGxldCBvZmZzZXQgPSAwXHJcbiAgLyoqIEB0eXBlIHtUb2tlbn0gKi9cclxuICBsZXQgdG9rZW5cclxuICAvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cclxuICBsZXQgb3BlblxyXG4gIC8qKiBAdHlwZSB7bnVtYmVyIHwgdW5kZWZpbmVkfSAqL1xyXG4gIGxldCBjbG9zZVxyXG4gIC8qKiBAdHlwZSB7QXJyYXk8RXZlbnQ+fSAqL1xyXG4gIGxldCBtZWRpYVxyXG5cclxuICAvLyBGaW5kIGFuIG9wZW5pbmcuXHJcbiAgd2hpbGUgKGluZGV4LS0pIHtcclxuICAgIHRva2VuID0gZXZlbnRzW2luZGV4XVsxXVxyXG5cclxuICAgIGlmIChvcGVuKSB7XHJcbiAgICAgIC8vIElmIHdlIHNlZSBhbm90aGVyIGxpbmssIG9yIGluYWN0aXZlIGxpbmsgbGFiZWwsIHdl4oCZdmUgYmVlbiBoZXJlIGJlZm9yZS5cclxuICAgICAgaWYgKFxyXG4gICAgICAgIHRva2VuLnR5cGUgPT09IHR5cGVzLmxpbmsgfHxcclxuICAgICAgICAodG9rZW4udHlwZSA9PT0gdHlwZXMubGFiZWxMaW5rICYmIHRva2VuLl9pbmFjdGl2ZSlcclxuICAgICAgKSB7XHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gTWFyayBvdGhlciBsaW5rIG9wZW5pbmdzIGFzIGluYWN0aXZlLCBhcyB3ZSBjYW7igJl0IGhhdmUgbGlua3MgaW5cclxuICAgICAgLy8gbGlua3MuXHJcbiAgICAgIGlmIChldmVudHNbaW5kZXhdWzBdID09PSAnZW50ZXInICYmIHRva2VuLnR5cGUgPT09IHR5cGVzLmxhYmVsTGluaykge1xyXG4gICAgICAgIHRva2VuLl9pbmFjdGl2ZSA9IHRydWVcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChjbG9zZSkge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZXZlbnRzW2luZGV4XVswXSA9PT0gJ2VudGVyJyAmJlxyXG4gICAgICAgICh0b2tlbi50eXBlID09PSB0eXBlcy5sYWJlbEltYWdlIHx8IHRva2VuLnR5cGUgPT09IHR5cGVzLmxhYmVsTGluaykgJiZcclxuICAgICAgICAhdG9rZW4uX2JhbGFuY2VkXHJcbiAgICAgICkge1xyXG4gICAgICAgIG9wZW4gPSBpbmRleFxyXG5cclxuICAgICAgICBpZiAodG9rZW4udHlwZSAhPT0gdHlwZXMubGFiZWxMaW5rKSB7XHJcbiAgICAgICAgICBvZmZzZXQgPSAyXHJcbiAgICAgICAgICBicmVha1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0b2tlbi50eXBlID09PSB0eXBlcy5sYWJlbEVuZCkge1xyXG4gICAgICBjbG9zZSA9IGluZGV4XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3NlcnQob3BlbiAhPT0gdW5kZWZpbmVkLCAnYG9wZW5gIGlzIHN1cHBvc2VkIHRvIGJlIGZvdW5kJylcclxuICBhc3NlcnQoY2xvc2UgIT09IHVuZGVmaW5lZCwgJ2BjbG9zZWAgaXMgc3VwcG9zZWQgdG8gYmUgZm91bmQnKVxyXG5cclxuICBjb25zdCBncm91cCA9IHtcclxuICAgIHR5cGU6IGV2ZW50c1tvcGVuXVsxXS50eXBlID09PSB0eXBlcy5sYWJlbExpbmsgPyB0eXBlcy5saW5rIDogdHlwZXMuaW1hZ2UsXHJcbiAgICBzdGFydDogT2JqZWN0LmFzc2lnbih7fSwgZXZlbnRzW29wZW5dWzFdLnN0YXJ0KSxcclxuICAgIGVuZDogT2JqZWN0LmFzc2lnbih7fSwgZXZlbnRzW2V2ZW50cy5sZW5ndGggLSAxXVsxXS5lbmQpXHJcbiAgfVxyXG5cclxuICBjb25zdCBsYWJlbCA9IHtcclxuICAgIHR5cGU6IHR5cGVzLmxhYmVsLFxyXG4gICAgc3RhcnQ6IE9iamVjdC5hc3NpZ24oe30sIGV2ZW50c1tvcGVuXVsxXS5zdGFydCksXHJcbiAgICBlbmQ6IE9iamVjdC5hc3NpZ24oe30sIGV2ZW50c1tjbG9zZV1bMV0uZW5kKVxyXG4gIH1cclxuXHJcbiAgY29uc3QgdGV4dCA9IHtcclxuICAgIHR5cGU6IHR5cGVzLmxhYmVsVGV4dCxcclxuICAgIHN0YXJ0OiBPYmplY3QuYXNzaWduKHt9LCBldmVudHNbb3BlbiArIG9mZnNldCArIDJdWzFdLmVuZCksXHJcbiAgICBlbmQ6IE9iamVjdC5hc3NpZ24oe30sIGV2ZW50c1tjbG9zZSAtIDJdWzFdLnN0YXJ0KVxyXG4gIH1cclxuXHJcbiAgbWVkaWEgPSBbXHJcbiAgICBbJ2VudGVyJywgZ3JvdXAsIGNvbnRleHRdLFxyXG4gICAgWydlbnRlcicsIGxhYmVsLCBjb250ZXh0XVxyXG4gIF1cclxuXHJcbiAgLy8gT3BlbmluZyBtYXJrZXIuXHJcbiAgbWVkaWEgPSBwdXNoKG1lZGlhLCBldmVudHMuc2xpY2Uob3BlbiArIDEsIG9wZW4gKyBvZmZzZXQgKyAzKSlcclxuXHJcbiAgLy8gVGV4dCBvcGVuLlxyXG4gIG1lZGlhID0gcHVzaChtZWRpYSwgW1snZW50ZXInLCB0ZXh0LCBjb250ZXh0XV0pXHJcblxyXG4gIC8vIEFsd2F5cyBwb3B1bGF0ZWQgYnkgZGVmYXVsdHMuXHJcbiAgYXNzZXJ0KFxyXG4gICAgY29udGV4dC5wYXJzZXIuY29uc3RydWN0cy5pbnNpZGVTcGFuLm51bGwsXHJcbiAgICAnZXhwZWN0ZWQgYGluc2lkZVNwYW4ubnVsbGAgdG8gYmUgcG9wdWxhdGVkJ1xyXG4gIClcclxuICAvLyBCZXR3ZWVuLlxyXG4gIG1lZGlhID0gcHVzaChcclxuICAgIG1lZGlhLFxyXG4gICAgcmVzb2x2ZUFsbChcclxuICAgICAgY29udGV4dC5wYXJzZXIuY29uc3RydWN0cy5pbnNpZGVTcGFuLm51bGwsXHJcbiAgICAgIGV2ZW50cy5zbGljZShvcGVuICsgb2Zmc2V0ICsgNCwgY2xvc2UgLSAzKSxcclxuICAgICAgY29udGV4dFxyXG4gICAgKVxyXG4gIClcclxuXHJcbiAgLy8gVGV4dCBjbG9zZSwgbWFya2VyIGNsb3NlLCBsYWJlbCBjbG9zZS5cclxuICBtZWRpYSA9IHB1c2gobWVkaWEsIFtcclxuICAgIFsnZXhpdCcsIHRleHQsIGNvbnRleHRdLFxyXG4gICAgZXZlbnRzW2Nsb3NlIC0gMl0sXHJcbiAgICBldmVudHNbY2xvc2UgLSAxXSxcclxuICAgIFsnZXhpdCcsIGxhYmVsLCBjb250ZXh0XVxyXG4gIF0pXHJcblxyXG4gIC8vIFJlZmVyZW5jZSwgcmVzb3VyY2UsIG9yIHNvLlxyXG4gIG1lZGlhID0gcHVzaChtZWRpYSwgZXZlbnRzLnNsaWNlKGNsb3NlICsgMSkpXHJcblxyXG4gIC8vIE1lZGlhIGNsb3NlLlxyXG4gIG1lZGlhID0gcHVzaChtZWRpYSwgW1snZXhpdCcsIGdyb3VwLCBjb250ZXh0XV0pXHJcblxyXG4gIHNwbGljZShldmVudHMsIG9wZW4sIGV2ZW50cy5sZW5ndGgsIG1lZGlhKVxyXG5cclxuICByZXR1cm4gZXZlbnRzXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gdG9rZW5pemVMYWJlbEVuZChlZmZlY3RzLCBvaywgbm9rKSB7XHJcbiAgY29uc3Qgc2VsZiA9IHRoaXNcclxuICBsZXQgaW5kZXggPSBzZWxmLmV2ZW50cy5sZW5ndGhcclxuICAvKiogQHR5cGUge1Rva2VufSAqL1xyXG4gIGxldCBsYWJlbFN0YXJ0XHJcbiAgLyoqIEB0eXBlIHtib29sZWFufSAqL1xyXG4gIGxldCBkZWZpbmVkXHJcblxyXG4gIC8vIEZpbmQgYW4gb3BlbmluZy5cclxuICB3aGlsZSAoaW5kZXgtLSkge1xyXG4gICAgaWYgKFxyXG4gICAgICAoc2VsZi5ldmVudHNbaW5kZXhdWzFdLnR5cGUgPT09IHR5cGVzLmxhYmVsSW1hZ2UgfHxcclxuICAgICAgICBzZWxmLmV2ZW50c1tpbmRleF1bMV0udHlwZSA9PT0gdHlwZXMubGFiZWxMaW5rKSAmJlxyXG4gICAgICAhc2VsZi5ldmVudHNbaW5kZXhdWzFdLl9iYWxhbmNlZFxyXG4gICAgKSB7XHJcbiAgICAgIGxhYmVsU3RhcnQgPSBzZWxmLmV2ZW50c1tpbmRleF1bMV1cclxuICAgICAgYnJlYWtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBzdGFydFxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBvZiBsYWJlbCBlbmQuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oYikgY1xyXG4gICAqICAgICAgIF5cclxuICAgKiA+IHwgW2FdW2JdIGNcclxuICAgKiAgICAgICBeXHJcbiAgICogPiB8IFthXVtdIGJcclxuICAgKiAgICAgICBeXHJcbiAgICogPiB8IFthXSBiXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xyXG4gICAgYXNzZXJ0KGNvZGUgPT09IGNvZGVzLnJpZ2h0U3F1YXJlQnJhY2tldCwgJ2V4cGVjdGVkIGBdYCcpXHJcblxyXG4gICAgLy8gSWYgdGhlcmUgaXMgbm90IGFuIG9rYXkgb3BlbmluZy5cclxuICAgIGlmICghbGFiZWxTdGFydCkge1xyXG4gICAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgdGhlIGNvcnJlc3BvbmRpbmcgbGFiZWwgKGxpbmspIHN0YXJ0IGlzIG1hcmtlZCBhcyBpbmFjdGl2ZSxcclxuICAgIC8vIGl0IG1lYW5zIHdl4oCZZCBiZSB3cmFwcGluZyBhIGxpbmssIGxpa2UgdGhpczpcclxuICAgIC8vXHJcbiAgICAvLyBgYGBtYXJrZG93blxyXG4gICAgLy8gPiB8IGEgW2IgW2NdKGQpIGVdKGYpIGcuXHJcbiAgICAvLyAgICAgICAgICAgICAgICAgIF5cclxuICAgIC8vIGBgYFxyXG4gICAgLy9cclxuICAgIC8vIFdlIGNhbuKAmXQgaGF2ZSB0aGF0LCBzbyBpdOKAmXMganVzdCBiYWxhbmNlZCBicmFja2V0cy5cclxuICAgIGlmIChsYWJlbFN0YXJ0Ll9pbmFjdGl2ZSkge1xyXG4gICAgICByZXR1cm4gbGFiZWxFbmROb2soY29kZSlcclxuICAgIH1cclxuXHJcbiAgICBkZWZpbmVkID0gc2VsZi5wYXJzZXIuZGVmaW5lZC5pbmNsdWRlcyhcclxuICAgICAgbm9ybWFsaXplSWRlbnRpZmllcihcclxuICAgICAgICBzZWxmLnNsaWNlU2VyaWFsaXplKHtzdGFydDogbGFiZWxTdGFydC5lbmQsIGVuZDogc2VsZi5ub3coKX0pXHJcbiAgICAgIClcclxuICAgIClcclxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMubGFiZWxFbmQpXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxhYmVsTWFya2VyKVxyXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGFiZWxNYXJrZXIpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGFiZWxFbmQpXHJcbiAgICByZXR1cm4gYWZ0ZXJcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFmdGVyIGBdYC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXShiKSBjXHJcbiAgICogICAgICAgXlxyXG4gICAqID4gfCBbYV1bYl0gY1xyXG4gICAqICAgICAgIF5cclxuICAgKiA+IHwgW2FdW10gYlxyXG4gICAqICAgICAgIF5cclxuICAgKiA+IHwgW2FdIGJcclxuICAgKiAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xyXG4gICAgLy8gTm90ZTogYG1hcmtkb3duLXJzYCBhbHNvIHBhcnNlcyBHRk0gZm9vdG5vdGVzIGhlcmUsIHdoaWNoIGZvciB1cyBpcyBpblxyXG4gICAgLy8gYW4gZXh0ZW5zaW9uLlxyXG5cclxuICAgIC8vIFJlc291cmNlIChgW2FzZF0oZmdoKWApP1xyXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmxlZnRQYXJlbnRoZXNpcykge1xyXG4gICAgICByZXR1cm4gZWZmZWN0cy5hdHRlbXB0KFxyXG4gICAgICAgIHJlc291cmNlQ29uc3RydWN0LFxyXG4gICAgICAgIGxhYmVsRW5kT2ssXHJcbiAgICAgICAgZGVmaW5lZCA/IGxhYmVsRW5kT2sgOiBsYWJlbEVuZE5va1xyXG4gICAgICApKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVsbCAoYFthc2RdW2ZnaF1gKSBvciBjb2xsYXBzZWQgKGBbYXNkXVtdYCkgcmVmZXJlbmNlP1xyXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmxlZnRTcXVhcmVCcmFja2V0KSB7XHJcbiAgICAgIHJldHVybiBlZmZlY3RzLmF0dGVtcHQoXHJcbiAgICAgICAgcmVmZXJlbmNlRnVsbENvbnN0cnVjdCxcclxuICAgICAgICBsYWJlbEVuZE9rLFxyXG4gICAgICAgIGRlZmluZWQgPyByZWZlcmVuY2VOb3RGdWxsIDogbGFiZWxFbmROb2tcclxuICAgICAgKShjb2RlKVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFNob3J0Y3V0IChgW2FzZF1gKSByZWZlcmVuY2U/XHJcbiAgICByZXR1cm4gZGVmaW5lZCA/IGxhYmVsRW5kT2soY29kZSkgOiBsYWJlbEVuZE5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgYF1gLCBhdCBgW2AsIGJ1dCBub3QgYXQgYSBmdWxsIHJlZmVyZW5jZS5cclxuICAgKlxyXG4gICAqID4g8J+RiSAqKk5vdGUqKjogd2Ugb25seSBnZXQgaGVyZSBpZiB0aGUgbGFiZWwgaXMgZGVmaW5lZC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXVtdIGJcclxuICAgKiAgICAgICAgXlxyXG4gICAqID4gfCBbYV0gYlxyXG4gICAqICAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gcmVmZXJlbmNlTm90RnVsbChjb2RlKSB7XHJcbiAgICByZXR1cm4gZWZmZWN0cy5hdHRlbXB0KFxyXG4gICAgICByZWZlcmVuY2VDb2xsYXBzZWRDb25zdHJ1Y3QsXHJcbiAgICAgIGxhYmVsRW5kT2ssXHJcbiAgICAgIGxhYmVsRW5kTm9rXHJcbiAgICApKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEb25lLCB3ZSBmb3VuZCBzb21ldGhpbmcuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oYikgY1xyXG4gICAqICAgICAgICAgICBeXHJcbiAgICogPiB8IFthXVtiXSBjXHJcbiAgICogICAgICAgICAgIF5cclxuICAgKiA+IHwgW2FdW10gYlxyXG4gICAqICAgICAgICAgIF5cclxuICAgKiA+IHwgW2FdIGJcclxuICAgKiAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGxhYmVsRW5kT2soY29kZSkge1xyXG4gICAgLy8gTm90ZTogYG1hcmtkb3duLXJzYCBkb2VzIGEgYnVuY2ggb2Ygc3R1ZmYgaGVyZS5cclxuICAgIHJldHVybiBvayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRG9uZSwgaXTigJlzIG5vdGhpbmcuXHJcbiAgICpcclxuICAgKiBUaGVyZSB3YXMgYW4gb2theSBvcGVuaW5nLCBidXQgd2UgZGlkbuKAmXQgbWF0Y2ggYW55dGhpbmcuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oYiBjXHJcbiAgICogICAgICAgIF5cclxuICAgKiA+IHwgW2FdW2IgY1xyXG4gICAqICAgICAgICBeXHJcbiAgICogPiB8IFthXSBiXHJcbiAgICogICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiBsYWJlbEVuZE5vayhjb2RlKSB7XHJcbiAgICBsYWJlbFN0YXJ0Ll9iYWxhbmNlZCA9IHRydWVcclxuICAgIHJldHVybiBub2soY29kZSlcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gdG9rZW5pemVSZXNvdXJjZShlZmZlY3RzLCBvaywgbm9rKSB7XHJcbiAgcmV0dXJuIHJlc291cmNlU3RhcnRcclxuXHJcbiAgLyoqXHJcbiAgICogQXQgYSByZXNvdXJjZS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXShiKSBjXHJcbiAgICogICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZXNvdXJjZVN0YXJ0KGNvZGUpIHtcclxuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5sZWZ0UGFyZW50aGVzaXMsICdleHBlY3RlZCBsZWZ0IHBhcmVuJylcclxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMucmVzb3VyY2UpXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLnJlc291cmNlTWFya2VyKVxyXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMucmVzb3VyY2VNYXJrZXIpXHJcbiAgICByZXR1cm4gcmVzb3VyY2VCZWZvcmVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluIHJlc291cmNlLCBhZnRlciBgKGAsIGF0IG9wdGlvbmFsIHdoaXRlc3BhY2UuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oYikgY1xyXG4gICAqICAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHJlc291cmNlQmVmb3JlKGNvZGUpIHtcclxuICAgIHJldHVybiBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlKGNvZGUpXHJcbiAgICAgID8gZmFjdG9yeVdoaXRlc3BhY2UoZWZmZWN0cywgcmVzb3VyY2VPcGVuKShjb2RlKVxyXG4gICAgICA6IHJlc291cmNlT3Blbihjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW4gcmVzb3VyY2UsIGFmdGVyIG9wdGlvbmFsIHdoaXRlc3BhY2UsIGF0IGApYCBvciBhIGRlc3RpbmF0aW9uLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgW2FdKGIpIGNcclxuICAgKiAgICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZXNvdXJjZU9wZW4oY29kZSkge1xyXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnJpZ2h0UGFyZW50aGVzaXMpIHtcclxuICAgICAgcmV0dXJuIHJlc291cmNlRW5kKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhY3RvcnlEZXN0aW5hdGlvbihcclxuICAgICAgZWZmZWN0cyxcclxuICAgICAgcmVzb3VyY2VEZXN0aW5hdGlvbkFmdGVyLFxyXG4gICAgICByZXNvdXJjZURlc3RpbmF0aW9uTWlzc2luZyxcclxuICAgICAgdHlwZXMucmVzb3VyY2VEZXN0aW5hdGlvbixcclxuICAgICAgdHlwZXMucmVzb3VyY2VEZXN0aW5hdGlvbkxpdGVyYWwsXHJcbiAgICAgIHR5cGVzLnJlc291cmNlRGVzdGluYXRpb25MaXRlcmFsTWFya2VyLFxyXG4gICAgICB0eXBlcy5yZXNvdXJjZURlc3RpbmF0aW9uUmF3LFxyXG4gICAgICB0eXBlcy5yZXNvdXJjZURlc3RpbmF0aW9uU3RyaW5nLFxyXG4gICAgICBjb25zdGFudHMubGlua1Jlc291cmNlRGVzdGluYXRpb25CYWxhbmNlTWF4XHJcbiAgICApKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbiByZXNvdXJjZSwgYWZ0ZXIgZGVzdGluYXRpb24sIGF0IG9wdGlvbmFsIHdoaXRlc3BhY2UuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oYikgY1xyXG4gICAqICAgICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZXNvdXJjZURlc3RpbmF0aW9uQWZ0ZXIoY29kZSkge1xyXG4gICAgcmV0dXJuIG1hcmtkb3duTGluZUVuZGluZ09yU3BhY2UoY29kZSlcclxuICAgICAgPyBmYWN0b3J5V2hpdGVzcGFjZShlZmZlY3RzLCByZXNvdXJjZUJldHdlZW4pKGNvZGUpXHJcbiAgICAgIDogcmVzb3VyY2VFbmQoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEF0IGludmFsaWQgZGVzdGluYXRpb24uXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBbYV0oPDwpIGJcclxuICAgKiAgICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZXNvdXJjZURlc3RpbmF0aW9uTWlzc2luZyhjb2RlKSB7XHJcbiAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbiByZXNvdXJjZSwgYWZ0ZXIgZGVzdGluYXRpb24gYW5kIHdoaXRlc3BhY2UsIGF0IGAoYCBvciB0aXRsZS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXShiICkgY1xyXG4gICAqICAgICAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gcmVzb3VyY2VCZXR3ZWVuKGNvZGUpIHtcclxuICAgIGlmIChcclxuICAgICAgY29kZSA9PT0gY29kZXMucXVvdGF0aW9uTWFyayB8fFxyXG4gICAgICBjb2RlID09PSBjb2Rlcy5hcG9zdHJvcGhlIHx8XHJcbiAgICAgIGNvZGUgPT09IGNvZGVzLmxlZnRQYXJlbnRoZXNpc1xyXG4gICAgKSB7XHJcbiAgICAgIHJldHVybiBmYWN0b3J5VGl0bGUoXHJcbiAgICAgICAgZWZmZWN0cyxcclxuICAgICAgICByZXNvdXJjZVRpdGxlQWZ0ZXIsXHJcbiAgICAgICAgbm9rLFxyXG4gICAgICAgIHR5cGVzLnJlc291cmNlVGl0bGUsXHJcbiAgICAgICAgdHlwZXMucmVzb3VyY2VUaXRsZU1hcmtlcixcclxuICAgICAgICB0eXBlcy5yZXNvdXJjZVRpdGxlU3RyaW5nXHJcbiAgICAgICkoY29kZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzb3VyY2VFbmQoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluIHJlc291cmNlLCBhZnRlciB0aXRsZSwgYXQgb3B0aW9uYWwgd2hpdGVzcGFjZS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXShiIFwiY1wiKSBkXHJcbiAgICogICAgICAgICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZXNvdXJjZVRpdGxlQWZ0ZXIoY29kZSkge1xyXG4gICAgcmV0dXJuIG1hcmtkb3duTGluZUVuZGluZ09yU3BhY2UoY29kZSlcclxuICAgICAgPyBmYWN0b3J5V2hpdGVzcGFjZShlZmZlY3RzLCByZXNvdXJjZUVuZCkoY29kZSlcclxuICAgICAgOiByZXNvdXJjZUVuZChjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW4gcmVzb3VyY2UsIGF0IGApYC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXShiKSBkXHJcbiAgICogICAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHJlc291cmNlRW5kKGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5yaWdodFBhcmVudGhlc2lzKSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMucmVzb3VyY2VNYXJrZXIpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMucmVzb3VyY2VNYXJrZXIpXHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5yZXNvdXJjZSlcclxuICAgICAgcmV0dXJuIG9rXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtUb2tlbml6ZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtUb2tlbml6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbml6ZVJlZmVyZW5jZUZ1bGwoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIGNvbnN0IHNlbGYgPSB0aGlzXHJcblxyXG4gIHJldHVybiByZWZlcmVuY2VGdWxsXHJcblxyXG4gIC8qKlxyXG4gICAqIEluIGEgcmVmZXJlbmNlIChmdWxsKSwgYXQgdGhlIGBbYC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXVtiXSBkXHJcbiAgICogICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiByZWZlcmVuY2VGdWxsKGNvZGUpIHtcclxuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldCwgJ2V4cGVjdGVkIGxlZnQgYnJhY2tldCcpXHJcbiAgICByZXR1cm4gZmFjdG9yeUxhYmVsLmNhbGwoXHJcbiAgICAgIHNlbGYsXHJcbiAgICAgIGVmZmVjdHMsXHJcbiAgICAgIHJlZmVyZW5jZUZ1bGxBZnRlcixcclxuICAgICAgcmVmZXJlbmNlRnVsbE1pc3NpbmcsXHJcbiAgICAgIHR5cGVzLnJlZmVyZW5jZSxcclxuICAgICAgdHlwZXMucmVmZXJlbmNlTWFya2VyLFxyXG4gICAgICB0eXBlcy5yZWZlcmVuY2VTdHJpbmdcclxuICAgICkoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluIGEgcmVmZXJlbmNlIChmdWxsKSwgYWZ0ZXIgYF1gLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgW2FdW2JdIGRcclxuICAgKiAgICAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gcmVmZXJlbmNlRnVsbEFmdGVyKGNvZGUpIHtcclxuICAgIHJldHVybiBzZWxmLnBhcnNlci5kZWZpbmVkLmluY2x1ZGVzKFxyXG4gICAgICBub3JtYWxpemVJZGVudGlmaWVyKFxyXG4gICAgICAgIHNlbGYuc2xpY2VTZXJpYWxpemUoc2VsZi5ldmVudHNbc2VsZi5ldmVudHMubGVuZ3RoIC0gMV1bMV0pLnNsaWNlKDEsIC0xKVxyXG4gICAgICApXHJcbiAgICApXHJcbiAgICAgID8gb2soY29kZSlcclxuICAgICAgOiBub2soY29kZSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluIHJlZmVyZW5jZSAoZnVsbCkgdGhhdCB3YXMgbWlzc2luZy5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXVtiIGRcclxuICAgKiAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHJlZmVyZW5jZUZ1bGxNaXNzaW5nKGNvZGUpIHtcclxuICAgIHJldHVybiBub2soY29kZSlcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gdG9rZW5pemVSZWZlcmVuY2VDb2xsYXBzZWQoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIHJldHVybiByZWZlcmVuY2VDb2xsYXBzZWRTdGFydFxyXG5cclxuICAvKipcclxuICAgKiBJbiByZWZlcmVuY2UgKGNvbGxhcHNlZCksIGF0IGBbYC5cclxuICAgKlxyXG4gICAqID4g8J+RiSAqKk5vdGUqKjogd2Ugb25seSBnZXQgaGVyZSBpZiB0aGUgbGFiZWwgaXMgZGVmaW5lZC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXVtdIGRcclxuICAgKiAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHJlZmVyZW5jZUNvbGxhcHNlZFN0YXJ0KGNvZGUpIHtcclxuICAgIC8vIFdlIG9ubHkgYXR0ZW1wdCBhIGNvbGxhcHNlZCBsYWJlbCBpZiB0aGVyZeKAmXMgYSBgW2AuXHJcbiAgICBhc3NlcnQoY29kZSA9PT0gY29kZXMubGVmdFNxdWFyZUJyYWNrZXQsICdleHBlY3RlZCBsZWZ0IGJyYWNrZXQnKVxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5yZWZlcmVuY2UpXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLnJlZmVyZW5jZU1hcmtlcilcclxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLnJlZmVyZW5jZU1hcmtlcilcclxuICAgIHJldHVybiByZWZlcmVuY2VDb2xsYXBzZWRPcGVuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbiByZWZlcmVuY2UgKGNvbGxhcHNlZCksIGF0IGBdYC5cclxuICAgKlxyXG4gICAqID4g8J+RiSAqKk5vdGUqKjogd2Ugb25seSBnZXQgaGVyZSBpZiB0aGUgbGFiZWwgaXMgZGVmaW5lZC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFthXVtdIGRcclxuICAgKiAgICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqICBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gcmVmZXJlbmNlQ29sbGFwc2VkT3Blbihjb2RlKSB7XHJcbiAgICBpZiAoY29kZSA9PT0gY29kZXMucmlnaHRTcXVhcmVCcmFja2V0KSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMucmVmZXJlbmNlTWFya2VyKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLnJlZmVyZW5jZU1hcmtlcilcclxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLnJlZmVyZW5jZSlcclxuICAgICAgcmV0dXJuIG9rXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/label-end.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/label-start-image.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/label-start-image.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"labelStartImage\": function() { return /* binding */ labelStartImage; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var _label_end_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./label-end.js */ \"./node_modules/micromark-core-commonmark/dev/lib/label-end.js\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst labelStartImage = {\r\n  name: 'labelStartImage',\r\n  tokenize: tokenizeLabelStartImage,\r\n  resolveAll: _label_end_js__WEBPACK_IMPORTED_MODULE_1__.labelEnd.resolveAll\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeLabelStartImage(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of label (image) start.\r\n   *\r\n   * ```markdown\r\n   * > | a ![b] c\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.exclamationMark, 'expected `!`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImage)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImageMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImageMarker)\r\n    return open\r\n  }\r\n\r\n  /**\r\n   * After `!`, at `[`.\r\n   *\r\n   * ```markdown\r\n   * > | a ![b] c\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImage)\r\n      return after\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After `![`.\r\n   *\r\n   * ```markdown\r\n   * > | a ![b] c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * This is needed in because, when GFM footnotes are enabled, images never\r\n   * form when started with a `^`.\r\n   * Instead, links form:\r\n   *\r\n   * ```markdown\r\n   * ![^a](b)\r\n   *\r\n   * ![^a][b]\r\n   *\r\n   * [b]: c\r\n   * ```\r\n   *\r\n   * ```html\r\n   * <p>!<a href=\\\"b\\\">^a</a></p>\r\n   * <p>!<a href=\\\"c\\\">^a</a></p>\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    // To do: use a new field to do this, this is still needed for\r\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\r\n    // behavior isn’t.\r\n    // Hidden footnotes hook.\r\n    /* c8 ignore next 3 */\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.caret &&\r\n      '_hiddenFootnoteSupport' in self.parser.constructs\r\n      ? nok(code)\r\n      : ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLXN0YXJ0LWltYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ29EO0FBQ0E7QUFDYjtBQUNBO0FBQ3ZDO0FBQ0EsV0FBVyxXQUFXO0FBQ2Y7QUFDUDtBQUNBO0FBQ0EsY0FBYyw4REFBbUI7QUFDakM7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxJQUFJLCtDQUFNLFVBQVUsaUZBQXFCO0FBQ3pDLGtCQUFrQiw0RUFBZ0I7QUFDbEMsa0JBQWtCLGtGQUFzQjtBQUN4QztBQUNBLGlCQUFpQixrRkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsaUJBQWlCLG1GQUF1QjtBQUN4QyxvQkFBb0IsNkVBQWlCO0FBQ3JDO0FBQ0EsbUJBQW1CLDZFQUFpQjtBQUNwQyxtQkFBbUIsNEVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9sYWJlbC1zdGFydC1pbWFnZS5qcz84MGMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdH0gQ29uc3RydWN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxyXG4gKi9cclxuXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xyXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAndXZ1L2Fzc2VydCdcclxuaW1wb3J0IHtsYWJlbEVuZH0gZnJvbSAnLi9sYWJlbC1lbmQuanMnXHJcblxyXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cclxuZXhwb3J0IGNvbnN0IGxhYmVsU3RhcnRJbWFnZSA9IHtcclxuICBuYW1lOiAnbGFiZWxTdGFydEltYWdlJyxcclxuICB0b2tlbml6ZTogdG9rZW5pemVMYWJlbFN0YXJ0SW1hZ2UsXHJcbiAgcmVzb2x2ZUFsbDogbGFiZWxFbmQucmVzb2x2ZUFsbFxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge1Rva2VuaXplQ29udGV4dH1cclxuICogQHR5cGUge1Rva2VuaXplcn1cclxuICovXHJcbmZ1bmN0aW9uIHRva2VuaXplTGFiZWxTdGFydEltYWdlKGVmZmVjdHMsIG9rLCBub2spIHtcclxuICBjb25zdCBzZWxmID0gdGhpc1xyXG5cclxuICByZXR1cm4gc3RhcnRcclxuXHJcbiAgLyoqXHJcbiAgICogU3RhcnQgb2YgbGFiZWwgKGltYWdlKSBzdGFydC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IGEgIVtiXSBjXHJcbiAgICogICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5leGNsYW1hdGlvbk1hcmssICdleHBlY3RlZCBgIWAnKVxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5sYWJlbEltYWdlKVxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5sYWJlbEltYWdlTWFya2VyKVxyXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGFiZWxJbWFnZU1hcmtlcilcclxuICAgIHJldHVybiBvcGVuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBZnRlciBgIWAsIGF0IGBbYC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IGEgIVtiXSBjXHJcbiAgICogICAgICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiBvcGVuKGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldCkge1xyXG4gICAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxhYmVsTWFya2VyKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmxhYmVsTWFya2VyKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMubGFiZWxJbWFnZSlcclxuICAgICAgcmV0dXJuIGFmdGVyXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgYCFbYC5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IGEgIVtiXSBjXHJcbiAgICogICAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBUaGlzIGlzIG5lZWRlZCBpbiBiZWNhdXNlLCB3aGVuIEdGTSBmb290bm90ZXMgYXJlIGVuYWJsZWQsIGltYWdlcyBuZXZlclxyXG4gICAqIGZvcm0gd2hlbiBzdGFydGVkIHdpdGggYSBgXmAuXHJcbiAgICogSW5zdGVhZCwgbGlua3MgZm9ybTpcclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogIVteYV0oYilcclxuICAgKlxyXG4gICAqICFbXmFdW2JdXHJcbiAgICpcclxuICAgKiBbYl06IGNcclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIGBgYGh0bWxcclxuICAgKiA8cD4hPGEgaHJlZj1cXFwiYlxcXCI+XmE8L2E+PC9wPlxyXG4gICAqIDxwPiE8YSBocmVmPVxcXCJjXFxcIj5eYTwvYT48L3A+XHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xyXG4gICAgLy8gVG8gZG86IHVzZSBhIG5ldyBmaWVsZCB0byBkbyB0aGlzLCB0aGlzIGlzIHN0aWxsIG5lZWRlZCBmb3JcclxuICAgIC8vIGBtaWNyb21hcmstZXh0ZW5zaW9uLWdmbS1mb290bm90ZWAsIGJ1dCB0aGUgYGxhYmVsLXN0YXJ0LWxpbmtgXHJcbiAgICAvLyBiZWhhdmlvciBpc27igJl0LlxyXG4gICAgLy8gSGlkZGVuIGZvb3Rub3RlcyBob29rLlxyXG4gICAgLyogYzggaWdub3JlIG5leHQgMyAqL1xyXG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmNhcmV0ICYmXHJcbiAgICAgICdfaGlkZGVuRm9vdG5vdGVTdXBwb3J0JyBpbiBzZWxmLnBhcnNlci5jb25zdHJ1Y3RzXHJcbiAgICAgID8gbm9rKGNvZGUpXHJcbiAgICAgIDogb2soY29kZSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/label-start-image.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/label-start-link.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/label-start-link.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"labelStartLink\": function() { return /* binding */ labelStartLink; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var _label_end_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./label-end.js */ \"./node_modules/micromark-core-commonmark/dev/lib/label-end.js\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst labelStartLink = {\r\n  name: 'labelStartLink',\r\n  tokenize: tokenizeLabelStartLink,\r\n  resolveAll: _label_end_js__WEBPACK_IMPORTED_MODULE_1__.labelEnd.resolveAll\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeLabelStartLink(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of label (link) start.\r\n   *\r\n   * ```markdown\r\n   * > | a [b] c\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket, 'expected `[`')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelLink)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelLink)\r\n    return after\r\n  }\r\n\r\n  /** @type {State} */\r\n  function after(code) {\r\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\r\n    // remove.\r\n    // Hidden footnotes hook.\r\n    /* c8 ignore next 3 */\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.caret &&\r\n      '_hiddenFootnoteSupport' in self.parser.constructs\r\n      ? nok(code)\r\n      : ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLXN0YXJ0LWxpbmsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDb0Q7QUFDQTtBQUNiO0FBQ0E7QUFDdkM7QUFDQSxXQUFXLFdBQVc7QUFDZjtBQUNQO0FBQ0E7QUFDQSxjQUFjLDhEQUFtQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLElBQUksK0NBQU0sVUFBVSxtRkFBdUI7QUFDM0Msa0JBQWtCLDJFQUFlO0FBQ2pDLGtCQUFrQiw2RUFBaUI7QUFDbkM7QUFDQSxpQkFBaUIsNkVBQWlCO0FBQ2xDLGlCQUFpQiwyRUFBZTtBQUNoQztBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1RUFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvbGFiZWwtc3RhcnQtbGluay5qcz84ZGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdH0gQ29uc3RydWN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxyXG4gKi9cclxuXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xyXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAndXZ1L2Fzc2VydCdcclxuaW1wb3J0IHtsYWJlbEVuZH0gZnJvbSAnLi9sYWJlbC1lbmQuanMnXHJcblxyXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cclxuZXhwb3J0IGNvbnN0IGxhYmVsU3RhcnRMaW5rID0ge1xyXG4gIG5hbWU6ICdsYWJlbFN0YXJ0TGluaycsXHJcbiAgdG9rZW5pemU6IHRva2VuaXplTGFiZWxTdGFydExpbmssXHJcbiAgcmVzb2x2ZUFsbDogbGFiZWxFbmQucmVzb2x2ZUFsbFxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge1Rva2VuaXplQ29udGV4dH1cclxuICogQHR5cGUge1Rva2VuaXplcn1cclxuICovXHJcbmZ1bmN0aW9uIHRva2VuaXplTGFiZWxTdGFydExpbmsoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIGNvbnN0IHNlbGYgPSB0aGlzXHJcblxyXG4gIHJldHVybiBzdGFydFxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBvZiBsYWJlbCAobGluaykgc3RhcnQuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBhIFtiXSBjXHJcbiAgICogICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldCwgJ2V4cGVjdGVkIGBbYCcpXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxhYmVsTGluaylcclxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMubGFiZWxNYXJrZXIpXHJcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5sYWJlbE1hcmtlcilcclxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5sYWJlbExpbmspXHJcbiAgICByZXR1cm4gYWZ0ZXJcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xyXG4gICAgLy8gVG8gZG86IHRoaXMgaXNu4oCZdCBuZWVkZWQgaW4gYG1pY3JvbWFyay1leHRlbnNpb24tZ2ZtLWZvb3Rub3RlYCxcclxuICAgIC8vIHJlbW92ZS5cclxuICAgIC8vIEhpZGRlbiBmb290bm90ZXMgaG9vay5cclxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cclxuICAgIHJldHVybiBjb2RlID09PSBjb2Rlcy5jYXJldCAmJlxyXG4gICAgICAnX2hpZGRlbkZvb3Rub3RlU3VwcG9ydCcgaW4gc2VsZi5wYXJzZXIuY29uc3RydWN0c1xyXG4gICAgICA/IG5vayhjb2RlKVxyXG4gICAgICA6IG9rKGNvZGUpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/label-start-link.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/line-ending.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/line-ending.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lineEnding\": function() { return /* binding */ lineEnding; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst lineEnding = {name: 'lineEnding', tokenize: tokenizeLineEnding}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeLineEnding(effects, ok) {\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code), 'expected eol')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(effects, ok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xpbmUtZW5kaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ29EO0FBQ087QUFDUDtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxXQUFXO0FBQ2Ysb0JBQW9CO0FBQzNCO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsSUFBSSwrQ0FBTSxDQUFDLDRFQUFrQjtBQUM3QixrQkFBa0IsNEVBQWdCO0FBQ2xDO0FBQ0EsaUJBQWlCLDRFQUFnQjtBQUNqQyxXQUFXLHFFQUFZLGNBQWMsNEVBQWdCO0FBQ3JEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9saW5lLWVuZGluZy5qcz8wYjAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdH0gQ29uc3RydWN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxyXG4gKi9cclxuXHJcbmltcG9ydCB7ZmFjdG9yeVNwYWNlfSBmcm9tICdtaWNyb21hcmstZmFjdG9yeS1zcGFjZSdcclxuaW1wb3J0IHttYXJrZG93bkxpbmVFbmRpbmd9IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xyXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAndXZ1L2Fzc2VydCdcclxuXHJcbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xyXG5leHBvcnQgY29uc3QgbGluZUVuZGluZyA9IHtuYW1lOiAnbGluZUVuZGluZycsIHRva2VuaXplOiB0b2tlbml6ZUxpbmVFbmRpbmd9XHJcblxyXG4vKipcclxuICogQHRoaXMge1Rva2VuaXplQ29udGV4dH1cclxuICogQHR5cGUge1Rva2VuaXplcn1cclxuICovXHJcbmZ1bmN0aW9uIHRva2VuaXplTGluZUVuZGluZyhlZmZlY3RzLCBvaykge1xyXG4gIHJldHVybiBzdGFydFxyXG5cclxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIGFzc2VydChtYXJrZG93bkxpbmVFbmRpbmcoY29kZSksICdleHBlY3RlZCBlb2wnKVxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nKVxyXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGluZUVuZGluZylcclxuICAgIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgb2ssIHR5cGVzLmxpbmVQcmVmaXgpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/line-ending.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/list.js":
/*!****************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/list.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"list\": function() { return /* binding */ list; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var _blank_line_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blank-line.js */ \"./node_modules/micromark-core-commonmark/dev/lib/blank-line.js\");\n/* harmony import */ var _thematic_break_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./thematic-break.js */ \"./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\r\n * @typedef {import('micromark-util-types').Exiter} Exiter\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst list = {\r\n  name: 'list',\r\n  tokenize: tokenizeListStart,\r\n  continuation: {tokenize: tokenizeListContinuation},\r\n  exit: tokenizeListEnd\r\n}\r\n\r\n/** @type {Construct} */\r\nconst listItemPrefixWhitespaceConstruct = {\r\n  tokenize: tokenizeListItemPrefixWhitespace,\r\n  partial: true\r\n}\r\n\r\n/** @type {Construct} */\r\nconst indentConstruct = {tokenize: tokenizeIndent, partial: true}\r\n\r\n// To do: `markdown-rs` parses list items on their own and later stitches them\r\n// together.\r\n\r\n/**\r\n * @type {Tokenizer}\r\n * @this {TokenizeContext}\r\n */\r\nfunction tokenizeListStart(effects, ok, nok) {\r\n  const self = this\r\n  const tail = self.events[self.events.length - 1]\r\n  let initialSize =\r\n    tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix\r\n      ? tail[2].sliceSerialize(tail[1], true).length\r\n      : 0\r\n  let size = 0\r\n\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    const kind =\r\n      self.containerState.type ||\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.plusSign || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash\r\n        ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered\r\n        : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listOrdered)\r\n\r\n    if (\r\n      kind === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered\r\n        ? !self.containerState.marker || code === self.containerState.marker\r\n        : (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiDigit)(code)\r\n    ) {\r\n      if (!self.containerState.type) {\r\n        self.containerState.type = kind\r\n        effects.enter(kind, {_container: true})\r\n      }\r\n\r\n      if (kind === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered) {\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix)\r\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash\r\n          ? effects.check(_thematic_break_js__WEBPACK_IMPORTED_MODULE_4__.thematicBreak, nok, atMarker)(code)\r\n          : atMarker(code)\r\n      }\r\n\r\n      if (!self.interrupt || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.digit1) {\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix)\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemValue)\r\n        return inside(code)\r\n      }\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function inside(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiDigit)(code) && ++size < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.listItemValueSizeMax) {\r\n      effects.consume(code)\r\n      return inside\r\n    }\r\n\r\n    if (\r\n      (!self.interrupt || size < 2) &&\r\n      (self.containerState.marker\r\n        ? code === self.containerState.marker\r\n        : code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightParenthesis || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dot)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemValue)\r\n      return atMarker(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * @type {State}\r\n   **/\r\n  function atMarker(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof, 'eof (`null`) is not a marker')\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemMarker)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemMarker)\r\n    self.containerState.marker = self.containerState.marker || code\r\n    return effects.check(\r\n      _blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine,\r\n      // Can’t be empty when interrupting.\r\n      self.interrupt ? nok : onBlank,\r\n      effects.attempt(\r\n        listItemPrefixWhitespaceConstruct,\r\n        endOfPrefix,\r\n        otherPrefix\r\n      )\r\n    )\r\n  }\r\n\r\n  /** @type {State} */\r\n  function onBlank(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    self.containerState.initialBlankLine = true\r\n    initialSize++\r\n    return endOfPrefix(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function otherPrefix(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace)\r\n      return endOfPrefix\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function endOfPrefix(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    self.containerState.size =\r\n      initialSize +\r\n      self.sliceSerialize(effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix), true).length\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @type {Tokenizer}\r\n * @this {TokenizeContext}\r\n */\r\nfunction tokenizeListContinuation(effects, ok, nok) {\r\n  const self = this\r\n\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n  self.containerState._closeFlow = undefined\r\n\r\n  return effects.check(_blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine, onBlank, notBlank)\r\n\r\n  /** @type {State} */\r\n  function onBlank(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof self.containerState.size === 'number', 'expected size')\r\n    self.containerState.furtherBlankLines =\r\n      self.containerState.furtherBlankLines ||\r\n      self.containerState.initialBlankLine\r\n\r\n    // We have a blank line.\r\n    // Still, try to consume at most the items size.\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(\r\n      effects,\r\n      ok,\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent,\r\n      self.containerState.size + 1\r\n    )(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function notBlank(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    if (self.containerState.furtherBlankLines || !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      self.containerState.furtherBlankLines = undefined\r\n      self.containerState.initialBlankLine = undefined\r\n      return notInCurrentItem(code)\r\n    }\r\n\r\n    self.containerState.furtherBlankLines = undefined\r\n    self.containerState.initialBlankLine = undefined\r\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function notInCurrentItem(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    // While we do continue, we signal that the flow should be closed.\r\n    self.containerState._closeFlow = true\r\n    // As we’re closing flow, we’re no longer interrupting.\r\n    self.interrupt = undefined\r\n    // Always populated by defaults.\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.parser.constructs.disable.null,\r\n      'expected `disable.null` to be populated'\r\n    )\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(\r\n      effects,\r\n      effects.attempt(list, ok, nok),\r\n      micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix,\r\n      self.parser.constructs.disable.null.includes('codeIndented')\r\n        ? undefined\r\n        : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize\r\n    )(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @type {Tokenizer}\r\n * @this {TokenizeContext}\r\n */\r\nfunction tokenizeIndent(effects, ok, nok) {\r\n  const self = this\r\n\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof self.containerState.size === 'number', 'expected size')\r\n\r\n  return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(\r\n    effects,\r\n    afterPrefix,\r\n    micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent,\r\n    self.containerState.size + 1\r\n  )\r\n\r\n  /** @type {State} */\r\n  function afterPrefix(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.containerState, 'expected state')\r\n    const tail = self.events[self.events.length - 1]\r\n    return tail &&\r\n      tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent &&\r\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\r\n      ? ok(code)\r\n      : nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @type {Exiter}\r\n * @this {TokenizeContext}\r\n */\r\nfunction tokenizeListEnd(effects) {\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(this.containerState, 'expected state')\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof this.containerState.type === 'string', 'expected type')\r\n  effects.exit(this.containerState.type)\r\n}\r\n\r\n/**\r\n * @type {Tokenizer}\r\n * @this {TokenizeContext}\r\n */\r\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\r\n  const self = this\r\n\r\n  // Always populated by defaults.\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n    self.parser.constructs.disable.null,\r\n    'expected `disable.null` to be populated'\r\n  )\r\n\r\n  return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(\r\n    effects,\r\n    afterPrefix,\r\n    micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace,\r\n    self.parser.constructs.disable.null.includes('codeIndented')\r\n      ? undefined\r\n      : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize + 1\r\n  )\r\n\r\n  /** @type {State} */\r\n  function afterPrefix(code) {\r\n    const tail = self.events[self.events.length - 1]\r\n\r\n    return !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code) &&\r\n      tail &&\r\n      tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace\r\n      ? ok(code)\r\n      : nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/list.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/setext-underline.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/setext-underline.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setextUnderline\": function() { return /* binding */ setextUnderline; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst setextUnderline = {\r\n  name: 'setextUnderline',\r\n  tokenize: tokenizeSetextUnderline,\r\n  resolveTo: resolveToSetextUnderline\r\n}\r\n\r\n/** @type {Resolver} */\r\nfunction resolveToSetextUnderline(events, context) {\r\n  // To do: resolve like `markdown-rs`.\r\n  let index = events.length\r\n  /** @type {number | undefined} */\r\n  let content\r\n  /** @type {number | undefined} */\r\n  let text\r\n  /** @type {number | undefined} */\r\n  let definition\r\n\r\n  // Find the opening of the content.\r\n  // It’ll always exist: we don’t tokenize if it isn’t there.\r\n  while (index--) {\r\n    if (events[index][0] === 'enter') {\r\n      if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\r\n        content = index\r\n        break\r\n      }\r\n\r\n      if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.paragraph) {\r\n        text = index\r\n      }\r\n    }\r\n    // Exit\r\n    else {\r\n      if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\r\n        // Remove the content end (if needed we’ll add it later)\r\n        events.splice(index, 1)\r\n      }\r\n\r\n      if (!definition && events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definition) {\r\n        definition = index\r\n      }\r\n    }\r\n  }\r\n\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(text !== undefined, 'expected a `text` index to be found')\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(content !== undefined, 'expected a `text` index to be found')\r\n\r\n  const heading = {\r\n    type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeading,\r\n    start: Object.assign({}, events[text][1].start),\r\n    end: Object.assign({}, events[events.length - 1][1].end)\r\n  }\r\n\r\n  // Change the paragraph to setext heading text.\r\n  events[text][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingText\r\n\r\n  // If we have definitions in the content, we’ll keep on having content,\r\n  // but we need move it.\r\n  if (definition) {\r\n    events.splice(text, 0, ['enter', heading, context])\r\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\r\n    events[content][1].end = Object.assign({}, events[definition][1].end)\r\n  } else {\r\n    events[content][1] = heading\r\n  }\r\n\r\n  // Add the heading exit at the end.\r\n  events.push(['exit', heading, context])\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeSetextUnderline(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {NonNullable<Code>} */\r\n  let marker\r\n\r\n  return start\r\n\r\n  /**\r\n   * At start of heading (setext) underline.\r\n   *\r\n   * ```markdown\r\n   *   | aa\r\n   * > | ==\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    let index = self.events.length\r\n    /** @type {boolean | undefined} */\r\n    let paragraph\r\n\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo,\r\n      'expected `=` or `-`'\r\n    )\r\n\r\n    // Find an opening.\r\n    while (index--) {\r\n      // Skip enter/exit of line ending, line prefix, and content.\r\n      // We can now either have a definition or a paragraph.\r\n      if (\r\n        self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding &&\r\n        self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix &&\r\n        self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content\r\n      ) {\r\n        paragraph = self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.paragraph\r\n        break\r\n      }\r\n    }\r\n\r\n    // To do: handle lazy/pierce like `markdown-rs`.\r\n    // To do: parse indent like `markdown-rs`.\r\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLine)\r\n      marker = code\r\n      return before(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After optional whitespace, at `-` or `=`.\r\n   *\r\n   * ```markdown\r\n   *   | aa\r\n   * > | ==\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function before(code) {\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLineSequence)\r\n    return inside(code)\r\n  }\r\n\r\n  /**\r\n   * In sequence.\r\n   *\r\n   * ```markdown\r\n   *   | aa\r\n   * > | ==\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      return inside\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLineSequence)\r\n\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineSuffix)(code)\r\n      : after(code)\r\n  }\r\n\r\n  /**\r\n   * After sequence, after optional whitespace.\r\n   *\r\n   * ```markdown\r\n   *   | aa\r\n   * > | ==\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLine)\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/setext-underline.js\n"));

/***/ }),

/***/ "./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js":
/*!**************************************************************************!*\
  !*** ./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"thematicBreak\": function() { return /* binding */ thematicBreak; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {Construct} */\r\nconst thematicBreak = {\r\n  name: 'thematicBreak',\r\n  tokenize: tokenizeThematicBreak\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeThematicBreak(effects, ok, nok) {\r\n  let size = 0\r\n  /** @type {NonNullable<Code>} */\r\n  let marker\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of thematic break.\r\n   *\r\n   * ```markdown\r\n   * > | ***\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.thematicBreak)\r\n    // To do: parse indent like `markdown-rs`.\r\n    return before(code)\r\n  }\r\n\r\n  /**\r\n   * After optional whitespace, at marker.\r\n   *\r\n   * ```markdown\r\n   * > | ***\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function before(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.asterisk ||\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash ||\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.underscore,\r\n      'expected `*`, `-`, or `_`'\r\n    )\r\n    marker = code\r\n    return atBreak(code)\r\n  }\r\n\r\n  /**\r\n   * After something, before something else.\r\n   *\r\n   * ```markdown\r\n   * > | ***\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atBreak(code) {\r\n    if (code === marker) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.thematicBreakSequence)\r\n      return sequence(code)\r\n    }\r\n\r\n    if (\r\n      size >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.thematicBreakMarkerCountMin &&\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code))\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.thematicBreak)\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In sequence.\r\n   *\r\n   * ```markdown\r\n   * > | ***\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function sequence(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      size++\r\n      return sequence\r\n    }\r\n\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.thematicBreakSequence)\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)\r\n      ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(effects, atBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code)\r\n      : atBreak(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL3RoZW1hdGljLWJyZWFrLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEscUNBQXFDO0FBQ2xELGFBQWEsMENBQTBDO0FBQ3ZELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdELGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFDb0Q7QUFDc0I7QUFDdEI7QUFDUTtBQUNSO0FBQ2I7QUFDdkM7QUFDQSxXQUFXLFdBQVc7QUFDZjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0Esa0JBQWtCLCtFQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLElBQUksOENBQU07QUFDVixlQUFlLDBFQUFjO0FBQzdCLGlCQUFpQixzRUFBVTtBQUMzQixpQkFBaUIsNEVBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVGQUEyQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUdBQXFDO0FBQ25ELGdCQUFnQixxRUFBUyxJQUFJLDRFQUFrQjtBQUMvQztBQUNBLG1CQUFtQiwrRUFBbUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHVGQUEyQjtBQUM1QyxXQUFXLHVFQUFhO0FBQ3hCLFFBQVEscUVBQVksbUJBQW1CLDRFQUFnQjtBQUN2RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi90aGVtYXRpYy1icmVhay5qcz81NzNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvZGV9IENvZGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcclxuICovXHJcblxyXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXHJcbmltcG9ydCB7bWFya2Rvd25MaW5lRW5kaW5nLCBtYXJrZG93blNwYWNlfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXHJcbmltcG9ydCB7dHlwZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC90eXBlcy5qcydcclxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXHJcblxyXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cclxuZXhwb3J0IGNvbnN0IHRoZW1hdGljQnJlYWsgPSB7XHJcbiAgbmFtZTogJ3RoZW1hdGljQnJlYWsnLFxyXG4gIHRva2VuaXplOiB0b2tlbml6ZVRoZW1hdGljQnJlYWtcclxufVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtUb2tlbml6ZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtUb2tlbml6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbml6ZVRoZW1hdGljQnJlYWsoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIGxldCBzaXplID0gMFxyXG4gIC8qKiBAdHlwZSB7Tm9uTnVsbGFibGU8Q29kZT59ICovXHJcbiAgbGV0IG1hcmtlclxyXG5cclxuICByZXR1cm4gc3RhcnRcclxuXHJcbiAgLyoqXHJcbiAgICogU3RhcnQgb2YgdGhlbWF0aWMgYnJlYWsuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCAqKipcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcclxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMudGhlbWF0aWNCcmVhaylcclxuICAgIC8vIFRvIGRvOiBwYXJzZSBpbmRlbnQgbGlrZSBgbWFya2Rvd24tcnNgLlxyXG4gICAgcmV0dXJuIGJlZm9yZShjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgb3B0aW9uYWwgd2hpdGVzcGFjZSwgYXQgbWFya2VyLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgKioqXHJcbiAgICogICAgIF5cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiBiZWZvcmUoY29kZSkge1xyXG4gICAgYXNzZXJ0KFxyXG4gICAgICBjb2RlID09PSBjb2Rlcy5hc3RlcmlzayB8fFxyXG4gICAgICAgIGNvZGUgPT09IGNvZGVzLmRhc2ggfHxcclxuICAgICAgICBjb2RlID09PSBjb2Rlcy51bmRlcnNjb3JlLFxyXG4gICAgICAnZXhwZWN0ZWQgYCpgLCBgLWAsIG9yIGBfYCdcclxuICAgIClcclxuICAgIG1hcmtlciA9IGNvZGVcclxuICAgIHJldHVybiBhdEJyZWFrKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBZnRlciBzb21ldGhpbmcsIGJlZm9yZSBzb21ldGhpbmcgZWxzZS5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8ICoqKlxyXG4gICAqICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYXRCcmVhayhjb2RlKSB7XHJcbiAgICBpZiAoY29kZSA9PT0gbWFya2VyKSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMudGhlbWF0aWNCcmVha1NlcXVlbmNlKVxyXG4gICAgICByZXR1cm4gc2VxdWVuY2UoY29kZSlcclxuICAgIH1cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIHNpemUgPj0gY29uc3RhbnRzLnRoZW1hdGljQnJlYWtNYXJrZXJDb3VudE1pbiAmJlxyXG4gICAgICAoY29kZSA9PT0gY29kZXMuZW9mIHx8IG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSlcclxuICAgICkge1xyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMudGhlbWF0aWNCcmVhaylcclxuICAgICAgcmV0dXJuIG9rKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW4gc2VxdWVuY2UuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCAqKipcclxuICAgKiAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHNlcXVlbmNlKGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBtYXJrZXIpIHtcclxuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICAgIHNpemUrK1xyXG4gICAgICByZXR1cm4gc2VxdWVuY2VcclxuICAgIH1cclxuXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMudGhlbWF0aWNCcmVha1NlcXVlbmNlKVxyXG4gICAgcmV0dXJuIG1hcmtkb3duU3BhY2UoY29kZSlcclxuICAgICAgPyBmYWN0b3J5U3BhY2UoZWZmZWN0cywgYXRCcmVhaywgdHlwZXMud2hpdGVzcGFjZSkoY29kZSlcclxuICAgICAgOiBhdEJyZWFrKGNvZGUpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-autolink-literal/dev/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-autolink-literal/dev/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmAutolinkLiteral\": function() { return /* reexport safe */ _lib_syntax_js__WEBPACK_IMPORTED_MODULE_0__.gfmAutolinkLiteral; },\n/* harmony export */   \"gfmAutolinkLiteralHtml\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_1__.gfmAutolinkLiteralHtml; }\n/* harmony export */ });\n/* harmony import */ var _lib_syntax_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/syntax.js */ \"./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js\");\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js\");\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tYXV0b2xpbmstbGl0ZXJhbC9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWdmbS1hdXRvbGluay1saXRlcmFsL2Rldi9pbmRleC5qcz9iYWRhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Z2ZtQXV0b2xpbmtMaXRlcmFsfSBmcm9tICcuL2xpYi9zeW50YXguanMnXHJcbmV4cG9ydCB7Z2ZtQXV0b2xpbmtMaXRlcmFsSHRtbH0gZnJvbSAnLi9saWIvaHRtbC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-autolink-literal/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmAutolinkLiteralHtml\": function() { return /* binding */ gfmAutolinkLiteralHtml; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\r\n * @typedef {import('micromark-util-types').Handle} Handle\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n * @typedef {import('micromark-util-types').Token} Token\r\n */\r\n\r\n\r\n\r\n// To do: next major: expose functions that yields extension.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `htmlExtensions` to support\r\n * GFM autolink literals when serializing to HTML.\r\n *\r\n * @type {HtmlExtension}\r\n */\r\nconst gfmAutolinkLiteralHtml = {\r\n  exit: {literalAutolinkEmail, literalAutolinkHttp, literalAutolinkWww}\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {Handle}\r\n */\r\nfunction literalAutolinkWww(token) {\r\n  anchorFromToken.call(this, token, 'http://')\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {Handle}\r\n */\r\nfunction literalAutolinkEmail(token) {\r\n  anchorFromToken.call(this, token, 'mailto:')\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @type {Handle}\r\n */\r\nfunction literalAutolinkHttp(token) {\r\n  anchorFromToken.call(this, token)\r\n}\r\n\r\n/**\r\n * @this CompileContext\r\n * @param {Token} token\r\n * @param {string | null | undefined} [protocol]\r\n * @returns {void}\r\n */\r\nfunction anchorFromToken(token, protocol) {\r\n  const url = this.sliceSerialize(token)\r\n  this.tag('<a href=\"' + (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.sanitizeUri)((protocol || '') + url) + '\">')\r\n  this.raw(this.encode(url))\r\n  this.tag('</a>')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tYXV0b2xpbmstbGl0ZXJhbC9kZXYvbGliL2h0bWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsK0NBQStDO0FBQzVELGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsOENBQThDO0FBQzNELGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0E7QUFDdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDTztBQUNQLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLDJCQUEyQjtBQUN0QyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdFQUFXO0FBQ3BDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tYXV0b2xpbmstbGl0ZXJhbC9kZXYvbGliL2h0bWwuanM/YjBjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db21waWxlQ29udGV4dH0gQ29tcGlsZUNvbnRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5IYW5kbGV9IEhhbmRsZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkh0bWxFeHRlbnNpb259IEh0bWxFeHRlbnNpb25cclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbn0gVG9rZW5cclxuICovXHJcblxyXG5pbXBvcnQge3Nhbml0aXplVXJpfSBmcm9tICdtaWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmknXHJcblxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogZXhwb3NlIGZ1bmN0aW9ucyB0aGF0IHlpZWxkcyBleHRlbnNpb24uXHJcblxyXG4vKipcclxuICogRXh0ZW5zaW9uIGZvciBgbWljcm9tYXJrYCB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYGh0bWxFeHRlbnNpb25zYCB0byBzdXBwb3J0XHJcbiAqIEdGTSBhdXRvbGluayBsaXRlcmFscyB3aGVuIHNlcmlhbGl6aW5nIHRvIEhUTUwuXHJcbiAqXHJcbiAqIEB0eXBlIHtIdG1sRXh0ZW5zaW9ufVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdmbUF1dG9saW5rTGl0ZXJhbEh0bWwgPSB7XHJcbiAgZXhpdDoge2xpdGVyYWxBdXRvbGlua0VtYWlsLCBsaXRlcmFsQXV0b2xpbmtIdHRwLCBsaXRlcmFsQXV0b2xpbmtXd3d9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7Q29tcGlsZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtIYW5kbGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBsaXRlcmFsQXV0b2xpbmtXd3codG9rZW4pIHtcclxuICBhbmNob3JGcm9tVG9rZW4uY2FsbCh0aGlzLCB0b2tlbiwgJ2h0dHA6Ly8nKVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7SGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gbGl0ZXJhbEF1dG9saW5rRW1haWwodG9rZW4pIHtcclxuICBhbmNob3JGcm9tVG9rZW4uY2FsbCh0aGlzLCB0b2tlbiwgJ21haWx0bzonKVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAdHlwZSB7SGFuZGxlfVxyXG4gKi9cclxuZnVuY3Rpb24gbGl0ZXJhbEF1dG9saW5rSHR0cCh0b2tlbikge1xyXG4gIGFuY2hvckZyb21Ub2tlbi5jYWxsKHRoaXMsIHRva2VuKVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMgQ29tcGlsZUNvbnRleHRcclxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cclxuICogQHBhcmFtIHtzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkfSBbcHJvdG9jb2xdXHJcbiAqIEByZXR1cm5zIHt2b2lkfVxyXG4gKi9cclxuZnVuY3Rpb24gYW5jaG9yRnJvbVRva2VuKHRva2VuLCBwcm90b2NvbCkge1xyXG4gIGNvbnN0IHVybCA9IHRoaXMuc2xpY2VTZXJpYWxpemUodG9rZW4pXHJcbiAgdGhpcy50YWcoJzxhIGhyZWY9XCInICsgc2FuaXRpemVVcmkoKHByb3RvY29sIHx8ICcnKSArIHVybCkgKyAnXCI+JylcclxuICB0aGlzLnJhdyh0aGlzLmVuY29kZSh1cmwpKVxyXG4gIHRoaXMudGFnKCc8L2E+JylcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmAutolinkLiteral\": function() { return /* binding */ gfmAutolinkLiteral; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').Previous} Previous\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\nconst wwwPrefix = {tokenize: tokenizeWwwPrefix, partial: true}\r\nconst domain = {tokenize: tokenizeDomain, partial: true}\r\nconst path = {tokenize: tokenizePath, partial: true}\r\nconst trail = {tokenize: tokenizeTrail, partial: true}\r\nconst emailDomainDotTrail = {\r\n  tokenize: tokenizeEmailDomainDotTrail,\r\n  partial: true\r\n}\r\n\r\nconst wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\r\nconst protocolAutolink = {\r\n  tokenize: tokenizeProtocolAutolink,\r\n  previous: previousProtocol\r\n}\r\nconst emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\r\n\r\n/** @type {ConstructRecord} */\r\nconst text = {}\r\n\r\n// To do: next major: expose functions that yields extension.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\r\n * autolink literal syntax.\r\n *\r\n * @type {Extension}\r\n */\r\nconst gfmAutolinkLiteral = {text}\r\n\r\n/** @type {Code} */\r\nlet code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit0\r\n\r\n// Add alphanumerics.\r\nwhile (code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftCurlyBrace) {\r\n  text[code] = emailAutolink\r\n  code++\r\n  if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.colon) code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseA\r\n  else if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftSquareBracket) code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseA\r\n}\r\n\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.plusSign] = emailAutolink\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash] = emailAutolink\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot] = emailAutolink\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore] = emailAutolink\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseH] = [emailAutolink, protocolAutolink]\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseH] = [emailAutolink, protocolAutolink]\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseW] = [emailAutolink, wwwAutolink]\r\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseW] = [emailAutolink, wwwAutolink]\r\n\r\n// To do: perform email autolink literals on events, afterwards.\r\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\r\n// It should look for `@`, then for atext backwards, and then for a label\r\n// forwards.\r\n// To do: `mailto:`, `xmpp:` protocol as prefix.\r\n\r\n/**\r\n * Email autolink literal.\r\n *\r\n * ```markdown\r\n * > | a contact@example.org b\r\n *       ^^^^^^^^^^^^^^^^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeEmailAutolink(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {boolean | undefined} */\r\n  let dot\r\n  /** @type {boolean} */\r\n  let data\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of email autolink literal.\r\n   *\r\n   * ```markdown\r\n   * > | a contact@example.org b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if (\r\n      !gfmAtext(code) ||\r\n      !previousEmail.call(self, self.previous) ||\r\n      previousUnbalanced(self.events)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter('literalAutolink')\r\n    effects.enter('literalAutolinkEmail')\r\n    return atext(code)\r\n  }\r\n\r\n  /**\r\n   * In email atext.\r\n   *\r\n   * ```markdown\r\n   * > | a contact@example.org b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atext(code) {\r\n    if (gfmAtext(code)) {\r\n      effects.consume(code)\r\n      return atext\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.atSign) {\r\n      effects.consume(code)\r\n      return emailDomain\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In email domain.\r\n   *\r\n   * The reference code is a bit overly complex as it handles the `@`, of which\r\n   * there may be just one.\r\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\r\n   *\r\n   * ```markdown\r\n   * > | a contact@example.org b\r\n   *               ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailDomain(code) {\r\n    // Dot followed by alphanumerical (not `-` or `_`).\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot) {\r\n      return effects.check(\r\n        emailDomainDotTrail,\r\n        emailDomainAfter,\r\n        emailDomainDot\r\n      )(code)\r\n    }\r\n\r\n    // Alphanumerical, `-`, and `_`.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlphanumeric)(code)\r\n    ) {\r\n      data = true\r\n      effects.consume(code)\r\n      return emailDomain\r\n    }\r\n\r\n    // To do: `/` if xmpp.\r\n\r\n    // Note: normally we’d truncate trailing punctuation from the link.\r\n    // However, email autolink literals cannot contain any of those markers,\r\n    // except for `.`, but that can only occur if it isn’t trailing.\r\n    // So we can ignore truncating!\r\n    return emailDomainAfter(code)\r\n  }\r\n\r\n  /**\r\n   * In email domain, on dot that is not a trail.\r\n   *\r\n   * ```markdown\r\n   * > | a contact@example.org b\r\n   *                      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailDomainDot(code) {\r\n    effects.consume(code)\r\n    dot = true\r\n    return emailDomain\r\n  }\r\n\r\n  /**\r\n   * After email domain.\r\n   *\r\n   * ```markdown\r\n   * > | a contact@example.org b\r\n   *                          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function emailDomainAfter(code) {\r\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\r\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\r\n    if (data && dot && (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlpha)(self.previous)) {\r\n      effects.exit('literalAutolinkEmail')\r\n      effects.exit('literalAutolink')\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * `www` autolink literal.\r\n *\r\n * ```markdown\r\n * > | a www.example.org b\r\n *       ^^^^^^^^^^^^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeWwwAutolink(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return wwwStart\r\n\r\n  /**\r\n   * Start of www autolink literal.\r\n   *\r\n   * ```markdown\r\n   * > | www.example.com/a?b#c\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function wwwStart(code) {\r\n    if (\r\n      (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseW && code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseW) ||\r\n      !previousWww.call(self, self.previous) ||\r\n      previousUnbalanced(self.events)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter('literalAutolink')\r\n    effects.enter('literalAutolinkWww')\r\n    // Note: we *check*, so we can discard the `www.` we parsed.\r\n    // If it worked, we consider it as a part of the domain.\r\n    return effects.check(\r\n      wwwPrefix,\r\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\r\n      nok\r\n    )(code)\r\n  }\r\n\r\n  /**\r\n   * After a www autolink literal.\r\n   *\r\n   * ```markdown\r\n   * > | www.example.com/a?b#c\r\n   *                          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function wwwAfter(code) {\r\n    effects.exit('literalAutolinkWww')\r\n    effects.exit('literalAutolink')\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Protocol autolink literal.\r\n *\r\n * ```markdown\r\n * > | a https://example.org b\r\n *       ^^^^^^^^^^^^^^^^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\r\n  const self = this\r\n  let buffer = ''\r\n  let seen = false\r\n\r\n  return protocolStart\r\n\r\n  /**\r\n   * Start of protocol autolink literal.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a?b#c\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function protocolStart(code) {\r\n    if (\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseH || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseH) &&\r\n      previousProtocol.call(self, self.previous) &&\r\n      !previousUnbalanced(self.events)\r\n    ) {\r\n      effects.enter('literalAutolink')\r\n      effects.enter('literalAutolinkHttp')\r\n      buffer += String.fromCodePoint(code)\r\n      effects.consume(code)\r\n      return protocolPrefixInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In protocol.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a?b#c\r\n   *     ^^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function protocolPrefixInside(code) {\r\n    // `5` is size of `https`\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlpha)(code) && buffer.length < 5) {\r\n      // @ts-expect-error: definitely number.\r\n      buffer += String.fromCodePoint(code)\r\n      effects.consume(code)\r\n      return protocolPrefixInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.colon) {\r\n      const protocol = buffer.toLowerCase()\r\n\r\n      if (protocol === 'http' || protocol === 'https') {\r\n        effects.consume(code)\r\n        return protocolSlashesInside\r\n      }\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In slashes.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a?b#c\r\n   *           ^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function protocolSlashesInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.slash) {\r\n      effects.consume(code)\r\n\r\n      if (seen) {\r\n        return afterProtocol\r\n      }\r\n\r\n      seen = true\r\n      return protocolSlashesInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After protocol, before domain.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a?b#c\r\n   *             ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function afterProtocol(code) {\r\n    // To do: this is different from `markdown-rs`:\r\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiControl)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodePunctuation)(code)\r\n      ? nok(code)\r\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\r\n  }\r\n\r\n  /**\r\n   * After a protocol autolink literal.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a?b#c\r\n   *                              ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function protocolAfter(code) {\r\n    effects.exit('literalAutolinkHttp')\r\n    effects.exit('literalAutolink')\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * `www` prefix.\r\n *\r\n * ```markdown\r\n * > | a www.example.org b\r\n *       ^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeWwwPrefix(effects, ok, nok) {\r\n  let size = 0\r\n\r\n  return wwwPrefixInside\r\n\r\n  /**\r\n   * In www prefix.\r\n   *\r\n   * ```markdown\r\n   * > | www.example.com\r\n   *     ^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function wwwPrefixInside(code) {\r\n    if ((code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseW || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseW) && size < 3) {\r\n      size++\r\n      effects.consume(code)\r\n      return wwwPrefixInside\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot && size === 3) {\r\n      effects.consume(code)\r\n      return wwwPrefixAfter\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After www prefix.\r\n   *\r\n   * ```markdown\r\n   * > | www.example.com\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function wwwPrefixAfter(code) {\r\n    // If there is *anything*, we can link.\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ? nok(code) : ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Domain.\r\n *\r\n * ```markdown\r\n * > | a https://example.org b\r\n *               ^^^^^^^^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeDomain(effects, ok, nok) {\r\n  /** @type {boolean | undefined} */\r\n  let underscoreInLastSegment\r\n  /** @type {boolean | undefined} */\r\n  let underscoreInLastLastSegment\r\n  /** @type {boolean | undefined} */\r\n  let seen\r\n\r\n  return domainInside\r\n\r\n  /**\r\n   * In domain.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a\r\n   *             ^^^^^^^^^^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function domainInside(code) {\r\n    // Check whether this marker, which is a trailing punctuation\r\n    // marker, optionally followed by more trailing markers, and then\r\n    // followed by an end.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore) {\r\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\r\n    }\r\n\r\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\r\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\r\n    // so that’s Unicode.\r\n    // Instead of some new production for Unicode alphanumerics, markdown\r\n    // already has that for Unicode punctuation and whitespace, so use those.\r\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code) ||\r\n      (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash && (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodePunctuation)(code))\r\n    ) {\r\n      return domainAfter(code)\r\n    }\r\n\r\n    seen = true\r\n    effects.consume(code)\r\n    return domainInside\r\n  }\r\n\r\n  /**\r\n   * In domain, at potential trailing punctuation, that was not trailing.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com\r\n   *                    ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function domainAtPunctuation(code) {\r\n    // There is an underscore in the last segment of the domain\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore) {\r\n      underscoreInLastSegment = true\r\n    }\r\n    // Otherwise, it’s a `.`: save the last segment underscore in the\r\n    // penultimate segment slot.\r\n    else {\r\n      underscoreInLastLastSegment = underscoreInLastSegment\r\n      underscoreInLastSegment = undefined\r\n    }\r\n\r\n    effects.consume(code)\r\n    return domainInside\r\n  }\r\n\r\n  /**\r\n   * After domain.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a\r\n   *                        ^\r\n   * ```\r\n   *\r\n   * @type {State} */\r\n  function domainAfter(code) {\r\n    // Note: that’s GH says a dot is needed, but it’s not true:\r\n    // <https://github.com/github/cmark-gfm/issues/279>\r\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\r\n      return nok(code)\r\n    }\r\n\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Path.\r\n *\r\n * ```markdown\r\n * > | a https://example.org/stuff b\r\n *                          ^^^^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizePath(effects, ok) {\r\n  let sizeOpen = 0\r\n  let sizeClose = 0\r\n\r\n  return pathInside\r\n\r\n  /**\r\n   * In path.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a\r\n   *                        ^^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function pathInside(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis) {\r\n      sizeOpen++\r\n      effects.consume(code)\r\n      return pathInside\r\n    }\r\n\r\n    // To do: `markdown-rs` also needs this.\r\n    // If this is a paren, and there are less closings than openings,\r\n    // we don’t check for a trail.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis && sizeClose < sizeOpen) {\r\n      return pathAtPunctuation(code)\r\n    }\r\n\r\n    // Check whether this trailing punctuation marker is optionally\r\n    // followed by more trailing markers, and then followed\r\n    // by an end.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.exclamationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ampersand ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.comma ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.colon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.semicolon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.questionMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightSquareBracket ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.tilde\r\n    ) {\r\n      return effects.check(trail, ok, pathAtPunctuation)(code)\r\n    }\r\n\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code)\r\n    ) {\r\n      return ok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return pathInside\r\n  }\r\n\r\n  /**\r\n   * In path, at potential trailing punctuation, that was not trailing.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com/a\"b\r\n   *                          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function pathAtPunctuation(code) {\r\n    // Count closing parens.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis) {\r\n      sizeClose++\r\n    }\r\n\r\n    effects.consume(code)\r\n    return pathInside\r\n  }\r\n}\r\n\r\n/**\r\n * Trail.\r\n *\r\n * This calls `ok` if this *is* the trail, followed by an end, which means\r\n * the entire trail is not part of the link.\r\n * It calls `nok` if this *is* part of the link.\r\n *\r\n * ```markdown\r\n * > | https://example.com\").\r\n *                        ^^^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeTrail(effects, ok, nok) {\r\n  return trail\r\n\r\n  /**\r\n   * In trail of domain or path.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com\").\r\n   *                        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function trail(code) {\r\n    // Regular trailing punctuation.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.exclamationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.comma ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.colon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.semicolon ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.questionMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.tilde\r\n    ) {\r\n      effects.consume(code)\r\n      return trail\r\n    }\r\n\r\n    // `&` followed by one or more alphabeticals and then a `;`, is\r\n    // as a whole considered as trailing punctuation.\r\n    // In all other cases, it is considered as continuation of the URL.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ampersand) {\r\n      effects.consume(code)\r\n      return trailCharRefStart\r\n    }\r\n\r\n    // Needed because we allow literals after `[`, as we fix:\r\n    // <https://github.com/github/cmark-gfm/issues/278>.\r\n    // Check that it is not followed by `(` or `[`.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightSquareBracket) {\r\n      effects.consume(code)\r\n      return trailBracketAfter\r\n    }\r\n\r\n    if (\r\n      // `<` is an end.\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan ||\r\n      // So is whitespace.\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code)\r\n    ) {\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In trail, after `]`.\r\n   *\r\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\r\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com](\r\n   *                         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function trailBracketAfter(code) {\r\n    // Whitespace or something that could start a resource or reference is the end.\r\n    // Switch back to trail otherwise.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftSquareBracket ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code)\r\n    ) {\r\n      return ok(code)\r\n    }\r\n\r\n    return trail(code)\r\n  }\r\n\r\n  /**\r\n   * In character-reference like trail, after `&`.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com&amp;).\r\n   *                         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function trailCharRefStart(code) {\r\n    // When non-alpha, it’s not a trail.\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlpha)(code) ? trailCharRefInside(code) : nok(code)\r\n  }\r\n\r\n  /**\r\n   * In character-reference like trail.\r\n   *\r\n   * ```markdown\r\n   * > | https://example.com&amp;).\r\n   *                         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function trailCharRefInside(code) {\r\n    // Switch back to trail if this is well-formed.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.semicolon) {\r\n      effects.consume(code)\r\n      return trail\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlpha)(code)) {\r\n      effects.consume(code)\r\n      return trailCharRefInside\r\n    }\r\n\r\n    // It’s not a trail.\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * Dot in email domain trail.\r\n *\r\n * This calls `ok` if this *is* the trail, followed by an end, which means\r\n * the trail is not part of the link.\r\n * It calls `nok` if this *is* part of the link.\r\n *\r\n * ```markdown\r\n * > | contact@example.org.\r\n *                        ^\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\r\n  return start\r\n\r\n  /**\r\n   * Dot.\r\n   *\r\n   * ```markdown\r\n   * > | contact@example.org.\r\n   *                    ^   ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    // Must be dot.\r\n    effects.consume(code)\r\n    return after\r\n  }\r\n\r\n  /**\r\n   * After dot.\r\n   *\r\n   * ```markdown\r\n   * > | contact@example.org.\r\n   *                     ^   ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    // Not a trail if alphanumeric.\r\n    return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlphanumeric)(code) ? nok(code) : ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * See:\r\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\r\n *\r\n * @type {Previous}\r\n */\r\nfunction previousWww(code) {\r\n  return (\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftSquareBracket ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightSquareBracket ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.tilde ||\r\n    (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code)\r\n  )\r\n}\r\n\r\n/**\r\n * See:\r\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\r\n *\r\n * @type {Previous}\r\n */\r\nfunction previousProtocol(code) {\r\n  return !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlpha)(code)\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Previous}\r\n */\r\nfunction previousEmail(code) {\r\n  // Do not allow a slash “inside” atext.\r\n  // The reference code is a bit weird, but that’s what it results in.\r\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\r\n  // Other than slash, every preceding character is allowed.\r\n  return !(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.slash || gfmAtext(code))\r\n}\r\n\r\n/**\r\n * @param {Code} code\r\n * @returns {boolean}\r\n */\r\nfunction gfmAtext(code) {\r\n  return (\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.plusSign ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dot ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore ||\r\n    (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiAlphanumeric)(code)\r\n  )\r\n}\r\n\r\n/**\r\n * @param {Array<Event>} events\r\n * @returns {boolean}\r\n */\r\nfunction previousUnbalanced(events) {\r\n  let index = events.length\r\n  let result = false\r\n\r\n  while (index--) {\r\n    const token = events[index][1]\r\n\r\n    if (\r\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\r\n      !token._balanced\r\n    ) {\r\n      result = true\r\n      break\r\n    }\r\n\r\n    // If we’ve seen this token, and it was marked as not having any unbalanced\r\n    // bracket before it, we can exit.\r\n    if (token._gfmAutolinkLiteralWalkedInto) {\r\n      result = false\r\n      break\r\n    }\r\n  }\r\n\r\n  if (events.length > 0 && !result) {\r\n    // Mark the last token as “walked into” w/o finding\r\n    // anything.\r\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\r\n  }\r\n\r\n  return result\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-footnote/dev/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-footnote/dev/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultBackLabel\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_1__.defaultBackLabel; },\n/* harmony export */   \"gfmFootnote\": function() { return /* reexport safe */ _lib_syntax_js__WEBPACK_IMPORTED_MODULE_0__.gfmFootnote; },\n/* harmony export */   \"gfmFootnoteHtml\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_1__.gfmFootnoteHtml; }\n/* harmony export */ });\n/* harmony import */ var _lib_syntax_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/syntax.js */ \"./node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js\");\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/micromark-extension-gfm-footnote/dev/lib/html.js\");\n// Note: types are exported from `dev/index.d.ts`.\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tZm9vdG5vdGUvZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDMkM7QUFDb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1leHRlbnNpb24tZ2ZtLWZvb3Rub3RlL2Rldi9pbmRleC5qcz9lNGVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IHR5cGVzIGFyZSBleHBvcnRlZCBmcm9tIGBkZXYvaW5kZXguZC50c2AuXHJcbmV4cG9ydCB7Z2ZtRm9vdG5vdGV9IGZyb20gJy4vbGliL3N5bnRheC5qcydcclxuZXhwb3J0IHtnZm1Gb290bm90ZUh0bWwsIGRlZmF1bHRCYWNrTGFiZWx9IGZyb20gJy4vbGliL2h0bWwuanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-footnote/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-footnote/dev/lib/html.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-footnote/dev/lib/html.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultBackLabel\": function() { return /* binding */ defaultBackLabel; },\n/* harmony export */   \"gfmFootnoteHtml\": function() { return /* binding */ gfmFootnoteHtml; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n */\r\n\r\n/**\r\n * @callback BackLabelTemplate\r\n *   Generate a back label dynamically.\r\n *\r\n *   For the following markdown:\r\n *\r\n *   ```markdown\r\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\r\n *\r\n *   [^remark]: things about remark\r\n *   [^micromark]: things about micromark\r\n *   ```\r\n *\r\n *   This function will be called with:\r\n *\r\n *   * `0` and `0` for the backreference from `things about micromark` to\r\n *      `alpha`, as it is the first used definition, and the first call to it\r\n *   * `0` and `1` for the backreference from `things about micromark` to\r\n *      `bravo`, as it is the first used definition, and the second call to it\r\n *   * `1` and `0` for the backreference from `things about remark` to\r\n *      `charlie`, as it is the second used definition\r\n * @param {number} referenceIndex\r\n *   Index of the definition in the order that they are first referenced,\r\n *   0-indexed.\r\n * @param {number} rereferenceIndex\r\n *   Index of calls to the same definition, 0-indexed.\r\n * @returns {string}\r\n *   Back label to use when linking back from definitions to their reference.\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {string} [clobberPrefix='user-content-']\r\n *   Prefix to use before the `id` attribute on footnotes to prevent them from\r\n *   *clobbering*.\r\n *\r\n *   The default is `'user-content-'`.\r\n *   Pass `''` for trusted markdown and when you are careful with\r\n *   polyfilling.\r\n *   You could pass a different prefix.\r\n *\r\n *   DOM clobbering is this:\r\n *\r\n *   ```html\r\n *   <p id=\"x\"></p>\r\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\r\n *   ```\r\n *\r\n *   The above example shows that elements are made available by browsers, by\r\n *   their ID, on the `window` object.\r\n *   This is a security risk because you might be expecting some other variable\r\n *   at that place.\r\n *   It can also break polyfills.\r\n *   Using a prefix solves these problems.\r\n * @property {string} [label='Footnotes']\r\n *   Textual label to use for the footnotes section.\r\n *\r\n *   The default value is `'Footnotes'`.\r\n *   Change it when the markdown is not in English.\r\n *\r\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\r\n *   is defined that does that) and so affects screen readers only.\r\n *   If you do have such a class, but want to show this section to everyone,\r\n *   pass different attributes with the `labelAttributes` option.\r\n * @property {string} [labelAttributes='class=\"sr-only\"']\r\n *   Attributes to use on the footnote label.\r\n *\r\n *   Change it to show the label and add other attributes.\r\n *\r\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\r\n *   is defined that does that) and so affects screen readers only.\r\n *   If you do have such a class, but want to show this section to everyone,\r\n *   pass an empty string.\r\n *   You can also add different attributes.\r\n *\r\n *   > 👉 **Note**: `id=\"footnote-label\"` is always added, because footnote\r\n *   > calls use it with `aria-describedby` to provide an accessible label.\r\n * @property {string} [labelTagName='h2']\r\n *   HTML tag name to use for the footnote label element.\r\n *\r\n *   Change it to match your document structure.\r\n *\r\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\r\n *   is defined that does that) and so affects screen readers only.\r\n *   If you do have such a class, but want to show this section to everyone,\r\n *   pass different attributes with the `labelAttributes` option.\r\n * @property {BackLabelTemplate | string} [backLabel]\r\n *   Textual label to describe the backreference back to references.\r\n *\r\n *   The default value is:\r\n *\r\n *   ```js\r\n *   function defaultBackLabel(referenceIndex, rereferenceIndex) {\r\n *    return (\r\n *      'Back to reference ' +\r\n *      (referenceIndex + 1) +\r\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\r\n *    )\r\n *  }\r\n *   ```\r\n *\r\n *   Change it when the markdown is not in English.\r\n *\r\n *   This label is used in the `aria-label` attribute on each backreference\r\n *   (the `↩` links).\r\n *   It affects users of assistive technology.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\n/**\r\n * Generate the default label that GitHub uses on backreferences.\r\n *\r\n * @param {number} referenceIndex\r\n *   Index of the definition in the order that they are first referenced,\r\n *   0-indexed.\r\n * @param {number} rereferenceIndex\r\n *   Index of calls to the same definition, 0-indexed.\r\n * @returns {string}\r\n *   Default label.\r\n */\r\nfunction defaultBackLabel(referenceIndex, rereferenceIndex) {\r\n  return (\r\n    'Back to reference ' +\r\n    (referenceIndex + 1) +\r\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\r\n  )\r\n}\r\n\r\n/**\r\n * Create an extension for `micromark` to support GFM footnotes when\r\n * serializing to HTML.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {HtmlExtension}\r\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\r\n *   support GFM footnotes when serializing to HTML.\r\n */\r\nfunction gfmFootnoteHtml(options) {\r\n  const config = options || emptyOptions\r\n  const label = config.label || 'Footnotes'\r\n  const labelTagName = config.labelTagName || 'h2'\r\n  const labelAttributes =\r\n    config.labelAttributes === null || config.labelAttributes === undefined\r\n      ? 'class=\"sr-only\"'\r\n      : config.labelAttributes\r\n  const backLabel = config.backLabel || defaultBackLabel\r\n  const clobberPrefix =\r\n    config.clobberPrefix === null || config.clobberPrefix === undefined\r\n      ? 'user-content-'\r\n      : config.clobberPrefix\r\n  return {\r\n    enter: {\r\n      gfmFootnoteDefinition() {\r\n        const stack = this.getData('tightStack')\r\n        stack.push(false)\r\n      },\r\n      gfmFootnoteDefinitionLabelString() {\r\n        this.buffer()\r\n      },\r\n      gfmFootnoteCallString() {\r\n        this.buffer()\r\n      }\r\n    },\r\n    exit: {\r\n      gfmFootnoteDefinition() {\r\n        let definitions = this.getData('gfmFootnoteDefinitions')\r\n        const footnoteStack = this.getData('gfmFootnoteDefinitionStack')\r\n        ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(footnoteStack, 'expected `footnoteStack`')\r\n        const tightStack = this.getData('tightStack')\r\n        const current = footnoteStack.pop()\r\n        const value = this.resume()\r\n\r\n        ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(current, 'expected to be in a footnote')\r\n\r\n        if (!definitions) {\r\n          this.setData('gfmFootnoteDefinitions', (definitions = {}))\r\n        }\r\n\r\n        if (!own.call(definitions, current)) definitions[current] = value\r\n\r\n        tightStack.pop()\r\n        this.setData('slurpOneLineEnding', true)\r\n        // “Hack” to prevent a line ending from showing up if we’re in a definition in\r\n        // an empty list item.\r\n        this.setData('lastWasTag')\r\n      },\r\n      gfmFootnoteDefinitionLabelString(token) {\r\n        let footnoteStack = /** @type {Array<string>} */ (\r\n          this.getData('gfmFootnoteDefinitionStack')\r\n        )\r\n\r\n        if (!footnoteStack) {\r\n          this.setData('gfmFootnoteDefinitionStack', (footnoteStack = []))\r\n        }\r\n\r\n        footnoteStack.push((0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__.normalizeIdentifier)(this.sliceSerialize(token)))\r\n        this.resume() // Drop the label.\r\n        this.buffer() // Get ready for a value.\r\n      },\r\n      gfmFootnoteCallString(token) {\r\n        let calls = this.getData('gfmFootnoteCallOrder')\r\n        let counts = this.getData('gfmFootnoteCallCounts')\r\n        const id = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_1__.normalizeIdentifier)(this.sliceSerialize(token))\r\n        /** @type {number} */\r\n        let counter\r\n\r\n        this.resume()\r\n\r\n        if (!calls) this.setData('gfmFootnoteCallOrder', (calls = []))\r\n        if (!counts) this.setData('gfmFootnoteCallCounts', (counts = {}))\r\n\r\n        const index = calls.indexOf(id)\r\n        const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_2__.sanitizeUri)(id.toLowerCase())\r\n\r\n        if (index === -1) {\r\n          calls.push(id)\r\n          counts[id] = 1\r\n          counter = calls.length\r\n        } else {\r\n          counts[id]++\r\n          counter = index + 1\r\n        }\r\n\r\n        const reuseCounter = counts[id]\r\n\r\n        this.tag(\r\n          '<sup><a href=\"#' +\r\n            clobberPrefix +\r\n            'fn-' +\r\n            safeId +\r\n            '\" id=\"' +\r\n            clobberPrefix +\r\n            'fnref-' +\r\n            safeId +\r\n            (reuseCounter > 1 ? '-' + reuseCounter : '') +\r\n            '\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">' +\r\n            String(counter) +\r\n            '</a></sup>'\r\n        )\r\n      },\r\n      null() {\r\n        const calls = /** @type {Array<string>} */ (\r\n          this.getData('gfmFootnoteCallOrder') || []\r\n        )\r\n        const counts = /** @type {Record<string, number>} */ (\r\n          this.getData('gfmFootnoteCallCounts') || {}\r\n        )\r\n        const definitions = /** @type {Record<string, string>} */ (\r\n          this.getData('gfmFootnoteDefinitions') || {}\r\n        )\r\n        let index = -1\r\n\r\n        if (calls.length > 0) {\r\n          this.lineEndingIfNeeded()\r\n          this.tag(\r\n            '<section data-footnotes=\"\" class=\"footnotes\"><' +\r\n              labelTagName +\r\n              ' id=\"footnote-label\"' +\r\n              (labelAttributes ? ' ' + labelAttributes : '') +\r\n              '>'\r\n          )\r\n          this.raw(this.encode(label))\r\n          this.tag('</' + labelTagName + '>')\r\n          this.lineEndingIfNeeded()\r\n          this.tag('<ol>')\r\n        }\r\n\r\n        while (++index < calls.length) {\r\n          // Called definitions are always defined.\r\n          const id = calls[index]\r\n          const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_2__.sanitizeUri)(id.toLowerCase())\r\n          let referenceIndex = 0\r\n          /** @type {Array<string>} */\r\n          const references = []\r\n\r\n          while (++referenceIndex <= counts[id]) {\r\n            references.push(\r\n              '<a href=\"#' +\r\n                clobberPrefix +\r\n                'fnref-' +\r\n                safeId +\r\n                (referenceIndex > 1 ? '-' + referenceIndex : '') +\r\n                '\" data-footnote-backref=\"\" aria-label=\"' +\r\n                this.encode(\r\n                  typeof backLabel === 'string'\r\n                    ? backLabel\r\n                    : backLabel(index, referenceIndex)\r\n                ) +\r\n                '\" class=\"data-footnote-backref\">↩' +\r\n                (referenceIndex > 1\r\n                  ? '<sup>' + referenceIndex + '</sup>'\r\n                  : '') +\r\n                '</a>'\r\n            )\r\n          }\r\n\r\n          const reference = references.join(' ')\r\n          let injected = false\r\n\r\n          this.lineEndingIfNeeded()\r\n          this.tag('<li id=\"' + clobberPrefix + 'fn-' + safeId + '\">')\r\n          this.lineEndingIfNeeded()\r\n          this.tag(\r\n            definitions[id].replace(\r\n              /<\\/p>(?:\\r?\\n|\\r)?$/,\r\n              (/** @type {string} */ $0) => {\r\n                injected = true\r\n                return ' ' + reference + $0\r\n              }\r\n            )\r\n          )\r\n\r\n          if (!injected) {\r\n            this.lineEndingIfNeeded()\r\n            this.tag(reference)\r\n          }\r\n\r\n          this.lineEndingIfNeeded()\r\n          this.tag('</li>')\r\n        }\r\n\r\n        if (calls.length > 0) {\r\n          this.lineEndingIfNeeded()\r\n          this.tag('</ol>')\r\n          this.lineEndingIfNeeded()\r\n          this.tag('</section>')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-footnote/dev/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js":
/*!*************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmFootnote\": function() { return /* binding */ gfmFootnote; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-core-commonmark */ \"./node_modules/micromark-core-commonmark/dev/index.js\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"./node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Exiter} Exiter\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst indent = {tokenize: tokenizeIndent, partial: true}\r\n\r\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\r\n// affects label start (image).\r\n// That will let us drop `tokenizePotentialGfmFootnote*`.\r\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\r\n// That can be removed when `micromark-extension-footnote` is archived.\r\n\r\n/**\r\n * Create an extension for `micromark` to enable GFM footnote syntax.\r\n *\r\n * @returns {Extension}\r\n *   Extension for `micromark` that can be passed in `extensions` to\r\n *   enable GFM footnote syntax.\r\n */\r\nfunction gfmFootnote() {\r\n  /** @type {Extension} */\r\n  return {\r\n    document: {\r\n      [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket]: {\r\n        tokenize: tokenizeDefinitionStart,\r\n        continuation: {tokenize: tokenizeDefinitionContinuation},\r\n        exit: gfmFootnoteDefinitionEnd\r\n      }\r\n    },\r\n    text: {\r\n      [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket]: {tokenize: tokenizeGfmFootnoteCall},\r\n      [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket]: {\r\n        add: 'after',\r\n        tokenize: tokenizePotentialGfmFootnoteCall,\r\n        resolveTo: resolveToPotentialGfmFootnoteCall\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// To do: remove after micromark update.\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\r\n  const self = this\r\n  let index = self.events.length\r\n  /** @type {Array<string>} */\r\n  // @ts-expect-error It’s fine!\r\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\r\n  /** @type {Token} */\r\n  let labelStart\r\n\r\n  // Find an opening.\r\n  while (index--) {\r\n    const token = self.events[index][1]\r\n\r\n    if (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.labelImage) {\r\n      labelStart = token\r\n      break\r\n    }\r\n\r\n    // Exit if we’ve walked far enough.\r\n    if (\r\n      token.type === 'gfmFootnoteCall' ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.labelLink ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.label ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.image ||\r\n      token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.link\r\n    ) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return start\r\n\r\n  /**\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket, 'expected `]`')\r\n\r\n    if (!labelStart || !labelStart._balanced) {\r\n      return nok(code)\r\n    }\r\n\r\n    const id = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_3__.normalizeIdentifier)(\r\n      self.sliceSerialize({start: labelStart.end, end: self.now()})\r\n    )\r\n\r\n    if (id.codePointAt(0) !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.caret || !defined.includes(id.slice(1))) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter('gfmFootnoteCallLabelMarker')\r\n    effects.consume(code)\r\n    effects.exit('gfmFootnoteCallLabelMarker')\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n// To do: remove after micromark update.\r\n/** @type {Resolver} */\r\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\r\n  let index = events.length\r\n  /** @type {Token | undefined} */\r\n  let labelStart\r\n\r\n  // Find an opening.\r\n  while (index--) {\r\n    if (\r\n      events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.labelImage &&\r\n      events[index][0] === 'enter'\r\n    ) {\r\n      labelStart = events[index][1]\r\n      break\r\n    }\r\n  }\r\n\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(labelStart, 'expected `labelStart` to resolve')\r\n\r\n  // Change the `labelImageMarker` to a `data`.\r\n  events[index + 1][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data\r\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\r\n\r\n  // The whole (without `!`):\r\n  /** @type {Token} */\r\n  const call = {\r\n    type: 'gfmFootnoteCall',\r\n    start: Object.assign({}, events[index + 3][1].start),\r\n    end: Object.assign({}, events[events.length - 1][1].end)\r\n  }\r\n  // The `^` marker\r\n  /** @type {Token} */\r\n  const marker = {\r\n    type: 'gfmFootnoteCallMarker',\r\n    start: Object.assign({}, events[index + 3][1].end),\r\n    end: Object.assign({}, events[index + 3][1].end)\r\n  }\r\n  // Increment the end 1 character.\r\n  marker.end.column++\r\n  marker.end.offset++\r\n  marker.end._bufferIndex++\r\n  /** @type {Token} */\r\n  const string = {\r\n    type: 'gfmFootnoteCallString',\r\n    start: Object.assign({}, marker.end),\r\n    end: Object.assign({}, events[events.length - 1][1].start)\r\n  }\r\n  /** @type {Token} */\r\n  const chunk = {\r\n    type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString,\r\n    contentType: 'string',\r\n    start: Object.assign({}, string.start),\r\n    end: Object.assign({}, string.end)\r\n  }\r\n\r\n  /** @type {Array<Event>} */\r\n  const replacement = [\r\n    // Take the `labelImageMarker` (now `data`, the `!`)\r\n    events[index + 1],\r\n    events[index + 2],\r\n    ['enter', call, context],\r\n    // The `[`\r\n    events[index + 3],\r\n    events[index + 4],\r\n    // The `^`.\r\n    ['enter', marker, context],\r\n    ['exit', marker, context],\r\n    // Everything in between.\r\n    ['enter', string, context],\r\n    ['enter', chunk, context],\r\n    ['exit', chunk, context],\r\n    ['exit', string, context],\r\n    // The ending (`]`, properly parsed and labelled).\r\n    events[events.length - 2],\r\n    events[events.length - 1],\r\n    ['exit', call, context]\r\n  ]\r\n\r\n  events.splice(index, events.length - index + 1, ...replacement)\r\n\r\n  return events\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {Array<string>} */\r\n  // @ts-expect-error It’s fine!\r\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\r\n  let size = 0\r\n  /** @type {boolean} */\r\n  let data\r\n\r\n  // Note: the implementation of `markdown-rs` is different, because it houses\r\n  // core *and* extensions in one project.\r\n  // Therefore, it can include footnote logic inside `label-end`.\r\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\r\n  // needed for labels.\r\n  return start\r\n\r\n  /**\r\n   * Start of footnote label.\r\n   *\r\n   * ```markdown\r\n   * > | a [^b] c\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket, 'expected `[`')\r\n    effects.enter('gfmFootnoteCall')\r\n    effects.enter('gfmFootnoteCallLabelMarker')\r\n    effects.consume(code)\r\n    effects.exit('gfmFootnoteCallLabelMarker')\r\n    return callStart\r\n  }\r\n\r\n  /**\r\n   * After `[`, at `^`.\r\n   *\r\n   * ```markdown\r\n   * > | a [^b] c\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function callStart(code) {\r\n    if (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.caret) return nok(code)\r\n\r\n    effects.enter('gfmFootnoteCallMarker')\r\n    effects.consume(code)\r\n    effects.exit('gfmFootnoteCallMarker')\r\n    effects.enter('gfmFootnoteCallString')\r\n    effects.enter('chunkString').contentType = 'string'\r\n    return callData\r\n  }\r\n\r\n  /**\r\n   * In label.\r\n   *\r\n   * ```markdown\r\n   * > | a [^b] c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function callData(code) {\r\n    if (\r\n      // Too long.\r\n      size > micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.linkReferenceSizeMax ||\r\n      // Closing brace with nothing.\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket && !data) ||\r\n      // Space or tab is not supported by GFM for some reason.\r\n      // `\\n` and `[` not being supported makes sense.\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.exit('chunkString')\r\n      const token = effects.exit('gfmFootnoteCallString')\r\n\r\n      if (!defined.includes((0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_3__.normalizeIdentifier)(self.sliceSerialize(token)))) {\r\n        return nok(code)\r\n      }\r\n\r\n      effects.enter('gfmFootnoteCallLabelMarker')\r\n      effects.consume(code)\r\n      effects.exit('gfmFootnoteCallLabelMarker')\r\n      effects.exit('gfmFootnoteCall')\r\n      return ok\r\n    }\r\n\r\n    if (!(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\r\n      data = true\r\n    }\r\n\r\n    size++\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ? callEscape : callData\r\n  }\r\n\r\n  /**\r\n   * On character after escape.\r\n   *\r\n   * ```markdown\r\n   * > | a [^b\\c] d\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function callEscape(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket\r\n    ) {\r\n      effects.consume(code)\r\n      size++\r\n      return callData\r\n    }\r\n\r\n    return callData(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeDefinitionStart(effects, ok, nok) {\r\n  const self = this\r\n  /** @type {Array<string>} */\r\n  // @ts-expect-error It’s fine!\r\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\r\n  /** @type {string} */\r\n  let identifier\r\n  let size = 0\r\n  /** @type {boolean | undefined} */\r\n  let data\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of GFM footnote definition.\r\n   *\r\n   * ```markdown\r\n   * > | [^a]: b\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket, 'expected `[`')\r\n    effects.enter('gfmFootnoteDefinition')._container = true\r\n    effects.enter('gfmFootnoteDefinitionLabel')\r\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\r\n    effects.consume(code)\r\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\r\n    return labelAtMarker\r\n  }\r\n\r\n  /**\r\n   * In label, at caret.\r\n   *\r\n   * ```markdown\r\n   * > | [^a]: b\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelAtMarker(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.caret) {\r\n      effects.enter('gfmFootnoteDefinitionMarker')\r\n      effects.consume(code)\r\n      effects.exit('gfmFootnoteDefinitionMarker')\r\n      effects.enter('gfmFootnoteDefinitionLabelString')\r\n      effects.enter('chunkString').contentType = 'string'\r\n      return labelInside\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * In label.\r\n   *\r\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\r\n   * > definition labels.\r\n   *\r\n   * ```markdown\r\n   * > | [^a]: b\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelInside(code) {\r\n    if (\r\n      // Too long.\r\n      size > micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.linkReferenceSizeMax ||\r\n      // Closing brace with nothing.\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket && !data) ||\r\n      // Space or tab is not supported by GFM for some reason.\r\n      // `\\n` and `[` not being supported makes sense.\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.exit('chunkString')\r\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\r\n      identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_3__.normalizeIdentifier)(self.sliceSerialize(token))\r\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\r\n      effects.consume(code)\r\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\r\n      effects.exit('gfmFootnoteDefinitionLabel')\r\n      return labelAfter\r\n    }\r\n\r\n    if (!(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\r\n      data = true\r\n    }\r\n\r\n    size++\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ? labelEscape : labelInside\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at a special character.\r\n   *\r\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\r\n   * > <https://github.com/github/cmark-gfm/issues/240>\r\n   *\r\n   * ```markdown\r\n   * > | [^a\\*b]: c\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelEscape(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket\r\n    ) {\r\n      effects.consume(code)\r\n      size++\r\n      return labelInside\r\n    }\r\n\r\n    return labelInside(code)\r\n  }\r\n\r\n  /**\r\n   * After definition label.\r\n   *\r\n   * ```markdown\r\n   * > | [^a]: b\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) {\r\n      effects.enter('definitionMarker')\r\n      effects.consume(code)\r\n      effects.exit('definitionMarker')\r\n\r\n      if (!defined.includes(identifier)) {\r\n        defined.push(identifier)\r\n      }\r\n\r\n      // Any whitespace after the marker is eaten, forming indented code\r\n      // is not possible.\r\n      // No space is also fine, just like a block quote marker.\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(\r\n        effects,\r\n        whitespaceAfter,\r\n        'gfmFootnoteDefinitionWhitespace'\r\n      )\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After definition prefix.\r\n   *\r\n   * ```markdown\r\n   * > | [^a]: b\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function whitespaceAfter(code) {\r\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\r\n    return ok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\r\n  /// Start of footnote definition continuation.\r\n  ///\r\n  /// ```markdown\r\n  ///   | [^a]: b\r\n  /// > |     c\r\n  ///     ^\r\n  /// ```\r\n  //\r\n  // Either a blank line, which is okay, or an indented thing.\r\n  return effects.check(micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_7__.blankLine, ok, effects.attempt(indent, ok, nok))\r\n}\r\n\r\n/** @type {Exiter} */\r\nfunction gfmFootnoteDefinitionEnd(effects) {\r\n  effects.exit('gfmFootnoteDefinition')\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeIndent(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(\r\n    effects,\r\n    afterPrefix,\r\n    'gfmFootnoteDefinitionIndent',\r\n    micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize + 1\r\n  )\r\n\r\n  /**\r\n   * @type {State}\r\n   */\r\n  function afterPrefix(code) {\r\n    const tail = self.events[self.events.length - 1]\r\n    return tail &&\r\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\r\n      tail[2].sliceSerialize(tail[1], true).length === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize\r\n      ? ok(code)\r\n      : nok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-strikethrough/dev/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-strikethrough/dev/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmStrikethrough\": function() { return /* reexport safe */ _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__.gfmStrikethrough; },\n/* harmony export */   \"gfmStrikethroughHtml\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_0__.gfmStrikethroughHtml; }\n/* harmony export */ });\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js\");\n/* harmony import */ var _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/syntax.js */ \"./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js\");\n// Note: more types exposed from `index.d.ts`.\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tc3RyaWtldGhyb3VnaC9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2tEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1leHRlbnNpb24tZ2ZtLXN0cmlrZXRocm91Z2gvZGV2L2luZGV4LmpzPzc2OTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogbW9yZSB0eXBlcyBleHBvc2VkIGZyb20gYGluZGV4LmQudHNgLlxyXG5leHBvcnQge2dmbVN0cmlrZXRocm91Z2hIdG1sfSBmcm9tICcuL2xpYi9odG1sLmpzJ1xyXG5leHBvcnQge2dmbVN0cmlrZXRocm91Z2h9IGZyb20gJy4vbGliL3N5bnRheC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-strikethrough/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmStrikethroughHtml\": function() { return /* binding */ gfmStrikethroughHtml; }\n/* harmony export */ });\n/**\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n */\r\n\r\n// To do: next major: expose function instead of object.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `htmlExtensions`, to\r\n * support GFM strikethrough when serializing to HTML.\r\n *\r\n * @type {HtmlExtension}\r\n */\r\nconst gfmStrikethroughHtml = {\r\n  enter: {\r\n    strikethrough() {\r\n      this.tag('<del>')\r\n    }\r\n  },\r\n  exit: {\r\n    strikethrough() {\r\n      this.tag('</del>')\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tc3RyaWtldGhyb3VnaC9kZXYvbGliL2h0bWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSw4Q0FBOEM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWdmbS1zdHJpa2V0aHJvdWdoL2Rldi9saWIvaHRtbC5qcz9hMzk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkh0bWxFeHRlbnNpb259IEh0bWxFeHRlbnNpb25cclxuICovXHJcblxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogZXhwb3NlIGZ1bmN0aW9uIGluc3RlYWQgb2Ygb2JqZWN0LlxyXG5cclxuLyoqXHJcbiAqIEV4dGVuc2lvbiBmb3IgYG1pY3JvbWFya2AgdGhhdCBjYW4gYmUgcGFzc2VkIGluIGBodG1sRXh0ZW5zaW9uc2AsIHRvXHJcbiAqIHN1cHBvcnQgR0ZNIHN0cmlrZXRocm91Z2ggd2hlbiBzZXJpYWxpemluZyB0byBIVE1MLlxyXG4gKlxyXG4gKiBAdHlwZSB7SHRtbEV4dGVuc2lvbn1cclxuICovXHJcbmV4cG9ydCBjb25zdCBnZm1TdHJpa2V0aHJvdWdoSHRtbCA9IHtcclxuICBlbnRlcjoge1xyXG4gICAgc3RyaWtldGhyb3VnaCgpIHtcclxuICAgICAgdGhpcy50YWcoJzxkZWw+JylcclxuICAgIH1cclxuICB9LFxyXG4gIGV4aXQ6IHtcclxuICAgIHN0cmlrZXRocm91Z2goKSB7XHJcbiAgICAgIHRoaXMudGFnKCc8L2RlbD4nKVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js":
/*!******************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmStrikethrough\": function() { return /* binding */ gfmStrikethrough; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-classify-character */ \"./node_modules/micromark-util-classify-character/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"./node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n *\r\n * @typedef Options\r\n *   Configuration (optional).\r\n * @property {boolean} [singleTilde=true]\r\n *   Whether to support strikethrough with a single tilde.\r\n *\r\n *   Single tildes work on github.com, but are technically prohibited by the\r\n *   GFM spec.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {Extension}\r\n *   Extension for `micromark` that can be passed in `extensions`, to\r\n *   enable GFM strikethrough syntax.\r\n */\r\nfunction gfmStrikethrough(options) {\r\n  const options_ = options || {}\r\n  let single = options_.singleTilde\r\n  const tokenizer = {\r\n    tokenize: tokenizeStrikethrough,\r\n    resolveAll: resolveAllStrikethrough\r\n  }\r\n\r\n  if (single === null || single === undefined) {\r\n    single = true\r\n  }\r\n\r\n  return {\r\n    text: {[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde]: tokenizer},\r\n    insideSpan: {null: [tokenizer]},\r\n    attentionMarkers: {null: [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde]}\r\n  }\r\n\r\n  /**\r\n   * Take events and resolve strikethrough.\r\n   *\r\n   * @type {Resolver}\r\n   */\r\n  function resolveAllStrikethrough(events, context) {\r\n    let index = -1\r\n\r\n    // Walk through all events.\r\n    while (++index < events.length) {\r\n      // Find a token that can close.\r\n      if (\r\n        events[index][0] === 'enter' &&\r\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\r\n        events[index][1]._close\r\n      ) {\r\n        let open = index\r\n\r\n        // Now walk back to find an opener.\r\n        while (open--) {\r\n          // Find a token that can open the closer.\r\n          if (\r\n            events[open][0] === 'exit' &&\r\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\r\n            events[open][1]._open &&\r\n            // If the sizes are the same:\r\n            events[index][1].end.offset - events[index][1].start.offset ===\r\n              events[open][1].end.offset - events[open][1].start.offset\r\n          ) {\r\n            events[index][1].type = 'strikethroughSequence'\r\n            events[open][1].type = 'strikethroughSequence'\r\n\r\n            /** @type {Token} */\r\n            const strikethrough = {\r\n              type: 'strikethrough',\r\n              start: Object.assign({}, events[open][1].start),\r\n              end: Object.assign({}, events[index][1].end)\r\n            }\r\n\r\n            /** @type {Token} */\r\n            const text = {\r\n              type: 'strikethroughText',\r\n              start: Object.assign({}, events[open][1].end),\r\n              end: Object.assign({}, events[index][1].start)\r\n            }\r\n\r\n            // Opening.\r\n            /** @type {Array<Event>} */\r\n            const nextEvents = [\r\n              ['enter', strikethrough, context],\r\n              ['enter', events[open][1], context],\r\n              ['exit', events[open][1], context],\r\n              ['enter', text, context]\r\n            ]\r\n\r\n            const insideSpan = context.parser.constructs.insideSpan.null\r\n\r\n            if (insideSpan) {\r\n              // Between.\r\n              (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(\r\n                nextEvents,\r\n                nextEvents.length,\r\n                0,\r\n                (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(insideSpan, events.slice(open + 1, index), context)\r\n              )\r\n            }\r\n\r\n            // Closing.\r\n            (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(nextEvents, nextEvents.length, 0, [\r\n              ['exit', text, context],\r\n              ['enter', events[index][1], context],\r\n              ['exit', events[index][1], context],\r\n              ['exit', strikethrough, context]\r\n            ])\r\n\r\n            ;(0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open - 1, index - open + 3, nextEvents)\r\n\r\n            index = open + nextEvents.length - 2\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    index = -1\r\n\r\n    while (++index < events.length) {\r\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\r\n        events[index][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.data\r\n      }\r\n    }\r\n\r\n    return events\r\n  }\r\n\r\n  /**\r\n   * @this {TokenizeContext}\r\n   * @type {Tokenizer}\r\n   */\r\n  function tokenizeStrikethrough(effects, ok, nok) {\r\n    const previous = this.previous\r\n    const events = this.events\r\n    let size = 0\r\n\r\n    return start\r\n\r\n    /** @type {State} */\r\n    function start(code) {\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde, 'expected `~`')\r\n\r\n      if (\r\n        previous === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde &&\r\n        events[events.length - 1][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.characterEscape\r\n      ) {\r\n        return nok(code)\r\n      }\r\n\r\n      effects.enter('strikethroughSequenceTemporary')\r\n      return more(code)\r\n    }\r\n\r\n    /** @type {State} */\r\n    function more(code) {\r\n      const before = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__.classifyCharacter)(previous)\r\n\r\n      if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde) {\r\n        // If this is the third marker, exit.\r\n        if (size > 1) return nok(code)\r\n        effects.consume(code)\r\n        size++\r\n        return more\r\n      }\r\n\r\n      if (size < 2 && !single) return nok(code)\r\n      const token = effects.exit('strikethroughSequenceTemporary')\r\n      const after = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__.classifyCharacter)(code)\r\n      token._open =\r\n        !after || (after === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.attentionSideAfter && Boolean(before))\r\n      token._close =\r\n        !before || (before === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.attentionSideAfter && Boolean(after))\r\n      return ok(code)\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-table/dev/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-table/dev/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTable\": function() { return /* reexport safe */ _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__.gfmTable; },\n/* harmony export */   \"gfmTableHtml\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_0__.gfmTableHtml; }\n/* harmony export */ });\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/micromark-extension-gfm-table/dev/lib/html.js\");\n/* harmony import */ var _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/syntax.js */ \"./node_modules/micromark-extension-gfm-table/dev/lib/syntax.js\");\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2luZGV4LmpzP2Y5MTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtnZm1UYWJsZUh0bWx9IGZyb20gJy4vbGliL2h0bWwuanMnXHJcbmV4cG9ydCB7Z2ZtVGFibGV9IGZyb20gJy4vbGliL3N5bnRheC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-table/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js":
/*!************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EditMap\": function() { return /* binding */ EditMap; }\n/* harmony export */ });\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n */\r\n\r\n// Port of `edit_map.rs` from `markdown-rs`.\r\n// This should move to `markdown-js` later.\r\n\r\n// Deal with several changes in events, batching them together.\r\n//\r\n// Preferably, changes should be kept to a minimum.\r\n// Sometimes, it’s needed to change the list of events, because parsing can be\r\n// messy, and it helps to expose a cleaner interface of events to the compiler\r\n// and other users.\r\n// It can also help to merge many adjacent similar events.\r\n// And, in other cases, it’s needed to parse subcontent: pass some events\r\n// through another tokenizer and inject the result.\r\n\r\n/**\r\n * @typedef {[number, number, Array<Event>]} Change\r\n * @typedef {[number, number, number]} Jump\r\n */\r\n\r\n/**\r\n * Tracks a bunch of edits.\r\n */\r\nclass EditMap {\r\n  /**\r\n   * Create a new edit map.\r\n   */\r\n  constructor() {\r\n    /**\r\n     * Record of changes.\r\n     *\r\n     * @type {Array<Change>}\r\n     */\r\n    this.map = []\r\n  }\r\n\r\n  /**\r\n   * Create an edit: a remove and/or add at a certain place.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} remove\r\n   * @param {Array<Event>} add\r\n   * @returns {void}\r\n   */\r\n  add(index, remove, add) {\r\n    addImpl(this, index, remove, add)\r\n  }\r\n\r\n  // To do: not used here.\r\n  // /**\r\n  //  * Create an edit: but insert `add` before existing additions.\r\n  //  *\r\n  //  * @param {number} index\r\n  //  * @param {number} remove\r\n  //  * @param {Array<Event>} add\r\n  //  * @returns {void}\r\n  //  */\r\n  // addBefore(index, remove, add) {\r\n  //   addImpl(this, index, remove, add, true)\r\n  // }\r\n\r\n  /**\r\n   * Done, change the events.\r\n   *\r\n   * @param {Array<Event>} events\r\n   * @returns {void}\r\n   */\r\n  consume(events) {\r\n    this.map.sort((a, b) => a[0] - b[0])\r\n\r\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\r\n    if (this.map.length === 0) {\r\n      return\r\n    }\r\n\r\n    // To do: if links are added in events, like they are in `markdown-rs`,\r\n    // this is needed.\r\n    // // Calculate jumps: where items in the current list move to.\r\n    // /** @type {Array<Jump>} */\r\n    // const jumps = []\r\n    // let index = 0\r\n    // let addAcc = 0\r\n    // let removeAcc = 0\r\n    // while (index < this.map.length) {\r\n    //   const [at, remove, add] = this.map[index]\r\n    //   removeAcc += remove\r\n    //   addAcc += add.length\r\n    //   jumps.push([at, removeAcc, addAcc])\r\n    //   index += 1\r\n    // }\r\n    //\r\n    // . shiftLinks(events, jumps)\r\n\r\n    let index = this.map.length\r\n    /** @type {Array<Array<Event>>} */\r\n    const vecs = []\r\n    while (index > 0) {\r\n      index -= 1\r\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\r\n      // eslint-disable-next-line unicorn/no-array-push-push\r\n      vecs.push(this.map[index][2])\r\n\r\n      // Truncate rest.\r\n      events.length = this.map[index][0]\r\n    }\r\n\r\n    vecs.push([...events])\r\n    events.length = 0\r\n\r\n    let slice = vecs.pop()\r\n\r\n    while (slice) {\r\n      events.push(...slice)\r\n      slice = vecs.pop()\r\n    }\r\n\r\n    // Truncate everything.\r\n    this.map.length = 0\r\n  }\r\n}\r\n\r\n/**\r\n * Create an edit.\r\n *\r\n * @param {EditMap} editMap\r\n * @param {number} at\r\n * @param {number} remove\r\n * @param {Array<Event>} add\r\n * @returns {void}\r\n */\r\nfunction addImpl(editMap, at, remove, add) {\r\n  let index = 0\r\n\r\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\r\n  if (remove === 0 && add.length === 0) {\r\n    return\r\n  }\r\n\r\n  while (index < editMap.map.length) {\r\n    if (editMap.map[index][0] === at) {\r\n      editMap.map[index][1] += remove\r\n\r\n      // To do: before not used.\r\n      // if (before) {\r\n      //   add.push(...editMap.map[index][2])\r\n      //   editMap.map[index][2] = add\r\n      // } else {\r\n      editMap.map[index][2].push(...add)\r\n      // }\r\n\r\n      return\r\n    }\r\n\r\n    index += 1\r\n  }\r\n\r\n  editMap.map.push([at, remove, add])\r\n}\r\n\r\n// /**\r\n//  * Shift `previous` and `next` links according to `jumps`.\r\n//  *\r\n//  * This fixes links in case there are events removed or added between them.\r\n//  *\r\n//  * @param {Array<Event>} events\r\n//  * @param {Array<Jump>} jumps\r\n//  */\r\n// function shiftLinks(events, jumps) {\r\n//   let jumpIndex = 0\r\n//   let index = 0\r\n//   let add = 0\r\n//   let rm = 0\r\n\r\n//   while (index < events.length) {\r\n//     const rmCurr = rm\r\n\r\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\r\n//       add = jumps[jumpIndex][2]\r\n//       rm = jumps[jumpIndex][1]\r\n//       jumpIndex += 1\r\n//     }\r\n\r\n//     // Ignore items that will be removed.\r\n//     if (rm > rmCurr) {\r\n//       index += rm - rmCurr\r\n//     } else {\r\n//       console.log('to do: links?', add, rmCurr)\r\n//       // ?\r\n//       // if let Some(link) = &events[index].link {\r\n//       //     if let Some(next) = link.next {\r\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\r\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\r\n//       //             add = jumps[jumpIndex].2;\r\n//       //             rm = jumps[jumpIndex].1;\r\n//       //             jumpIndex += 1;\r\n//       //         }\r\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\r\n//       //         index = next;\r\n//       //         continue;\r\n//       //     }\r\n//       // }\r\n//       index += 1\r\n//     }\r\n//   }\r\n// }\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2xpYi9lZGl0LW1hcC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHNDQUFzQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGNBQWM7QUFDM0IsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQixjQUFjO0FBQzlCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxjQUFjO0FBQzNCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGNBQWM7QUFDNUIsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWdmbS10YWJsZS9kZXYvbGliL2VkaXQtbWFwLmpzPzVmYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRXZlbnR9IEV2ZW50XHJcbiAqL1xyXG5cclxuLy8gUG9ydCBvZiBgZWRpdF9tYXAucnNgIGZyb20gYG1hcmtkb3duLXJzYC5cclxuLy8gVGhpcyBzaG91bGQgbW92ZSB0byBgbWFya2Rvd24tanNgIGxhdGVyLlxyXG5cclxuLy8gRGVhbCB3aXRoIHNldmVyYWwgY2hhbmdlcyBpbiBldmVudHMsIGJhdGNoaW5nIHRoZW0gdG9nZXRoZXIuXHJcbi8vXHJcbi8vIFByZWZlcmFibHksIGNoYW5nZXMgc2hvdWxkIGJlIGtlcHQgdG8gYSBtaW5pbXVtLlxyXG4vLyBTb21ldGltZXMsIGl04oCZcyBuZWVkZWQgdG8gY2hhbmdlIHRoZSBsaXN0IG9mIGV2ZW50cywgYmVjYXVzZSBwYXJzaW5nIGNhbiBiZVxyXG4vLyBtZXNzeSwgYW5kIGl0IGhlbHBzIHRvIGV4cG9zZSBhIGNsZWFuZXIgaW50ZXJmYWNlIG9mIGV2ZW50cyB0byB0aGUgY29tcGlsZXJcclxuLy8gYW5kIG90aGVyIHVzZXJzLlxyXG4vLyBJdCBjYW4gYWxzbyBoZWxwIHRvIG1lcmdlIG1hbnkgYWRqYWNlbnQgc2ltaWxhciBldmVudHMuXHJcbi8vIEFuZCwgaW4gb3RoZXIgY2FzZXMsIGl04oCZcyBuZWVkZWQgdG8gcGFyc2Ugc3ViY29udGVudDogcGFzcyBzb21lIGV2ZW50c1xyXG4vLyB0aHJvdWdoIGFub3RoZXIgdG9rZW5pemVyIGFuZCBpbmplY3QgdGhlIHJlc3VsdC5cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7W251bWJlciwgbnVtYmVyLCBBcnJheTxFdmVudD5dfSBDaGFuZ2VcclxuICogQHR5cGVkZWYge1tudW1iZXIsIG51bWJlciwgbnVtYmVyXX0gSnVtcFxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBUcmFja3MgYSBidW5jaCBvZiBlZGl0cy5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBFZGl0TWFwIHtcclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBuZXcgZWRpdCBtYXAuXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAvKipcclxuICAgICAqIFJlY29yZCBvZiBjaGFuZ2VzLlxyXG4gICAgICpcclxuICAgICAqIEB0eXBlIHtBcnJheTxDaGFuZ2U+fVxyXG4gICAgICovXHJcbiAgICB0aGlzLm1hcCA9IFtdXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgYW4gZWRpdDogYSByZW1vdmUgYW5kL29yIGFkZCBhdCBhIGNlcnRhaW4gcGxhY2UuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcclxuICAgKiBAcGFyYW0ge251bWJlcn0gcmVtb3ZlXHJcbiAgICogQHBhcmFtIHtBcnJheTxFdmVudD59IGFkZFxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIGFkZChpbmRleCwgcmVtb3ZlLCBhZGQpIHtcclxuICAgIGFkZEltcGwodGhpcywgaW5kZXgsIHJlbW92ZSwgYWRkKVxyXG4gIH1cclxuXHJcbiAgLy8gVG8gZG86IG5vdCB1c2VkIGhlcmUuXHJcbiAgLy8gLyoqXHJcbiAgLy8gICogQ3JlYXRlIGFuIGVkaXQ6IGJ1dCBpbnNlcnQgYGFkZGAgYmVmb3JlIGV4aXN0aW5nIGFkZGl0aW9ucy5cclxuICAvLyAgKlxyXG4gIC8vICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxyXG4gIC8vICAqIEBwYXJhbSB7bnVtYmVyfSByZW1vdmVcclxuICAvLyAgKiBAcGFyYW0ge0FycmF5PEV2ZW50Pn0gYWRkXHJcbiAgLy8gICogQHJldHVybnMge3ZvaWR9XHJcbiAgLy8gICovXHJcbiAgLy8gYWRkQmVmb3JlKGluZGV4LCByZW1vdmUsIGFkZCkge1xyXG4gIC8vICAgYWRkSW1wbCh0aGlzLCBpbmRleCwgcmVtb3ZlLCBhZGQsIHRydWUpXHJcbiAgLy8gfVxyXG5cclxuICAvKipcclxuICAgKiBEb25lLCBjaGFuZ2UgdGhlIGV2ZW50cy5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7QXJyYXk8RXZlbnQ+fSBldmVudHNcclxuICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgKi9cclxuICBjb25zdW1lKGV2ZW50cykge1xyXG4gICAgdGhpcy5tYXAuc29ydCgoYSwgYikgPT4gYVswXSAtIGJbMF0pXHJcblxyXG4gICAgLyogYzggaWdub3JlIG5leHQgMyAtLSBgcmVzb2x2ZWAgaXMgbmV2ZXIgY2FsbGVkIHdpdGhvdXQgdGFibGVzLCBzbyB3aXRob3V0IGVkaXRzLiAqL1xyXG4gICAgaWYgKHRoaXMubWFwLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyBUbyBkbzogaWYgbGlua3MgYXJlIGFkZGVkIGluIGV2ZW50cywgbGlrZSB0aGV5IGFyZSBpbiBgbWFya2Rvd24tcnNgLFxyXG4gICAgLy8gdGhpcyBpcyBuZWVkZWQuXHJcbiAgICAvLyAvLyBDYWxjdWxhdGUganVtcHM6IHdoZXJlIGl0ZW1zIGluIHRoZSBjdXJyZW50IGxpc3QgbW92ZSB0by5cclxuICAgIC8vIC8qKiBAdHlwZSB7QXJyYXk8SnVtcD59ICovXHJcbiAgICAvLyBjb25zdCBqdW1wcyA9IFtdXHJcbiAgICAvLyBsZXQgaW5kZXggPSAwXHJcbiAgICAvLyBsZXQgYWRkQWNjID0gMFxyXG4gICAgLy8gbGV0IHJlbW92ZUFjYyA9IDBcclxuICAgIC8vIHdoaWxlIChpbmRleCA8IHRoaXMubWFwLmxlbmd0aCkge1xyXG4gICAgLy8gICBjb25zdCBbYXQsIHJlbW92ZSwgYWRkXSA9IHRoaXMubWFwW2luZGV4XVxyXG4gICAgLy8gICByZW1vdmVBY2MgKz0gcmVtb3ZlXHJcbiAgICAvLyAgIGFkZEFjYyArPSBhZGQubGVuZ3RoXHJcbiAgICAvLyAgIGp1bXBzLnB1c2goW2F0LCByZW1vdmVBY2MsIGFkZEFjY10pXHJcbiAgICAvLyAgIGluZGV4ICs9IDFcclxuICAgIC8vIH1cclxuICAgIC8vXHJcbiAgICAvLyAuIHNoaWZ0TGlua3MoZXZlbnRzLCBqdW1wcylcclxuXHJcbiAgICBsZXQgaW5kZXggPSB0aGlzLm1hcC5sZW5ndGhcclxuICAgIC8qKiBAdHlwZSB7QXJyYXk8QXJyYXk8RXZlbnQ+Pn0gKi9cclxuICAgIGNvbnN0IHZlY3MgPSBbXVxyXG4gICAgd2hpbGUgKGluZGV4ID4gMCkge1xyXG4gICAgICBpbmRleCAtPSAxXHJcbiAgICAgIHZlY3MucHVzaChldmVudHMuc2xpY2UodGhpcy5tYXBbaW5kZXhdWzBdICsgdGhpcy5tYXBbaW5kZXhdWzFdKSlcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tYXJyYXktcHVzaC1wdXNoXHJcbiAgICAgIHZlY3MucHVzaCh0aGlzLm1hcFtpbmRleF1bMl0pXHJcblxyXG4gICAgICAvLyBUcnVuY2F0ZSByZXN0LlxyXG4gICAgICBldmVudHMubGVuZ3RoID0gdGhpcy5tYXBbaW5kZXhdWzBdXHJcbiAgICB9XHJcblxyXG4gICAgdmVjcy5wdXNoKFsuLi5ldmVudHNdKVxyXG4gICAgZXZlbnRzLmxlbmd0aCA9IDBcclxuXHJcbiAgICBsZXQgc2xpY2UgPSB2ZWNzLnBvcCgpXHJcblxyXG4gICAgd2hpbGUgKHNsaWNlKSB7XHJcbiAgICAgIGV2ZW50cy5wdXNoKC4uLnNsaWNlKVxyXG4gICAgICBzbGljZSA9IHZlY3MucG9wKClcclxuICAgIH1cclxuXHJcbiAgICAvLyBUcnVuY2F0ZSBldmVyeXRoaW5nLlxyXG4gICAgdGhpcy5tYXAubGVuZ3RoID0gMFxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhbiBlZGl0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge0VkaXRNYXB9IGVkaXRNYXBcclxuICogQHBhcmFtIHtudW1iZXJ9IGF0XHJcbiAqIEBwYXJhbSB7bnVtYmVyfSByZW1vdmVcclxuICogQHBhcmFtIHtBcnJheTxFdmVudD59IGFkZFxyXG4gKiBAcmV0dXJucyB7dm9pZH1cclxuICovXHJcbmZ1bmN0aW9uIGFkZEltcGwoZWRpdE1hcCwgYXQsIHJlbW92ZSwgYWRkKSB7XHJcbiAgbGV0IGluZGV4ID0gMFxyXG5cclxuICAvKiBjOCBpZ25vcmUgbmV4dCAzIC0tIGByZXNvbHZlYCBpcyBuZXZlciBjYWxsZWQgd2l0aG91dCB0YWJsZXMsIHNvIHdpdGhvdXQgZWRpdHMuICovXHJcbiAgaWYgKHJlbW92ZSA9PT0gMCAmJiBhZGQubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm5cclxuICB9XHJcblxyXG4gIHdoaWxlIChpbmRleCA8IGVkaXRNYXAubWFwLmxlbmd0aCkge1xyXG4gICAgaWYgKGVkaXRNYXAubWFwW2luZGV4XVswXSA9PT0gYXQpIHtcclxuICAgICAgZWRpdE1hcC5tYXBbaW5kZXhdWzFdICs9IHJlbW92ZVxyXG5cclxuICAgICAgLy8gVG8gZG86IGJlZm9yZSBub3QgdXNlZC5cclxuICAgICAgLy8gaWYgKGJlZm9yZSkge1xyXG4gICAgICAvLyAgIGFkZC5wdXNoKC4uLmVkaXRNYXAubWFwW2luZGV4XVsyXSlcclxuICAgICAgLy8gICBlZGl0TWFwLm1hcFtpbmRleF1bMl0gPSBhZGRcclxuICAgICAgLy8gfSBlbHNlIHtcclxuICAgICAgZWRpdE1hcC5tYXBbaW5kZXhdWzJdLnB1c2goLi4uYWRkKVxyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBpbmRleCArPSAxXHJcbiAgfVxyXG5cclxuICBlZGl0TWFwLm1hcC5wdXNoKFthdCwgcmVtb3ZlLCBhZGRdKVxyXG59XHJcblxyXG4vLyAvKipcclxuLy8gICogU2hpZnQgYHByZXZpb3VzYCBhbmQgYG5leHRgIGxpbmtzIGFjY29yZGluZyB0byBganVtcHNgLlxyXG4vLyAgKlxyXG4vLyAgKiBUaGlzIGZpeGVzIGxpbmtzIGluIGNhc2UgdGhlcmUgYXJlIGV2ZW50cyByZW1vdmVkIG9yIGFkZGVkIGJldHdlZW4gdGhlbS5cclxuLy8gICpcclxuLy8gICogQHBhcmFtIHtBcnJheTxFdmVudD59IGV2ZW50c1xyXG4vLyAgKiBAcGFyYW0ge0FycmF5PEp1bXA+fSBqdW1wc1xyXG4vLyAgKi9cclxuLy8gZnVuY3Rpb24gc2hpZnRMaW5rcyhldmVudHMsIGp1bXBzKSB7XHJcbi8vICAgbGV0IGp1bXBJbmRleCA9IDBcclxuLy8gICBsZXQgaW5kZXggPSAwXHJcbi8vICAgbGV0IGFkZCA9IDBcclxuLy8gICBsZXQgcm0gPSAwXHJcblxyXG4vLyAgIHdoaWxlIChpbmRleCA8IGV2ZW50cy5sZW5ndGgpIHtcclxuLy8gICAgIGNvbnN0IHJtQ3VyciA9IHJtXHJcblxyXG4vLyAgICAgd2hpbGUgKGp1bXBJbmRleCA8IGp1bXBzLmxlbmd0aCAmJiBqdW1wc1tqdW1wSW5kZXhdWzBdIDw9IGluZGV4KSB7XHJcbi8vICAgICAgIGFkZCA9IGp1bXBzW2p1bXBJbmRleF1bMl1cclxuLy8gICAgICAgcm0gPSBqdW1wc1tqdW1wSW5kZXhdWzFdXHJcbi8vICAgICAgIGp1bXBJbmRleCArPSAxXHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgLy8gSWdub3JlIGl0ZW1zIHRoYXQgd2lsbCBiZSByZW1vdmVkLlxyXG4vLyAgICAgaWYgKHJtID4gcm1DdXJyKSB7XHJcbi8vICAgICAgIGluZGV4ICs9IHJtIC0gcm1DdXJyXHJcbi8vICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICBjb25zb2xlLmxvZygndG8gZG86IGxpbmtzPycsIGFkZCwgcm1DdXJyKVxyXG4vLyAgICAgICAvLyA/XHJcbi8vICAgICAgIC8vIGlmIGxldCBTb21lKGxpbmspID0gJmV2ZW50c1tpbmRleF0ubGluayB7XHJcbi8vICAgICAgIC8vICAgICBpZiBsZXQgU29tZShuZXh0KSA9IGxpbmsubmV4dCB7XHJcbi8vICAgICAgIC8vICAgICAgICAgZXZlbnRzW25leHRdLmxpbmsuYXNfbXV0KCkudW53cmFwKCkucHJldmlvdXMgPSBTb21lKGluZGV4ICsgYWRkIC0gcm0pO1xyXG4vLyAgICAgICAvLyAgICAgICAgIHdoaWxlIGp1bXBJbmRleCA8IGp1bXBzLmxlbigpICYmIGp1bXBzW2p1bXBJbmRleF0uMCA8PSBuZXh0IHtcclxuLy8gICAgICAgLy8gICAgICAgICAgICAgYWRkID0ganVtcHNbanVtcEluZGV4XS4yO1xyXG4vLyAgICAgICAvLyAgICAgICAgICAgICBybSA9IGp1bXBzW2p1bXBJbmRleF0uMTtcclxuLy8gICAgICAgLy8gICAgICAgICAgICAganVtcEluZGV4ICs9IDE7XHJcbi8vICAgICAgIC8vICAgICAgICAgfVxyXG4vLyAgICAgICAvLyAgICAgICAgIGV2ZW50c1tpbmRleF0ubGluay5hc19tdXQoKS51bndyYXAoKS5uZXh0ID0gU29tZShuZXh0ICsgYWRkIC0gcm0pO1xyXG4vLyAgICAgICAvLyAgICAgICAgIGluZGV4ID0gbmV4dDtcclxuLy8gICAgICAgLy8gICAgICAgICBjb250aW51ZTtcclxuLy8gICAgICAgLy8gICAgIH1cclxuLy8gICAgICAgLy8gfVxyXG4vLyAgICAgICBpbmRleCArPSAxXHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG4vLyB9XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-table/dev/lib/html.js":
/*!********************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-table/dev/lib/html.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTableHtml\": function() { return /* binding */ gfmTableHtml; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n */\r\n\r\n/**\r\n * @typedef {import('./infer.js').Align} Align\r\n */\r\n\r\n\r\n\r\nconst alignment = {\r\n  none: '',\r\n  left: ' align=\"left\"',\r\n  right: ' align=\"right\"',\r\n  center: ' align=\"center\"'\r\n}\r\n\r\n// To do: next major: expose functions.\r\n// To do: next major: use `infer` here, when all events are exposed.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `htmlExtensions` to support\r\n * GFM tables when serializing to HTML.\r\n *\r\n * @type {HtmlExtension}\r\n */\r\nconst gfmTableHtml = {\r\n  enter: {\r\n    table(token) {\r\n      const tableAlign = token._align\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tableAlign, 'expected `_align`')\r\n      this.lineEndingIfNeeded()\r\n      this.tag('<table>')\r\n      this.setData('tableAlign', tableAlign)\r\n    },\r\n    tableBody() {\r\n      this.tag('<tbody>')\r\n    },\r\n    tableData() {\r\n      const tableAlign = this.getData('tableAlign')\r\n      const tableColumn = this.getData('tableColumn')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tableAlign, 'expected `tableAlign`')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tableColumn === 'number', 'expected `tableColumn`')\r\n      const align = alignment[tableAlign[tableColumn]]\r\n\r\n      if (align === undefined) {\r\n        // Capture results to ignore them.\r\n        this.buffer()\r\n      } else {\r\n        this.lineEndingIfNeeded()\r\n        this.tag('<td' + align + '>')\r\n      }\r\n    },\r\n    tableHead() {\r\n      this.lineEndingIfNeeded()\r\n      this.tag('<thead>')\r\n    },\r\n    tableHeader() {\r\n      const tableAlign = this.getData('tableAlign')\r\n      const tableColumn = this.getData('tableColumn')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tableAlign, 'expected `tableAlign`')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tableColumn === 'number', 'expected `tableColumn`')\r\n      const align = alignment[tableAlign[tableColumn]]\r\n      this.lineEndingIfNeeded()\r\n      this.tag('<th' + align + '>')\r\n    },\r\n    tableRow() {\r\n      this.setData('tableColumn', 0)\r\n      this.lineEndingIfNeeded()\r\n      this.tag('<tr>')\r\n    }\r\n  },\r\n  exit: {\r\n    // Overwrite the default code text data handler to unescape escaped pipes when\r\n    // they are in tables.\r\n    codeTextData(token) {\r\n      let value = this.sliceSerialize(token)\r\n\r\n      if (this.getData('tableAlign')) {\r\n        value = value.replace(/\\\\([\\\\|])/g, replace)\r\n      }\r\n\r\n      this.raw(this.encode(value))\r\n    },\r\n    table() {\r\n      this.setData('tableAlign')\r\n      // Note: we don’t set `slurpAllLineEndings` anymore, in delimiter rows,\r\n      // but we do need to reset it to match a funky newline GH generates for\r\n      // list items combined with tables.\r\n      this.setData('slurpAllLineEndings')\r\n      this.lineEndingIfNeeded()\r\n      this.tag('</table>')\r\n    },\r\n    tableBody() {\r\n      this.lineEndingIfNeeded()\r\n      this.tag('</tbody>')\r\n    },\r\n    tableData() {\r\n      const tableAlign = this.getData('tableAlign')\r\n      const tableColumn = this.getData('tableColumn')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tableAlign, 'expected `tableAlign`')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tableColumn === 'number', 'expected `tableColumn`')\r\n\r\n      if (tableColumn in tableAlign) {\r\n        this.tag('</td>')\r\n        this.setData('tableColumn', tableColumn + 1)\r\n      } else {\r\n        // Stop capturing.\r\n        this.resume()\r\n      }\r\n    },\r\n    tableHead() {\r\n      this.lineEndingIfNeeded()\r\n      this.tag('</thead>')\r\n    },\r\n    tableHeader() {\r\n      const tableColumn = this.getData('tableColumn')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tableColumn === 'number', 'expected `tableColumn`')\r\n      this.tag('</th>')\r\n      this.setData('tableColumn', tableColumn + 1)\r\n    },\r\n    tableRow() {\r\n      const tableAlign = this.getData('tableAlign')\r\n      let tableColumn = this.getData('tableColumn')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(tableAlign, 'expected `tableAlign`')\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(typeof tableColumn === 'number', 'expected `tableColumn`')\r\n\r\n      while (tableColumn < tableAlign.length) {\r\n        this.lineEndingIfNeeded()\r\n        this.tag('<td' + alignment[tableAlign[tableColumn]] + '></td>')\r\n        tableColumn++\r\n      }\r\n\r\n      this.setData('tableColumn', tableColumn)\r\n      this.lineEndingIfNeeded()\r\n      this.tag('</tr>')\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @param {string} $1\r\n * @returns {string}\r\n */\r\nfunction replace($0, $1) {\r\n  // Pipes work, backslashes don’t (but can’t escape pipes).\r\n  return $1 === '|' ? $1 : $0\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2xpYi9odG1sLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLDhDQUE4QztBQUMzRDtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ3VDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsTUFBTSwrQ0FBTTtBQUNaO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE1BQU0sK0NBQU07QUFDWixNQUFNLCtDQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE1BQU0sK0NBQU07QUFDWixNQUFNLCtDQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxNQUFNLCtDQUFNO0FBQ1osTUFBTSwrQ0FBTTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU0sK0NBQU07QUFDWjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE1BQU0sK0NBQU07QUFDWixNQUFNLCtDQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2xpYi9odG1sLmpzP2VhZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSHRtbEV4dGVuc2lvbn0gSHRtbEV4dGVuc2lvblxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2luZmVyLmpzJykuQWxpZ259IEFsaWduXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXHJcblxyXG5jb25zdCBhbGlnbm1lbnQgPSB7XHJcbiAgbm9uZTogJycsXHJcbiAgbGVmdDogJyBhbGlnbj1cImxlZnRcIicsXHJcbiAgcmlnaHQ6ICcgYWxpZ249XCJyaWdodFwiJyxcclxuICBjZW50ZXI6ICcgYWxpZ249XCJjZW50ZXJcIidcclxufVxyXG5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IGV4cG9zZSBmdW5jdGlvbnMuXHJcbi8vIFRvIGRvOiBuZXh0IG1ham9yOiB1c2UgYGluZmVyYCBoZXJlLCB3aGVuIGFsbCBldmVudHMgYXJlIGV4cG9zZWQuXHJcblxyXG4vKipcclxuICogRXh0ZW5zaW9uIGZvciBgbWljcm9tYXJrYCB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYGh0bWxFeHRlbnNpb25zYCB0byBzdXBwb3J0XHJcbiAqIEdGTSB0YWJsZXMgd2hlbiBzZXJpYWxpemluZyB0byBIVE1MLlxyXG4gKlxyXG4gKiBAdHlwZSB7SHRtbEV4dGVuc2lvbn1cclxuICovXHJcbmV4cG9ydCBjb25zdCBnZm1UYWJsZUh0bWwgPSB7XHJcbiAgZW50ZXI6IHtcclxuICAgIHRhYmxlKHRva2VuKSB7XHJcbiAgICAgIGNvbnN0IHRhYmxlQWxpZ24gPSB0b2tlbi5fYWxpZ25cclxuICAgICAgYXNzZXJ0KHRhYmxlQWxpZ24sICdleHBlY3RlZCBgX2FsaWduYCcpXHJcbiAgICAgIHRoaXMubGluZUVuZGluZ0lmTmVlZGVkKClcclxuICAgICAgdGhpcy50YWcoJzx0YWJsZT4nKVxyXG4gICAgICB0aGlzLnNldERhdGEoJ3RhYmxlQWxpZ24nLCB0YWJsZUFsaWduKVxyXG4gICAgfSxcclxuICAgIHRhYmxlQm9keSgpIHtcclxuICAgICAgdGhpcy50YWcoJzx0Ym9keT4nKVxyXG4gICAgfSxcclxuICAgIHRhYmxlRGF0YSgpIHtcclxuICAgICAgY29uc3QgdGFibGVBbGlnbiA9IHRoaXMuZ2V0RGF0YSgndGFibGVBbGlnbicpXHJcbiAgICAgIGNvbnN0IHRhYmxlQ29sdW1uID0gdGhpcy5nZXREYXRhKCd0YWJsZUNvbHVtbicpXHJcbiAgICAgIGFzc2VydCh0YWJsZUFsaWduLCAnZXhwZWN0ZWQgYHRhYmxlQWxpZ25gJylcclxuICAgICAgYXNzZXJ0KHR5cGVvZiB0YWJsZUNvbHVtbiA9PT0gJ251bWJlcicsICdleHBlY3RlZCBgdGFibGVDb2x1bW5gJylcclxuICAgICAgY29uc3QgYWxpZ24gPSBhbGlnbm1lbnRbdGFibGVBbGlnblt0YWJsZUNvbHVtbl1dXHJcblxyXG4gICAgICBpZiAoYWxpZ24gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIC8vIENhcHR1cmUgcmVzdWx0cyB0byBpZ25vcmUgdGhlbS5cclxuICAgICAgICB0aGlzLmJ1ZmZlcigpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5saW5lRW5kaW5nSWZOZWVkZWQoKVxyXG4gICAgICAgIHRoaXMudGFnKCc8dGQnICsgYWxpZ24gKyAnPicpXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB0YWJsZUhlYWQoKSB7XHJcbiAgICAgIHRoaXMubGluZUVuZGluZ0lmTmVlZGVkKClcclxuICAgICAgdGhpcy50YWcoJzx0aGVhZD4nKVxyXG4gICAgfSxcclxuICAgIHRhYmxlSGVhZGVyKCkge1xyXG4gICAgICBjb25zdCB0YWJsZUFsaWduID0gdGhpcy5nZXREYXRhKCd0YWJsZUFsaWduJylcclxuICAgICAgY29uc3QgdGFibGVDb2x1bW4gPSB0aGlzLmdldERhdGEoJ3RhYmxlQ29sdW1uJylcclxuICAgICAgYXNzZXJ0KHRhYmxlQWxpZ24sICdleHBlY3RlZCBgdGFibGVBbGlnbmAnKVxyXG4gICAgICBhc3NlcnQodHlwZW9mIHRhYmxlQ29sdW1uID09PSAnbnVtYmVyJywgJ2V4cGVjdGVkIGB0YWJsZUNvbHVtbmAnKVxyXG4gICAgICBjb25zdCBhbGlnbiA9IGFsaWdubWVudFt0YWJsZUFsaWduW3RhYmxlQ29sdW1uXV1cclxuICAgICAgdGhpcy5saW5lRW5kaW5nSWZOZWVkZWQoKVxyXG4gICAgICB0aGlzLnRhZygnPHRoJyArIGFsaWduICsgJz4nKVxyXG4gICAgfSxcclxuICAgIHRhYmxlUm93KCkge1xyXG4gICAgICB0aGlzLnNldERhdGEoJ3RhYmxlQ29sdW1uJywgMClcclxuICAgICAgdGhpcy5saW5lRW5kaW5nSWZOZWVkZWQoKVxyXG4gICAgICB0aGlzLnRhZygnPHRyPicpXHJcbiAgICB9XHJcbiAgfSxcclxuICBleGl0OiB7XHJcbiAgICAvLyBPdmVyd3JpdGUgdGhlIGRlZmF1bHQgY29kZSB0ZXh0IGRhdGEgaGFuZGxlciB0byB1bmVzY2FwZSBlc2NhcGVkIHBpcGVzIHdoZW5cclxuICAgIC8vIHRoZXkgYXJlIGluIHRhYmxlcy5cclxuICAgIGNvZGVUZXh0RGF0YSh0b2tlbikge1xyXG4gICAgICBsZXQgdmFsdWUgPSB0aGlzLnNsaWNlU2VyaWFsaXplKHRva2VuKVxyXG5cclxuICAgICAgaWYgKHRoaXMuZ2V0RGF0YSgndGFibGVBbGlnbicpKSB7XHJcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXFxcKFtcXFxcfF0pL2csIHJlcGxhY2UpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMucmF3KHRoaXMuZW5jb2RlKHZhbHVlKSlcclxuICAgIH0sXHJcbiAgICB0YWJsZSgpIHtcclxuICAgICAgdGhpcy5zZXREYXRhKCd0YWJsZUFsaWduJylcclxuICAgICAgLy8gTm90ZTogd2UgZG9u4oCZdCBzZXQgYHNsdXJwQWxsTGluZUVuZGluZ3NgIGFueW1vcmUsIGluIGRlbGltaXRlciByb3dzLFxyXG4gICAgICAvLyBidXQgd2UgZG8gbmVlZCB0byByZXNldCBpdCB0byBtYXRjaCBhIGZ1bmt5IG5ld2xpbmUgR0ggZ2VuZXJhdGVzIGZvclxyXG4gICAgICAvLyBsaXN0IGl0ZW1zIGNvbWJpbmVkIHdpdGggdGFibGVzLlxyXG4gICAgICB0aGlzLnNldERhdGEoJ3NsdXJwQWxsTGluZUVuZGluZ3MnKVxyXG4gICAgICB0aGlzLmxpbmVFbmRpbmdJZk5lZWRlZCgpXHJcbiAgICAgIHRoaXMudGFnKCc8L3RhYmxlPicpXHJcbiAgICB9LFxyXG4gICAgdGFibGVCb2R5KCkge1xyXG4gICAgICB0aGlzLmxpbmVFbmRpbmdJZk5lZWRlZCgpXHJcbiAgICAgIHRoaXMudGFnKCc8L3Rib2R5PicpXHJcbiAgICB9LFxyXG4gICAgdGFibGVEYXRhKCkge1xyXG4gICAgICBjb25zdCB0YWJsZUFsaWduID0gdGhpcy5nZXREYXRhKCd0YWJsZUFsaWduJylcclxuICAgICAgY29uc3QgdGFibGVDb2x1bW4gPSB0aGlzLmdldERhdGEoJ3RhYmxlQ29sdW1uJylcclxuICAgICAgYXNzZXJ0KHRhYmxlQWxpZ24sICdleHBlY3RlZCBgdGFibGVBbGlnbmAnKVxyXG4gICAgICBhc3NlcnQodHlwZW9mIHRhYmxlQ29sdW1uID09PSAnbnVtYmVyJywgJ2V4cGVjdGVkIGB0YWJsZUNvbHVtbmAnKVxyXG5cclxuICAgICAgaWYgKHRhYmxlQ29sdW1uIGluIHRhYmxlQWxpZ24pIHtcclxuICAgICAgICB0aGlzLnRhZygnPC90ZD4nKVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YSgndGFibGVDb2x1bW4nLCB0YWJsZUNvbHVtbiArIDEpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gU3RvcCBjYXB0dXJpbmcuXHJcbiAgICAgICAgdGhpcy5yZXN1bWUoKVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgdGFibGVIZWFkKCkge1xyXG4gICAgICB0aGlzLmxpbmVFbmRpbmdJZk5lZWRlZCgpXHJcbiAgICAgIHRoaXMudGFnKCc8L3RoZWFkPicpXHJcbiAgICB9LFxyXG4gICAgdGFibGVIZWFkZXIoKSB7XHJcbiAgICAgIGNvbnN0IHRhYmxlQ29sdW1uID0gdGhpcy5nZXREYXRhKCd0YWJsZUNvbHVtbicpXHJcbiAgICAgIGFzc2VydCh0eXBlb2YgdGFibGVDb2x1bW4gPT09ICdudW1iZXInLCAnZXhwZWN0ZWQgYHRhYmxlQ29sdW1uYCcpXHJcbiAgICAgIHRoaXMudGFnKCc8L3RoPicpXHJcbiAgICAgIHRoaXMuc2V0RGF0YSgndGFibGVDb2x1bW4nLCB0YWJsZUNvbHVtbiArIDEpXHJcbiAgICB9LFxyXG4gICAgdGFibGVSb3coKSB7XHJcbiAgICAgIGNvbnN0IHRhYmxlQWxpZ24gPSB0aGlzLmdldERhdGEoJ3RhYmxlQWxpZ24nKVxyXG4gICAgICBsZXQgdGFibGVDb2x1bW4gPSB0aGlzLmdldERhdGEoJ3RhYmxlQ29sdW1uJylcclxuICAgICAgYXNzZXJ0KHRhYmxlQWxpZ24sICdleHBlY3RlZCBgdGFibGVBbGlnbmAnKVxyXG4gICAgICBhc3NlcnQodHlwZW9mIHRhYmxlQ29sdW1uID09PSAnbnVtYmVyJywgJ2V4cGVjdGVkIGB0YWJsZUNvbHVtbmAnKVxyXG5cclxuICAgICAgd2hpbGUgKHRhYmxlQ29sdW1uIDwgdGFibGVBbGlnbi5sZW5ndGgpIHtcclxuICAgICAgICB0aGlzLmxpbmVFbmRpbmdJZk5lZWRlZCgpXHJcbiAgICAgICAgdGhpcy50YWcoJzx0ZCcgKyBhbGlnbm1lbnRbdGFibGVBbGlnblt0YWJsZUNvbHVtbl1dICsgJz48L3RkPicpXHJcbiAgICAgICAgdGFibGVDb2x1bW4rK1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnNldERhdGEoJ3RhYmxlQ29sdW1uJywgdGFibGVDb2x1bW4pXHJcbiAgICAgIHRoaXMubGluZUVuZGluZ0lmTmVlZGVkKClcclxuICAgICAgdGhpcy50YWcoJzwvdHI+JylcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gJDBcclxuICogQHBhcmFtIHtzdHJpbmd9ICQxXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiByZXBsYWNlKCQwLCAkMSkge1xyXG4gIC8vIFBpcGVzIHdvcmssIGJhY2tzbGFzaGVzIGRvbuKAmXQgKGJ1dCBjYW7igJl0IGVzY2FwZSBwaXBlcykuXHJcbiAgcmV0dXJuICQxID09PSAnfCcgPyAkMSA6ICQwXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-table/dev/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-table/dev/lib/infer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-table/dev/lib/infer.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTableAlign\": function() { return /* binding */ gfmTableAlign; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n */\r\n\r\n/**\r\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\r\n */\r\n\r\n\r\n\r\n/**\r\n * Figure out the alignment of a GFM table.\r\n *\r\n * @param {Array<Event>} events\r\n * @param {number} index\r\n * @returns {Array<Align>}\r\n */\r\nfunction gfmTableAlign(events, index) {\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(events[index][1].type === 'table', 'expected table')\r\n  let inDelimiterRow = false\r\n  /** @type {Array<Align>} */\r\n  const align = []\r\n\r\n  while (index < events.length) {\r\n    const event = events[index]\r\n\r\n    if (inDelimiterRow) {\r\n      if (event[0] === 'enter') {\r\n        // Start of alignment value: set a new column.\r\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\r\n        if (event[1].type === 'tableContent') {\r\n          align.push(\r\n            events[index + 1][1].type === 'tableDelimiterMarker'\r\n              ? 'left'\r\n              : 'none'\r\n          )\r\n        }\r\n      }\r\n      // Exits:\r\n      // End of alignment value: change the column.\r\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\r\n      else if (event[1].type === 'tableContent') {\r\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\r\n          const alignIndex = align.length - 1\r\n\r\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\r\n        }\r\n      }\r\n      // Done!\r\n      else if (event[1].type === 'tableDelimiterRow') {\r\n        break\r\n      }\r\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\r\n      inDelimiterRow = true\r\n    }\r\n\r\n    index += 1\r\n  }\r\n\r\n  return align\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2xpYi9pbmZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQ7QUFDQTtBQUN1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUCxFQUFFLDhDQUFNO0FBQ1I7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUvZGV2L2xpYi9pbmZlci5qcz84ZTY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkV2ZW50fSBFdmVudFxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiB7J2xlZnQnIHwgJ2NlbnRlcicgfCAncmlnaHQnIHwgJ25vbmUnfSBBbGlnblxyXG4gKi9cclxuXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5cclxuLyoqXHJcbiAqIEZpZ3VyZSBvdXQgdGhlIGFsaWdubWVudCBvZiBhIEdGTSB0YWJsZS5cclxuICpcclxuICogQHBhcmFtIHtBcnJheTxFdmVudD59IGV2ZW50c1xyXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcclxuICogQHJldHVybnMge0FycmF5PEFsaWduPn1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZm1UYWJsZUFsaWduKGV2ZW50cywgaW5kZXgpIHtcclxuICBhc3NlcnQoZXZlbnRzW2luZGV4XVsxXS50eXBlID09PSAndGFibGUnLCAnZXhwZWN0ZWQgdGFibGUnKVxyXG4gIGxldCBpbkRlbGltaXRlclJvdyA9IGZhbHNlXHJcbiAgLyoqIEB0eXBlIHtBcnJheTxBbGlnbj59ICovXHJcbiAgY29uc3QgYWxpZ24gPSBbXVxyXG5cclxuICB3aGlsZSAoaW5kZXggPCBldmVudHMubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBldmVudCA9IGV2ZW50c1tpbmRleF1cclxuXHJcbiAgICBpZiAoaW5EZWxpbWl0ZXJSb3cpIHtcclxuICAgICAgaWYgKGV2ZW50WzBdID09PSAnZW50ZXInKSB7XHJcbiAgICAgICAgLy8gU3RhcnQgb2YgYWxpZ25tZW50IHZhbHVlOiBzZXQgYSBuZXcgY29sdW1uLlxyXG4gICAgICAgIC8vIFRvIGRvOiBgbWFya2Rvd24tcnNgIHVzZXMgYHRhYmxlRGVsaW1pdGVyQ2VsbFZhbHVlYC5cclxuICAgICAgICBpZiAoZXZlbnRbMV0udHlwZSA9PT0gJ3RhYmxlQ29udGVudCcpIHtcclxuICAgICAgICAgIGFsaWduLnB1c2goXHJcbiAgICAgICAgICAgIGV2ZW50c1tpbmRleCArIDFdWzFdLnR5cGUgPT09ICd0YWJsZURlbGltaXRlck1hcmtlcidcclxuICAgICAgICAgICAgICA/ICdsZWZ0J1xyXG4gICAgICAgICAgICAgIDogJ25vbmUnXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC8vIEV4aXRzOlxyXG4gICAgICAvLyBFbmQgb2YgYWxpZ25tZW50IHZhbHVlOiBjaGFuZ2UgdGhlIGNvbHVtbi5cclxuICAgICAgLy8gVG8gZG86IGBtYXJrZG93bi1yc2AgdXNlcyBgdGFibGVEZWxpbWl0ZXJDZWxsVmFsdWVgLlxyXG4gICAgICBlbHNlIGlmIChldmVudFsxXS50eXBlID09PSAndGFibGVDb250ZW50Jykge1xyXG4gICAgICAgIGlmIChldmVudHNbaW5kZXggLSAxXVsxXS50eXBlID09PSAndGFibGVEZWxpbWl0ZXJNYXJrZXInKSB7XHJcbiAgICAgICAgICBjb25zdCBhbGlnbkluZGV4ID0gYWxpZ24ubGVuZ3RoIC0gMVxyXG5cclxuICAgICAgICAgIGFsaWduW2FsaWduSW5kZXhdID0gYWxpZ25bYWxpZ25JbmRleF0gPT09ICdsZWZ0JyA/ICdjZW50ZXInIDogJ3JpZ2h0J1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvLyBEb25lIVxyXG4gICAgICBlbHNlIGlmIChldmVudFsxXS50eXBlID09PSAndGFibGVEZWxpbWl0ZXJSb3cnKSB7XHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChldmVudFswXSA9PT0gJ2VudGVyJyAmJiBldmVudFsxXS50eXBlID09PSAndGFibGVEZWxpbWl0ZXJSb3cnKSB7XHJcbiAgICAgIGluRGVsaW1pdGVyUm93ID0gdHJ1ZVxyXG4gICAgfVxyXG5cclxuICAgIGluZGV4ICs9IDFcclxuICB9XHJcblxyXG4gIHJldHVybiBhbGlnblxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-table/dev/lib/infer.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-table/dev/lib/syntax.js":
/*!**********************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-table/dev/lib/syntax.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTable\": function() { return /* binding */ gfmTable; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var _edit_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./edit-map.js */ \"./node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js\");\n/* harmony import */ var _infer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./infer.js */ \"./node_modules/micromark-extension-gfm-table/dev/lib/infer.js\");\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').Point} Point\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n/**\r\n * @typedef {[number, number, number, number]} Range\r\n *   Cell info.\r\n *\r\n * @typedef {0 | 1 | 2 | 3} RowKind\r\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// To do: next major: expose functions.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\r\n * table syntax.\r\n *\r\n * @type {Extension}\r\n */\r\nconst gfmTable = {\r\n  flow: {null: {tokenize: tokenizeTable, resolveAll: resolveTable}}\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeTable(effects, ok, nok) {\r\n  const self = this\r\n  let size = 0\r\n  let sizeB = 0\r\n  /** @type {boolean | undefined} */\r\n  let seen\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of a GFM table.\r\n   *\r\n   * If there is a valid table row or table head before, then we try to parse\r\n   * another row.\r\n   * Otherwise, we try to parse a head.\r\n   *\r\n   * ```markdown\r\n   * > | | a |\r\n   *     ^\r\n   *   | | - |\r\n   * > | | b |\r\n   *     ^\r\n   * ```\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    let index = self.events.length - 1\r\n\r\n    while (index > -1) {\r\n      const type = self.events[index][1].type\r\n      if (\r\n        type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding ||\r\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\r\n        type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix\r\n      )\r\n        index--\r\n      else break\r\n    }\r\n\r\n    const tail = index > -1 ? self.events[index][1].type : null\r\n\r\n    const next =\r\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\r\n\r\n    // Don’t allow lazy body rows.\r\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\r\n      return nok(code)\r\n    }\r\n\r\n    return next(code)\r\n  }\r\n\r\n  /**\r\n   * Before table head row.\r\n   *\r\n   * ```markdown\r\n   * > | | a |\r\n   *     ^\r\n   *   | | - |\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headRowBefore(code) {\r\n    effects.enter('tableHead')\r\n    effects.enter('tableRow')\r\n    return headRowStart(code)\r\n  }\r\n\r\n  /**\r\n   * Before table head row, after whitespace.\r\n   *\r\n   * ```markdown\r\n   * > | | a |\r\n   *     ^\r\n   *   | | - |\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headRowStart(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      return headRowBreak(code)\r\n    }\r\n\r\n    // To do: micromark-js should let us parse our own whitespace in extensions,\r\n    // like `markdown-rs`:\r\n    //\r\n    // ```js\r\n    // // 4+ spaces.\r\n    // if (markdownSpace(code)) {\r\n    //   return nok(code)\r\n    // }\r\n    // ```\r\n\r\n    seen = true\r\n    // Count the first character, that isn’t a pipe, double.\r\n    sizeB += 1\r\n    return headRowBreak(code)\r\n  }\r\n\r\n  /**\r\n   * At break in table head row.\r\n   *\r\n   * ```markdown\r\n   * > | | a |\r\n   *     ^\r\n   *       ^\r\n   *         ^\r\n   *   | | - |\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headRowBreak(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\r\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\r\n      return nok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\r\n      if (sizeB > 1) {\r\n        sizeB = 0\r\n        // To do: check if this works.\r\n        // Feel free to interrupt:\r\n        self.interrupt = true\r\n        effects.exit('tableRow')\r\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n        effects.consume(code)\r\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n        return headDelimiterStart\r\n      }\r\n\r\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\r\n      return nok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      // To do: check if this is fine.\r\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\r\n      // State::Retry(space_or_tab(tokenizer))\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, headRowBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code)\r\n    }\r\n\r\n    sizeB += 1\r\n\r\n    if (seen) {\r\n      seen = false\r\n      // Header cell count.\r\n      size += 1\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      effects.enter('tableCellDivider')\r\n      effects.consume(code)\r\n      effects.exit('tableCellDivider')\r\n      // Whether a delimiter was seen.\r\n      seen = true\r\n      return headRowBreak\r\n    }\r\n\r\n    // Anything else is cell data.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data)\r\n    return headRowData(code)\r\n  }\r\n\r\n  /**\r\n   * In table head row data.\r\n   *\r\n   * ```markdown\r\n   * > | | a |\r\n   *       ^\r\n   *   | | - |\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headRowData(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data)\r\n      return headRowBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.backslash ? headRowEscape : headRowData\r\n  }\r\n\r\n  /**\r\n   * In table head row escape.\r\n   *\r\n   * ```markdown\r\n   * > | | a\\-b |\r\n   *         ^\r\n   *   | | ---- |\r\n   *   | | c    |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headRowEscape(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.backslash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      effects.consume(code)\r\n      return headRowData\r\n    }\r\n\r\n    return headRowData(code)\r\n  }\r\n\r\n  /**\r\n   * Before delimiter row.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | - |\r\n   *     ^\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterStart(code) {\r\n    // Reset `interrupt`.\r\n    self.interrupt = false\r\n\r\n    // Note: in `markdown-rs`, we need to handle piercing here too.\r\n    if (self.parser.lazy[self.now().line]) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter('tableDelimiterRow')\r\n    // Track if we’ve seen a `:` or `|`.\r\n    seen = false\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(self.parser.constructs.disable.null, 'expected `disabled.null`')\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(\r\n        effects,\r\n        headDelimiterBefore,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix,\r\n        self.parser.constructs.disable.null.includes('codeIndented')\r\n          ? undefined\r\n          : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize\r\n      )(code)\r\n    }\r\n\r\n    return headDelimiterBefore(code)\r\n  }\r\n\r\n  /**\r\n   * Before delimiter row, after optional whitespace.\r\n   *\r\n   * Reused when a `|` is found later, to parse another cell.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | - |\r\n   *     ^\r\n   *   | | b |\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon) {\r\n      return headDelimiterValueBefore(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      seen = true\r\n      // If we start with a pipe, we open a cell marker.\r\n      effects.enter('tableCellDivider')\r\n      effects.consume(code)\r\n      effects.exit('tableCellDivider')\r\n      return headDelimiterCellBefore\r\n    }\r\n\r\n    // More whitespace / empty row not allowed at start.\r\n    return headDelimiterNok(code)\r\n  }\r\n\r\n  /**\r\n   * After `|`, before delimiter cell.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | - |\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterCellBefore(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(\r\n        effects,\r\n        headDelimiterValueBefore,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace\r\n      )(code)\r\n    }\r\n\r\n    return headDelimiterValueBefore(code)\r\n  }\r\n\r\n  /**\r\n   * Before delimiter cell value.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | - |\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterValueBefore(code) {\r\n    // Align: left.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon) {\r\n      sizeB += 1\r\n      seen = true\r\n\r\n      effects.enter('tableDelimiterMarker')\r\n      effects.consume(code)\r\n      effects.exit('tableDelimiterMarker')\r\n      return headDelimiterLeftAlignmentAfter\r\n    }\r\n\r\n    // Align: none.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      sizeB += 1\r\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\r\n      return headDelimiterLeftAlignmentAfter(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      return headDelimiterCellAfter(code)\r\n    }\r\n\r\n    return headDelimiterNok(code)\r\n  }\r\n\r\n  /**\r\n   * After delimiter cell left alignment marker.\r\n   *\r\n   * ```markdown\r\n   *   | | a  |\r\n   * > | | :- |\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterLeftAlignmentAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      effects.enter('tableDelimiterFiller')\r\n      return headDelimiterFiller(code)\r\n    }\r\n\r\n    // Anything else is not ok after the left-align colon.\r\n    return headDelimiterNok(code)\r\n  }\r\n\r\n  /**\r\n   * In delimiter cell filler.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | - |\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterFiller(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\r\n      effects.consume(code)\r\n      return headDelimiterFiller\r\n    }\r\n\r\n    // Align is `center` if it was `left`, `right` otherwise.\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon) {\r\n      seen = true\r\n      effects.exit('tableDelimiterFiller')\r\n      effects.enter('tableDelimiterMarker')\r\n      effects.consume(code)\r\n      effects.exit('tableDelimiterMarker')\r\n      return headDelimiterRightAlignmentAfter\r\n    }\r\n\r\n    effects.exit('tableDelimiterFiller')\r\n    return headDelimiterRightAlignmentAfter(code)\r\n  }\r\n\r\n  /**\r\n   * After delimiter cell right alignment marker.\r\n   *\r\n   * ```markdown\r\n   *   | |  a |\r\n   * > | | -: |\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterRightAlignmentAfter(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(\r\n        effects,\r\n        headDelimiterCellAfter,\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace\r\n      )(code)\r\n    }\r\n\r\n    return headDelimiterCellAfter(code)\r\n  }\r\n\r\n  /**\r\n   * After delimiter cell.\r\n   *\r\n   * ```markdown\r\n   *   | |  a |\r\n   * > | | -: |\r\n   *          ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterCellAfter(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      return headDelimiterBefore(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      // Exit when:\r\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\r\n      //   underline instead)\r\n      // * the header cell count is not the delimiter cell count\r\n      if (!seen || size !== sizeB) {\r\n        return headDelimiterNok(code)\r\n      }\r\n\r\n      // Note: in markdown-rs`, a reset is needed here.\r\n      effects.exit('tableDelimiterRow')\r\n      effects.exit('tableHead')\r\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\r\n      // effects.register_resolver(ResolveName::GfmTable)\r\n      return ok(code)\r\n    }\r\n\r\n    return headDelimiterNok(code)\r\n  }\r\n\r\n  /**\r\n   * In delimiter row, at a disallowed byte.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   * > | | x |\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function headDelimiterNok(code) {\r\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * Before table body row.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   *   | | - |\r\n   * > | | b |\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function bodyRowStart(code) {\r\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\r\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\r\n    // never at whitespace.\r\n    effects.enter('tableRow')\r\n    return bodyRowBreak(code)\r\n  }\r\n\r\n  /**\r\n   * At break in table body row.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   *   | | - |\r\n   * > | | b |\r\n   *     ^\r\n   *       ^\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function bodyRowBreak(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      effects.enter('tableCellDivider')\r\n      effects.consume(code)\r\n      effects.exit('tableCellDivider')\r\n      return bodyRowBreak\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      effects.exit('tableRow')\r\n      return ok(code)\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, bodyRowBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code)\r\n    }\r\n\r\n    // Anything else is cell content.\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data)\r\n    return bodyRowData(code)\r\n  }\r\n\r\n  /**\r\n   * In table body row data.\r\n   *\r\n   * ```markdown\r\n   *   | | a |\r\n   *   | | - |\r\n   * > | | b |\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function bodyRowData(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data)\r\n      return bodyRowBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.backslash ? bodyRowEscape : bodyRowData\r\n  }\r\n\r\n  /**\r\n   * In table body row escape.\r\n   *\r\n   * ```markdown\r\n   *   | | a    |\r\n   *   | | ---- |\r\n   * > | | b\\-c |\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function bodyRowEscape(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.backslash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.verticalBar) {\r\n      effects.consume(code)\r\n      return bodyRowData\r\n    }\r\n\r\n    return bodyRowData(code)\r\n  }\r\n}\r\n\r\n/** @type {Resolver} */\r\n// eslint-disable-next-line complexity\r\nfunction resolveTable(events, context) {\r\n  let index = -1\r\n  let inFirstCellAwaitingPipe = true\r\n  /** @type {RowKind} */\r\n  let rowKind = 0\r\n  /** @type {Range} */\r\n  let lastCell = [0, 0, 0, 0]\r\n  /** @type {Range} */\r\n  let cell = [0, 0, 0, 0]\r\n  let afterHeadAwaitingFirstBodyRow = false\r\n  let lastTableEnd = 0\r\n  /** @type {Token | undefined} */\r\n  let currentTable\r\n  /** @type {Token | undefined} */\r\n  let currentBody\r\n  /** @type {Token | undefined} */\r\n  let currentCell\r\n\r\n  const map = new _edit_map_js__WEBPACK_IMPORTED_MODULE_6__.EditMap()\r\n\r\n  while (++index < events.length) {\r\n    const event = events[index]\r\n    const token = event[1]\r\n\r\n    if (event[0] === 'enter') {\r\n      // Start of head.\r\n      if (token.type === 'tableHead') {\r\n        afterHeadAwaitingFirstBodyRow = false\r\n\r\n        // Inject previous (body end and) table end.\r\n        if (lastTableEnd !== 0) {\r\n          (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(currentTable, 'there should be a table opening')\r\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\r\n          currentBody = undefined\r\n          lastTableEnd = 0\r\n        }\r\n\r\n        // Inject table start.\r\n        currentTable = {\r\n          type: 'table',\r\n          start: Object.assign({}, token.start),\r\n          // Note: correct end is set later.\r\n          end: Object.assign({}, token.end)\r\n        }\r\n        map.add(index, 0, [['enter', currentTable, context]])\r\n      } else if (\r\n        token.type === 'tableRow' ||\r\n        token.type === 'tableDelimiterRow'\r\n      ) {\r\n        inFirstCellAwaitingPipe = true\r\n        currentCell = undefined\r\n        lastCell = [0, 0, 0, 0]\r\n        cell = [0, index + 1, 0, 0]\r\n\r\n        // Inject table body start.\r\n        if (afterHeadAwaitingFirstBodyRow) {\r\n          afterHeadAwaitingFirstBodyRow = false\r\n          currentBody = {\r\n            type: 'tableBody',\r\n            start: Object.assign({}, token.start),\r\n            // Note: correct end is set later.\r\n            end: Object.assign({}, token.end)\r\n          }\r\n          map.add(index, 0, [['enter', currentBody, context]])\r\n        }\r\n\r\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\r\n      }\r\n      // Cell data.\r\n      else if (\r\n        rowKind &&\r\n        (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data ||\r\n          token.type === 'tableDelimiterMarker' ||\r\n          token.type === 'tableDelimiterFiller')\r\n      ) {\r\n        inFirstCellAwaitingPipe = false\r\n\r\n        // First value in cell.\r\n        if (cell[2] === 0) {\r\n          if (lastCell[1] !== 0) {\r\n            cell[0] = cell[1]\r\n            currentCell = flushCell(\r\n              map,\r\n              context,\r\n              lastCell,\r\n              rowKind,\r\n              undefined,\r\n              currentCell\r\n            )\r\n            lastCell = [0, 0, 0, 0]\r\n          }\r\n\r\n          cell[2] = index\r\n        }\r\n      } else if (token.type === 'tableCellDivider') {\r\n        if (inFirstCellAwaitingPipe) {\r\n          inFirstCellAwaitingPipe = false\r\n        } else {\r\n          if (lastCell[1] !== 0) {\r\n            cell[0] = cell[1]\r\n            currentCell = flushCell(\r\n              map,\r\n              context,\r\n              lastCell,\r\n              rowKind,\r\n              undefined,\r\n              currentCell\r\n            )\r\n          }\r\n\r\n          lastCell = cell\r\n          cell = [lastCell[1], index, 0, 0]\r\n        }\r\n      }\r\n    }\r\n    // Exit events.\r\n    else if (token.type === 'tableHead') {\r\n      afterHeadAwaitingFirstBodyRow = true\r\n      lastTableEnd = index\r\n    } else if (\r\n      token.type === 'tableRow' ||\r\n      token.type === 'tableDelimiterRow'\r\n    ) {\r\n      lastTableEnd = index\r\n\r\n      if (lastCell[1] !== 0) {\r\n        cell[0] = cell[1]\r\n        currentCell = flushCell(\r\n          map,\r\n          context,\r\n          lastCell,\r\n          rowKind,\r\n          index,\r\n          currentCell\r\n        )\r\n      } else if (cell[1] !== 0) {\r\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\r\n      }\r\n\r\n      rowKind = 0\r\n    } else if (\r\n      rowKind &&\r\n      (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data ||\r\n        token.type === 'tableDelimiterMarker' ||\r\n        token.type === 'tableDelimiterFiller')\r\n    ) {\r\n      cell[3] = index\r\n    }\r\n  }\r\n\r\n  if (lastTableEnd !== 0) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(currentTable, 'expected table opening')\r\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\r\n  }\r\n\r\n  map.consume(context.events)\r\n\r\n  // To do: move this into `html`, when events are exposed there.\r\n  // That’s what `markdown-rs` does.\r\n  // That needs updates to `mdast-util-gfm-table`.\r\n  index = -1\r\n  while (++index < context.events.length) {\r\n    const event = context.events[index]\r\n    if (event[0] === 'enter' && event[1].type === 'table') {\r\n      event[1]._align = (0,_infer_js__WEBPACK_IMPORTED_MODULE_7__.gfmTableAlign)(context.events, index)\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n\r\n/// Generate a cell.\r\n/**\r\n *\r\n * @param {EditMap} map\r\n * @param {TokenizeContext} context\r\n * @param {Range} range\r\n * @param {RowKind} rowKind\r\n * @param {number | undefined} rowEnd\r\n * @param {Token | undefined} previousCell\r\n * @returns {Token | undefined}\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\r\n  // `markdown-rs` uses:\r\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\r\n  const groupName =\r\n    rowKind === 1\r\n      ? 'tableHeader'\r\n      : rowKind === 2\r\n      ? 'tableDelimiter'\r\n      : 'tableData'\r\n  // `markdown-rs` uses:\r\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\r\n  const valueName = 'tableContent'\r\n\r\n  // Insert an exit for the previous cell, if there is one.\r\n  //\r\n  // ```markdown\r\n  // > | | aa | bb | cc |\r\n  //          ^-- exit\r\n  //           ^^^^-- this cell\r\n  // ```\r\n  if (range[0] !== 0) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(previousCell, 'expected previous cell enter')\r\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\r\n    map.add(range[0], 0, [['exit', previousCell, context]])\r\n  }\r\n\r\n  // Insert enter of this cell.\r\n  //\r\n  // ```markdown\r\n  // > | | aa | bb | cc |\r\n  //           ^-- enter\r\n  //           ^^^^-- this cell\r\n  // ```\r\n  const now = getPoint(context.events, range[1])\r\n  previousCell = {\r\n    type: groupName,\r\n    start: Object.assign({}, now),\r\n    // Note: correct end is set later.\r\n    end: Object.assign({}, now)\r\n  }\r\n  map.add(range[1], 0, [['enter', previousCell, context]])\r\n\r\n  // Insert text start at first data start and end at last data end, and\r\n  // remove events between.\r\n  //\r\n  // ```markdown\r\n  // > | | aa | bb | cc |\r\n  //            ^-- enter\r\n  //             ^-- exit\r\n  //           ^^^^-- this cell\r\n  // ```\r\n  if (range[2] !== 0) {\r\n    const relatedStart = getPoint(context.events, range[2])\r\n    const relatedEnd = getPoint(context.events, range[3])\r\n    /** @type {Token} */\r\n    const valueToken = {\r\n      type: valueName,\r\n      start: Object.assign({}, relatedStart),\r\n      end: Object.assign({}, relatedEnd)\r\n    }\r\n    map.add(range[2], 0, [['enter', valueToken, context]])\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(range[3] !== 0)\r\n\r\n    if (rowKind !== 2) {\r\n      // Fix positional info on remaining events\r\n      const start = context.events[range[2]]\r\n      const end = context.events[range[3]]\r\n      start[1].end = Object.assign({}, end[1].end)\r\n      start[1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkText\r\n      start[1].contentType = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeText\r\n\r\n      // Remove if needed.\r\n      if (range[3] > range[2] + 1) {\r\n        const a = range[2] + 1\r\n        const b = range[3] - range[2] - 1\r\n        map.add(a, b, [])\r\n      }\r\n    }\r\n\r\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\r\n  }\r\n\r\n  // Insert an exit for the last cell, if at the row end.\r\n  //\r\n  // ```markdown\r\n  // > | | aa | bb | cc |\r\n  //                    ^-- exit\r\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\r\n  // ```\r\n  if (rowEnd !== undefined) {\r\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\r\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\r\n    previousCell = undefined\r\n  }\r\n\r\n  return previousCell\r\n}\r\n\r\n/**\r\n * Generate table end (and table body end).\r\n *\r\n * @param {EditMap} map\r\n * @param {TokenizeContext} context\r\n * @param {number} index\r\n * @param {Token} table\r\n * @param {Token | undefined} tableBody\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction flushTableEnd(map, context, index, table, tableBody) {\r\n  /** @type {Array<Event>} */\r\n  const exits = []\r\n  const related = getPoint(context.events, index)\r\n\r\n  if (tableBody) {\r\n    tableBody.end = Object.assign({}, related)\r\n    exits.push(['exit', tableBody, context])\r\n  }\r\n\r\n  table.end = Object.assign({}, related)\r\n  exits.push(['exit', table, context])\r\n\r\n  map.add(index + 1, 0, exits)\r\n}\r\n\r\n/**\r\n * @param {Array<Event>} events\r\n * @param {number} index\r\n * @returns {readonly Point}\r\n */\r\nfunction getPoint(events, index) {\r\n  const event = events[index]\r\n  const side = event[0] === 'enter' ? 'start' : 'end'\r\n  return event[1][side]\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-table/dev/lib/syntax.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-tagfilter/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-tagfilter/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTagfilterHtml\": function() { return /* binding */ gfmTagfilterHtml; }\n/* harmony export */ });\n/**\r\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n * @typedef {import('micromark-util-types').Token} Token\r\n */\r\n\r\n// An opening or closing tag start, followed by a case-insensitive specific tag name,\r\n// followed by HTML whitespace, a greater than, or a slash.\r\nconst reFlow =\r\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\\t\\n\\f\\r />])/gi\r\n\r\n// As HTML (text) parses tags separately (and very strictly), we don’t need to be\r\n// global.\r\nconst reText = new RegExp('^' + reFlow.source, 'i')\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `htmlExtensions`, to\r\n * support GitHub’s weird and useless tagfilter when serializing to HTML.\r\n *\r\n * @type {HtmlExtension}\r\n */\r\nconst gfmTagfilterHtml = {\r\n  exit: {\r\n    htmlFlowData(token) {\r\n      exitHtmlData.call(this, token, reFlow)\r\n    },\r\n    htmlTextData(token) {\r\n      exitHtmlData.call(this, token, reText)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @this {CompileContext}\r\n * @param {Token} token\r\n * @param {RegExp} filter\r\n */\r\nfunction exitHtmlData(token, filter) {\r\n  let value = this.sliceSerialize(token)\r\n\r\n  if (this.options.allowDangerousHtml) {\r\n    value = value.replace(filter, '&lt;$1$2')\r\n  }\r\n\r\n  this.raw(this.encode(value))\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFnZmlsdGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsK0NBQStDO0FBQzVELGFBQWEsOENBQThDO0FBQzNELGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFnZmlsdGVyL2luZGV4LmpzPzAyZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29tcGlsZUNvbnRleHR9IENvbXBpbGVDb250ZXh0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSHRtbEV4dGVuc2lvbn0gSHRtbEV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VufSBUb2tlblxyXG4gKi9cclxuXHJcbi8vIEFuIG9wZW5pbmcgb3IgY2xvc2luZyB0YWcgc3RhcnQsIGZvbGxvd2VkIGJ5IGEgY2FzZS1pbnNlbnNpdGl2ZSBzcGVjaWZpYyB0YWcgbmFtZSxcclxuLy8gZm9sbG93ZWQgYnkgSFRNTCB3aGl0ZXNwYWNlLCBhIGdyZWF0ZXIgdGhhbiwgb3IgYSBzbGFzaC5cclxuY29uc3QgcmVGbG93ID1cclxuICAvPChcXC8/KShpZnJhbWV8bm9lbWJlZHxub2ZyYW1lc3xwbGFpbnRleHR8c2NyaXB0fHN0eWxlfHRpdGxlfHRleHRhcmVhfHhtcCkoPz1bXFx0XFxuXFxmXFxyIC8+XSkvZ2lcclxuXHJcbi8vIEFzIEhUTUwgKHRleHQpIHBhcnNlcyB0YWdzIHNlcGFyYXRlbHkgKGFuZCB2ZXJ5IHN0cmljdGx5KSwgd2UgZG9u4oCZdCBuZWVkIHRvIGJlXHJcbi8vIGdsb2JhbC5cclxuY29uc3QgcmVUZXh0ID0gbmV3IFJlZ0V4cCgnXicgKyByZUZsb3cuc291cmNlLCAnaScpXHJcblxyXG4vKipcclxuICogRXh0ZW5zaW9uIGZvciBgbWljcm9tYXJrYCB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYGh0bWxFeHRlbnNpb25zYCwgdG9cclxuICogc3VwcG9ydCBHaXRIdWLigJlzIHdlaXJkIGFuZCB1c2VsZXNzIHRhZ2ZpbHRlciB3aGVuIHNlcmlhbGl6aW5nIHRvIEhUTUwuXHJcbiAqXHJcbiAqIEB0eXBlIHtIdG1sRXh0ZW5zaW9ufVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdmbVRhZ2ZpbHRlckh0bWwgPSB7XHJcbiAgZXhpdDoge1xyXG4gICAgaHRtbEZsb3dEYXRhKHRva2VuKSB7XHJcbiAgICAgIGV4aXRIdG1sRGF0YS5jYWxsKHRoaXMsIHRva2VuLCByZUZsb3cpXHJcbiAgICB9LFxyXG4gICAgaHRtbFRleHREYXRhKHRva2VuKSB7XHJcbiAgICAgIGV4aXRIdG1sRGF0YS5jYWxsKHRoaXMsIHRva2VuLCByZVRleHQpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQHRoaXMge0NvbXBpbGVDb250ZXh0fVxyXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxyXG4gKiBAcGFyYW0ge1JlZ0V4cH0gZmlsdGVyXHJcbiAqL1xyXG5mdW5jdGlvbiBleGl0SHRtbERhdGEodG9rZW4sIGZpbHRlcikge1xyXG4gIGxldCB2YWx1ZSA9IHRoaXMuc2xpY2VTZXJpYWxpemUodG9rZW4pXHJcblxyXG4gIGlmICh0aGlzLm9wdGlvbnMuYWxsb3dEYW5nZXJvdXNIdG1sKSB7XHJcbiAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoZmlsdGVyLCAnJmx0OyQxJDInKVxyXG4gIH1cclxuXHJcbiAgdGhpcy5yYXcodGhpcy5lbmNvZGUodmFsdWUpKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-tagfilter/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-task-list-item/dev/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-task-list-item/dev/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTaskListItem\": function() { return /* reexport safe */ _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__.gfmTaskListItem; },\n/* harmony export */   \"gfmTaskListItemHtml\": function() { return /* reexport safe */ _lib_html_js__WEBPACK_IMPORTED_MODULE_0__.gfmTaskListItemHtml; }\n/* harmony export */ });\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js\");\n/* harmony import */ var _lib_syntax_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/syntax.js */ \"./node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js\");\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFzay1saXN0LWl0ZW0vZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFzay1saXN0LWl0ZW0vZGV2L2luZGV4LmpzP2RiMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtnZm1UYXNrTGlzdEl0ZW1IdG1sfSBmcm9tICcuL2xpYi9odG1sLmpzJ1xyXG5leHBvcnQge2dmbVRhc2tMaXN0SXRlbX0gZnJvbSAnLi9saWIvc3ludGF4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-task-list-item/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTaskListItemHtml\": function() { return /* binding */ gfmTaskListItemHtml; }\n/* harmony export */ });\n/**\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n */\r\n\r\n// To do: next major: expose function to make extension.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `htmlExtensions` to\r\n * support GFM task list items when serializing to HTML.\r\n *\r\n * @type {HtmlExtension}\r\n */\r\nconst gfmTaskListItemHtml = {\r\n  enter: {\r\n    taskListCheck() {\r\n      this.tag('<input type=\"checkbox\" disabled=\"\" ')\r\n    }\r\n  },\r\n  exit: {\r\n    taskListCheck() {\r\n      this.tag('/>')\r\n    },\r\n    taskListCheckValueChecked() {\r\n      this.tag('checked=\"\" ')\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFzay1saXN0LWl0ZW0vZGV2L2xpYi9odG1sLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsOENBQThDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWdmbS10YXNrLWxpc3QtaXRlbS9kZXYvbGliL2h0bWwuanM/M2YzNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5IdG1sRXh0ZW5zaW9ufSBIdG1sRXh0ZW5zaW9uXHJcbiAqL1xyXG5cclxuLy8gVG8gZG86IG5leHQgbWFqb3I6IGV4cG9zZSBmdW5jdGlvbiB0byBtYWtlIGV4dGVuc2lvbi5cclxuXHJcbi8qKlxyXG4gKiBFeHRlbnNpb24gZm9yIGBtaWNyb21hcmtgIHRoYXQgY2FuIGJlIHBhc3NlZCBpbiBgaHRtbEV4dGVuc2lvbnNgIHRvXHJcbiAqIHN1cHBvcnQgR0ZNIHRhc2sgbGlzdCBpdGVtcyB3aGVuIHNlcmlhbGl6aW5nIHRvIEhUTUwuXHJcbiAqXHJcbiAqIEB0eXBlIHtIdG1sRXh0ZW5zaW9ufVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdmbVRhc2tMaXN0SXRlbUh0bWwgPSB7XHJcbiAgZW50ZXI6IHtcclxuICAgIHRhc2tMaXN0Q2hlY2soKSB7XHJcbiAgICAgIHRoaXMudGFnKCc8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgZGlzYWJsZWQ9XCJcIiAnKVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgZXhpdDoge1xyXG4gICAgdGFza0xpc3RDaGVjaygpIHtcclxuICAgICAgdGhpcy50YWcoJy8+JylcclxuICAgIH0sXHJcbiAgICB0YXNrTGlzdENoZWNrVmFsdWVDaGVja2VkKCkge1xyXG4gICAgICB0aGlzLnRhZygnY2hlY2tlZD1cIlwiICcpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfmTaskListItem\": function() { return /* binding */ gfmTaskListItem; }\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst tasklistCheck = {tokenize: tokenizeTasklistCheck}\r\n\r\n// To do: next major: expose function to make extension.\r\n\r\n/**\r\n * Extension for `micromark` that can be passed in `extensions`, to\r\n * enable GFM task list items syntax.\r\n *\r\n * @type {Extension}\r\n */\r\nconst gfmTaskListItem = {\r\n  text: {[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket]: tasklistCheck}\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeTasklistCheck(effects, ok, nok) {\r\n  const self = this\r\n\r\n  return open\r\n\r\n  /**\r\n   * At start of task list item check.\r\n   *\r\n   * ```markdown\r\n   * > | * [x] y.\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function open(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket, 'expected `[`')\r\n\r\n    if (\r\n      // Exit if there’s stuff before.\r\n      self.previous !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      // Exit if not in the first content that is the first child of a list\r\n      // item.\r\n      !self._gfmTasklistFirstContentOfListItem\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter('taskListCheck')\r\n    effects.enter('taskListCheckMarker')\r\n    effects.consume(code)\r\n    effects.exit('taskListCheckMarker')\r\n    return inside\r\n  }\r\n\r\n  /**\r\n   * In task list item check.\r\n   *\r\n   * ```markdown\r\n   * > | * [x] y.\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    // Currently we match how GH works in files.\r\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\r\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEndingOrSpace)(code)) {\r\n      effects.enter('taskListCheckValueUnchecked')\r\n      effects.consume(code)\r\n      effects.exit('taskListCheckValueUnchecked')\r\n      return close\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseX || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseX) {\r\n      effects.enter('taskListCheckValueChecked')\r\n      effects.consume(code)\r\n      effects.exit('taskListCheckValueChecked')\r\n      return close\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * At close of task list item check.\r\n   *\r\n   * ```markdown\r\n   * > | * [x] y.\r\n   *         ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function close(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.enter('taskListCheckMarker')\r\n      effects.consume(code)\r\n      effects.exit('taskListCheckMarker')\r\n      effects.exit('taskListCheck')\r\n      return after\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    // EOL in paragraph means there must be something else after it.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEnding)(code)) {\r\n      return ok(code)\r\n    }\r\n\r\n    // Space or tab?\r\n    // Check what comes after.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownSpace)(code)) {\r\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)(code)\r\n    }\r\n\r\n    // EOF, or non-whitespace, both wrong.\r\n    return nok(code)\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction spaceThenNonSpace(effects, ok, nok) {\r\n  return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.whitespace)\r\n\r\n  /**\r\n   * After whitespace, after task list item check.\r\n   *\r\n   * ```markdown\r\n   * > | * [x] y.\r\n   *           ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function after(code) {\r\n    // EOF means there was nothing, so bad.\r\n    // EOL means there’s content after it, so good.\r\n    // Impossible to have more spaces.\r\n    // Anything else is good.\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ? nok(code) : ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFzay1saXN0LWl0ZW0vZGV2L2xpYi9zeW50YXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ3VDO0FBQ2E7QUFLbkI7QUFDbUI7QUFDQTtBQUNwRDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNPO0FBQ1AsU0FBUyxDQUFDLG1GQUF1QjtBQUNqQztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLElBQUksK0NBQU0sVUFBVSxtRkFBdUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFFQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG1GQUF5QjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNEVBQWdCLGFBQWEsNEVBQWdCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGlCQUFpQixvRkFBd0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxRQUFRLDRFQUFrQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RUFBYTtBQUNyQiw0QkFBNEIsNEJBQTRCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQSxTQUFTLHFFQUFZLGlCQUFpQiw0RUFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxRUFBUztBQUM3QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWdmbS10YXNrLWxpc3QtaXRlbS9kZXYvbGliL3N5bnRheC5qcz8wMTA1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkV4dGVuc2lvbn0gRXh0ZW5zaW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxyXG4gKi9cclxuXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXHJcbmltcG9ydCB7XHJcbiAgbWFya2Rvd25MaW5lRW5kaW5nT3JTcGFjZSxcclxuICBtYXJrZG93bkxpbmVFbmRpbmcsXHJcbiAgbWFya2Rvd25TcGFjZVxyXG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcblxyXG5jb25zdCB0YXNrbGlzdENoZWNrID0ge3Rva2VuaXplOiB0b2tlbml6ZVRhc2tsaXN0Q2hlY2t9XHJcblxyXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogZXhwb3NlIGZ1bmN0aW9uIHRvIG1ha2UgZXh0ZW5zaW9uLlxyXG5cclxuLyoqXHJcbiAqIEV4dGVuc2lvbiBmb3IgYG1pY3JvbWFya2AgdGhhdCBjYW4gYmUgcGFzc2VkIGluIGBleHRlbnNpb25zYCwgdG9cclxuICogZW5hYmxlIEdGTSB0YXNrIGxpc3QgaXRlbXMgc3ludGF4LlxyXG4gKlxyXG4gKiBAdHlwZSB7RXh0ZW5zaW9ufVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdmbVRhc2tMaXN0SXRlbSA9IHtcclxuICB0ZXh0OiB7W2NvZGVzLmxlZnRTcXVhcmVCcmFja2V0XTogdGFza2xpc3RDaGVja31cclxufVxyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtUb2tlbml6ZUNvbnRleHR9XHJcbiAqIEB0eXBlIHtUb2tlbml6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbml6ZVRhc2tsaXN0Q2hlY2soZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIGNvbnN0IHNlbGYgPSB0aGlzXHJcblxyXG4gIHJldHVybiBvcGVuXHJcblxyXG4gIC8qKlxyXG4gICAqIEF0IHN0YXJ0IG9mIHRhc2sgbGlzdCBpdGVtIGNoZWNrLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgKiBbeF0geS5cclxuICAgKiAgICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gb3Blbihjb2RlKSB7XHJcbiAgICBhc3NlcnQoY29kZSA9PT0gY29kZXMubGVmdFNxdWFyZUJyYWNrZXQsICdleHBlY3RlZCBgW2AnKVxyXG5cclxuICAgIGlmIChcclxuICAgICAgLy8gRXhpdCBpZiB0aGVyZeKAmXMgc3R1ZmYgYmVmb3JlLlxyXG4gICAgICBzZWxmLnByZXZpb3VzICE9PSBjb2Rlcy5lb2YgfHxcclxuICAgICAgLy8gRXhpdCBpZiBub3QgaW4gdGhlIGZpcnN0IGNvbnRlbnQgdGhhdCBpcyB0aGUgZmlyc3QgY2hpbGQgb2YgYSBsaXN0XHJcbiAgICAgIC8vIGl0ZW0uXHJcbiAgICAgICFzZWxmLl9nZm1UYXNrbGlzdEZpcnN0Q29udGVudE9mTGlzdEl0ZW1cclxuICAgICkge1xyXG4gICAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgZWZmZWN0cy5lbnRlcigndGFza0xpc3RDaGVjaycpXHJcbiAgICBlZmZlY3RzLmVudGVyKCd0YXNrTGlzdENoZWNrTWFya2VyJylcclxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgZWZmZWN0cy5leGl0KCd0YXNrTGlzdENoZWNrTWFya2VyJylcclxuICAgIHJldHVybiBpbnNpZGVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluIHRhc2sgbGlzdCBpdGVtIGNoZWNrLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgKiBbeF0geS5cclxuICAgKiAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGluc2lkZShjb2RlKSB7XHJcbiAgICAvLyBDdXJyZW50bHkgd2UgbWF0Y2ggaG93IEdIIHdvcmtzIGluIGZpbGVzLlxyXG4gICAgLy8gVG8gbWF0Y2ggaG93IEdIIHdvcmtzIGluIGNvbW1lbnRzLCB1c2UgYG1hcmtkb3duU3BhY2VgIChgW1xcdCBdYCkgaW5zdGVhZFxyXG4gICAgLy8gb2YgYG1hcmtkb3duTGluZUVuZGluZ09yU3BhY2VgIChgW1xcdFxcblxcciBdYCkuXHJcbiAgICBpZiAobWFya2Rvd25MaW5lRW5kaW5nT3JTcGFjZShjb2RlKSkge1xyXG4gICAgICBlZmZlY3RzLmVudGVyKCd0YXNrTGlzdENoZWNrVmFsdWVVbmNoZWNrZWQnKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KCd0YXNrTGlzdENoZWNrVmFsdWVVbmNoZWNrZWQnKVxyXG4gICAgICByZXR1cm4gY2xvc2VcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29kZSA9PT0gY29kZXMudXBwZXJjYXNlWCB8fCBjb2RlID09PSBjb2Rlcy5sb3dlcmNhc2VYKSB7XHJcbiAgICAgIGVmZmVjdHMuZW50ZXIoJ3Rhc2tMaXN0Q2hlY2tWYWx1ZUNoZWNrZWQnKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KCd0YXNrTGlzdENoZWNrVmFsdWVDaGVja2VkJylcclxuICAgICAgcmV0dXJuIGNsb3NlXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXQgY2xvc2Ugb2YgdGFzayBsaXN0IGl0ZW0gY2hlY2suXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCAqIFt4XSB5LlxyXG4gICAqICAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGNsb3NlKGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5yaWdodFNxdWFyZUJyYWNrZXQpIHtcclxuICAgICAgZWZmZWN0cy5lbnRlcigndGFza0xpc3RDaGVja01hcmtlcicpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQoJ3Rhc2tMaXN0Q2hlY2tNYXJrZXInKVxyXG4gICAgICBlZmZlY3RzLmV4aXQoJ3Rhc2tMaXN0Q2hlY2snKVxyXG4gICAgICByZXR1cm4gYWZ0ZXJcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xyXG4gICAgLy8gRU9MIGluIHBhcmFncmFwaCBtZWFucyB0aGVyZSBtdXN0IGJlIHNvbWV0aGluZyBlbHNlIGFmdGVyIGl0LlxyXG4gICAgaWYgKG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xyXG4gICAgICByZXR1cm4gb2soY29kZSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBTcGFjZSBvciB0YWI/XHJcbiAgICAvLyBDaGVjayB3aGF0IGNvbWVzIGFmdGVyLlxyXG4gICAgaWYgKG1hcmtkb3duU3BhY2UoY29kZSkpIHtcclxuICAgICAgcmV0dXJuIGVmZmVjdHMuY2hlY2soe3Rva2VuaXplOiBzcGFjZVRoZW5Ob25TcGFjZX0sIG9rLCBub2spKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgLy8gRU9GLCBvciBub24td2hpdGVzcGFjZSwgYm90aCB3cm9uZy5cclxuICAgIHJldHVybiBub2soY29kZSlcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7VG9rZW5pemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gc3BhY2VUaGVuTm9uU3BhY2UoZWZmZWN0cywgb2ssIG5vaykge1xyXG4gIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgYWZ0ZXIsIHR5cGVzLndoaXRlc3BhY2UpXHJcblxyXG4gIC8qKlxyXG4gICAqIEFmdGVyIHdoaXRlc3BhY2UsIGFmdGVyIHRhc2sgbGlzdCBpdGVtIGNoZWNrLlxyXG4gICAqXHJcbiAgICogYGBgbWFya2Rvd25cclxuICAgKiA+IHwgKiBbeF0geS5cclxuICAgKiAgICAgICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGFmdGVyKGNvZGUpIHtcclxuICAgIC8vIEVPRiBtZWFucyB0aGVyZSB3YXMgbm90aGluZywgc28gYmFkLlxyXG4gICAgLy8gRU9MIG1lYW5zIHRoZXJl4oCZcyBjb250ZW50IGFmdGVyIGl0LCBzbyBnb29kLlxyXG4gICAgLy8gSW1wb3NzaWJsZSB0byBoYXZlIG1vcmUgc3BhY2VzLlxyXG4gICAgLy8gQW55dGhpbmcgZWxzZSBpcyBnb29kLlxyXG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmVvZiA/IG5vayhjb2RlKSA6IG9rKGNvZGUpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js\n"));

/***/ }),

/***/ "./node_modules/micromark-extension-gfm/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/micromark-extension-gfm/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gfm\": function() { return /* binding */ gfm; },\n/* harmony export */   \"gfmHtml\": function() { return /* binding */ gfmHtml; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_combine_extensions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-combine-extensions */ \"./node_modules/micromark-util-combine-extensions/index.js\");\n/* harmony import */ var micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-extension-gfm-autolink-literal */ \"./node_modules/micromark-extension-gfm-autolink-literal/dev/index.js\");\n/* harmony import */ var micromark_extension_gfm_footnote__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-extension-gfm-footnote */ \"./node_modules/micromark-extension-gfm-footnote/dev/index.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-extension-gfm-strikethrough */ \"./node_modules/micromark-extension-gfm-strikethrough/dev/index.js\");\n/* harmony import */ var micromark_extension_gfm_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-extension-gfm-table */ \"./node_modules/micromark-extension-gfm-table/dev/index.js\");\n/* harmony import */ var micromark_extension_gfm_tagfilter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-extension-gfm-tagfilter */ \"./node_modules/micromark-extension-gfm-tagfilter/index.js\");\n/* harmony import */ var micromark_extension_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-extension-gfm-task-list-item */ \"./node_modules/micromark-extension-gfm-task-list-item/dev/index.js\");\n/**\r\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\r\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Create an extension for `micromark` to enable GFM syntax.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n *\r\n *   Passed to `micromark-extens-gfm-strikethrough`.\r\n * @returns {Extension}\r\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\r\n *   syntax.\r\n */\r\nfunction gfm(options) {\r\n  return (0,micromark_util_combine_extensions__WEBPACK_IMPORTED_MODULE_0__.combineExtensions)([\r\n    micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_1__.gfmAutolinkLiteral,\r\n    (0,micromark_extension_gfm_footnote__WEBPACK_IMPORTED_MODULE_2__.gfmFootnote)(),\r\n    (0,micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_3__.gfmStrikethrough)(options),\r\n    micromark_extension_gfm_table__WEBPACK_IMPORTED_MODULE_4__.gfmTable,\r\n    micromark_extension_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_5__.gfmTaskListItem\r\n  ])\r\n}\r\n\r\n/**\r\n * Create an extension for `micromark` to support GFM when serializing to HTML.\r\n *\r\n * @param {HtmlOptions | null | undefined} [options]\r\n *   Configuration.\r\n *\r\n *   Passed to `micromark-extens-gfm-footnote`.\r\n * @returns {HtmlExtension}\r\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\r\n *   support GFM when serializing to HTML.\r\n */\r\nfunction gfmHtml(options) {\r\n  return (0,micromark_util_combine_extensions__WEBPACK_IMPORTED_MODULE_0__.combineHtmlExtensions)([\r\n    micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_1__.gfmAutolinkLiteralHtml,\r\n    (0,micromark_extension_gfm_footnote__WEBPACK_IMPORTED_MODULE_2__.gfmFootnoteHtml)(options),\r\n    micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_3__.gfmStrikethroughHtml,\r\n    micromark_extension_gfm_table__WEBPACK_IMPORTED_MODULE_4__.gfmTableHtml,\r\n    micromark_extension_gfm_tagfilter__WEBPACK_IMPORTED_MODULE_6__.gfmTagfilterHtml,\r\n    micromark_extension_gfm_task_list_item__WEBPACK_IMPORTED_MODULE_5__.gfmTaskListItemHtml\r\n  ])\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLHdEQUF3RDtBQUNyRSxhQUFhLHlEQUF5RDtBQUN0RSxhQUFhLDBDQUEwQztBQUN2RCxhQUFhLDhDQUE4QztBQUMzRDtBQUNBO0FBSTBDO0FBSU87QUFDNEI7QUFJL0I7QUFDc0I7QUFDRjtBQUluQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMsb0ZBQWlCO0FBQzFCLElBQUksd0ZBQWtCO0FBQ3RCLElBQUksNkVBQVc7QUFDZixJQUFJLHVGQUFnQjtBQUNwQixJQUFJLG1FQUFRO0FBQ1osSUFBSSxtRkFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdDQUFnQztBQUMzQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLHdGQUFxQjtBQUM5QixJQUFJLDRGQUFzQjtBQUMxQixJQUFJLGlGQUFlO0FBQ25CLElBQUksdUZBQW9CO0FBQ3hCLElBQUksdUVBQVk7QUFDaEIsSUFBSSwrRUFBZ0I7QUFDcEIsSUFBSSx1RkFBbUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0vaW5kZXguanM/ZTNkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tZm9vdG5vdGUnKS5IdG1sT3B0aW9uc30gSHRtbE9wdGlvbnNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tc3RyaWtldGhyb3VnaCcpLk9wdGlvbnN9IE9wdGlvbnNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5FeHRlbnNpb259IEV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkh0bWxFeHRlbnNpb259IEh0bWxFeHRlbnNpb25cclxuICovXHJcblxyXG5pbXBvcnQge1xyXG4gIGNvbWJpbmVFeHRlbnNpb25zLFxyXG4gIGNvbWJpbmVIdG1sRXh0ZW5zaW9uc1xyXG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNvbWJpbmUtZXh0ZW5zaW9ucydcclxuaW1wb3J0IHtcclxuICBnZm1BdXRvbGlua0xpdGVyYWwsXHJcbiAgZ2ZtQXV0b2xpbmtMaXRlcmFsSHRtbFxyXG59IGZyb20gJ21pY3JvbWFyay1leHRlbnNpb24tZ2ZtLWF1dG9saW5rLWxpdGVyYWwnXHJcbmltcG9ydCB7Z2ZtRm9vdG5vdGUsIGdmbUZvb3Rub3RlSHRtbH0gZnJvbSAnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tZm9vdG5vdGUnXHJcbmltcG9ydCB7XHJcbiAgZ2ZtU3RyaWtldGhyb3VnaCxcclxuICBnZm1TdHJpa2V0aHJvdWdoSHRtbFxyXG59IGZyb20gJ21pY3JvbWFyay1leHRlbnNpb24tZ2ZtLXN0cmlrZXRocm91Z2gnXHJcbmltcG9ydCB7Z2ZtVGFibGUsIGdmbVRhYmxlSHRtbH0gZnJvbSAnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFibGUnXHJcbmltcG9ydCB7Z2ZtVGFnZmlsdGVySHRtbH0gZnJvbSAnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFnZmlsdGVyJ1xyXG5pbXBvcnQge1xyXG4gIGdmbVRhc2tMaXN0SXRlbSxcclxuICBnZm1UYXNrTGlzdEl0ZW1IdG1sXHJcbn0gZnJvbSAnbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tdGFzay1saXN0LWl0ZW0nXHJcblxyXG4vKipcclxuICogQ3JlYXRlIGFuIGV4dGVuc2lvbiBmb3IgYG1pY3JvbWFya2AgdG8gZW5hYmxlIEdGTSBzeW50YXguXHJcbiAqXHJcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IFtvcHRpb25zXVxyXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cclxuICpcclxuICogICBQYXNzZWQgdG8gYG1pY3JvbWFyay1leHRlbnMtZ2ZtLXN0cmlrZXRocm91Z2hgLlxyXG4gKiBAcmV0dXJucyB7RXh0ZW5zaW9ufVxyXG4gKiAgIEV4dGVuc2lvbiBmb3IgYG1pY3JvbWFya2AgdGhhdCBjYW4gYmUgcGFzc2VkIGluIGBleHRlbnNpb25zYCB0byBlbmFibGUgR0ZNXHJcbiAqICAgc3ludGF4LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdmbShvcHRpb25zKSB7XHJcbiAgcmV0dXJuIGNvbWJpbmVFeHRlbnNpb25zKFtcclxuICAgIGdmbUF1dG9saW5rTGl0ZXJhbCxcclxuICAgIGdmbUZvb3Rub3RlKCksXHJcbiAgICBnZm1TdHJpa2V0aHJvdWdoKG9wdGlvbnMpLFxyXG4gICAgZ2ZtVGFibGUsXHJcbiAgICBnZm1UYXNrTGlzdEl0ZW1cclxuICBdKVxyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGFuIGV4dGVuc2lvbiBmb3IgYG1pY3JvbWFya2AgdG8gc3VwcG9ydCBHRk0gd2hlbiBzZXJpYWxpemluZyB0byBIVE1MLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0h0bWxPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXHJcbiAqICAgQ29uZmlndXJhdGlvbi5cclxuICpcclxuICogICBQYXNzZWQgdG8gYG1pY3JvbWFyay1leHRlbnMtZ2ZtLWZvb3Rub3RlYC5cclxuICogQHJldHVybnMge0h0bWxFeHRlbnNpb259XHJcbiAqICAgRXh0ZW5zaW9uIGZvciBgbWljcm9tYXJrYCB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYGh0bWxFeHRlbnNpb25zYCB0b1xyXG4gKiAgIHN1cHBvcnQgR0ZNIHdoZW4gc2VyaWFsaXppbmcgdG8gSFRNTC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZm1IdG1sKG9wdGlvbnMpIHtcclxuICByZXR1cm4gY29tYmluZUh0bWxFeHRlbnNpb25zKFtcclxuICAgIGdmbUF1dG9saW5rTGl0ZXJhbEh0bWwsXHJcbiAgICBnZm1Gb290bm90ZUh0bWwob3B0aW9ucyksXHJcbiAgICBnZm1TdHJpa2V0aHJvdWdoSHRtbCxcclxuICAgIGdmbVRhYmxlSHRtbCxcclxuICAgIGdmbVRhZ2ZpbHRlckh0bWwsXHJcbiAgICBnZm1UYXNrTGlzdEl0ZW1IdG1sXHJcbiAgXSlcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-extension-gfm/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-factory-destination/dev/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/micromark-factory-destination/dev/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factoryDestination\": function() { return /* binding */ factoryDestination; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenType} TokenType\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Parse destinations.\r\n *\r\n * ###### Examples\r\n *\r\n * ```markdown\r\n * <a>\r\n * <a\\>b>\r\n * <a b>\r\n * <a)>\r\n * a\r\n * a\\)b\r\n * a(b)c\r\n * a(b)\r\n * ```\r\n *\r\n * @param {Effects} effects\r\n *   Context.\r\n * @param {State} ok\r\n *   State switched to when successful.\r\n * @param {State} nok\r\n *   State switched to when unsuccessful.\r\n * @param {TokenType} type\r\n *   Type for whole (`<a>` or `b`).\r\n * @param {TokenType} literalType\r\n *   Type when enclosed (`<a>`).\r\n * @param {TokenType} literalMarkerType\r\n *   Type for enclosing (`<` and `>`).\r\n * @param {TokenType} rawType\r\n *   Type when not enclosed (`b`).\r\n * @param {TokenType} stringType\r\n *   Type for the value (`a` or `b`).\r\n * @param {number | undefined} [max=Infinity]\r\n *   Depth of nested parens (inclusive).\r\n * @returns {State}\r\n *   Start state.\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction factoryDestination(\r\n  effects,\r\n  ok,\r\n  nok,\r\n  type,\r\n  literalType,\r\n  literalMarkerType,\r\n  rawType,\r\n  stringType,\r\n  max\r\n) {\r\n  const limit = max || Number.POSITIVE_INFINITY\r\n  let balance = 0\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of destination.\r\n   *\r\n   * ```markdown\r\n   * > | <aa>\r\n   *     ^\r\n   * > | aa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan) {\r\n      effects.enter(type)\r\n      effects.enter(literalType)\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      return enclosedBefore\r\n    }\r\n\r\n    // ASCII control, space, closing paren.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiControl)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter(type)\r\n    effects.enter(rawType)\r\n    effects.enter(stringType)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString})\r\n    return raw(code)\r\n  }\r\n\r\n  /**\r\n   * After `<`, at an enclosed destination.\r\n   *\r\n   * ```markdown\r\n   * > | <aa>\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function enclosedBefore(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.greaterThan) {\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      effects.exit(literalType)\r\n      effects.exit(type)\r\n      return ok\r\n    }\r\n\r\n    effects.enter(stringType)\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString})\r\n    return enclosed(code)\r\n  }\r\n\r\n  /**\r\n   * In enclosed destination.\r\n   *\r\n   * ```markdown\r\n   * > | <aa>\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function enclosed(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.greaterThan) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      effects.exit(stringType)\r\n      return enclosedBefore(code)\r\n    }\r\n\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash ? enclosedEscape : enclosed\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at a special character.\r\n   *\r\n   * ```markdown\r\n   * > | <a\\*a>\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function enclosedEscape(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.greaterThan ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash\r\n    ) {\r\n      effects.consume(code)\r\n      return enclosed\r\n    }\r\n\r\n    return enclosed(code)\r\n  }\r\n\r\n  /**\r\n   * In raw destination.\r\n   *\r\n   * ```markdown\r\n   * > | aa\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function raw(code) {\r\n    if (\r\n      !balance &&\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis ||\r\n        (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code))\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      effects.exit(stringType)\r\n      effects.exit(rawType)\r\n      effects.exit(type)\r\n      return ok(code)\r\n    }\r\n\r\n    if (balance < limit && code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis) {\r\n      effects.consume(code)\r\n      balance++\r\n      return raw\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis) {\r\n      effects.consume(code)\r\n      balance--\r\n      return raw\r\n    }\r\n\r\n    // ASCII control (but *not* `\\0`) and space and `(`.\r\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\r\n    // doesn’t.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.asciiControl)(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash ? rawEscape : raw\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at special character.\r\n   *\r\n   * ```markdown\r\n   * > | a\\*a\r\n   *       ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function rawEscape(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash\r\n    ) {\r\n      effects.consume(code)\r\n      return raw\r\n    }\r\n\r\n    return raw(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-factory-destination/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-factory-label/dev/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/micromark-factory-label/dev/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factoryLabel\": function() { return /* binding */ factoryLabel; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').TokenType} TokenType\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Parse labels.\r\n *\r\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\r\n *\r\n * ###### Examples\r\n *\r\n * ```markdown\r\n * [a]\r\n * [a\r\n * b]\r\n * [a\\]b]\r\n * ```\r\n *\r\n * @this {TokenizeContext}\r\n *   Tokenize context.\r\n * @param {Effects} effects\r\n *   Context.\r\n * @param {State} ok\r\n *   State switched to when successful.\r\n * @param {State} nok\r\n *   State switched to when unsuccessful.\r\n * @param {TokenType} type\r\n *   Type of the whole label (`[a]`).\r\n * @param {TokenType} markerType\r\n *   Type for the markers (`[` and `]`).\r\n * @param {TokenType} stringType\r\n *   Type for the identifier (`a`).\r\n * @returns {State}\r\n *   Start state.\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction factoryLabel(effects, ok, nok, type, markerType, stringType) {\r\n  const self = this\r\n  let size = 0\r\n  /** @type {boolean} */\r\n  let seen\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of label.\r\n   *\r\n   * ```markdown\r\n   * > | [a]\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket, 'expected `[`')\r\n    effects.enter(type)\r\n    effects.enter(markerType)\r\n    effects.consume(code)\r\n    effects.exit(markerType)\r\n    effects.enter(stringType)\r\n    return atBreak\r\n  }\r\n\r\n  /**\r\n   * In label, at something, before something else.\r\n   *\r\n   * ```markdown\r\n   * > | [a]\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atBreak(code) {\r\n    if (\r\n      size > micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.linkReferenceSizeMax ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket && !seen) ||\r\n      // To do: remove in the future once we’ve switched from\r\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\r\n      // which doesn’t need this.\r\n      // Hidden footnotes hook.\r\n      /* c8 ignore next 3 */\r\n      (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.caret &&\r\n        !size &&\r\n        '_hiddenFootnoteSupport' in self.parser.constructs)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\r\n      effects.exit(stringType)\r\n      effects.enter(markerType)\r\n      effects.consume(code)\r\n      effects.exit(markerType)\r\n      effects.exit(type)\r\n      return ok\r\n    }\r\n\r\n    // To do: indent? Link chunks and EOLs together?\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding)\r\n      return atBreak\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.contentTypeString})\r\n    return labelInside(code)\r\n  }\r\n\r\n  /**\r\n   * In label, in text.\r\n   *\r\n   * ```markdown\r\n   * > | [a]\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelInside(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket ||\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code) ||\r\n      size++ > micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.linkReferenceSizeMax\r\n    ) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkString)\r\n      return atBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    if (!seen) seen = !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ? labelEscape : labelInside\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at a special character.\r\n   *\r\n   * ```markdown\r\n   * > | [a\\*a]\r\n   *        ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function labelEscape(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket\r\n    ) {\r\n      effects.consume(code)\r\n      size++\r\n      return labelInside\r\n    }\r\n\r\n    return labelInside(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-factory-label/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-factory-space/dev/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/micromark-factory-space/dev/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factorySpace\": function() { return /* binding */ factorySpace; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenType} TokenType\r\n */\r\n\r\n\r\n\r\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\r\n\r\n/**\r\n * Parse spaces and tabs.\r\n *\r\n * There is no `nok` parameter:\r\n *\r\n * *   spaces in markdown are often optional, in which case this factory can be\r\n *     used and `ok` will be switched to whether spaces were found or not\r\n * *   one line ending or space can be detected with `markdownSpace(code)` right\r\n *     before using `factorySpace`\r\n *\r\n * ###### Examples\r\n *\r\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\r\n * single space.\r\n *\r\n * ```markdown\r\n * ␉\r\n * ␠␠␠␠\r\n * ␉␠\r\n * ```\r\n *\r\n * @param {Effects} effects\r\n *   Context.\r\n * @param {State} ok\r\n *   State switched to when successful.\r\n * @param {TokenType} type\r\n *   Type (`' \\t'`).\r\n * @param {number | undefined} [max=Infinity]\r\n *   Max (exclusive).\r\n * @returns\r\n *   Start state.\r\n */\r\nfunction factorySpace(effects, ok, type, max) {\r\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\r\n  let size = 0\r\n\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownSpace)(code)) {\r\n      effects.enter(type)\r\n      return prefix(code)\r\n    }\r\n\r\n    return ok(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function prefix(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownSpace)(code) && size++ < limit) {\r\n      effects.consume(code)\r\n      return prefix\r\n    }\r\n\r\n    effects.exit(type)\r\n    return ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UvZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLHdDQUF3QztBQUNyRCxhQUFhLHNDQUFzQztBQUNuRCxhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ3NEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsV0FBVztBQUN0QjtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsUUFBUSx1RUFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLFFBQVEsdUVBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UvZGV2L2luZGV4LmpzP2JlYzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRWZmZWN0c30gRWZmZWN0c1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuVHlwZX0gVG9rZW5UeXBlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHttYXJrZG93blNwYWNlfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXHJcblxyXG4vLyBUbyBkbzogaW1wbGVtZW50IGBzcGFjZU9yVGFiYCwgYHNwYWNlT3JUYWJNaW5NYXhgLCBgc3BhY2VPclRhYldpdGhPcHRpb25zYC5cclxuXHJcbi8qKlxyXG4gKiBQYXJzZSBzcGFjZXMgYW5kIHRhYnMuXHJcbiAqXHJcbiAqIFRoZXJlIGlzIG5vIGBub2tgIHBhcmFtZXRlcjpcclxuICpcclxuICogKiAgIHNwYWNlcyBpbiBtYXJrZG93biBhcmUgb2Z0ZW4gb3B0aW9uYWwsIGluIHdoaWNoIGNhc2UgdGhpcyBmYWN0b3J5IGNhbiBiZVxyXG4gKiAgICAgdXNlZCBhbmQgYG9rYCB3aWxsIGJlIHN3aXRjaGVkIHRvIHdoZXRoZXIgc3BhY2VzIHdlcmUgZm91bmQgb3Igbm90XHJcbiAqICogICBvbmUgbGluZSBlbmRpbmcgb3Igc3BhY2UgY2FuIGJlIGRldGVjdGVkIHdpdGggYG1hcmtkb3duU3BhY2UoY29kZSlgIHJpZ2h0XHJcbiAqICAgICBiZWZvcmUgdXNpbmcgYGZhY3RvcnlTcGFjZWBcclxuICpcclxuICogIyMjIyMjIEV4YW1wbGVzXHJcbiAqXHJcbiAqIFdoZXJlIGDikIlgIHJlcHJlc2VudHMgYSB0YWIgKHBsdXMgaG93IG11Y2ggaXQgZXhwYW5kcykgYW5kIGDikKBgIHJlcHJlc2VudHMgYVxyXG4gKiBzaW5nbGUgc3BhY2UuXHJcbiAqXHJcbiAqIGBgYG1hcmtkb3duXHJcbiAqIOKQiVxyXG4gKiDikKDikKDikKDikKBcclxuICog4pCJ4pCgXHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0ge0VmZmVjdHN9IGVmZmVjdHNcclxuICogICBDb250ZXh0LlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBva1xyXG4gKiAgIFN0YXRlIHN3aXRjaGVkIHRvIHdoZW4gc3VjY2Vzc2Z1bC5cclxuICogQHBhcmFtIHtUb2tlblR5cGV9IHR5cGVcclxuICogICBUeXBlIChgJyBcXHQnYCkuXHJcbiAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBbbWF4PUluZmluaXR5XVxyXG4gKiAgIE1heCAoZXhjbHVzaXZlKS5cclxuICogQHJldHVybnNcclxuICogICBTdGFydCBzdGF0ZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgb2ssIHR5cGUsIG1heCkge1xyXG4gIGNvbnN0IGxpbWl0ID0gbWF4ID8gbWF4IC0gMSA6IE51bWJlci5QT1NJVElWRV9JTkZJTklUWVxyXG4gIGxldCBzaXplID0gMFxyXG5cclxuICByZXR1cm4gc3RhcnRcclxuXHJcbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cclxuICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XHJcbiAgICBpZiAobWFya2Rvd25TcGFjZShjb2RlKSkge1xyXG4gICAgICBlZmZlY3RzLmVudGVyKHR5cGUpXHJcbiAgICAgIHJldHVybiBwcmVmaXgoY29kZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gb2soY29kZSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gcHJlZml4KGNvZGUpIHtcclxuICAgIGlmIChtYXJrZG93blNwYWNlKGNvZGUpICYmIHNpemUrKyA8IGxpbWl0KSB7XHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICByZXR1cm4gcHJlZml4XHJcbiAgICB9XHJcblxyXG4gICAgZWZmZWN0cy5leGl0KHR5cGUpXHJcbiAgICByZXR1cm4gb2soY29kZSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-factory-space/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-factory-title/dev/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/micromark-factory-title/dev/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factoryTitle\": function() { return /* binding */ factoryTitle; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenType} TokenType\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Parse titles.\r\n *\r\n * ###### Examples\r\n *\r\n * ```markdown\r\n * \"a\"\r\n * 'b'\r\n * (c)\r\n * \"a\r\n * b\"\r\n * 'a\r\n *     b'\r\n * (a\\)b)\r\n * ```\r\n *\r\n * @param {Effects} effects\r\n *   Context.\r\n * @param {State} ok\r\n *   State switched to when successful.\r\n * @param {State} nok\r\n *   State switched to when unsuccessful.\r\n * @param {TokenType} type\r\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\r\n * @param {TokenType} markerType\r\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\r\n * @param {TokenType} stringType\r\n *   Type for the value (`a`).\r\n * @returns {State}\r\n *   Start state.\r\n */\r\n// eslint-disable-next-line max-params\r\nfunction factoryTitle(effects, ok, nok, type, markerType, stringType) {\r\n  /** @type {NonNullable<Code>} */\r\n  let marker\r\n\r\n  return start\r\n\r\n  /**\r\n   * Start of title.\r\n   *\r\n   * ```markdown\r\n   * > | \"a\"\r\n   *     ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function start(code) {\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.quotationMark ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.apostrophe ||\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis\r\n    ) {\r\n      effects.enter(type)\r\n      effects.enter(markerType)\r\n      effects.consume(code)\r\n      effects.exit(markerType)\r\n      marker = code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftParenthesis ? micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightParenthesis : code\r\n      return begin\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  /**\r\n   * After opening marker.\r\n   *\r\n   * This is also used at the closing marker.\r\n   *\r\n   * ```markdown\r\n   * > | \"a\"\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function begin(code) {\r\n    if (code === marker) {\r\n      effects.enter(markerType)\r\n      effects.consume(code)\r\n      effects.exit(markerType)\r\n      effects.exit(type)\r\n      return ok\r\n    }\r\n\r\n    effects.enter(stringType)\r\n    return atBreak(code)\r\n  }\r\n\r\n  /**\r\n   * At something, before something else.\r\n   *\r\n   * ```markdown\r\n   * > | \"a\"\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function atBreak(code) {\r\n    if (code === marker) {\r\n      effects.exit(stringType)\r\n      return begin(marker)\r\n    }\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof) {\r\n      return nok(code)\r\n    }\r\n\r\n    // Note: blank lines can’t exist in content.\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\r\n      // To do: use `space_or_tab_eol_with_options`, connect.\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(effects, atBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix)\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString, {contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.contentTypeString})\r\n    return inside(code)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @type {State}\r\n   */\r\n  function inside(code) {\r\n    if (code === marker || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.chunkString)\r\n      return atBreak(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash ? escape : inside\r\n  }\r\n\r\n  /**\r\n   * After `\\`, at a special character.\r\n   *\r\n   * ```markdown\r\n   * > | \"a\\*b\"\r\n   *      ^\r\n   * ```\r\n   *\r\n   * @type {State}\r\n   */\r\n  function escape(code) {\r\n    if (code === marker || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash) {\r\n      effects.consume(code)\r\n      return inside\r\n    }\r\n\r\n    return inside(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWZhY3RvcnktdGl0bGUvZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSx3Q0FBd0M7QUFDckQsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSwwQ0FBMEM7QUFDdkQ7QUFDQTtBQUNvRDtBQUNPO0FBQ1A7QUFDUTtBQUNSO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrRUFBbUI7QUFDbEMsZUFBZSw0RUFBZ0I7QUFDL0IsZUFBZSxpRkFBcUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpRkFBcUIsR0FBRyxrRkFBc0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscUVBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDRFQUFrQjtBQUMxQjtBQUNBLG9CQUFvQiw0RUFBZ0I7QUFDcEM7QUFDQSxtQkFBbUIsNEVBQWdCO0FBQ25DLGFBQWEscUVBQVksbUJBQW1CLDRFQUFnQjtBQUM1RDtBQUNBO0FBQ0Esa0JBQWtCLDZFQUFpQixHQUFHLGFBQWEsMkZBQTJCLENBQUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxvQ0FBb0MscUVBQVMsSUFBSSw0RUFBa0I7QUFDbkUsbUJBQW1CLDZFQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyRUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0Esb0NBQW9DLDJFQUFlO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstZmFjdG9yeS10aXRsZS9kZXYvaW5kZXguanM/Njg4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db2RlfSBDb2RlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRWZmZWN0c30gRWZmZWN0c1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuVHlwZX0gVG9rZW5UeXBlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtmYWN0b3J5U3BhY2V9IGZyb20gJ21pY3JvbWFyay1mYWN0b3J5LXNwYWNlJ1xyXG5pbXBvcnQge21hcmtkb3duTGluZUVuZGluZ30gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcblxyXG4vKipcclxuICogUGFyc2UgdGl0bGVzLlxyXG4gKlxyXG4gKiAjIyMjIyMgRXhhbXBsZXNcclxuICpcclxuICogYGBgbWFya2Rvd25cclxuICogXCJhXCJcclxuICogJ2InXHJcbiAqIChjKVxyXG4gKiBcImFcclxuICogYlwiXHJcbiAqICdhXHJcbiAqICAgICBiJ1xyXG4gKiAoYVxcKWIpXHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0ge0VmZmVjdHN9IGVmZmVjdHNcclxuICogICBDb250ZXh0LlxyXG4gKiBAcGFyYW0ge1N0YXRlfSBva1xyXG4gKiAgIFN0YXRlIHN3aXRjaGVkIHRvIHdoZW4gc3VjY2Vzc2Z1bC5cclxuICogQHBhcmFtIHtTdGF0ZX0gbm9rXHJcbiAqICAgU3RhdGUgc3dpdGNoZWQgdG8gd2hlbiB1bnN1Y2Nlc3NmdWwuXHJcbiAqIEBwYXJhbSB7VG9rZW5UeXBlfSB0eXBlXHJcbiAqICAgVHlwZSBvZiB0aGUgd2hvbGUgdGl0bGUgKGBcImFcImAsIGAnYidgLCBgKGMpYCkuXHJcbiAqIEBwYXJhbSB7VG9rZW5UeXBlfSBtYXJrZXJUeXBlXHJcbiAqICAgVHlwZSBmb3IgdGhlIG1hcmtlcnMgKGBcImAsIGAnYCwgYChgLCBhbmQgYClgKS5cclxuICogQHBhcmFtIHtUb2tlblR5cGV9IHN0cmluZ1R5cGVcclxuICogICBUeXBlIGZvciB0aGUgdmFsdWUgKGBhYCkuXHJcbiAqIEByZXR1cm5zIHtTdGF0ZX1cclxuICogICBTdGFydCBzdGF0ZS5cclxuICovXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtcGFyYW1zXHJcbmV4cG9ydCBmdW5jdGlvbiBmYWN0b3J5VGl0bGUoZWZmZWN0cywgb2ssIG5vaywgdHlwZSwgbWFya2VyVHlwZSwgc3RyaW5nVHlwZSkge1xyXG4gIC8qKiBAdHlwZSB7Tm9uTnVsbGFibGU8Q29kZT59ICovXHJcbiAgbGV0IG1hcmtlclxyXG5cclxuICByZXR1cm4gc3RhcnRcclxuXHJcbiAgLyoqXHJcbiAgICogU3RhcnQgb2YgdGl0bGUuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBcImFcIlxyXG4gICAqICAgICBeXHJcbiAgICogYGBgXHJcbiAgICpcclxuICAgKiBAdHlwZSB7U3RhdGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xyXG4gICAgaWYgKFxyXG4gICAgICBjb2RlID09PSBjb2Rlcy5xdW90YXRpb25NYXJrIHx8XHJcbiAgICAgIGNvZGUgPT09IGNvZGVzLmFwb3N0cm9waGUgfHxcclxuICAgICAgY29kZSA9PT0gY29kZXMubGVmdFBhcmVudGhlc2lzXHJcbiAgICApIHtcclxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlKVxyXG4gICAgICBlZmZlY3RzLmVudGVyKG1hcmtlclR5cGUpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQobWFya2VyVHlwZSlcclxuICAgICAgbWFya2VyID0gY29kZSA9PT0gY29kZXMubGVmdFBhcmVudGhlc2lzID8gY29kZXMucmlnaHRQYXJlbnRoZXNpcyA6IGNvZGVcclxuICAgICAgcmV0dXJuIGJlZ2luXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgb3BlbmluZyBtYXJrZXIuXHJcbiAgICpcclxuICAgKiBUaGlzIGlzIGFsc28gdXNlZCBhdCB0aGUgY2xvc2luZyBtYXJrZXIuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBcImFcIlxyXG4gICAqICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGJlZ2luKGNvZGUpIHtcclxuICAgIGlmIChjb2RlID09PSBtYXJrZXIpIHtcclxuICAgICAgZWZmZWN0cy5lbnRlcihtYXJrZXJUeXBlKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KG1hcmtlclR5cGUpXHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlKVxyXG4gICAgICByZXR1cm4gb2tcclxuICAgIH1cclxuXHJcbiAgICBlZmZlY3RzLmVudGVyKHN0cmluZ1R5cGUpXHJcbiAgICByZXR1cm4gYXRCcmVhayhjb2RlKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXQgc29tZXRoaW5nLCBiZWZvcmUgc29tZXRoaW5nIGVsc2UuXHJcbiAgICpcclxuICAgKiBgYGBtYXJrZG93blxyXG4gICAqID4gfCBcImFcIlxyXG4gICAqICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGF0QnJlYWsoY29kZSkge1xyXG4gICAgaWYgKGNvZGUgPT09IG1hcmtlcikge1xyXG4gICAgICBlZmZlY3RzLmV4aXQoc3RyaW5nVHlwZSlcclxuICAgICAgcmV0dXJuIGJlZ2luKG1hcmtlcilcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mKSB7XHJcbiAgICAgIHJldHVybiBub2soY29kZSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBOb3RlOiBibGFuayBsaW5lcyBjYW7igJl0IGV4aXN0IGluIGNvbnRlbnQuXHJcbiAgICBpZiAobWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpKSB7XHJcbiAgICAgIC8vIFRvIGRvOiB1c2UgYHNwYWNlX29yX3RhYl9lb2xfd2l0aF9vcHRpb25zYCwgY29ubmVjdC5cclxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nKVxyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmxpbmVFbmRpbmcpXHJcbiAgICAgIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgYXRCcmVhaywgdHlwZXMubGluZVByZWZpeClcclxuICAgIH1cclxuXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmNodW5rU3RyaW5nLCB7Y29udGVudFR5cGU6IGNvbnN0YW50cy5jb250ZW50VHlwZVN0cmluZ30pXHJcbiAgICByZXR1cm4gaW5zaWRlKGNvZGUpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGluc2lkZShjb2RlKSB7XHJcbiAgICBpZiAoY29kZSA9PT0gbWFya2VyIHx8IGNvZGUgPT09IGNvZGVzLmVvZiB8fCBtYXJrZG93bkxpbmVFbmRpbmcoY29kZSkpIHtcclxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmNodW5rU3RyaW5nKVxyXG4gICAgICByZXR1cm4gYXRCcmVhayhjb2RlKVxyXG4gICAgfVxyXG5cclxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmJhY2tzbGFzaCA/IGVzY2FwZSA6IGluc2lkZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWZ0ZXIgYFxcYCwgYXQgYSBzcGVjaWFsIGNoYXJhY3Rlci5cclxuICAgKlxyXG4gICAqIGBgYG1hcmtkb3duXHJcbiAgICogPiB8IFwiYVxcKmJcIlxyXG4gICAqICAgICAgXlxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogQHR5cGUge1N0YXRlfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGVzY2FwZShjb2RlKSB7XHJcbiAgICBpZiAoY29kZSA9PT0gbWFya2VyIHx8IGNvZGUgPT09IGNvZGVzLmJhY2tzbGFzaCkge1xyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgcmV0dXJuIGluc2lkZVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBpbnNpZGUoY29kZSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-factory-title/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-factory-whitespace/dev/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/micromark-factory-whitespace/dev/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factoryWhitespace\": function() { return /* binding */ factoryWhitespace; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Parse spaces and tabs.\r\n *\r\n * There is no `nok` parameter:\r\n *\r\n * *   line endings or spaces in markdown are often optional, in which case this\r\n *     factory can be used and `ok` will be switched to whether spaces were found\r\n *     or not\r\n * *   one line ending or space can be detected with\r\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\r\n *\r\n * @param {Effects} effects\r\n *   Context.\r\n * @param {State} ok\r\n *   State switched to when successful.\r\n * @returns\r\n *   Start state.\r\n */\r\nfunction factoryWhitespace(effects, ok) {\r\n  /** @type {boolean} */\r\n  let seen\r\n\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownLineEnding)(code)) {\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding)\r\n      seen = true\r\n      return start\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_0__.markdownSpace)(code)) {\r\n      return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_2__.factorySpace)(\r\n        effects,\r\n        start,\r\n        seen ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineSuffix\r\n      )(code)\r\n    }\r\n\r\n    return ok(code)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWZhY3Rvcnktd2hpdGVzcGFjZS9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSx3Q0FBd0M7QUFDckQsYUFBYSxzQ0FBc0M7QUFDbkQ7QUFDQTtBQUNvRDtBQUNzQjtBQUN0QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLFFBQVEsNEVBQWtCO0FBQzFCLG9CQUFvQiw0RUFBZ0I7QUFDcEM7QUFDQSxtQkFBbUIsNEVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RUFBYTtBQUNyQixhQUFhLHFFQUFZO0FBQ3pCO0FBQ0E7QUFDQSxlQUFlLDRFQUFnQixHQUFHLDRFQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay1mYWN0b3J5LXdoaXRlc3BhY2UvZGV2L2luZGV4LmpzP2FlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRWZmZWN0c30gRWZmZWN0c1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7ZmFjdG9yeVNwYWNlfSBmcm9tICdtaWNyb21hcmstZmFjdG9yeS1zcGFjZSdcclxuaW1wb3J0IHttYXJrZG93bkxpbmVFbmRpbmcsIG1hcmtkb3duU3BhY2V9IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFBhcnNlIHNwYWNlcyBhbmQgdGFicy5cclxuICpcclxuICogVGhlcmUgaXMgbm8gYG5va2AgcGFyYW1ldGVyOlxyXG4gKlxyXG4gKiAqICAgbGluZSBlbmRpbmdzIG9yIHNwYWNlcyBpbiBtYXJrZG93biBhcmUgb2Z0ZW4gb3B0aW9uYWwsIGluIHdoaWNoIGNhc2UgdGhpc1xyXG4gKiAgICAgZmFjdG9yeSBjYW4gYmUgdXNlZCBhbmQgYG9rYCB3aWxsIGJlIHN3aXRjaGVkIHRvIHdoZXRoZXIgc3BhY2VzIHdlcmUgZm91bmRcclxuICogICAgIG9yIG5vdFxyXG4gKiAqICAgb25lIGxpbmUgZW5kaW5nIG9yIHNwYWNlIGNhbiBiZSBkZXRlY3RlZCB3aXRoXHJcbiAqICAgICBgbWFya2Rvd25MaW5lRW5kaW5nT3JTcGFjZShjb2RlKWAgcmlnaHQgYmVmb3JlIHVzaW5nIGBmYWN0b3J5V2hpdGVzcGFjZWBcclxuICpcclxuICogQHBhcmFtIHtFZmZlY3RzfSBlZmZlY3RzXHJcbiAqICAgQ29udGV4dC5cclxuICogQHBhcmFtIHtTdGF0ZX0gb2tcclxuICogICBTdGF0ZSBzd2l0Y2hlZCB0byB3aGVuIHN1Y2Nlc3NmdWwuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgU3RhcnQgc3RhdGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZmFjdG9yeVdoaXRlc3BhY2UoZWZmZWN0cywgb2spIHtcclxuICAvKiogQHR5cGUge2Jvb2xlYW59ICovXHJcbiAgbGV0IHNlZW5cclxuXHJcbiAgcmV0dXJuIHN0YXJ0XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xyXG4gICAgaWYgKG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xyXG4gICAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxpbmVFbmRpbmcpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMubGluZUVuZGluZylcclxuICAgICAgc2VlbiA9IHRydWVcclxuICAgICAgcmV0dXJuIHN0YXJ0XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG1hcmtkb3duU3BhY2UoY29kZSkpIHtcclxuICAgICAgcmV0dXJuIGZhY3RvcnlTcGFjZShcclxuICAgICAgICBlZmZlY3RzLFxyXG4gICAgICAgIHN0YXJ0LFxyXG4gICAgICAgIHNlZW4gPyB0eXBlcy5saW5lUHJlZml4IDogdHlwZXMubGluZVN1ZmZpeFxyXG4gICAgICApKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG9rKGNvZGUpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-factory-whitespace/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-character/dev/index.js":
/*!************************************************************!*\
  !*** ./node_modules/micromark-util-character/dev/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asciiAlpha\": function() { return /* binding */ asciiAlpha; },\n/* harmony export */   \"asciiAlphanumeric\": function() { return /* binding */ asciiAlphanumeric; },\n/* harmony export */   \"asciiAtext\": function() { return /* binding */ asciiAtext; },\n/* harmony export */   \"asciiControl\": function() { return /* binding */ asciiControl; },\n/* harmony export */   \"asciiDigit\": function() { return /* binding */ asciiDigit; },\n/* harmony export */   \"asciiHexDigit\": function() { return /* binding */ asciiHexDigit; },\n/* harmony export */   \"asciiPunctuation\": function() { return /* binding */ asciiPunctuation; },\n/* harmony export */   \"markdownLineEnding\": function() { return /* binding */ markdownLineEnding; },\n/* harmony export */   \"markdownLineEndingOrSpace\": function() { return /* binding */ markdownLineEndingOrSpace; },\n/* harmony export */   \"markdownSpace\": function() { return /* binding */ markdownSpace; },\n/* harmony export */   \"unicodePunctuation\": function() { return /* binding */ unicodePunctuation; },\n/* harmony export */   \"unicodeWhitespace\": function() { return /* binding */ unicodeWhitespace; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var _lib_unicode_punctuation_regex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/unicode-punctuation-regex.js */ \"./node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\r\n * case insensitive).\r\n *\r\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\r\n *\r\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\r\n * to U+005A (`Z`).\r\n *\r\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\r\n * to U+007A (`z`).\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiAlpha = regexCheck(/[A-Za-z]/)\r\n\r\n/**\r\n * Check whether the character code represents an ASCII alphanumeric (`a`\r\n * through `z`, case insensitive, or `0` through `9`).\r\n *\r\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\r\n * (see `asciiAlpha`).\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\r\n\r\n/**\r\n * Check whether the character code represents an ASCII atext.\r\n *\r\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\r\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\r\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\r\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\r\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\r\n * (`{`) to U+007E TILDE (`~`).\r\n *\r\n * See:\r\n * **\\[RFC5322]**:\r\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\r\n * P. Resnick.\r\n * IETF.\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\r\n\r\n/**\r\n * Check whether a character code is an ASCII control character.\r\n *\r\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\r\n * to U+001F (US), or U+007F (DEL).\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {boolean}\r\n *   Whether it matches.\r\n */\r\nfunction asciiControl(code) {\r\n  return (\r\n    // Special whitespace codes (which have negative values), C0 and Control\r\n    // character DEL\r\n    code !== null && (code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.del)\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether the character code represents an ASCII digit (`0` through `9`).\r\n *\r\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\r\n * U+0039 (`9`).\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiDigit = regexCheck(/\\d/)\r\n\r\n/**\r\n * Check whether the character code represents an ASCII hex digit (`a` through\r\n * `f`, case insensitive, or `0` through `9`).\r\n *\r\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\r\n * digit, or an ASCII lower hex digit.\r\n *\r\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\r\n * (`A`) to U+0046 (`F`).\r\n *\r\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\r\n * (`a`) to U+0066 (`f`).\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\r\n\r\n/**\r\n * Check whether the character code represents ASCII punctuation.\r\n *\r\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\r\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\r\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\r\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\r\n\r\n/**\r\n * Check whether a character code is a markdown line ending.\r\n *\r\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\r\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\r\n *\r\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\r\n * RETURN (CR) are replaced by these virtual characters depending on whether\r\n * they occurred together.\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {boolean}\r\n *   Whether it matches.\r\n */\r\nfunction markdownLineEnding(code) {\r\n  return code !== null && code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.horizontalTab\r\n}\r\n\r\n/**\r\n * Check whether a character code is a markdown line ending (see\r\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {boolean}\r\n *   Whether it matches.\r\n */\r\nfunction markdownLineEndingOrSpace(code) {\r\n  return code !== null && (code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.nul || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space)\r\n}\r\n\r\n/**\r\n * Check whether a character code is a markdown space.\r\n *\r\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\r\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\r\n *\r\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\r\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\r\n * SPACE (VS) characters, depending on the column at which the tab occurred.\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {boolean}\r\n *   Whether it matches.\r\n */\r\nfunction markdownSpace(code) {\r\n  return (\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.horizontalTab ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.virtualSpace ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space\r\n  )\r\n}\r\n\r\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\r\n// In fact adds to the bundle size.\r\n/**\r\n * Check whether the character code represents Unicode punctuation.\r\n *\r\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\r\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\r\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\r\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\r\n * punctuation (see `asciiPunctuation`).\r\n *\r\n * See:\r\n * **\\[UNICODE]**:\r\n * [The Unicode Standard](https://www.unicode.org/versions/).\r\n * Unicode Consortium.\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst unicodePunctuation = regexCheck(_lib_unicode_punctuation_regex_js__WEBPACK_IMPORTED_MODULE_1__.unicodePunctuationRegex)\r\n\r\n/**\r\n * Check whether the character code represents Unicode whitespace.\r\n *\r\n * Note that this does handle micromark specific markdown whitespace characters.\r\n * See `markdownLineEndingOrSpace` to check that.\r\n *\r\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\r\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\r\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\r\n *\r\n * See:\r\n * **\\[UNICODE]**:\r\n * [The Unicode Standard](https://www.unicode.org/versions/).\r\n * Unicode Consortium.\r\n *\r\n * @param code\r\n *   Code.\r\n * @returns\r\n *   Whether it matches.\r\n */\r\nconst unicodeWhitespace = regexCheck(/\\s/)\r\n\r\n/**\r\n * Create a code check from a regex.\r\n *\r\n * @param {RegExp} regex\r\n * @returns {(code: Code) => boolean}\r\n */\r\nfunction regexCheck(regex) {\r\n  return check\r\n\r\n  /**\r\n   * Check whether a code matches the bound regex.\r\n   *\r\n   * @param {Code} code\r\n   *   Character code.\r\n   * @returns {boolean}\r\n   *   Whether the character code matches the bound regex.\r\n   */\r\n  function check(code) {\r\n    return code !== null && regex.test(String.fromCharCode(code))\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyL2Rldi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQTtBQUNvRDtBQUNzQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsdUVBQVcsYUFBYSxxRUFBUztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0RBQWdEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLCtFQUFtQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1Asa0NBQWtDLHFFQUFTLGFBQWEsdUVBQVc7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSwrRUFBbUI7QUFDaEMsYUFBYSw4RUFBa0I7QUFDL0IsYUFBYSx1RUFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzQ0FBc0Msc0ZBQXVCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyL2Rldi9pbmRleC5qcz82YmNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvZGV9IENvZGVcclxuICovXHJcblxyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7dW5pY29kZVB1bmN0dWF0aW9uUmVnZXh9IGZyb20gJy4vbGliL3VuaWNvZGUtcHVuY3R1YXRpb24tcmVnZXguanMnXHJcblxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciB0aGUgY2hhcmFjdGVyIGNvZGUgcmVwcmVzZW50cyBhbiBBU0NJSSBhbHBoYSAoYGFgIHRocm91Z2ggYHpgLFxyXG4gKiBjYXNlIGluc2Vuc2l0aXZlKS5cclxuICpcclxuICogQW4gKipBU0NJSSBhbHBoYSoqIGlzIGFuIEFTQ0lJIHVwcGVyIGFscGhhIG9yIEFTQ0lJIGxvd2VyIGFscGhhLlxyXG4gKlxyXG4gKiBBbiAqKkFTQ0lJIHVwcGVyIGFscGhhKiogaXMgYSBjaGFyYWN0ZXIgaW4gdGhlIGluY2x1c2l2ZSByYW5nZSBVKzAwNDEgKGBBYClcclxuICogdG8gVSswMDVBIChgWmApLlxyXG4gKlxyXG4gKiBBbiAqKkFTQ0lJIGxvd2VyIGFscGhhKiogaXMgYSBjaGFyYWN0ZXIgaW4gdGhlIGluY2x1c2l2ZSByYW5nZSBVKzAwNjEgKGBhYClcclxuICogdG8gVSswMDdBIChgemApLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFzY2lpQWxwaGEgPSByZWdleENoZWNrKC9bQS1aYS16XS8pXHJcblxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciB0aGUgY2hhcmFjdGVyIGNvZGUgcmVwcmVzZW50cyBhbiBBU0NJSSBhbHBoYW51bWVyaWMgKGBhYFxyXG4gKiB0aHJvdWdoIGB6YCwgY2FzZSBpbnNlbnNpdGl2ZSwgb3IgYDBgIHRocm91Z2ggYDlgKS5cclxuICpcclxuICogQW4gKipBU0NJSSBhbHBoYW51bWVyaWMqKiBpcyBhbiBBU0NJSSBkaWdpdCAoc2VlIGBhc2NpaURpZ2l0YCkgb3IgQVNDSUkgYWxwaGFcclxuICogKHNlZSBgYXNjaWlBbHBoYWApLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFzY2lpQWxwaGFudW1lcmljID0gcmVnZXhDaGVjaygvW1xcZEEtWmEtel0vKVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIHdoZXRoZXIgdGhlIGNoYXJhY3RlciBjb2RlIHJlcHJlc2VudHMgYW4gQVNDSUkgYXRleHQuXHJcbiAqXHJcbiAqIGF0ZXh0IGlzIGFuIEFTQ0lJIGFscGhhbnVtZXJpYyAoc2VlIGBhc2NpaUFscGhhbnVtZXJpY2ApLCBvciBhIGNoYXJhY3RlciBpblxyXG4gKiB0aGUgaW5jbHVzaXZlIHJhbmdlcyBVKzAwMjMgTlVNQkVSIFNJR04gKGAjYCkgdG8gVSswMDI3IEFQT1NUUk9QSEUgKGAnYCksXHJcbiAqIFUrMDAyQSBBU1RFUklTSyAoYCpgKSwgVSswMDJCIFBMVVMgU0lHTiAoYCtgKSwgVSswMDJEIERBU0ggKGAtYCksIFUrMDAyRlxyXG4gKiBTTEFTSCAoYC9gKSwgVSswMDNEIEVRVUFMUyBUTyAoYD1gKSwgVSswMDNGIFFVRVNUSU9OIE1BUksgKGA/YCksIFUrMDA1RVxyXG4gKiBDQVJFVCAoYF5gKSB0byBVKzAwNjAgR1JBVkUgQUNDRU5UIChgYCBgIGBgKSwgb3IgVSswMDdCIExFRlQgQ1VSTFkgQlJBQ0VcclxuICogKGB7YCkgdG8gVSswMDdFIFRJTERFIChgfmApLlxyXG4gKlxyXG4gKiBTZWU6XHJcbiAqICoqXFxbUkZDNTMyMl0qKjpcclxuICogW0ludGVybmV0IE1lc3NhZ2UgRm9ybWF0XShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNTMyMikuXHJcbiAqIFAuIFJlc25pY2suXHJcbiAqIElFVEYuXHJcbiAqXHJcbiAqIEBwYXJhbSBjb2RlXHJcbiAqICAgQ29kZS5cclxuICogQHJldHVybnNcclxuICogICBXaGV0aGVyIGl0IG1hdGNoZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgYXNjaWlBdGV4dCA9IHJlZ2V4Q2hlY2soL1sjLScqK1xcLS05PT9BLVpeLX5dLylcclxuXHJcbi8qKlxyXG4gKiBDaGVjayB3aGV0aGVyIGEgY2hhcmFjdGVyIGNvZGUgaXMgYW4gQVNDSUkgY29udHJvbCBjaGFyYWN0ZXIuXHJcbiAqXHJcbiAqIEFuICoqQVNDSUkgY29udHJvbCoqIGlzIGEgY2hhcmFjdGVyIGluIHRoZSBpbmNsdXNpdmUgcmFuZ2UgVSswMDAwIE5VTEwgKE5VTClcclxuICogdG8gVSswMDFGIChVUyksIG9yIFUrMDA3RiAoREVMKS5cclxuICpcclxuICogQHBhcmFtIHtDb2RlfSBjb2RlXHJcbiAqICAgQ29kZS5cclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGFzY2lpQ29udHJvbChjb2RlKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIC8vIFNwZWNpYWwgd2hpdGVzcGFjZSBjb2RlcyAod2hpY2ggaGF2ZSBuZWdhdGl2ZSB2YWx1ZXMpLCBDMCBhbmQgQ29udHJvbFxyXG4gICAgLy8gY2hhcmFjdGVyIERFTFxyXG4gICAgY29kZSAhPT0gbnVsbCAmJiAoY29kZSA8IGNvZGVzLnNwYWNlIHx8IGNvZGUgPT09IGNvZGVzLmRlbClcclxuICApXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVjayB3aGV0aGVyIHRoZSBjaGFyYWN0ZXIgY29kZSByZXByZXNlbnRzIGFuIEFTQ0lJIGRpZ2l0IChgMGAgdGhyb3VnaCBgOWApLlxyXG4gKlxyXG4gKiBBbiAqKkFTQ0lJIGRpZ2l0KiogaXMgYSBjaGFyYWN0ZXIgaW4gdGhlIGluY2x1c2l2ZSByYW5nZSBVKzAwMzAgKGAwYCkgdG9cclxuICogVSswMDM5IChgOWApLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFzY2lpRGlnaXQgPSByZWdleENoZWNrKC9cXGQvKVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIHdoZXRoZXIgdGhlIGNoYXJhY3RlciBjb2RlIHJlcHJlc2VudHMgYW4gQVNDSUkgaGV4IGRpZ2l0IChgYWAgdGhyb3VnaFxyXG4gKiBgZmAsIGNhc2UgaW5zZW5zaXRpdmUsIG9yIGAwYCB0aHJvdWdoIGA5YCkuXHJcbiAqXHJcbiAqIEFuICoqQVNDSUkgaGV4IGRpZ2l0KiogaXMgYW4gQVNDSUkgZGlnaXQgKHNlZSBgYXNjaWlEaWdpdGApLCBBU0NJSSB1cHBlciBoZXhcclxuICogZGlnaXQsIG9yIGFuIEFTQ0lJIGxvd2VyIGhleCBkaWdpdC5cclxuICpcclxuICogQW4gKipBU0NJSSB1cHBlciBoZXggZGlnaXQqKiBpcyBhIGNoYXJhY3RlciBpbiB0aGUgaW5jbHVzaXZlIHJhbmdlIFUrMDA0MVxyXG4gKiAoYEFgKSB0byBVKzAwNDYgKGBGYCkuXHJcbiAqXHJcbiAqIEFuICoqQVNDSUkgbG93ZXIgaGV4IGRpZ2l0KiogaXMgYSBjaGFyYWN0ZXIgaW4gdGhlIGluY2x1c2l2ZSByYW5nZSBVKzAwNjFcclxuICogKGBhYCkgdG8gVSswMDY2IChgZmApLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFzY2lpSGV4RGlnaXQgPSByZWdleENoZWNrKC9bXFxkQS1GYS1mXS8pXHJcblxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciB0aGUgY2hhcmFjdGVyIGNvZGUgcmVwcmVzZW50cyBBU0NJSSBwdW5jdHVhdGlvbi5cclxuICpcclxuICogQW4gKipBU0NJSSBwdW5jdHVhdGlvbioqIGlzIGEgY2hhcmFjdGVyIGluIHRoZSBpbmNsdXNpdmUgcmFuZ2VzIFUrMDAyMVxyXG4gKiBFWENMQU1BVElPTiBNQVJLIChgIWApIHRvIFUrMDAyRiBTTEFTSCAoYC9gKSwgVSswMDNBIENPTE9OIChgOmApIHRvIFUrMDA0MCBBVFxyXG4gKiBTSUdOIChgQGApLCBVKzAwNUIgTEVGVCBTUVVBUkUgQlJBQ0tFVCAoYFtgKSB0byBVKzAwNjAgR1JBVkUgQUNDRU5UXHJcbiAqIChgYCBgIGBgKSwgb3IgVSswMDdCIExFRlQgQ1VSTFkgQlJBQ0UgKGB7YCkgdG8gVSswMDdFIFRJTERFIChgfmApLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFzY2lpUHVuY3R1YXRpb24gPSByZWdleENoZWNrKC9bIS0vOi1AWy1gey1+XS8pXHJcblxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciBhIGNoYXJhY3RlciBjb2RlIGlzIGEgbWFya2Rvd24gbGluZSBlbmRpbmcuXHJcbiAqXHJcbiAqIEEgKiptYXJrZG93biBsaW5lIGVuZGluZyoqIGlzIHRoZSB2aXJ0dWFsIGNoYXJhY3RlcnMgTS0wMDAzIENBUlJJQUdFIFJFVFVSTlxyXG4gKiBMSU5FIEZFRUQgKENSTEYpLCBNLTAwMDQgTElORSBGRUVEIChMRikgYW5kIE0tMDAwNSBDQVJSSUFHRSBSRVRVUk4gKENSKS5cclxuICpcclxuICogSW4gbWljcm9tYXJrLCB0aGUgYWN0dWFsIGNoYXJhY3RlciBVKzAwMEEgTElORSBGRUVEIChMRikgYW5kIFUrMDAwRCBDQVJSSUFHRVxyXG4gKiBSRVRVUk4gKENSKSBhcmUgcmVwbGFjZWQgYnkgdGhlc2UgdmlydHVhbCBjaGFyYWN0ZXJzIGRlcGVuZGluZyBvbiB3aGV0aGVyXHJcbiAqIHRoZXkgb2NjdXJyZWQgdG9nZXRoZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSB7Q29kZX0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKiAgIFdoZXRoZXIgaXQgbWF0Y2hlcy5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBtYXJrZG93bkxpbmVFbmRpbmcoY29kZSkge1xyXG4gIHJldHVybiBjb2RlICE9PSBudWxsICYmIGNvZGUgPCBjb2Rlcy5ob3Jpem9udGFsVGFiXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVjayB3aGV0aGVyIGEgY2hhcmFjdGVyIGNvZGUgaXMgYSBtYXJrZG93biBsaW5lIGVuZGluZyAoc2VlXHJcbiAqIGBtYXJrZG93bkxpbmVFbmRpbmdgKSBvciBtYXJrZG93biBzcGFjZSAoc2VlIGBtYXJrZG93blNwYWNlYCkuXHJcbiAqXHJcbiAqIEBwYXJhbSB7Q29kZX0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKiAgIFdoZXRoZXIgaXQgbWF0Y2hlcy5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlKGNvZGUpIHtcclxuICByZXR1cm4gY29kZSAhPT0gbnVsbCAmJiAoY29kZSA8IGNvZGVzLm51bCB8fCBjb2RlID09PSBjb2Rlcy5zcGFjZSlcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIHdoZXRoZXIgYSBjaGFyYWN0ZXIgY29kZSBpcyBhIG1hcmtkb3duIHNwYWNlLlxyXG4gKlxyXG4gKiBBICoqbWFya2Rvd24gc3BhY2UqKiBpcyB0aGUgY29uY3JldGUgY2hhcmFjdGVyIFUrMDAyMCBTUEFDRSAoU1ApIGFuZCB0aGVcclxuICogdmlydHVhbCBjaGFyYWN0ZXJzIE0tMDAwMSBWSVJUVUFMIFNQQUNFIChWUykgYW5kIE0tMDAwMiBIT1JJWk9OVEFMIFRBQiAoSFQpLlxyXG4gKlxyXG4gKiBJbiBtaWNyb21hcmssIHRoZSBhY3R1YWwgY2hhcmFjdGVyIFUrMDAwOSBDSEFSQUNURVIgVEFCVUxBVElPTiAoSFQpIGlzXHJcbiAqIHJlcGxhY2VkIGJ5IG9uZSBNLTAwMDIgSE9SSVpPTlRBTCBUQUIgKEhUKSBhbmQgYmV0d2VlbiAwIGFuZCAzIE0tMDAwMSBWSVJUVUFMXHJcbiAqIFNQQUNFIChWUykgY2hhcmFjdGVycywgZGVwZW5kaW5nIG9uIHRoZSBjb2x1bW4gYXQgd2hpY2ggdGhlIHRhYiBvY2N1cnJlZC5cclxuICpcclxuICogQHBhcmFtIHtDb2RlfSBjb2RlXHJcbiAqICAgQ29kZS5cclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1hcmtkb3duU3BhY2UoY29kZSkge1xyXG4gIHJldHVybiAoXHJcbiAgICBjb2RlID09PSBjb2Rlcy5ob3Jpem9udGFsVGFiIHx8XHJcbiAgICBjb2RlID09PSBjb2Rlcy52aXJ0dWFsU3BhY2UgfHxcclxuICAgIGNvZGUgPT09IGNvZGVzLnNwYWNlXHJcbiAgKVxyXG59XHJcblxyXG4vLyBTaXplIG5vdGU6IHJlbW92aW5nIEFTQ0lJIGZyb20gdGhlIHJlZ2V4IGFuZCB1c2luZyBgYXNjaWlQdW5jdHVhdGlvbmAgaGVyZVxyXG4vLyBJbiBmYWN0IGFkZHMgdG8gdGhlIGJ1bmRsZSBzaXplLlxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciB0aGUgY2hhcmFjdGVyIGNvZGUgcmVwcmVzZW50cyBVbmljb2RlIHB1bmN0dWF0aW9uLlxyXG4gKlxyXG4gKiBBICoqVW5pY29kZSBwdW5jdHVhdGlvbioqIGlzIGEgY2hhcmFjdGVyIGluIHRoZSBVbmljb2RlIGBQY2AgKFB1bmN0dWF0aW9uLFxyXG4gKiBDb25uZWN0b3IpLCBgUGRgIChQdW5jdHVhdGlvbiwgRGFzaCksIGBQZWAgKFB1bmN0dWF0aW9uLCBDbG9zZSksIGBQZmBcclxuICogKFB1bmN0dWF0aW9uLCBGaW5hbCBxdW90ZSksIGBQaWAgKFB1bmN0dWF0aW9uLCBJbml0aWFsIHF1b3RlKSwgYFBvYFxyXG4gKiAoUHVuY3R1YXRpb24sIE90aGVyKSwgb3IgYFBzYCAoUHVuY3R1YXRpb24sIE9wZW4pIGNhdGVnb3JpZXMsIG9yIGFuIEFTQ0lJXHJcbiAqIHB1bmN0dWF0aW9uIChzZWUgYGFzY2lpUHVuY3R1YXRpb25gKS5cclxuICpcclxuICogU2VlOlxyXG4gKiAqKlxcW1VOSUNPREVdKio6XHJcbiAqIFtUaGUgVW5pY29kZSBTdGFuZGFyZF0oaHR0cHM6Ly93d3cudW5pY29kZS5vcmcvdmVyc2lvbnMvKS5cclxuICogVW5pY29kZSBDb25zb3J0aXVtLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zXHJcbiAqICAgV2hldGhlciBpdCBtYXRjaGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHVuaWNvZGVQdW5jdHVhdGlvbiA9IHJlZ2V4Q2hlY2sodW5pY29kZVB1bmN0dWF0aW9uUmVnZXgpXHJcblxyXG4vKipcclxuICogQ2hlY2sgd2hldGhlciB0aGUgY2hhcmFjdGVyIGNvZGUgcmVwcmVzZW50cyBVbmljb2RlIHdoaXRlc3BhY2UuXHJcbiAqXHJcbiAqIE5vdGUgdGhhdCB0aGlzIGRvZXMgaGFuZGxlIG1pY3JvbWFyayBzcGVjaWZpYyBtYXJrZG93biB3aGl0ZXNwYWNlIGNoYXJhY3RlcnMuXHJcbiAqIFNlZSBgbWFya2Rvd25MaW5lRW5kaW5nT3JTcGFjZWAgdG8gY2hlY2sgdGhhdC5cclxuICpcclxuICogQSAqKlVuaWNvZGUgd2hpdGVzcGFjZSoqIGlzIGEgY2hhcmFjdGVyIGluIHRoZSBVbmljb2RlIGBac2AgKFNlcGFyYXRvcixcclxuICogU3BhY2UpIGNhdGVnb3J5LCBvciBVKzAwMDkgQ0hBUkFDVEVSIFRBQlVMQVRJT04gKEhUKSwgVSswMDBBIExJTkUgRkVFRCAoTEYpLFxyXG4gKiBVKzAwMEMgKEZGKSwgb3IgVSswMDBEIENBUlJJQUdFIFJFVFVSTiAoQ1IpICgqKlxcW1VOSUNPREVdKiopLlxyXG4gKlxyXG4gKiBTZWU6XHJcbiAqICoqXFxbVU5JQ09ERV0qKjpcclxuICogW1RoZSBVbmljb2RlIFN0YW5kYXJkXShodHRwczovL3d3dy51bmljb2RlLm9yZy92ZXJzaW9ucy8pLlxyXG4gKiBVbmljb2RlIENvbnNvcnRpdW0uXHJcbiAqXHJcbiAqIEBwYXJhbSBjb2RlXHJcbiAqICAgQ29kZS5cclxuICogQHJldHVybnNcclxuICogICBXaGV0aGVyIGl0IG1hdGNoZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgdW5pY29kZVdoaXRlc3BhY2UgPSByZWdleENoZWNrKC9cXHMvKVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIGNvZGUgY2hlY2sgZnJvbSBhIHJlZ2V4LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlZ0V4cH0gcmVnZXhcclxuICogQHJldHVybnMgeyhjb2RlOiBDb2RlKSA9PiBib29sZWFufVxyXG4gKi9cclxuZnVuY3Rpb24gcmVnZXhDaGVjayhyZWdleCkge1xyXG4gIHJldHVybiBjaGVja1xyXG5cclxuICAvKipcclxuICAgKiBDaGVjayB3aGV0aGVyIGEgY29kZSBtYXRjaGVzIHRoZSBib3VuZCByZWdleC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Q29kZX0gY29kZVxyXG4gICAqICAgQ2hhcmFjdGVyIGNvZGUuXHJcbiAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICogICBXaGV0aGVyIHRoZSBjaGFyYWN0ZXIgY29kZSBtYXRjaGVzIHRoZSBib3VuZCByZWdleC5cclxuICAgKi9cclxuICBmdW5jdGlvbiBjaGVjayhjb2RlKSB7XHJcbiAgICByZXR1cm4gY29kZSAhPT0gbnVsbCAmJiByZWdleC50ZXN0KFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSkpXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-character/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js":
/*!************************************************************************************!*\
  !*** ./node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unicodePunctuationRegex\": function() { return /* binding */ unicodePunctuationRegex; }\n/* harmony export */ });\n// This module is generated by `script/`.\r\n//\r\n// CommonMark handles attention (emphasis, strong) markers based on what comes\r\n// before or after them.\r\n// One such difference is if those characters are Unicode punctuation.\r\n// This script is generated from the Unicode data.\r\n\r\n/**\r\n * Regular expression that matches a unicode punctuation character.\r\n */\r\nconst unicodePunctuationRegex =\r\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyL2Rldi9saWIvdW5pY29kZS1wdW5jdHVhdGlvbi1yZWdleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay11dGlsLWNoYXJhY3Rlci9kZXYvbGliL3VuaWNvZGUtcHVuY3R1YXRpb24tcmVnZXguanM/NTQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIG1vZHVsZSBpcyBnZW5lcmF0ZWQgYnkgYHNjcmlwdC9gLlxyXG4vL1xyXG4vLyBDb21tb25NYXJrIGhhbmRsZXMgYXR0ZW50aW9uIChlbXBoYXNpcywgc3Ryb25nKSBtYXJrZXJzIGJhc2VkIG9uIHdoYXQgY29tZXNcclxuLy8gYmVmb3JlIG9yIGFmdGVyIHRoZW0uXHJcbi8vIE9uZSBzdWNoIGRpZmZlcmVuY2UgaXMgaWYgdGhvc2UgY2hhcmFjdGVycyBhcmUgVW5pY29kZSBwdW5jdHVhdGlvbi5cclxuLy8gVGhpcyBzY3JpcHQgaXMgZ2VuZXJhdGVkIGZyb20gdGhlIFVuaWNvZGUgZGF0YS5cclxuXHJcbi8qKlxyXG4gKiBSZWd1bGFyIGV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGEgdW5pY29kZSBwdW5jdHVhdGlvbiBjaGFyYWN0ZXIuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgdW5pY29kZVB1bmN0dWF0aW9uUmVnZXggPVxyXG4gIC9bIS0vOi1AWy1gey1+XFx1MDBBMVxcdTAwQTdcXHUwMEFCXFx1MDBCNlxcdTAwQjdcXHUwMEJCXFx1MDBCRlxcdTAzN0VcXHUwMzg3XFx1MDU1QS1cXHUwNTVGXFx1MDU4OVxcdTA1OEFcXHUwNUJFXFx1MDVDMFxcdTA1QzNcXHUwNUM2XFx1MDVGM1xcdTA1RjRcXHUwNjA5XFx1MDYwQVxcdTA2MENcXHUwNjBEXFx1MDYxQlxcdTA2MUQtXFx1MDYxRlxcdTA2NkEtXFx1MDY2RFxcdTA2RDRcXHUwNzAwLVxcdTA3MERcXHUwN0Y3LVxcdTA3RjlcXHUwODMwLVxcdTA4M0VcXHUwODVFXFx1MDk2NFxcdTA5NjVcXHUwOTcwXFx1MDlGRFxcdTBBNzZcXHUwQUYwXFx1MEM3N1xcdTBDODRcXHUwREY0XFx1MEU0RlxcdTBFNUFcXHUwRTVCXFx1MEYwNC1cXHUwRjEyXFx1MEYxNFxcdTBGM0EtXFx1MEYzRFxcdTBGODVcXHUwRkQwLVxcdTBGRDRcXHUwRkQ5XFx1MEZEQVxcdTEwNEEtXFx1MTA0RlxcdTEwRkJcXHUxMzYwLVxcdTEzNjhcXHUxNDAwXFx1MTY2RVxcdTE2OUJcXHUxNjlDXFx1MTZFQi1cXHUxNkVEXFx1MTczNVxcdTE3MzZcXHUxN0Q0LVxcdTE3RDZcXHUxN0Q4LVxcdTE3REFcXHUxODAwLVxcdTE4MEFcXHUxOTQ0XFx1MTk0NVxcdTFBMUVcXHUxQTFGXFx1MUFBMC1cXHUxQUE2XFx1MUFBOC1cXHUxQUFEXFx1MUI1QS1cXHUxQjYwXFx1MUI3RFxcdTFCN0VcXHUxQkZDLVxcdTFCRkZcXHUxQzNCLVxcdTFDM0ZcXHUxQzdFXFx1MUM3RlxcdTFDQzAtXFx1MUNDN1xcdTFDRDNcXHUyMDEwLVxcdTIwMjdcXHUyMDMwLVxcdTIwNDNcXHUyMDQ1LVxcdTIwNTFcXHUyMDUzLVxcdTIwNUVcXHUyMDdEXFx1MjA3RVxcdTIwOERcXHUyMDhFXFx1MjMwOC1cXHUyMzBCXFx1MjMyOVxcdTIzMkFcXHUyNzY4LVxcdTI3NzVcXHUyN0M1XFx1MjdDNlxcdTI3RTYtXFx1MjdFRlxcdTI5ODMtXFx1Mjk5OFxcdTI5RDgtXFx1MjlEQlxcdTI5RkNcXHUyOUZEXFx1MkNGOS1cXHUyQ0ZDXFx1MkNGRVxcdTJDRkZcXHUyRDcwXFx1MkUwMC1cXHUyRTJFXFx1MkUzMC1cXHUyRTRGXFx1MkU1Mi1cXHUyRTVEXFx1MzAwMS1cXHUzMDAzXFx1MzAwOC1cXHUzMDExXFx1MzAxNC1cXHUzMDFGXFx1MzAzMFxcdTMwM0RcXHUzMEEwXFx1MzBGQlxcdUE0RkVcXHVBNEZGXFx1QTYwRC1cXHVBNjBGXFx1QTY3M1xcdUE2N0VcXHVBNkYyLVxcdUE2RjdcXHVBODc0LVxcdUE4NzdcXHVBOENFXFx1QThDRlxcdUE4RjgtXFx1QThGQVxcdUE4RkNcXHVBOTJFXFx1QTkyRlxcdUE5NUZcXHVBOUMxLVxcdUE5Q0RcXHVBOURFXFx1QTlERlxcdUFBNUMtXFx1QUE1RlxcdUFBREVcXHVBQURGXFx1QUFGMFxcdUFBRjFcXHVBQkVCXFx1RkQzRVxcdUZEM0ZcXHVGRTEwLVxcdUZFMTlcXHVGRTMwLVxcdUZFNTJcXHVGRTU0LVxcdUZFNjFcXHVGRTYzXFx1RkU2OFxcdUZFNkFcXHVGRTZCXFx1RkYwMS1cXHVGRjAzXFx1RkYwNS1cXHVGRjBBXFx1RkYwQy1cXHVGRjBGXFx1RkYxQVxcdUZGMUJcXHVGRjFGXFx1RkYyMFxcdUZGM0ItXFx1RkYzRFxcdUZGM0ZcXHVGRjVCXFx1RkY1RFxcdUZGNUYtXFx1RkY2NV0vXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-chunked/dev/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/micromark-util-chunked/dev/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"push\": function() { return /* binding */ push; },\n/* harmony export */   \"splice\": function() { return /* binding */ splice; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n\r\n\r\n/**\r\n * Like `Array#splice`, but smarter for giant arrays.\r\n *\r\n * `Array#splice` takes all items to be inserted as individual argument which\r\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\r\n *\r\n * Otherwise, this does not return the removed items, and takes `items` as an\r\n * array instead of rest parameters.\r\n *\r\n * @template {unknown} T\r\n *   Item type.\r\n * @param {Array<T>} list\r\n *   List to operate on.\r\n * @param {number} start\r\n *   Index to remove/insert at (can be negative).\r\n * @param {number} remove\r\n *   Number of items to remove.\r\n * @param {Array<T>} items\r\n *   Items to inject into `list`.\r\n * @returns {void}\r\n *   Nothing.\r\n */\r\nfunction splice(list, start, remove, items) {\r\n  const end = list.length\r\n  let chunkStart = 0\r\n  /** @type {Array<unknown>} */\r\n  let parameters\r\n\r\n  // Make start between zero and `end` (included).\r\n  if (start < 0) {\r\n    start = -start > end ? 0 : end + start\r\n  } else {\r\n    start = start > end ? end : start\r\n  }\r\n\r\n  remove = remove > 0 ? remove : 0\r\n\r\n  // No need to chunk the items if there’s only a couple (10k) items.\r\n  if (items.length < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_0__.constants.v8MaxSafeChunkSize) {\r\n    parameters = Array.from(items)\r\n    parameters.unshift(start, remove)\r\n    // @ts-expect-error Hush, it’s fine.\r\n    list.splice(...parameters)\r\n  } else {\r\n    // Delete `remove` items starting from `start`\r\n    if (remove) list.splice(start, remove)\r\n\r\n    // Insert the items in chunks to not cause stack overflows.\r\n    while (chunkStart < items.length) {\r\n      parameters = items.slice(\r\n        chunkStart,\r\n        chunkStart + micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_0__.constants.v8MaxSafeChunkSize\r\n      )\r\n      parameters.unshift(start, 0)\r\n      // @ts-expect-error Hush, it’s fine.\r\n      list.splice(...parameters)\r\n\r\n      chunkStart += micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_0__.constants.v8MaxSafeChunkSize\r\n      start += micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_0__.constants.v8MaxSafeChunkSize\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Append `items` (an array) at the end of `list` (another array).\r\n * When `list` was empty, returns `items` instead.\r\n *\r\n * This prevents a potentially expensive operation when `list` is empty,\r\n * and adds items in batches to prevent V8 from hanging.\r\n *\r\n * @template {unknown} T\r\n *   Item type.\r\n * @param {Array<T>} list\r\n *   List to operate on.\r\n * @param {Array<T>} items\r\n *   Items to add to `list`.\r\n * @returns {Array<T>}\r\n *   Either `list` or `items`.\r\n */\r\nfunction push(list, items) {\r\n  if (list.length > 0) {\r\n    splice(list, list.length, 0, items)\r\n    return list\r\n  }\r\n\r\n  return items\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY2h1bmtlZC9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0RkFBNEI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNEZBQTRCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEZBQTRCO0FBQ2hELGVBQWUsNEZBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay11dGlsLWNodW5rZWQvZGV2L2luZGV4LmpzP2VmMWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXHJcblxyXG4vKipcclxuICogTGlrZSBgQXJyYXkjc3BsaWNlYCwgYnV0IHNtYXJ0ZXIgZm9yIGdpYW50IGFycmF5cy5cclxuICpcclxuICogYEFycmF5I3NwbGljZWAgdGFrZXMgYWxsIGl0ZW1zIHRvIGJlIGluc2VydGVkIGFzIGluZGl2aWR1YWwgYXJndW1lbnQgd2hpY2hcclxuICogY2F1c2VzIGEgc3RhY2sgb3ZlcmZsb3cgaW4gVjggd2hlbiB0cnlpbmcgdG8gaW5zZXJ0IDEwMGsgaXRlbXMgZm9yIGluc3RhbmNlLlxyXG4gKlxyXG4gKiBPdGhlcndpc2UsIHRoaXMgZG9lcyBub3QgcmV0dXJuIHRoZSByZW1vdmVkIGl0ZW1zLCBhbmQgdGFrZXMgYGl0ZW1zYCBhcyBhblxyXG4gKiBhcnJheSBpbnN0ZWFkIG9mIHJlc3QgcGFyYW1ldGVycy5cclxuICpcclxuICogQHRlbXBsYXRlIHt1bmtub3dufSBUXHJcbiAqICAgSXRlbSB0eXBlLlxyXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBsaXN0XHJcbiAqICAgTGlzdCB0byBvcGVyYXRlIG9uLlxyXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhcnRcclxuICogICBJbmRleCB0byByZW1vdmUvaW5zZXJ0IGF0IChjYW4gYmUgbmVnYXRpdmUpLlxyXG4gKiBAcGFyYW0ge251bWJlcn0gcmVtb3ZlXHJcbiAqICAgTnVtYmVyIG9mIGl0ZW1zIHRvIHJlbW92ZS5cclxuICogQHBhcmFtIHtBcnJheTxUPn0gaXRlbXNcclxuICogICBJdGVtcyB0byBpbmplY3QgaW50byBgbGlzdGAuXHJcbiAqIEByZXR1cm5zIHt2b2lkfVxyXG4gKiAgIE5vdGhpbmcuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc3BsaWNlKGxpc3QsIHN0YXJ0LCByZW1vdmUsIGl0ZW1zKSB7XHJcbiAgY29uc3QgZW5kID0gbGlzdC5sZW5ndGhcclxuICBsZXQgY2h1bmtTdGFydCA9IDBcclxuICAvKiogQHR5cGUge0FycmF5PHVua25vd24+fSAqL1xyXG4gIGxldCBwYXJhbWV0ZXJzXHJcblxyXG4gIC8vIE1ha2Ugc3RhcnQgYmV0d2VlbiB6ZXJvIGFuZCBgZW5kYCAoaW5jbHVkZWQpLlxyXG4gIGlmIChzdGFydCA8IDApIHtcclxuICAgIHN0YXJ0ID0gLXN0YXJ0ID4gZW5kID8gMCA6IGVuZCArIHN0YXJ0XHJcbiAgfSBlbHNlIHtcclxuICAgIHN0YXJ0ID0gc3RhcnQgPiBlbmQgPyBlbmQgOiBzdGFydFxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlID0gcmVtb3ZlID4gMCA/IHJlbW92ZSA6IDBcclxuXHJcbiAgLy8gTm8gbmVlZCB0byBjaHVuayB0aGUgaXRlbXMgaWYgdGhlcmXigJlzIG9ubHkgYSBjb3VwbGUgKDEwaykgaXRlbXMuXHJcbiAgaWYgKGl0ZW1zLmxlbmd0aCA8IGNvbnN0YW50cy52OE1heFNhZmVDaHVua1NpemUpIHtcclxuICAgIHBhcmFtZXRlcnMgPSBBcnJheS5mcm9tKGl0ZW1zKVxyXG4gICAgcGFyYW1ldGVycy51bnNoaWZ0KHN0YXJ0LCByZW1vdmUpXHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIEh1c2gsIGl04oCZcyBmaW5lLlxyXG4gICAgbGlzdC5zcGxpY2UoLi4ucGFyYW1ldGVycylcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gRGVsZXRlIGByZW1vdmVgIGl0ZW1zIHN0YXJ0aW5nIGZyb20gYHN0YXJ0YFxyXG4gICAgaWYgKHJlbW92ZSkgbGlzdC5zcGxpY2Uoc3RhcnQsIHJlbW92ZSlcclxuXHJcbiAgICAvLyBJbnNlcnQgdGhlIGl0ZW1zIGluIGNodW5rcyB0byBub3QgY2F1c2Ugc3RhY2sgb3ZlcmZsb3dzLlxyXG4gICAgd2hpbGUgKGNodW5rU3RhcnQgPCBpdGVtcy5sZW5ndGgpIHtcclxuICAgICAgcGFyYW1ldGVycyA9IGl0ZW1zLnNsaWNlKFxyXG4gICAgICAgIGNodW5rU3RhcnQsXHJcbiAgICAgICAgY2h1bmtTdGFydCArIGNvbnN0YW50cy52OE1heFNhZmVDaHVua1NpemVcclxuICAgICAgKVxyXG4gICAgICBwYXJhbWV0ZXJzLnVuc2hpZnQoc3RhcnQsIDApXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSHVzaCwgaXTigJlzIGZpbmUuXHJcbiAgICAgIGxpc3Quc3BsaWNlKC4uLnBhcmFtZXRlcnMpXHJcblxyXG4gICAgICBjaHVua1N0YXJ0ICs9IGNvbnN0YW50cy52OE1heFNhZmVDaHVua1NpemVcclxuICAgICAgc3RhcnQgKz0gY29uc3RhbnRzLnY4TWF4U2FmZUNodW5rU2l6ZVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEFwcGVuZCBgaXRlbXNgIChhbiBhcnJheSkgYXQgdGhlIGVuZCBvZiBgbGlzdGAgKGFub3RoZXIgYXJyYXkpLlxyXG4gKiBXaGVuIGBsaXN0YCB3YXMgZW1wdHksIHJldHVybnMgYGl0ZW1zYCBpbnN0ZWFkLlxyXG4gKlxyXG4gKiBUaGlzIHByZXZlbnRzIGEgcG90ZW50aWFsbHkgZXhwZW5zaXZlIG9wZXJhdGlvbiB3aGVuIGBsaXN0YCBpcyBlbXB0eSxcclxuICogYW5kIGFkZHMgaXRlbXMgaW4gYmF0Y2hlcyB0byBwcmV2ZW50IFY4IGZyb20gaGFuZ2luZy5cclxuICpcclxuICogQHRlbXBsYXRlIHt1bmtub3dufSBUXHJcbiAqICAgSXRlbSB0eXBlLlxyXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBsaXN0XHJcbiAqICAgTGlzdCB0byBvcGVyYXRlIG9uLlxyXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBpdGVtc1xyXG4gKiAgIEl0ZW1zIHRvIGFkZCB0byBgbGlzdGAuXHJcbiAqIEByZXR1cm5zIHtBcnJheTxUPn1cclxuICogICBFaXRoZXIgYGxpc3RgIG9yIGBpdGVtc2AuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcHVzaChsaXN0LCBpdGVtcykge1xyXG4gIGlmIChsaXN0Lmxlbmd0aCA+IDApIHtcclxuICAgIHNwbGljZShsaXN0LCBsaXN0Lmxlbmd0aCwgMCwgaXRlbXMpXHJcbiAgICByZXR1cm4gbGlzdFxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGl0ZW1zXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-chunked/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-classify-character/dev/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/micromark-util-classify-character/dev/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"classifyCharacter\": function() { return /* binding */ classifyCharacter; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Classify whether a code represents whitespace, punctuation, or something\r\n * else.\r\n *\r\n * Used for attention (emphasis, strong), whose sequences can open or close\r\n * based on the class of surrounding characters.\r\n *\r\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\r\n *   Group.\r\n */\r\nfunction classifyCharacter(code) {\r\n  if (\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof ||\r\n    (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEndingOrSpace)(code) ||\r\n    (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodeWhitespace)(code)\r\n  ) {\r\n    return micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.characterGroupWhitespace\r\n  }\r\n\r\n  if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.unicodePunctuation)(code)) {\r\n    return micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.characterGroupPunctuation\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY2xhc3NpZnktY2hhcmFjdGVyL2Rldi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxhQUFhLHFDQUFxQztBQUNsRDtBQUNBO0FBS2lDO0FBQ21CO0FBQ1E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLHFFQUFTO0FBQ3RCLElBQUksbUZBQXlCO0FBQzdCLElBQUksMkVBQWlCO0FBQ3JCO0FBQ0EsV0FBVyxrR0FBa0M7QUFDN0M7QUFDQTtBQUNBLE1BQU0sNEVBQWtCO0FBQ3hCLFdBQVcsbUdBQW1DO0FBQzlDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay11dGlsLWNsYXNzaWZ5LWNoYXJhY3Rlci9kZXYvaW5kZXguanM/ZGI5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db2RlfSBDb2RlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtcclxuICBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlLFxyXG4gIHVuaWNvZGVQdW5jdHVhdGlvbixcclxuICB1bmljb2RlV2hpdGVzcGFjZVxyXG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xyXG5pbXBvcnQge2NvbnN0YW50c30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvbnN0YW50cy5qcydcclxuXHJcbi8qKlxyXG4gKiBDbGFzc2lmeSB3aGV0aGVyIGEgY29kZSByZXByZXNlbnRzIHdoaXRlc3BhY2UsIHB1bmN0dWF0aW9uLCBvciBzb21ldGhpbmdcclxuICogZWxzZS5cclxuICpcclxuICogVXNlZCBmb3IgYXR0ZW50aW9uIChlbXBoYXNpcywgc3Ryb25nKSwgd2hvc2Ugc2VxdWVuY2VzIGNhbiBvcGVuIG9yIGNsb3NlXHJcbiAqIGJhc2VkIG9uIHRoZSBjbGFzcyBvZiBzdXJyb3VuZGluZyBjaGFyYWN0ZXJzLlxyXG4gKlxyXG4gKiA+IPCfkYkgKipOb3RlKio6IGVvZiAoYG51bGxgKSBpcyBzZWVuIGFzIHdoaXRlc3BhY2UuXHJcbiAqXHJcbiAqIEBwYXJhbSB7Q29kZX0gY29kZVxyXG4gKiAgIENvZGUuXHJcbiAqIEByZXR1cm5zIHt0eXBlb2YgY29uc3RhbnRzLmNoYXJhY3Rlckdyb3VwV2hpdGVzcGFjZSB8IHR5cGVvZiBjb25zdGFudHMuY2hhcmFjdGVyR3JvdXBQdW5jdHVhdGlvbiB8IHVuZGVmaW5lZH1cclxuICogICBHcm91cC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGFzc2lmeUNoYXJhY3Rlcihjb2RlKSB7XHJcbiAgaWYgKFxyXG4gICAgY29kZSA9PT0gY29kZXMuZW9mIHx8XHJcbiAgICBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlKGNvZGUpIHx8XHJcbiAgICB1bmljb2RlV2hpdGVzcGFjZShjb2RlKVxyXG4gICkge1xyXG4gICAgcmV0dXJuIGNvbnN0YW50cy5jaGFyYWN0ZXJHcm91cFdoaXRlc3BhY2VcclxuICB9XHJcblxyXG4gIGlmICh1bmljb2RlUHVuY3R1YXRpb24oY29kZSkpIHtcclxuICAgIHJldHVybiBjb25zdGFudHMuY2hhcmFjdGVyR3JvdXBQdW5jdHVhdGlvblxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-classify-character/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-combine-extensions/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/micromark-util-combine-extensions/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"combineExtensions\": function() { return /* binding */ combineExtensions; },\n/* harmony export */   \"combineHtmlExtensions\": function() { return /* binding */ combineHtmlExtensions; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n * @typedef {import('micromark-util-types').Handles} Handles\r\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\r\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\r\n */\r\n\r\n\r\n\r\nconst hasOwnProperty = {}.hasOwnProperty\r\n\r\n/**\r\n * Combine multiple syntax extensions into one.\r\n *\r\n * @param {Array<Extension>} extensions\r\n *   List of syntax extensions.\r\n * @returns {NormalizedExtension}\r\n *   A single combined extension.\r\n */\r\nfunction combineExtensions(extensions) {\r\n  /** @type {NormalizedExtension} */\r\n  const all = {}\r\n  let index = -1\r\n\r\n  while (++index < extensions.length) {\r\n    syntaxExtension(all, extensions[index])\r\n  }\r\n\r\n  return all\r\n}\r\n\r\n/**\r\n * Merge `extension` into `all`.\r\n *\r\n * @param {NormalizedExtension} all\r\n *   Extension to merge into.\r\n * @param {Extension} extension\r\n *   Extension to merge.\r\n * @returns {void}\r\n */\r\nfunction syntaxExtension(all, extension) {\r\n  /** @type {keyof Extension} */\r\n  let hook\r\n\r\n  for (hook in extension) {\r\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\r\n    /** @type {Record<string, unknown>} */\r\n    const left = maybe || (all[hook] = {})\r\n    /** @type {Record<string, unknown> | undefined} */\r\n    const right = extension[hook]\r\n    /** @type {string} */\r\n    let code\r\n\r\n    if (right) {\r\n      for (code in right) {\r\n        if (!hasOwnProperty.call(left, code)) left[code] = []\r\n        const value = right[code]\r\n        constructs(\r\n          // @ts-expect-error Looks like a list.\r\n          left[code],\r\n          Array.isArray(value) ? value : value ? [value] : []\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Merge `list` into `existing` (both lists of constructs).\r\n * Mutates `existing`.\r\n *\r\n * @param {Array<unknown>} existing\r\n * @param {Array<unknown>} list\r\n * @returns {void}\r\n */\r\nfunction constructs(existing, list) {\r\n  let index = -1\r\n  /** @type {Array<unknown>} */\r\n  const before = []\r\n\r\n  while (++index < list.length) {\r\n    // @ts-expect-error Looks like an object.\r\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\r\n  }\r\n\r\n  (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_0__.splice)(existing, 0, 0, before)\r\n}\r\n\r\n/**\r\n * Combine multiple HTML extensions into one.\r\n *\r\n * @param {Array<HtmlExtension>} htmlExtensions\r\n *   List of HTML extensions.\r\n * @returns {HtmlExtension}\r\n *   A single combined HTML extension.\r\n */\r\nfunction combineHtmlExtensions(htmlExtensions) {\r\n  /** @type {HtmlExtension} */\r\n  const handlers = {}\r\n  let index = -1\r\n\r\n  while (++index < htmlExtensions.length) {\r\n    htmlExtension(handlers, htmlExtensions[index])\r\n  }\r\n\r\n  return handlers\r\n}\r\n\r\n/**\r\n * Merge `extension` into `all`.\r\n *\r\n * @param {HtmlExtension} all\r\n *   Extension to merge into.\r\n * @param {HtmlExtension} extension\r\n *   Extension to merge.\r\n * @returns {void}\r\n */\r\nfunction htmlExtension(all, extension) {\r\n  /** @type {keyof HtmlExtension} */\r\n  let hook\r\n\r\n  for (hook in extension) {\r\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\r\n    const left = maybe || (all[hook] = {})\r\n    const right = extension[hook]\r\n    /** @type {keyof Handles} */\r\n    let type\r\n\r\n    if (right) {\r\n      for (type in right) {\r\n        // @ts-expect-error assume document vs regular handler are managed correctly.\r\n        left[type] = right[type]\r\n      }\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY29tYmluZS1leHRlbnNpb25zL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSx3Q0FBd0M7QUFDckQsYUFBYSw4Q0FBOEM7QUFDM0QsYUFBYSxvREFBb0Q7QUFDakU7QUFDQTtBQUM2QztBQUM3QztBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEMseUNBQXlDO0FBQ3pDLGVBQWUscUNBQXFDO0FBQ3BEO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLGdCQUFnQjtBQUMzQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEVBQUUsOERBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtY29tYmluZS1leHRlbnNpb25zL2luZGV4LmpzPzVjOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRXh0ZW5zaW9ufSBFeHRlbnNpb25cclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5IYW5kbGVzfSBIYW5kbGVzXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSHRtbEV4dGVuc2lvbn0gSHRtbEV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLk5vcm1hbGl6ZWRFeHRlbnNpb259IE5vcm1hbGl6ZWRFeHRlbnNpb25cclxuICovXHJcblxyXG5pbXBvcnQge3NwbGljZX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2h1bmtlZCdcclxuXHJcbmNvbnN0IGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHlcclxuXHJcbi8qKlxyXG4gKiBDb21iaW5lIG11bHRpcGxlIHN5bnRheCBleHRlbnNpb25zIGludG8gb25lLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PEV4dGVuc2lvbj59IGV4dGVuc2lvbnNcclxuICogICBMaXN0IG9mIHN5bnRheCBleHRlbnNpb25zLlxyXG4gKiBAcmV0dXJucyB7Tm9ybWFsaXplZEV4dGVuc2lvbn1cclxuICogICBBIHNpbmdsZSBjb21iaW5lZCBleHRlbnNpb24uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29tYmluZUV4dGVuc2lvbnMoZXh0ZW5zaW9ucykge1xyXG4gIC8qKiBAdHlwZSB7Tm9ybWFsaXplZEV4dGVuc2lvbn0gKi9cclxuICBjb25zdCBhbGwgPSB7fVxyXG4gIGxldCBpbmRleCA9IC0xXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgZXh0ZW5zaW9ucy5sZW5ndGgpIHtcclxuICAgIHN5bnRheEV4dGVuc2lvbihhbGwsIGV4dGVuc2lvbnNbaW5kZXhdKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGFsbFxyXG59XHJcblxyXG4vKipcclxuICogTWVyZ2UgYGV4dGVuc2lvbmAgaW50byBgYWxsYC5cclxuICpcclxuICogQHBhcmFtIHtOb3JtYWxpemVkRXh0ZW5zaW9ufSBhbGxcclxuICogICBFeHRlbnNpb24gdG8gbWVyZ2UgaW50by5cclxuICogQHBhcmFtIHtFeHRlbnNpb259IGV4dGVuc2lvblxyXG4gKiAgIEV4dGVuc2lvbiB0byBtZXJnZS5cclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqL1xyXG5mdW5jdGlvbiBzeW50YXhFeHRlbnNpb24oYWxsLCBleHRlbnNpb24pIHtcclxuICAvKiogQHR5cGUge2tleW9mIEV4dGVuc2lvbn0gKi9cclxuICBsZXQgaG9va1xyXG5cclxuICBmb3IgKGhvb2sgaW4gZXh0ZW5zaW9uKSB7XHJcbiAgICBjb25zdCBtYXliZSA9IGhhc093blByb3BlcnR5LmNhbGwoYWxsLCBob29rKSA/IGFsbFtob29rXSA6IHVuZGVmaW5lZFxyXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCB1bmtub3duPn0gKi9cclxuICAgIGNvbnN0IGxlZnQgPSBtYXliZSB8fCAoYWxsW2hvb2tdID0ge30pXHJcbiAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIHVua25vd24+IHwgdW5kZWZpbmVkfSAqL1xyXG4gICAgY29uc3QgcmlnaHQgPSBleHRlbnNpb25baG9va11cclxuICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqL1xyXG4gICAgbGV0IGNvZGVcclxuXHJcbiAgICBpZiAocmlnaHQpIHtcclxuICAgICAgZm9yIChjb2RlIGluIHJpZ2h0KSB7XHJcbiAgICAgICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKGxlZnQsIGNvZGUpKSBsZWZ0W2NvZGVdID0gW11cclxuICAgICAgICBjb25zdCB2YWx1ZSA9IHJpZ2h0W2NvZGVdXHJcbiAgICAgICAgY29uc3RydWN0cyhcclxuICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgTG9va3MgbGlrZSBhIGxpc3QuXHJcbiAgICAgICAgICBsZWZ0W2NvZGVdLFxyXG4gICAgICAgICAgQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IHZhbHVlID8gW3ZhbHVlXSA6IFtdXHJcbiAgICAgICAgKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogTWVyZ2UgYGxpc3RgIGludG8gYGV4aXN0aW5nYCAoYm90aCBsaXN0cyBvZiBjb25zdHJ1Y3RzKS5cclxuICogTXV0YXRlcyBgZXhpc3RpbmdgLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PHVua25vd24+fSBleGlzdGluZ1xyXG4gKiBAcGFyYW0ge0FycmF5PHVua25vd24+fSBsaXN0XHJcbiAqIEByZXR1cm5zIHt2b2lkfVxyXG4gKi9cclxuZnVuY3Rpb24gY29uc3RydWN0cyhleGlzdGluZywgbGlzdCkge1xyXG4gIGxldCBpbmRleCA9IC0xXHJcbiAgLyoqIEB0eXBlIHtBcnJheTx1bmtub3duPn0gKi9cclxuICBjb25zdCBiZWZvcmUgPSBbXVxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IGxpc3QubGVuZ3RoKSB7XHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIExvb2tzIGxpa2UgYW4gb2JqZWN0LlxyXG4gICAgOyhsaXN0W2luZGV4XS5hZGQgPT09ICdhZnRlcicgPyBleGlzdGluZyA6IGJlZm9yZSkucHVzaChsaXN0W2luZGV4XSlcclxuICB9XHJcblxyXG4gIHNwbGljZShleGlzdGluZywgMCwgMCwgYmVmb3JlKVxyXG59XHJcblxyXG4vKipcclxuICogQ29tYmluZSBtdWx0aXBsZSBIVE1MIGV4dGVuc2lvbnMgaW50byBvbmUuXHJcbiAqXHJcbiAqIEBwYXJhbSB7QXJyYXk8SHRtbEV4dGVuc2lvbj59IGh0bWxFeHRlbnNpb25zXHJcbiAqICAgTGlzdCBvZiBIVE1MIGV4dGVuc2lvbnMuXHJcbiAqIEByZXR1cm5zIHtIdG1sRXh0ZW5zaW9ufVxyXG4gKiAgIEEgc2luZ2xlIGNvbWJpbmVkIEhUTUwgZXh0ZW5zaW9uLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbWJpbmVIdG1sRXh0ZW5zaW9ucyhodG1sRXh0ZW5zaW9ucykge1xyXG4gIC8qKiBAdHlwZSB7SHRtbEV4dGVuc2lvbn0gKi9cclxuICBjb25zdCBoYW5kbGVycyA9IHt9XHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBodG1sRXh0ZW5zaW9ucy5sZW5ndGgpIHtcclxuICAgIGh0bWxFeHRlbnNpb24oaGFuZGxlcnMsIGh0bWxFeHRlbnNpb25zW2luZGV4XSlcclxuICB9XHJcblxyXG4gIHJldHVybiBoYW5kbGVyc1xyXG59XHJcblxyXG4vKipcclxuICogTWVyZ2UgYGV4dGVuc2lvbmAgaW50byBgYWxsYC5cclxuICpcclxuICogQHBhcmFtIHtIdG1sRXh0ZW5zaW9ufSBhbGxcclxuICogICBFeHRlbnNpb24gdG8gbWVyZ2UgaW50by5cclxuICogQHBhcmFtIHtIdG1sRXh0ZW5zaW9ufSBleHRlbnNpb25cclxuICogICBFeHRlbnNpb24gdG8gbWVyZ2UuXHJcbiAqIEByZXR1cm5zIHt2b2lkfVxyXG4gKi9cclxuZnVuY3Rpb24gaHRtbEV4dGVuc2lvbihhbGwsIGV4dGVuc2lvbikge1xyXG4gIC8qKiBAdHlwZSB7a2V5b2YgSHRtbEV4dGVuc2lvbn0gKi9cclxuICBsZXQgaG9va1xyXG5cclxuICBmb3IgKGhvb2sgaW4gZXh0ZW5zaW9uKSB7XHJcbiAgICBjb25zdCBtYXliZSA9IGhhc093blByb3BlcnR5LmNhbGwoYWxsLCBob29rKSA/IGFsbFtob29rXSA6IHVuZGVmaW5lZFxyXG4gICAgY29uc3QgbGVmdCA9IG1heWJlIHx8IChhbGxbaG9va10gPSB7fSlcclxuICAgIGNvbnN0IHJpZ2h0ID0gZXh0ZW5zaW9uW2hvb2tdXHJcbiAgICAvKiogQHR5cGUge2tleW9mIEhhbmRsZXN9ICovXHJcbiAgICBsZXQgdHlwZVxyXG5cclxuICAgIGlmIChyaWdodCkge1xyXG4gICAgICBmb3IgKHR5cGUgaW4gcmlnaHQpIHtcclxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGFzc3VtZSBkb2N1bWVudCB2cyByZWd1bGFyIGhhbmRsZXIgYXJlIG1hbmFnZWQgY29ycmVjdGx5LlxyXG4gICAgICAgIGxlZnRbdHlwZV0gPSByaWdodFt0eXBlXVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-combine-extensions/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeNumericCharacterReference\": function() { return /* binding */ decodeNumericCharacterReference; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/values.js */ \"./node_modules/micromark-util-symbol/values.js\");\n\r\n\r\n\r\n/**\r\n * Turn the number (in string form as either hexa- or plain decimal) coming from\r\n * a numeric character reference into a character.\r\n *\r\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\r\n * non-characters and control characters safe.\r\n *\r\n * @param {string} value\r\n *   Value to decode.\r\n * @param {number} base\r\n *   Numeric base.\r\n * @returns {string}\r\n *   Character.\r\n */\r\nfunction decodeNumericCharacterReference(value, base) {\r\n  const code = Number.parseInt(value, base)\r\n\r\n  if (\r\n    // C0 except for HT, LF, FF, CR, space.\r\n    code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ht ||\r\n    code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.vt ||\r\n    (code > micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.cr && code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space) ||\r\n    // Control character (DEL) of C0, and C1 controls.\r\n    (code > micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.tilde && code < 160) ||\r\n    // Lone high surrogates and low surrogates.\r\n    (code > 55295 && code < 57344) ||\r\n    // Noncharacters.\r\n    (code > 64975 && code < 65008) ||\r\n    /* eslint-disable no-bitwise */\r\n    (code & 65535) === 65535 ||\r\n    (code & 65535) === 65534 ||\r\n    /* eslint-enable no-bitwise */\r\n    // Out of range\r\n    code > 1114111\r\n  ) {\r\n    return micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_1__.values.replacementCharacter\r\n  }\r\n\r\n  return String.fromCharCode(code)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtZGVjb2RlLW51bWVyaWMtY2hhcmFjdGVyLXJlZmVyZW5jZS9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ0U7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0VBQVE7QUFDbkIsYUFBYSxvRUFBUTtBQUNyQixZQUFZLG9FQUFRLFdBQVcsdUVBQVc7QUFDMUM7QUFDQSxZQUFZLHVFQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdGQUEyQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtZGVjb2RlLW51bWVyaWMtY2hhcmFjdGVyLXJlZmVyZW5jZS9kZXYvaW5kZXguanM/MDVlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7dmFsdWVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdmFsdWVzLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFR1cm4gdGhlIG51bWJlciAoaW4gc3RyaW5nIGZvcm0gYXMgZWl0aGVyIGhleGEtIG9yIHBsYWluIGRlY2ltYWwpIGNvbWluZyBmcm9tXHJcbiAqIGEgbnVtZXJpYyBjaGFyYWN0ZXIgcmVmZXJlbmNlIGludG8gYSBjaGFyYWN0ZXIuXHJcbiAqXHJcbiAqIFNvcnQgb2YgbGlrZSBgU3RyaW5nLmZyb21DaGFyQ29kZShOdW1iZXIucGFyc2VJbnQodmFsdWUsIGJhc2UpKWAsIGJ1dCBtYWtlc1xyXG4gKiBub24tY2hhcmFjdGVycyBhbmQgY29udHJvbCBjaGFyYWN0ZXJzIHNhZmUuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gKiAgIFZhbHVlIHRvIGRlY29kZS5cclxuICogQHBhcmFtIHtudW1iZXJ9IGJhc2VcclxuICogICBOdW1lcmljIGJhc2UuXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqICAgQ2hhcmFjdGVyLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU51bWVyaWNDaGFyYWN0ZXJSZWZlcmVuY2UodmFsdWUsIGJhc2UpIHtcclxuICBjb25zdCBjb2RlID0gTnVtYmVyLnBhcnNlSW50KHZhbHVlLCBiYXNlKVxyXG5cclxuICBpZiAoXHJcbiAgICAvLyBDMCBleGNlcHQgZm9yIEhULCBMRiwgRkYsIENSLCBzcGFjZS5cclxuICAgIGNvZGUgPCBjb2Rlcy5odCB8fFxyXG4gICAgY29kZSA9PT0gY29kZXMudnQgfHxcclxuICAgIChjb2RlID4gY29kZXMuY3IgJiYgY29kZSA8IGNvZGVzLnNwYWNlKSB8fFxyXG4gICAgLy8gQ29udHJvbCBjaGFyYWN0ZXIgKERFTCkgb2YgQzAsIGFuZCBDMSBjb250cm9scy5cclxuICAgIChjb2RlID4gY29kZXMudGlsZGUgJiYgY29kZSA8IDE2MCkgfHxcclxuICAgIC8vIExvbmUgaGlnaCBzdXJyb2dhdGVzIGFuZCBsb3cgc3Vycm9nYXRlcy5cclxuICAgIChjb2RlID4gNTUyOTUgJiYgY29kZSA8IDU3MzQ0KSB8fFxyXG4gICAgLy8gTm9uY2hhcmFjdGVycy5cclxuICAgIChjb2RlID4gNjQ5NzUgJiYgY29kZSA8IDY1MDA4KSB8fFxyXG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xyXG4gICAgKGNvZGUgJiA2NTUzNSkgPT09IDY1NTM1IHx8XHJcbiAgICAoY29kZSAmIDY1NTM1KSA9PT0gNjU1MzQgfHxcclxuICAgIC8qIGVzbGludC1lbmFibGUgbm8tYml0d2lzZSAqL1xyXG4gICAgLy8gT3V0IG9mIHJhbmdlXHJcbiAgICBjb2RlID4gMTExNDExMVxyXG4gICkge1xyXG4gICAgcmV0dXJuIHZhbHVlcy5yZXBsYWNlbWVudENoYXJhY3RlclxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSlcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-decode-string/dev/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/micromark-util-decode-string/dev/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeString\": function() { return /* binding */ decodeString; }\n/* harmony export */ });\n/* harmony import */ var decode_named_character_reference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! decode-named-character-reference */ \"./node_modules/decode-named-character-reference/index.dom.js\");\n/* harmony import */ var micromark_util_decode_numeric_character_reference__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-decode-numeric-character-reference */ \"./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n\r\n\r\n\r\n\r\n\r\nconst characterEscapeOrReference =\r\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\r\n\r\n/**\r\n * Decode markdown strings (which occur in places such as fenced code info\r\n * strings, destinations, labels, and titles).\r\n *\r\n * The “string” content type allows character escapes and -references.\r\n * This decodes those.\r\n *\r\n * @param {string} value\r\n *   Value to decode.\r\n * @returns {string}\r\n *   Decoded value.\r\n */\r\nfunction decodeString(value) {\r\n  return value.replace(characterEscapeOrReference, decode)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @param {string} $1\r\n * @param {string} $2\r\n * @returns {string}\r\n */\r\nfunction decode($0, $1, $2) {\r\n  if ($1) {\r\n    // Escape.\r\n    return $1\r\n  }\r\n\r\n  // Reference.\r\n  const head = $2.charCodeAt(0)\r\n\r\n  if (head === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.numberSign) {\r\n    const head = $2.charCodeAt(1)\r\n    const hex = head === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lowercaseX || head === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.uppercaseX\r\n    return (0,micromark_util_decode_numeric_character_reference__WEBPACK_IMPORTED_MODULE_1__.decodeNumericCharacterReference)(\r\n      $2.slice(hex ? 2 : 1),\r\n      hex ? micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.numericBaseHexadecimal : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.numericBaseDecimal\r\n    )\r\n  }\r\n\r\n  return (0,decode_named_character_reference__WEBPACK_IMPORTED_MODULE_3__.decodeNamedCharacterReference)($2) || $0\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtZGVjb2RlLXN0cmluZy9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEU7QUFDbUI7QUFDN0M7QUFDUTtBQUM1RDtBQUNBO0FBQ0EsaUJBQWlCLGNBQWMsSUFBSSxVQUFVLElBQUksVUFBVSxLQUFLLEVBQUU7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNEVBQWdCO0FBQy9CO0FBQ0EseUJBQXlCLDRFQUFnQixhQUFhLDRFQUFnQjtBQUN0RSxXQUFXLGtIQUErQjtBQUMxQztBQUNBLFlBQVksZ0dBQWdDLEdBQUcsNEZBQTRCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLFNBQVMsK0ZBQTZCO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstdXRpbC1kZWNvZGUtc3RyaW5nL2Rldi9pbmRleC5qcz82NTg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZGVjb2RlTmFtZWRDaGFyYWN0ZXJSZWZlcmVuY2V9IGZyb20gJ2RlY29kZS1uYW1lZC1jaGFyYWN0ZXItcmVmZXJlbmNlJ1xyXG5pbXBvcnQge2RlY29kZU51bWVyaWNDaGFyYWN0ZXJSZWZlcmVuY2V9IGZyb20gJ21pY3JvbWFyay11dGlsLWRlY29kZS1udW1lcmljLWNoYXJhY3Rlci1yZWZlcmVuY2UnXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXHJcblxyXG5jb25zdCBjaGFyYWN0ZXJFc2NhcGVPclJlZmVyZW5jZSA9XHJcbiAgL1xcXFwoWyEtLzotQFstYHstfl0pfCYoIyg/OlxcZHsxLDd9fHhbXFxkYS1mXXsxLDZ9KXxbXFxkYS16XXsxLDMxfSk7L2dpXHJcblxyXG4vKipcclxuICogRGVjb2RlIG1hcmtkb3duIHN0cmluZ3MgKHdoaWNoIG9jY3VyIGluIHBsYWNlcyBzdWNoIGFzIGZlbmNlZCBjb2RlIGluZm9cclxuICogc3RyaW5ncywgZGVzdGluYXRpb25zLCBsYWJlbHMsIGFuZCB0aXRsZXMpLlxyXG4gKlxyXG4gKiBUaGUg4oCcc3RyaW5n4oCdIGNvbnRlbnQgdHlwZSBhbGxvd3MgY2hhcmFjdGVyIGVzY2FwZXMgYW5kIC1yZWZlcmVuY2VzLlxyXG4gKiBUaGlzIGRlY29kZXMgdGhvc2UuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gKiAgIFZhbHVlIHRvIGRlY29kZS5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBEZWNvZGVkIHZhbHVlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyh2YWx1ZSkge1xyXG4gIHJldHVybiB2YWx1ZS5yZXBsYWNlKGNoYXJhY3RlckVzY2FwZU9yUmVmZXJlbmNlLCBkZWNvZGUpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gJDBcclxuICogQHBhcmFtIHtzdHJpbmd9ICQxXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSAkMlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gZGVjb2RlKCQwLCAkMSwgJDIpIHtcclxuICBpZiAoJDEpIHtcclxuICAgIC8vIEVzY2FwZS5cclxuICAgIHJldHVybiAkMVxyXG4gIH1cclxuXHJcbiAgLy8gUmVmZXJlbmNlLlxyXG4gIGNvbnN0IGhlYWQgPSAkMi5jaGFyQ29kZUF0KDApXHJcblxyXG4gIGlmIChoZWFkID09PSBjb2Rlcy5udW1iZXJTaWduKSB7XHJcbiAgICBjb25zdCBoZWFkID0gJDIuY2hhckNvZGVBdCgxKVxyXG4gICAgY29uc3QgaGV4ID0gaGVhZCA9PT0gY29kZXMubG93ZXJjYXNlWCB8fCBoZWFkID09PSBjb2Rlcy51cHBlcmNhc2VYXHJcbiAgICByZXR1cm4gZGVjb2RlTnVtZXJpY0NoYXJhY3RlclJlZmVyZW5jZShcclxuICAgICAgJDIuc2xpY2UoaGV4ID8gMiA6IDEpLFxyXG4gICAgICBoZXggPyBjb25zdGFudHMubnVtZXJpY0Jhc2VIZXhhZGVjaW1hbCA6IGNvbnN0YW50cy5udW1lcmljQmFzZURlY2ltYWxcclxuICAgIClcclxuICB9XHJcblxyXG4gIHJldHVybiBkZWNvZGVOYW1lZENoYXJhY3RlclJlZmVyZW5jZSgkMikgfHwgJDBcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-decode-string/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-encode/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/micromark-util-encode/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": function() { return /* binding */ encode; }\n/* harmony export */ });\nconst characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\r\n\r\n/**\r\n * Encode only the dangerous HTML characters.\r\n *\r\n * This ensures that certain characters which have special meaning in HTML are\r\n * dealt with.\r\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\r\n *\r\n * @param {string} value\r\n *   Value to encode.\r\n * @returns {string}\r\n *   Encoded value.\r\n */\r\nfunction encode(value) {\r\n  return value.replace(/[\"&<>]/g, replace)\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @returns {string}\r\n   */\r\n  function replace(value) {\r\n    // @ts-expect-error Hush, it’s fine.\r\n    return '&' + characterReferences[value] + ';'\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtZW5jb2RlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstdXRpbC1lbmNvZGUvaW5kZXguanM/MTY2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjaGFyYWN0ZXJSZWZlcmVuY2VzID0geydcIic6ICdxdW90JywgJyYnOiAnYW1wJywgJzwnOiAnbHQnLCAnPic6ICdndCd9XHJcblxyXG4vKipcclxuICogRW5jb2RlIG9ubHkgdGhlIGRhbmdlcm91cyBIVE1MIGNoYXJhY3RlcnMuXHJcbiAqXHJcbiAqIFRoaXMgZW5zdXJlcyB0aGF0IGNlcnRhaW4gY2hhcmFjdGVycyB3aGljaCBoYXZlIHNwZWNpYWwgbWVhbmluZyBpbiBIVE1MIGFyZVxyXG4gKiBkZWFsdCB3aXRoLlxyXG4gKiBUZWNobmljYWxseSwgd2UgY2FuIHNraXAgYD5gIGFuZCBgXCJgIGluIG1hbnkgY2FzZXMsIGJ1dCBDTSBpbmNsdWRlcyB0aGVtLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICogICBWYWx1ZSB0byBlbmNvZGUuXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqICAgRW5jb2RlZCB2YWx1ZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUodmFsdWUpIHtcclxuICByZXR1cm4gdmFsdWUucmVwbGFjZSgvW1wiJjw+XS9nLCByZXBsYWNlKVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHJlcGxhY2UodmFsdWUpIHtcclxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSHVzaCwgaXTigJlzIGZpbmUuXHJcbiAgICByZXR1cm4gJyYnICsgY2hhcmFjdGVyUmVmZXJlbmNlc1t2YWx1ZV0gKyAnOydcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-encode/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-html-tag-name/index.js":
/*!************************************************************!*\
  !*** ./node_modules/micromark-util-html-tag-name/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"htmlBlockNames\": function() { return /* binding */ htmlBlockNames; },\n/* harmony export */   \"htmlRawNames\": function() { return /* binding */ htmlRawNames; }\n/* harmony export */ });\n/**\r\n * List of lowercase HTML “block” tag names.\r\n *\r\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\r\n * 6).\r\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\r\n * strictly parsed.\r\n * For tag names not in this list, a more strict algorithm (condition 7) is used\r\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\r\n *\r\n * This is copied from:\r\n * <https://spec.commonmark.org/0.30/#html-blocks>.\r\n *\r\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\r\n */\r\nconst htmlBlockNames = [\r\n  'address',\r\n  'article',\r\n  'aside',\r\n  'base',\r\n  'basefont',\r\n  'blockquote',\r\n  'body',\r\n  'caption',\r\n  'center',\r\n  'col',\r\n  'colgroup',\r\n  'dd',\r\n  'details',\r\n  'dialog',\r\n  'dir',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'footer',\r\n  'form',\r\n  'frame',\r\n  'frameset',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'head',\r\n  'header',\r\n  'hr',\r\n  'html',\r\n  'iframe',\r\n  'legend',\r\n  'li',\r\n  'link',\r\n  'main',\r\n  'menu',\r\n  'menuitem',\r\n  'nav',\r\n  'noframes',\r\n  'ol',\r\n  'optgroup',\r\n  'option',\r\n  'p',\r\n  'param',\r\n  'search',\r\n  'section',\r\n  'summary',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'title',\r\n  'tr',\r\n  'track',\r\n  'ul'\r\n]\r\n\r\n/**\r\n * List of lowercase HTML “raw” tag names.\r\n *\r\n * The list, when parsing HTML (flow), results in HTML that can include lines\r\n * without exiting, until a closing tag also in this list is found (condition\r\n * 1).\r\n *\r\n * This module is copied from:\r\n * <https://spec.commonmark.org/0.30/#html-blocks>.\r\n *\r\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\r\n */\r\nconst htmlRawNames = ['pre', 'script', 'style', 'textarea']\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtaHRtbC10YWctbmFtZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtaHRtbC10YWctbmFtZS9pbmRleC5qcz9hNzUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaXN0IG9mIGxvd2VyY2FzZSBIVE1MIOKAnGJsb2Nr4oCdIHRhZyBuYW1lcy5cclxuICpcclxuICogVGhlIGxpc3QsIHdoZW4gcGFyc2luZyBIVE1MIChmbG93KSwgcmVzdWx0cyBpbiBtb3JlIHJlbGF4ZWQgcnVsZXMgKGNvbmRpdGlvblxyXG4gKiA2KS5cclxuICogQmVjYXVzZSB0aGV5IGFyZSBrbm93biBibG9ja3MsIHRoZSBIVE1MLWxpa2Ugc3ludGF4IGRvZXNu4oCZdCBoYXZlIHRvIGJlXHJcbiAqIHN0cmljdGx5IHBhcnNlZC5cclxuICogRm9yIHRhZyBuYW1lcyBub3QgaW4gdGhpcyBsaXN0LCBhIG1vcmUgc3RyaWN0IGFsZ29yaXRobSAoY29uZGl0aW9uIDcpIGlzIHVzZWRcclxuICogdG8gZGV0ZWN0IHdoZXRoZXIgdGhlIEhUTUwtbGlrZSBzeW50YXggaXMgc2VlbiBhcyBIVE1MIChmbG93KSBvciBub3QuXHJcbiAqXHJcbiAqIFRoaXMgaXMgY29waWVkIGZyb206XHJcbiAqIDxodHRwczovL3NwZWMuY29tbW9ubWFyay5vcmcvMC4zMC8jaHRtbC1ibG9ja3M+LlxyXG4gKlxyXG4gKiA+IPCfkYkgKipOb3RlKio6IGBzZWFyY2hgIHdhcyBhZGRlZCBpbiBgQ29tbW9uTWFya0AwLjMxYC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBodG1sQmxvY2tOYW1lcyA9IFtcclxuICAnYWRkcmVzcycsXHJcbiAgJ2FydGljbGUnLFxyXG4gICdhc2lkZScsXHJcbiAgJ2Jhc2UnLFxyXG4gICdiYXNlZm9udCcsXHJcbiAgJ2Jsb2NrcXVvdGUnLFxyXG4gICdib2R5JyxcclxuICAnY2FwdGlvbicsXHJcbiAgJ2NlbnRlcicsXHJcbiAgJ2NvbCcsXHJcbiAgJ2NvbGdyb3VwJyxcclxuICAnZGQnLFxyXG4gICdkZXRhaWxzJyxcclxuICAnZGlhbG9nJyxcclxuICAnZGlyJyxcclxuICAnZGl2JyxcclxuICAnZGwnLFxyXG4gICdkdCcsXHJcbiAgJ2ZpZWxkc2V0JyxcclxuICAnZmlnY2FwdGlvbicsXHJcbiAgJ2ZpZ3VyZScsXHJcbiAgJ2Zvb3RlcicsXHJcbiAgJ2Zvcm0nLFxyXG4gICdmcmFtZScsXHJcbiAgJ2ZyYW1lc2V0JyxcclxuICAnaDEnLFxyXG4gICdoMicsXHJcbiAgJ2gzJyxcclxuICAnaDQnLFxyXG4gICdoNScsXHJcbiAgJ2g2JyxcclxuICAnaGVhZCcsXHJcbiAgJ2hlYWRlcicsXHJcbiAgJ2hyJyxcclxuICAnaHRtbCcsXHJcbiAgJ2lmcmFtZScsXHJcbiAgJ2xlZ2VuZCcsXHJcbiAgJ2xpJyxcclxuICAnbGluaycsXHJcbiAgJ21haW4nLFxyXG4gICdtZW51JyxcclxuICAnbWVudWl0ZW0nLFxyXG4gICduYXYnLFxyXG4gICdub2ZyYW1lcycsXHJcbiAgJ29sJyxcclxuICAnb3B0Z3JvdXAnLFxyXG4gICdvcHRpb24nLFxyXG4gICdwJyxcclxuICAncGFyYW0nLFxyXG4gICdzZWFyY2gnLFxyXG4gICdzZWN0aW9uJyxcclxuICAnc3VtbWFyeScsXHJcbiAgJ3RhYmxlJyxcclxuICAndGJvZHknLFxyXG4gICd0ZCcsXHJcbiAgJ3Rmb290JyxcclxuICAndGgnLFxyXG4gICd0aGVhZCcsXHJcbiAgJ3RpdGxlJyxcclxuICAndHInLFxyXG4gICd0cmFjaycsXHJcbiAgJ3VsJ1xyXG5dXHJcblxyXG4vKipcclxuICogTGlzdCBvZiBsb3dlcmNhc2UgSFRNTCDigJxyYXfigJ0gdGFnIG5hbWVzLlxyXG4gKlxyXG4gKiBUaGUgbGlzdCwgd2hlbiBwYXJzaW5nIEhUTUwgKGZsb3cpLCByZXN1bHRzIGluIEhUTUwgdGhhdCBjYW4gaW5jbHVkZSBsaW5lc1xyXG4gKiB3aXRob3V0IGV4aXRpbmcsIHVudGlsIGEgY2xvc2luZyB0YWcgYWxzbyBpbiB0aGlzIGxpc3QgaXMgZm91bmQgKGNvbmRpdGlvblxyXG4gKiAxKS5cclxuICpcclxuICogVGhpcyBtb2R1bGUgaXMgY29waWVkIGZyb206XHJcbiAqIDxodHRwczovL3NwZWMuY29tbW9ubWFyay5vcmcvMC4zMC8jaHRtbC1ibG9ja3M+LlxyXG4gKlxyXG4gKiA+IPCfkYkgKipOb3RlKio6IGB0ZXh0YXJlYWAgd2FzIGFkZGVkIGluIGBDb21tb25NYXJrQDAuMzBgLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGh0bWxSYXdOYW1lcyA9IFsncHJlJywgJ3NjcmlwdCcsICdzdHlsZScsICd0ZXh0YXJlYSddXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-html-tag-name/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-normalize-identifier/dev/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/micromark-util-normalize-identifier/dev/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalizeIdentifier\": function() { return /* binding */ normalizeIdentifier; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/values.js */ \"./node_modules/micromark-util-symbol/values.js\");\n\r\n\r\n/**\r\n * Normalize an identifier (as found in references, definitions).\r\n *\r\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\r\n *\r\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\r\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\r\n * uppercase character (U+0398 (`Θ`)).\r\n * So, to get a canonical form, we perform both lower- and uppercase.\r\n *\r\n * Using uppercase last makes sure keys will never interact with default\r\n * prototypal values (such as `constructor`): nothing in the prototype of\r\n * `Object` is uppercase.\r\n *\r\n * @param {string} value\r\n *   Identifier to normalize.\r\n * @returns {string}\r\n *   Normalized identifier.\r\n */\r\nfunction normalizeIdentifier(value) {\r\n  return (\r\n    value\r\n      // Collapse markdown whitespace.\r\n      .replace(/[\\t\\n\\r ]+/g, micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_0__.values.space)\r\n      // Trim.\r\n      .replace(/^ | $/g, '')\r\n      // Some characters are considered “uppercase”, but if their lowercase\r\n      // counterpart is uppercased will result in a different uppercase\r\n      // character.\r\n      // Hence, to get that form, we perform both lower- and uppercase.\r\n      // Upper case makes sure keys will not interact with default prototypal\r\n      // methods: no method is uppercase.\r\n      .toLowerCase()\r\n      .toUpperCase()\r\n  )\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtbm9ybWFsaXplLWlkZW50aWZpZXIvZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUVBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstdXRpbC1ub3JtYWxpemUtaWRlbnRpZmllci9kZXYvaW5kZXguanM/MzM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3ZhbHVlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3ZhbHVlcy5qcydcclxuXHJcbi8qKlxyXG4gKiBOb3JtYWxpemUgYW4gaWRlbnRpZmllciAoYXMgZm91bmQgaW4gcmVmZXJlbmNlcywgZGVmaW5pdGlvbnMpLlxyXG4gKlxyXG4gKiBDb2xsYXBzZXMgbWFya2Rvd24gd2hpdGVzcGFjZSwgdHJpbSwgYW5kIHRoZW4gbG93ZXItIGFuZCB1cHBlcmNhc2UuXHJcbiAqXHJcbiAqIFNvbWUgY2hhcmFjdGVycyBhcmUgY29uc2lkZXJlZCDigJx1cHBlcmNhc2XigJ0sIHN1Y2ggYXMgVSswM0Y0IChgz7RgKSwgYnV0IGlmIHRoZWlyXHJcbiAqIGxvd2VyY2FzZSBjb3VudGVycGFydCAoVSswM0I4IChgzrhgKSkgaXMgdXBwZXJjYXNlZCB3aWxsIHJlc3VsdCBpbiBhIGRpZmZlcmVudFxyXG4gKiB1cHBlcmNhc2UgY2hhcmFjdGVyIChVKzAzOTggKGDOmGApKS5cclxuICogU28sIHRvIGdldCBhIGNhbm9uaWNhbCBmb3JtLCB3ZSBwZXJmb3JtIGJvdGggbG93ZXItIGFuZCB1cHBlcmNhc2UuXHJcbiAqXHJcbiAqIFVzaW5nIHVwcGVyY2FzZSBsYXN0IG1ha2VzIHN1cmUga2V5cyB3aWxsIG5ldmVyIGludGVyYWN0IHdpdGggZGVmYXVsdFxyXG4gKiBwcm90b3R5cGFsIHZhbHVlcyAoc3VjaCBhcyBgY29uc3RydWN0b3JgKTogbm90aGluZyBpbiB0aGUgcHJvdG90eXBlIG9mXHJcbiAqIGBPYmplY3RgIGlzIHVwcGVyY2FzZS5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAqICAgSWRlbnRpZmllciB0byBub3JtYWxpemUuXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqICAgTm9ybWFsaXplZCBpZGVudGlmaWVyLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUlkZW50aWZpZXIodmFsdWUpIHtcclxuICByZXR1cm4gKFxyXG4gICAgdmFsdWVcclxuICAgICAgLy8gQ29sbGFwc2UgbWFya2Rvd24gd2hpdGVzcGFjZS5cclxuICAgICAgLnJlcGxhY2UoL1tcXHRcXG5cXHIgXSsvZywgdmFsdWVzLnNwYWNlKVxyXG4gICAgICAvLyBUcmltLlxyXG4gICAgICAucmVwbGFjZSgvXiB8ICQvZywgJycpXHJcbiAgICAgIC8vIFNvbWUgY2hhcmFjdGVycyBhcmUgY29uc2lkZXJlZCDigJx1cHBlcmNhc2XigJ0sIGJ1dCBpZiB0aGVpciBsb3dlcmNhc2VcclxuICAgICAgLy8gY291bnRlcnBhcnQgaXMgdXBwZXJjYXNlZCB3aWxsIHJlc3VsdCBpbiBhIGRpZmZlcmVudCB1cHBlcmNhc2VcclxuICAgICAgLy8gY2hhcmFjdGVyLlxyXG4gICAgICAvLyBIZW5jZSwgdG8gZ2V0IHRoYXQgZm9ybSwgd2UgcGVyZm9ybSBib3RoIGxvd2VyLSBhbmQgdXBwZXJjYXNlLlxyXG4gICAgICAvLyBVcHBlciBjYXNlIG1ha2VzIHN1cmUga2V5cyB3aWxsIG5vdCBpbnRlcmFjdCB3aXRoIGRlZmF1bHQgcHJvdG90eXBhbFxyXG4gICAgICAvLyBtZXRob2RzOiBubyBtZXRob2QgaXMgdXBwZXJjYXNlLlxyXG4gICAgICAudG9Mb3dlckNhc2UoKVxyXG4gICAgICAudG9VcHBlckNhc2UoKVxyXG4gIClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-normalize-identifier/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-resolve-all/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/micromark-util-resolve-all/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resolveAll\": function() { return /* binding */ resolveAll; }\n/* harmony export */ });\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n */\r\n\r\n/**\r\n * Call all `resolveAll`s.\r\n *\r\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\r\n *   List of constructs, optionally with `resolveAll`s.\r\n * @param {Array<Event>} events\r\n *   List of events.\r\n * @param {TokenizeContext} context\r\n *   Context used by `tokenize`.\r\n * @returns {Array<Event>}\r\n *   Changed events.\r\n */\r\nfunction resolveAll(constructs, events, context) {\r\n  /** @type {Array<Resolver>} */\r\n  const called = []\r\n  let index = -1\r\n\r\n  while (++index < constructs.length) {\r\n    const resolve = constructs[index].resolveAll\r\n\r\n    if (resolve && !called.includes(resolve)) {\r\n      events = resolve(events, context)\r\n      called.push(resolve)\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtcmVzb2x2ZS1hbGwvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSxnREFBZ0Q7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTyxrQ0FBa0MsR0FBRztBQUN2RDtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay11dGlsLXJlc29sdmUtYWxsL2luZGV4LmpzP2Q4NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRXZlbnR9IEV2ZW50XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuUmVzb2x2ZXJ9IFJlc29sdmVyXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICovXHJcblxyXG4vKipcclxuICogQ2FsbCBhbGwgYHJlc29sdmVBbGxgcy5cclxuICpcclxuICogQHBhcmFtIHtBcnJheTx7cmVzb2x2ZUFsbD86IFJlc29sdmVyIHwgdW5kZWZpbmVkfT59IGNvbnN0cnVjdHNcclxuICogICBMaXN0IG9mIGNvbnN0cnVjdHMsIG9wdGlvbmFsbHkgd2l0aCBgcmVzb2x2ZUFsbGBzLlxyXG4gKiBAcGFyYW0ge0FycmF5PEV2ZW50Pn0gZXZlbnRzXHJcbiAqICAgTGlzdCBvZiBldmVudHMuXHJcbiAqIEBwYXJhbSB7VG9rZW5pemVDb250ZXh0fSBjb250ZXh0XHJcbiAqICAgQ29udGV4dCB1c2VkIGJ5IGB0b2tlbml6ZWAuXHJcbiAqIEByZXR1cm5zIHtBcnJheTxFdmVudD59XHJcbiAqICAgQ2hhbmdlZCBldmVudHMuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUFsbChjb25zdHJ1Y3RzLCBldmVudHMsIGNvbnRleHQpIHtcclxuICAvKiogQHR5cGUge0FycmF5PFJlc29sdmVyPn0gKi9cclxuICBjb25zdCBjYWxsZWQgPSBbXVxyXG4gIGxldCBpbmRleCA9IC0xXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgY29uc3RydWN0cy5sZW5ndGgpIHtcclxuICAgIGNvbnN0IHJlc29sdmUgPSBjb25zdHJ1Y3RzW2luZGV4XS5yZXNvbHZlQWxsXHJcblxyXG4gICAgaWYgKHJlc29sdmUgJiYgIWNhbGxlZC5pbmNsdWRlcyhyZXNvbHZlKSkge1xyXG4gICAgICBldmVudHMgPSByZXNvbHZlKGV2ZW50cywgY29udGV4dClcclxuICAgICAgY2FsbGVkLnB1c2gocmVzb2x2ZSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBldmVudHNcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-resolve-all/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-sanitize-uri/dev/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/micromark-util-sanitize-uri/dev/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalizeUri\": function() { return /* binding */ normalizeUri; },\n/* harmony export */   \"sanitizeUri\": function() { return /* binding */ sanitizeUri; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_encode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-encode */ \"./node_modules/micromark-util-encode/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/values.js */ \"./node_modules/micromark-util-symbol/values.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Make a value safe for injection as a URL.\r\n *\r\n * This encodes unsafe characters with percent-encoding and skips already\r\n * encoded sequences (see `normalizeUri`).\r\n * Further unsafe characters are encoded as character references (see\r\n * `micromark-util-encode`).\r\n *\r\n * A regex of allowed protocols can be given, in which case the URL is\r\n * sanitized.\r\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\r\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\r\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\r\n * as a dangerous example, `javascript:`), the value is ignored.\r\n *\r\n * @param {string | undefined} url\r\n *   URI to sanitize.\r\n * @param {RegExp | null | undefined} [protocol]\r\n *   Allowed protocols.\r\n * @returns {string}\r\n *   Sanitized URI.\r\n */\r\nfunction sanitizeUri(url, protocol) {\r\n  const value = (0,micromark_util_encode__WEBPACK_IMPORTED_MODULE_0__.encode)(normalizeUri(url || ''))\r\n\r\n  if (!protocol) {\r\n    return value\r\n  }\r\n\r\n  const colon = value.indexOf(':')\r\n  const questionMark = value.indexOf('?')\r\n  const numberSign = value.indexOf('#')\r\n  const slash = value.indexOf('/')\r\n\r\n  if (\r\n    // If there is no protocol, it’s relative.\r\n    colon < 0 ||\r\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\r\n    (slash > -1 && colon > slash) ||\r\n    (questionMark > -1 && colon > questionMark) ||\r\n    (numberSign > -1 && colon > numberSign) ||\r\n    // It is a protocol, it should be allowed.\r\n    protocol.test(value.slice(0, colon))\r\n  ) {\r\n    return value\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\n/**\r\n * Normalize a URL.\r\n *\r\n * Encode unsafe characters with percent-encoding, skipping already encoded\r\n * sequences.\r\n *\r\n * @param {string} value\r\n *   URI to normalize.\r\n * @returns {string}\r\n *   Normalized URI.\r\n */\r\nfunction normalizeUri(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  let index = -1\r\n  let start = 0\r\n  let skip = 0\r\n\r\n  while (++index < value.length) {\r\n    const code = value.charCodeAt(index)\r\n    /** @type {string} */\r\n    let replace = ''\r\n\r\n    // A correct percent encoded value.\r\n    if (\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.percentSign &&\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlphanumeric)(value.charCodeAt(index + 1)) &&\r\n      (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlphanumeric)(value.charCodeAt(index + 2))\r\n    ) {\r\n      skip = 2\r\n    }\r\n    // ASCII.\r\n    else if (code < 128) {\r\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\r\n        replace = String.fromCharCode(code)\r\n      }\r\n    }\r\n    // Astral.\r\n    else if (code > 55295 && code < 57344) {\r\n      const next = value.charCodeAt(index + 1)\r\n\r\n      // A correct surrogate pair.\r\n      if (code < 56320 && next > 56319 && next < 57344) {\r\n        replace = String.fromCharCode(code, next)\r\n        skip = 1\r\n      }\r\n      // Lone surrogate.\r\n      else {\r\n        replace = micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_3__.values.replacementCharacter\r\n      }\r\n    }\r\n    // Unicode.\r\n    else {\r\n      replace = String.fromCharCode(code)\r\n    }\r\n\r\n    if (replace) {\r\n      result.push(value.slice(start, index), encodeURIComponent(replace))\r\n      start = index + skip + 1\r\n      replace = ''\r\n    }\r\n\r\n    if (skip) {\r\n      index += skip\r\n      skip = 0\r\n    }\r\n  }\r\n\r\n  return result.join('') + value.slice(start)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpL2Rldi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEQ7QUFDZDtBQUNRO0FBQ0U7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9CQUFvQjtBQUMvQjtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGdCQUFnQiw2REFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkVBQWlCO0FBQ2hDLE1BQU0sMkVBQWlCO0FBQ3ZCLE1BQU0sMkVBQWlCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3RkFBMkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmkvZGV2L2luZGV4LmpzP2Q2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHthc2NpaUFscGhhbnVtZXJpY30gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xyXG5pbXBvcnQge2VuY29kZX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtZW5jb2RlJ1xyXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXHJcbmltcG9ydCB7dmFsdWVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdmFsdWVzLmpzJ1xyXG5cclxuLyoqXHJcbiAqIE1ha2UgYSB2YWx1ZSBzYWZlIGZvciBpbmplY3Rpb24gYXMgYSBVUkwuXHJcbiAqXHJcbiAqIFRoaXMgZW5jb2RlcyB1bnNhZmUgY2hhcmFjdGVycyB3aXRoIHBlcmNlbnQtZW5jb2RpbmcgYW5kIHNraXBzIGFscmVhZHlcclxuICogZW5jb2RlZCBzZXF1ZW5jZXMgKHNlZSBgbm9ybWFsaXplVXJpYCkuXHJcbiAqIEZ1cnRoZXIgdW5zYWZlIGNoYXJhY3RlcnMgYXJlIGVuY29kZWQgYXMgY2hhcmFjdGVyIHJlZmVyZW5jZXMgKHNlZVxyXG4gKiBgbWljcm9tYXJrLXV0aWwtZW5jb2RlYCkuXHJcbiAqXHJcbiAqIEEgcmVnZXggb2YgYWxsb3dlZCBwcm90b2NvbHMgY2FuIGJlIGdpdmVuLCBpbiB3aGljaCBjYXNlIHRoZSBVUkwgaXNcclxuICogc2FuaXRpemVkLlxyXG4gKiBGb3IgZXhhbXBsZSwgYC9eKGh0dHBzP3xpcmNzP3xtYWlsdG98eG1wcCkkL2lgIGNhbiBiZSB1c2VkIGZvciBgYVtocmVmXWAsIG9yXHJcbiAqIGAvXmh0dHBzPyQvaWAgZm9yIGBpbWdbc3JjXWAgKHRoaXMgaXMgd2hhdCBgZ2l0aHViLmNvbWAgYWxsb3dzKS5cclxuICogSWYgdGhlIFVSTCBpbmNsdWRlcyBhbiB1bmtub3duIHByb3RvY29sIChvbmUgbm90IG1hdGNoZWQgYnkgYHByb3RvY29sYCwgc3VjaFxyXG4gKiBhcyBhIGRhbmdlcm91cyBleGFtcGxlLCBgamF2YXNjcmlwdDpgKSwgdGhlIHZhbHVlIGlzIGlnbm9yZWQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nIHwgdW5kZWZpbmVkfSB1cmxcclxuICogICBVUkkgdG8gc2FuaXRpemUuXHJcbiAqIEBwYXJhbSB7UmVnRXhwIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3Byb3RvY29sXVxyXG4gKiAgIEFsbG93ZWQgcHJvdG9jb2xzLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIFNhbml0aXplZCBVUkkuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2FuaXRpemVVcmkodXJsLCBwcm90b2NvbCkge1xyXG4gIGNvbnN0IHZhbHVlID0gZW5jb2RlKG5vcm1hbGl6ZVVyaSh1cmwgfHwgJycpKVxyXG5cclxuICBpZiAoIXByb3RvY29sKSB7XHJcbiAgICByZXR1cm4gdmFsdWVcclxuICB9XHJcblxyXG4gIGNvbnN0IGNvbG9uID0gdmFsdWUuaW5kZXhPZignOicpXHJcbiAgY29uc3QgcXVlc3Rpb25NYXJrID0gdmFsdWUuaW5kZXhPZignPycpXHJcbiAgY29uc3QgbnVtYmVyU2lnbiA9IHZhbHVlLmluZGV4T2YoJyMnKVxyXG4gIGNvbnN0IHNsYXNoID0gdmFsdWUuaW5kZXhPZignLycpXHJcblxyXG4gIGlmIChcclxuICAgIC8vIElmIHRoZXJlIGlzIG5vIHByb3RvY29sLCBpdOKAmXMgcmVsYXRpdmUuXHJcbiAgICBjb2xvbiA8IDAgfHxcclxuICAgIC8vIElmIHRoZSBmaXJzdCBjb2xvbiBpcyBhZnRlciBhIGA/YCwgYCNgLCBvciBgL2AsIGl04oCZcyBub3QgYSBwcm90b2NvbC5cclxuICAgIChzbGFzaCA+IC0xICYmIGNvbG9uID4gc2xhc2gpIHx8XHJcbiAgICAocXVlc3Rpb25NYXJrID4gLTEgJiYgY29sb24gPiBxdWVzdGlvbk1hcmspIHx8XHJcbiAgICAobnVtYmVyU2lnbiA+IC0xICYmIGNvbG9uID4gbnVtYmVyU2lnbikgfHxcclxuICAgIC8vIEl0IGlzIGEgcHJvdG9jb2wsIGl0IHNob3VsZCBiZSBhbGxvd2VkLlxyXG4gICAgcHJvdG9jb2wudGVzdCh2YWx1ZS5zbGljZSgwLCBjb2xvbikpXHJcbiAgKSB7XHJcbiAgICByZXR1cm4gdmFsdWVcclxuICB9XHJcblxyXG4gIHJldHVybiAnJ1xyXG59XHJcblxyXG4vKipcclxuICogTm9ybWFsaXplIGEgVVJMLlxyXG4gKlxyXG4gKiBFbmNvZGUgdW5zYWZlIGNoYXJhY3RlcnMgd2l0aCBwZXJjZW50LWVuY29kaW5nLCBza2lwcGluZyBhbHJlYWR5IGVuY29kZWRcclxuICogc2VxdWVuY2VzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICogICBVUkkgdG8gbm9ybWFsaXplLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIE5vcm1hbGl6ZWQgVVJJLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVVyaSh2YWx1ZSkge1xyXG4gIC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn0gKi9cclxuICBjb25zdCByZXN1bHQgPSBbXVxyXG4gIGxldCBpbmRleCA9IC0xXHJcbiAgbGV0IHN0YXJ0ID0gMFxyXG4gIGxldCBza2lwID0gMFxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IHZhbHVlLmxlbmd0aCkge1xyXG4gICAgY29uc3QgY29kZSA9IHZhbHVlLmNoYXJDb2RlQXQoaW5kZXgpXHJcbiAgICAvKiogQHR5cGUge3N0cmluZ30gKi9cclxuICAgIGxldCByZXBsYWNlID0gJydcclxuXHJcbiAgICAvLyBBIGNvcnJlY3QgcGVyY2VudCBlbmNvZGVkIHZhbHVlLlxyXG4gICAgaWYgKFxyXG4gICAgICBjb2RlID09PSBjb2Rlcy5wZXJjZW50U2lnbiAmJlxyXG4gICAgICBhc2NpaUFscGhhbnVtZXJpYyh2YWx1ZS5jaGFyQ29kZUF0KGluZGV4ICsgMSkpICYmXHJcbiAgICAgIGFzY2lpQWxwaGFudW1lcmljKHZhbHVlLmNoYXJDb2RlQXQoaW5kZXggKyAyKSlcclxuICAgICkge1xyXG4gICAgICBza2lwID0gMlxyXG4gICAgfVxyXG4gICAgLy8gQVNDSUkuXHJcbiAgICBlbHNlIGlmIChjb2RlIDwgMTI4KSB7XHJcbiAgICAgIGlmICghL1shIyQmLTs9Py1aX2Eten5dLy50ZXN0KFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSkpKSB7XHJcbiAgICAgICAgcmVwbGFjZSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSlcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gQXN0cmFsLlxyXG4gICAgZWxzZSBpZiAoY29kZSA+IDU1Mjk1ICYmIGNvZGUgPCA1NzM0NCkge1xyXG4gICAgICBjb25zdCBuZXh0ID0gdmFsdWUuY2hhckNvZGVBdChpbmRleCArIDEpXHJcblxyXG4gICAgICAvLyBBIGNvcnJlY3Qgc3Vycm9nYXRlIHBhaXIuXHJcbiAgICAgIGlmIChjb2RlIDwgNTYzMjAgJiYgbmV4dCA+IDU2MzE5ICYmIG5leHQgPCA1NzM0NCkge1xyXG4gICAgICAgIHJlcGxhY2UgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUsIG5leHQpXHJcbiAgICAgICAgc2tpcCA9IDFcclxuICAgICAgfVxyXG4gICAgICAvLyBMb25lIHN1cnJvZ2F0ZS5cclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgcmVwbGFjZSA9IHZhbHVlcy5yZXBsYWNlbWVudENoYXJhY3RlclxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBVbmljb2RlLlxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHJlcGxhY2UgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHJlcGxhY2UpIHtcclxuICAgICAgcmVzdWx0LnB1c2godmFsdWUuc2xpY2Uoc3RhcnQsIGluZGV4KSwgZW5jb2RlVVJJQ29tcG9uZW50KHJlcGxhY2UpKVxyXG4gICAgICBzdGFydCA9IGluZGV4ICsgc2tpcCArIDFcclxuICAgICAgcmVwbGFjZSA9ICcnXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHNraXApIHtcclxuICAgICAgaW5kZXggKz0gc2tpcFxyXG4gICAgICBza2lwID0gMFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKSArIHZhbHVlLnNsaWNlKHN0YXJ0KVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-sanitize-uri/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-subtokenize/dev/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/micromark-util-subtokenize/dev/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"subtokenize\": function() { return /* binding */ subtokenize; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Chunk} Chunk\r\n * @typedef {import('micromark-util-types').Event} Event\r\n * @typedef {import('micromark-util-types').Token} Token\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Tokenize subcontent.\r\n *\r\n * @param {Array<Event>} events\r\n *   List of events.\r\n * @returns {boolean}\r\n *   Whether subtokens were found.\r\n */\r\nfunction subtokenize(events) {\r\n  /** @type {Record<string, number>} */\r\n  const jumps = {}\r\n  let index = -1\r\n  /** @type {Event} */\r\n  let event\r\n  /** @type {number | undefined} */\r\n  let lineIndex\r\n  /** @type {number} */\r\n  let otherIndex\r\n  /** @type {Event} */\r\n  let otherEvent\r\n  /** @type {Array<Event>} */\r\n  let parameters\r\n  /** @type {Array<Event>} */\r\n  let subevents\r\n  /** @type {boolean | undefined} */\r\n  let more\r\n\r\n  while (++index < events.length) {\r\n    while (index in jumps) {\r\n      index = jumps[index]\r\n    }\r\n\r\n    event = events[index]\r\n\r\n    // Add a hook for the GFM tasklist extension, which needs to know if text\r\n    // is in the first content of a list item.\r\n    if (\r\n      index &&\r\n      event[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow &&\r\n      events[index - 1][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix\r\n    ) {\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\r\n      subevents = event[1]._tokenizer.events\r\n      otherIndex = 0\r\n\r\n      if (\r\n        otherIndex < subevents.length &&\r\n        subevents[otherIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEndingBlank\r\n      ) {\r\n        otherIndex += 2\r\n      }\r\n\r\n      if (\r\n        otherIndex < subevents.length &&\r\n        subevents[otherIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content\r\n      ) {\r\n        while (++otherIndex < subevents.length) {\r\n          if (subevents[otherIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\r\n            break\r\n          }\r\n\r\n          if (subevents[otherIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkText) {\r\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\r\n            otherIndex++\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Enter.\r\n    if (event[0] === 'enter') {\r\n      if (event[1].contentType) {\r\n        Object.assign(jumps, subcontent(events, index))\r\n        index = jumps[index]\r\n        more = true\r\n      }\r\n    }\r\n    // Exit.\r\n    else if (event[1]._container) {\r\n      otherIndex = index\r\n      lineIndex = undefined\r\n\r\n      while (otherIndex--) {\r\n        otherEvent = events[otherIndex]\r\n\r\n        if (\r\n          otherEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding ||\r\n          otherEvent[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEndingBlank\r\n        ) {\r\n          if (otherEvent[0] === 'enter') {\r\n            if (lineIndex) {\r\n              events[lineIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEndingBlank\r\n            }\r\n\r\n            otherEvent[1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding\r\n            lineIndex = otherIndex\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      if (lineIndex) {\r\n        // Fix position.\r\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\r\n\r\n        // Switch container exit w/ line endings.\r\n        parameters = events.slice(lineIndex, index)\r\n        parameters.unshift(event)\r\n        ;(0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, lineIndex, index - lineIndex + 1, parameters)\r\n      }\r\n    }\r\n  }\r\n\r\n  return !more\r\n}\r\n\r\n/**\r\n * Tokenize embedded tokens.\r\n *\r\n * @param {Array<Event>} events\r\n * @param {number} eventIndex\r\n * @returns {Record<string, number>}\r\n */\r\nfunction subcontent(events, eventIndex) {\r\n  const token = events[eventIndex][1]\r\n  const context = events[eventIndex][2]\r\n  let startPosition = eventIndex - 1\r\n  /** @type {Array<number>} */\r\n  const startPositions = []\r\n  ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(token.contentType, 'expected `contentType` on subtokens')\r\n  const tokenizer =\r\n    token._tokenizer || context.parser[token.contentType](token.start)\r\n  const childEvents = tokenizer.events\r\n  /** @type {Array<[number, number]>} */\r\n  const jumps = []\r\n  /** @type {Record<string, number>} */\r\n  const gaps = {}\r\n  /** @type {Array<Chunk>} */\r\n  let stream\r\n  /** @type {Token | undefined} */\r\n  let previous\r\n  let index = -1\r\n  /** @type {Token | undefined} */\r\n  let current = token\r\n  let adjust = 0\r\n  let start = 0\r\n  const breaks = [start]\r\n\r\n  // Loop forward through the linked tokens to pass them in order to the\r\n  // subtokenizer.\r\n  while (current) {\r\n    // Find the position of the event for this token.\r\n    while (events[++startPosition][1] !== current) {\r\n      // Empty.\r\n    }\r\n\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      !previous || current.previous === previous,\r\n      'expected previous to match'\r\n    )\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(!previous || previous.next === current, 'expected next to match')\r\n\r\n    startPositions.push(startPosition)\r\n\r\n    if (!current._tokenizer) {\r\n      stream = context.sliceStream(current)\r\n\r\n      if (!current.next) {\r\n        stream.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof)\r\n      }\r\n\r\n      if (previous) {\r\n        tokenizer.defineSkip(current.start)\r\n      }\r\n\r\n      if (current._isInFirstContentOfListItem) {\r\n        tokenizer._gfmTasklistFirstContentOfListItem = true\r\n      }\r\n\r\n      tokenizer.write(stream)\r\n\r\n      if (current._isInFirstContentOfListItem) {\r\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\r\n      }\r\n    }\r\n\r\n    // Unravel the next token.\r\n    previous = current\r\n    current = current.next\r\n  }\r\n\r\n  // Now, loop back through all events (and linked tokens), to figure out which\r\n  // parts belong where.\r\n  current = token\r\n\r\n  while (++index < childEvents.length) {\r\n    if (\r\n      // Find a void token that includes a break.\r\n      childEvents[index][0] === 'exit' &&\r\n      childEvents[index - 1][0] === 'enter' &&\r\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\r\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\r\n    ) {\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(current, 'expected a current token')\r\n      start = index + 1\r\n      breaks.push(start)\r\n      // Help GC.\r\n      current._tokenizer = undefined\r\n      current.previous = undefined\r\n      current = current.next\r\n    }\r\n  }\r\n\r\n  // Help GC.\r\n  tokenizer.events = []\r\n\r\n  // If there’s one more token (which is the cases for lines that end in an\r\n  // EOF), that’s perfect: the last point we found starts it.\r\n  // If there isn’t then make sure any remaining content is added to it.\r\n  if (current) {\r\n    // Help GC.\r\n    current._tokenizer = undefined\r\n    current.previous = undefined\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(!current.next, 'expected no next token')\r\n  } else {\r\n    breaks.pop()\r\n  }\r\n\r\n  // Now splice the events from the subtokenizer into the current events,\r\n  // moving back to front so that splice indices aren’t affected.\r\n  index = breaks.length\r\n\r\n  while (index--) {\r\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\r\n    const start = startPositions.pop()\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(start !== undefined, 'expected a start position when splicing')\r\n    jumps.unshift([start, start + slice.length - 1])\r\n    ;(0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, start, 2, slice)\r\n  }\r\n\r\n  index = -1\r\n\r\n  while (++index < jumps.length) {\r\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\r\n    adjust += jumps[index][1] - jumps[index][0] - 1\r\n  }\r\n\r\n  return gaps\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-subtokenize/dev/index.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-symbol/codes.js":
/*!*****************************************************!*\
  !*** ./node_modules/micromark-util-symbol/codes.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"codes\": function() { return /* binding */ codes; }\n/* harmony export */ });\n/**\r\n * Character codes.\r\n *\r\n * This module is compiled away!\r\n *\r\n * micromark works based on character codes.\r\n * This module contains constants for the ASCII block and the replacement\r\n * character.\r\n * A couple of them are handled in a special way, such as the line endings\r\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\r\n * tab) and its expansion based on what column it’s at (virtual space),\r\n * and the end-of-file (eof) character.\r\n * As values are preprocessed before handling them, the actual characters LF,\r\n * CR, HT, and NUL (which is present as the replacement character), are\r\n * guaranteed to not exist.\r\n *\r\n * Unicode basic latin block.\r\n */\r\nconst codes = /** @type {const} */ ({\r\n  carriageReturn: -5,\r\n  lineFeed: -4,\r\n  carriageReturnLineFeed: -3,\r\n  horizontalTab: -2,\r\n  virtualSpace: -1,\r\n  eof: null,\r\n  nul: 0,\r\n  soh: 1,\r\n  stx: 2,\r\n  etx: 3,\r\n  eot: 4,\r\n  enq: 5,\r\n  ack: 6,\r\n  bel: 7,\r\n  bs: 8,\r\n  ht: 9, // `\\t`\r\n  lf: 10, // `\\n`\r\n  vt: 11, // `\\v`\r\n  ff: 12, // `\\f`\r\n  cr: 13, // `\\r`\r\n  so: 14,\r\n  si: 15,\r\n  dle: 16,\r\n  dc1: 17,\r\n  dc2: 18,\r\n  dc3: 19,\r\n  dc4: 20,\r\n  nak: 21,\r\n  syn: 22,\r\n  etb: 23,\r\n  can: 24,\r\n  em: 25,\r\n  sub: 26,\r\n  esc: 27,\r\n  fs: 28,\r\n  gs: 29,\r\n  rs: 30,\r\n  us: 31,\r\n  space: 32,\r\n  exclamationMark: 33, // `!`\r\n  quotationMark: 34, // `\"`\r\n  numberSign: 35, // `#`\r\n  dollarSign: 36, // `$`\r\n  percentSign: 37, // `%`\r\n  ampersand: 38, // `&`\r\n  apostrophe: 39, // `'`\r\n  leftParenthesis: 40, // `(`\r\n  rightParenthesis: 41, // `)`\r\n  asterisk: 42, // `*`\r\n  plusSign: 43, // `+`\r\n  comma: 44, // `,`\r\n  dash: 45, // `-`\r\n  dot: 46, // `.`\r\n  slash: 47, // `/`\r\n  digit0: 48, // `0`\r\n  digit1: 49, // `1`\r\n  digit2: 50, // `2`\r\n  digit3: 51, // `3`\r\n  digit4: 52, // `4`\r\n  digit5: 53, // `5`\r\n  digit6: 54, // `6`\r\n  digit7: 55, // `7`\r\n  digit8: 56, // `8`\r\n  digit9: 57, // `9`\r\n  colon: 58, // `:`\r\n  semicolon: 59, // `;`\r\n  lessThan: 60, // `<`\r\n  equalsTo: 61, // `=`\r\n  greaterThan: 62, // `>`\r\n  questionMark: 63, // `?`\r\n  atSign: 64, // `@`\r\n  uppercaseA: 65, // `A`\r\n  uppercaseB: 66, // `B`\r\n  uppercaseC: 67, // `C`\r\n  uppercaseD: 68, // `D`\r\n  uppercaseE: 69, // `E`\r\n  uppercaseF: 70, // `F`\r\n  uppercaseG: 71, // `G`\r\n  uppercaseH: 72, // `H`\r\n  uppercaseI: 73, // `I`\r\n  uppercaseJ: 74, // `J`\r\n  uppercaseK: 75, // `K`\r\n  uppercaseL: 76, // `L`\r\n  uppercaseM: 77, // `M`\r\n  uppercaseN: 78, // `N`\r\n  uppercaseO: 79, // `O`\r\n  uppercaseP: 80, // `P`\r\n  uppercaseQ: 81, // `Q`\r\n  uppercaseR: 82, // `R`\r\n  uppercaseS: 83, // `S`\r\n  uppercaseT: 84, // `T`\r\n  uppercaseU: 85, // `U`\r\n  uppercaseV: 86, // `V`\r\n  uppercaseW: 87, // `W`\r\n  uppercaseX: 88, // `X`\r\n  uppercaseY: 89, // `Y`\r\n  uppercaseZ: 90, // `Z`\r\n  leftSquareBracket: 91, // `[`\r\n  backslash: 92, // `\\`\r\n  rightSquareBracket: 93, // `]`\r\n  caret: 94, // `^`\r\n  underscore: 95, // `_`\r\n  graveAccent: 96, // `` ` ``\r\n  lowercaseA: 97, // `a`\r\n  lowercaseB: 98, // `b`\r\n  lowercaseC: 99, // `c`\r\n  lowercaseD: 100, // `d`\r\n  lowercaseE: 101, // `e`\r\n  lowercaseF: 102, // `f`\r\n  lowercaseG: 103, // `g`\r\n  lowercaseH: 104, // `h`\r\n  lowercaseI: 105, // `i`\r\n  lowercaseJ: 106, // `j`\r\n  lowercaseK: 107, // `k`\r\n  lowercaseL: 108, // `l`\r\n  lowercaseM: 109, // `m`\r\n  lowercaseN: 110, // `n`\r\n  lowercaseO: 111, // `o`\r\n  lowercaseP: 112, // `p`\r\n  lowercaseQ: 113, // `q`\r\n  lowercaseR: 114, // `r`\r\n  lowercaseS: 115, // `s`\r\n  lowercaseT: 116, // `t`\r\n  lowercaseU: 117, // `u`\r\n  lowercaseV: 118, // `v`\r\n  lowercaseW: 119, // `w`\r\n  lowercaseX: 120, // `x`\r\n  lowercaseY: 121, // `y`\r\n  lowercaseZ: 122, // `z`\r\n  leftCurlyBrace: 123, // `{`\r\n  verticalBar: 124, // `|`\r\n  rightCurlyBrace: 125, // `}`\r\n  tilde: 126, // `~`\r\n  del: 127,\r\n  // Unicode Specials block.\r\n  byteOrderMarker: 65279,\r\n  // Unicode Specials block.\r\n  replacementCharacter: 65533 // `�`\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIsT0FBTztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanM/Y2NlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ2hhcmFjdGVyIGNvZGVzLlxyXG4gKlxyXG4gKiBUaGlzIG1vZHVsZSBpcyBjb21waWxlZCBhd2F5IVxyXG4gKlxyXG4gKiBtaWNyb21hcmsgd29ya3MgYmFzZWQgb24gY2hhcmFjdGVyIGNvZGVzLlxyXG4gKiBUaGlzIG1vZHVsZSBjb250YWlucyBjb25zdGFudHMgZm9yIHRoZSBBU0NJSSBibG9jayBhbmQgdGhlIHJlcGxhY2VtZW50XHJcbiAqIGNoYXJhY3Rlci5cclxuICogQSBjb3VwbGUgb2YgdGhlbSBhcmUgaGFuZGxlZCBpbiBhIHNwZWNpYWwgd2F5LCBzdWNoIGFzIHRoZSBsaW5lIGVuZGluZ3NcclxuICogKENSLCBMRiwgYW5kIENSK0xGLCBjb21tb25seSBrbm93biBhcyBlbmQtb2YtbGluZTogRU9McyksIHRoZSB0YWIgKGhvcml6b250YWxcclxuICogdGFiKSBhbmQgaXRzIGV4cGFuc2lvbiBiYXNlZCBvbiB3aGF0IGNvbHVtbiBpdOKAmXMgYXQgKHZpcnR1YWwgc3BhY2UpLFxyXG4gKiBhbmQgdGhlIGVuZC1vZi1maWxlIChlb2YpIGNoYXJhY3Rlci5cclxuICogQXMgdmFsdWVzIGFyZSBwcmVwcm9jZXNzZWQgYmVmb3JlIGhhbmRsaW5nIHRoZW0sIHRoZSBhY3R1YWwgY2hhcmFjdGVycyBMRixcclxuICogQ1IsIEhULCBhbmQgTlVMICh3aGljaCBpcyBwcmVzZW50IGFzIHRoZSByZXBsYWNlbWVudCBjaGFyYWN0ZXIpLCBhcmVcclxuICogZ3VhcmFudGVlZCB0byBub3QgZXhpc3QuXHJcbiAqXHJcbiAqIFVuaWNvZGUgYmFzaWMgbGF0aW4gYmxvY2suXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY29kZXMgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoe1xyXG4gIGNhcnJpYWdlUmV0dXJuOiAtNSxcclxuICBsaW5lRmVlZDogLTQsXHJcbiAgY2FycmlhZ2VSZXR1cm5MaW5lRmVlZDogLTMsXHJcbiAgaG9yaXpvbnRhbFRhYjogLTIsXHJcbiAgdmlydHVhbFNwYWNlOiAtMSxcclxuICBlb2Y6IG51bGwsXHJcbiAgbnVsOiAwLFxyXG4gIHNvaDogMSxcclxuICBzdHg6IDIsXHJcbiAgZXR4OiAzLFxyXG4gIGVvdDogNCxcclxuICBlbnE6IDUsXHJcbiAgYWNrOiA2LFxyXG4gIGJlbDogNyxcclxuICBiczogOCxcclxuICBodDogOSwgLy8gYFxcdGBcclxuICBsZjogMTAsIC8vIGBcXG5gXHJcbiAgdnQ6IDExLCAvLyBgXFx2YFxyXG4gIGZmOiAxMiwgLy8gYFxcZmBcclxuICBjcjogMTMsIC8vIGBcXHJgXHJcbiAgc286IDE0LFxyXG4gIHNpOiAxNSxcclxuICBkbGU6IDE2LFxyXG4gIGRjMTogMTcsXHJcbiAgZGMyOiAxOCxcclxuICBkYzM6IDE5LFxyXG4gIGRjNDogMjAsXHJcbiAgbmFrOiAyMSxcclxuICBzeW46IDIyLFxyXG4gIGV0YjogMjMsXHJcbiAgY2FuOiAyNCxcclxuICBlbTogMjUsXHJcbiAgc3ViOiAyNixcclxuICBlc2M6IDI3LFxyXG4gIGZzOiAyOCxcclxuICBnczogMjksXHJcbiAgcnM6IDMwLFxyXG4gIHVzOiAzMSxcclxuICBzcGFjZTogMzIsXHJcbiAgZXhjbGFtYXRpb25NYXJrOiAzMywgLy8gYCFgXHJcbiAgcXVvdGF0aW9uTWFyazogMzQsIC8vIGBcImBcclxuICBudW1iZXJTaWduOiAzNSwgLy8gYCNgXHJcbiAgZG9sbGFyU2lnbjogMzYsIC8vIGAkYFxyXG4gIHBlcmNlbnRTaWduOiAzNywgLy8gYCVgXHJcbiAgYW1wZXJzYW5kOiAzOCwgLy8gYCZgXHJcbiAgYXBvc3Ryb3BoZTogMzksIC8vIGAnYFxyXG4gIGxlZnRQYXJlbnRoZXNpczogNDAsIC8vIGAoYFxyXG4gIHJpZ2h0UGFyZW50aGVzaXM6IDQxLCAvLyBgKWBcclxuICBhc3RlcmlzazogNDIsIC8vIGAqYFxyXG4gIHBsdXNTaWduOiA0MywgLy8gYCtgXHJcbiAgY29tbWE6IDQ0LCAvLyBgLGBcclxuICBkYXNoOiA0NSwgLy8gYC1gXHJcbiAgZG90OiA0NiwgLy8gYC5gXHJcbiAgc2xhc2g6IDQ3LCAvLyBgL2BcclxuICBkaWdpdDA6IDQ4LCAvLyBgMGBcclxuICBkaWdpdDE6IDQ5LCAvLyBgMWBcclxuICBkaWdpdDI6IDUwLCAvLyBgMmBcclxuICBkaWdpdDM6IDUxLCAvLyBgM2BcclxuICBkaWdpdDQ6IDUyLCAvLyBgNGBcclxuICBkaWdpdDU6IDUzLCAvLyBgNWBcclxuICBkaWdpdDY6IDU0LCAvLyBgNmBcclxuICBkaWdpdDc6IDU1LCAvLyBgN2BcclxuICBkaWdpdDg6IDU2LCAvLyBgOGBcclxuICBkaWdpdDk6IDU3LCAvLyBgOWBcclxuICBjb2xvbjogNTgsIC8vIGA6YFxyXG4gIHNlbWljb2xvbjogNTksIC8vIGA7YFxyXG4gIGxlc3NUaGFuOiA2MCwgLy8gYDxgXHJcbiAgZXF1YWxzVG86IDYxLCAvLyBgPWBcclxuICBncmVhdGVyVGhhbjogNjIsIC8vIGA+YFxyXG4gIHF1ZXN0aW9uTWFyazogNjMsIC8vIGA/YFxyXG4gIGF0U2lnbjogNjQsIC8vIGBAYFxyXG4gIHVwcGVyY2FzZUE6IDY1LCAvLyBgQWBcclxuICB1cHBlcmNhc2VCOiA2NiwgLy8gYEJgXHJcbiAgdXBwZXJjYXNlQzogNjcsIC8vIGBDYFxyXG4gIHVwcGVyY2FzZUQ6IDY4LCAvLyBgRGBcclxuICB1cHBlcmNhc2VFOiA2OSwgLy8gYEVgXHJcbiAgdXBwZXJjYXNlRjogNzAsIC8vIGBGYFxyXG4gIHVwcGVyY2FzZUc6IDcxLCAvLyBgR2BcclxuICB1cHBlcmNhc2VIOiA3MiwgLy8gYEhgXHJcbiAgdXBwZXJjYXNlSTogNzMsIC8vIGBJYFxyXG4gIHVwcGVyY2FzZUo6IDc0LCAvLyBgSmBcclxuICB1cHBlcmNhc2VLOiA3NSwgLy8gYEtgXHJcbiAgdXBwZXJjYXNlTDogNzYsIC8vIGBMYFxyXG4gIHVwcGVyY2FzZU06IDc3LCAvLyBgTWBcclxuICB1cHBlcmNhc2VOOiA3OCwgLy8gYE5gXHJcbiAgdXBwZXJjYXNlTzogNzksIC8vIGBPYFxyXG4gIHVwcGVyY2FzZVA6IDgwLCAvLyBgUGBcclxuICB1cHBlcmNhc2VROiA4MSwgLy8gYFFgXHJcbiAgdXBwZXJjYXNlUjogODIsIC8vIGBSYFxyXG4gIHVwcGVyY2FzZVM6IDgzLCAvLyBgU2BcclxuICB1cHBlcmNhc2VUOiA4NCwgLy8gYFRgXHJcbiAgdXBwZXJjYXNlVTogODUsIC8vIGBVYFxyXG4gIHVwcGVyY2FzZVY6IDg2LCAvLyBgVmBcclxuICB1cHBlcmNhc2VXOiA4NywgLy8gYFdgXHJcbiAgdXBwZXJjYXNlWDogODgsIC8vIGBYYFxyXG4gIHVwcGVyY2FzZVk6IDg5LCAvLyBgWWBcclxuICB1cHBlcmNhc2VaOiA5MCwgLy8gYFpgXHJcbiAgbGVmdFNxdWFyZUJyYWNrZXQ6IDkxLCAvLyBgW2BcclxuICBiYWNrc2xhc2g6IDkyLCAvLyBgXFxgXHJcbiAgcmlnaHRTcXVhcmVCcmFja2V0OiA5MywgLy8gYF1gXHJcbiAgY2FyZXQ6IDk0LCAvLyBgXmBcclxuICB1bmRlcnNjb3JlOiA5NSwgLy8gYF9gXHJcbiAgZ3JhdmVBY2NlbnQ6IDk2LCAvLyBgYCBgIGBgXHJcbiAgbG93ZXJjYXNlQTogOTcsIC8vIGBhYFxyXG4gIGxvd2VyY2FzZUI6IDk4LCAvLyBgYmBcclxuICBsb3dlcmNhc2VDOiA5OSwgLy8gYGNgXHJcbiAgbG93ZXJjYXNlRDogMTAwLCAvLyBgZGBcclxuICBsb3dlcmNhc2VFOiAxMDEsIC8vIGBlYFxyXG4gIGxvd2VyY2FzZUY6IDEwMiwgLy8gYGZgXHJcbiAgbG93ZXJjYXNlRzogMTAzLCAvLyBgZ2BcclxuICBsb3dlcmNhc2VIOiAxMDQsIC8vIGBoYFxyXG4gIGxvd2VyY2FzZUk6IDEwNSwgLy8gYGlgXHJcbiAgbG93ZXJjYXNlSjogMTA2LCAvLyBgamBcclxuICBsb3dlcmNhc2VLOiAxMDcsIC8vIGBrYFxyXG4gIGxvd2VyY2FzZUw6IDEwOCwgLy8gYGxgXHJcbiAgbG93ZXJjYXNlTTogMTA5LCAvLyBgbWBcclxuICBsb3dlcmNhc2VOOiAxMTAsIC8vIGBuYFxyXG4gIGxvd2VyY2FzZU86IDExMSwgLy8gYG9gXHJcbiAgbG93ZXJjYXNlUDogMTEyLCAvLyBgcGBcclxuICBsb3dlcmNhc2VROiAxMTMsIC8vIGBxYFxyXG4gIGxvd2VyY2FzZVI6IDExNCwgLy8gYHJgXHJcbiAgbG93ZXJjYXNlUzogMTE1LCAvLyBgc2BcclxuICBsb3dlcmNhc2VUOiAxMTYsIC8vIGB0YFxyXG4gIGxvd2VyY2FzZVU6IDExNywgLy8gYHVgXHJcbiAgbG93ZXJjYXNlVjogMTE4LCAvLyBgdmBcclxuICBsb3dlcmNhc2VXOiAxMTksIC8vIGB3YFxyXG4gIGxvd2VyY2FzZVg6IDEyMCwgLy8gYHhgXHJcbiAgbG93ZXJjYXNlWTogMTIxLCAvLyBgeWBcclxuICBsb3dlcmNhc2VaOiAxMjIsIC8vIGB6YFxyXG4gIGxlZnRDdXJseUJyYWNlOiAxMjMsIC8vIGB7YFxyXG4gIHZlcnRpY2FsQmFyOiAxMjQsIC8vIGB8YFxyXG4gIHJpZ2h0Q3VybHlCcmFjZTogMTI1LCAvLyBgfWBcclxuICB0aWxkZTogMTI2LCAvLyBgfmBcclxuICBkZWw6IDEyNyxcclxuICAvLyBVbmljb2RlIFNwZWNpYWxzIGJsb2NrLlxyXG4gIGJ5dGVPcmRlck1hcmtlcjogNjUyNzksXHJcbiAgLy8gVW5pY29kZSBTcGVjaWFscyBibG9jay5cclxuICByZXBsYWNlbWVudENoYXJhY3RlcjogNjU1MzMgLy8gYO+/vWBcclxufSlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-symbol/codes.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-symbol/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/micromark-util-symbol/constants.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"constants\": function() { return /* binding */ constants; }\n/* harmony export */ });\n/**\r\n * This module is compiled away!\r\n *\r\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\r\n * sizes of certain sequences.\r\n * Additionally, there are a couple symbols used inside micromark.\r\n * These are all defined here, but compiled away by scripts.\r\n */\r\nconst constants = /** @type {const} */ ({\r\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\r\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\r\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\r\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\r\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\r\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\r\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\r\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\r\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\r\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\r\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\r\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\r\n  contentTypeDocument: 'document',\r\n  contentTypeFlow: 'flow',\r\n  contentTypeContent: 'content',\r\n  contentTypeString: 'string',\r\n  contentTypeText: 'text',\r\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\r\n  htmlRaw: 1, // Symbol for `<script>`\r\n  htmlComment: 2, // Symbol for `<!---->`\r\n  htmlInstruction: 3, // Symbol for `<?php?>`\r\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\r\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\r\n  htmlBasic: 6, // Symbol for `<div`\r\n  htmlComplete: 7, // Symbol for `<x>`\r\n  htmlRawSizeMax: 8, // Length of `textarea`.\r\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\r\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\r\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\r\n  numericBaseDecimal: 10,\r\n  numericBaseHexadecimal: 0x10,\r\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\r\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\r\n  v8MaxSafeChunkSize: 10000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2QixPQUFPO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQseURBQXlEO0FBQ3pELDJFQUEyRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvbnN0YW50cy5qcz9kNjY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGlzIG1vZHVsZSBpcyBjb21waWxlZCBhd2F5IVxyXG4gKlxyXG4gKiBQYXJzaW5nIG1hcmtkb3duIGNvbWVzIHdpdGggYSBjb3VwbGUgb2YgY29uc3RhbnRzLCBzdWNoIGFzIG1pbmltdW0gb3IgbWF4aW11bVxyXG4gKiBzaXplcyBvZiBjZXJ0YWluIHNlcXVlbmNlcy5cclxuICogQWRkaXRpb25hbGx5LCB0aGVyZSBhcmUgYSBjb3VwbGUgc3ltYm9scyB1c2VkIGluc2lkZSBtaWNyb21hcmsuXHJcbiAqIFRoZXNlIGFyZSBhbGwgZGVmaW5lZCBoZXJlLCBidXQgY29tcGlsZWQgYXdheSBieSBzY3JpcHRzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbnN0YW50cyA9IC8qKiBAdHlwZSB7Y29uc3R9ICovICh7XHJcbiAgYXR0ZW50aW9uU2lkZUJlZm9yZTogMSwgLy8gU3ltYm9sIHRvIG1hcmsgYW4gYXR0ZW50aW9uIHNlcXVlbmNlIGFzIGJlZm9yZSBjb250ZW50OiBgKmFgXHJcbiAgYXR0ZW50aW9uU2lkZUFmdGVyOiAyLCAvLyBTeW1ib2wgdG8gbWFyayBhbiBhdHRlbnRpb24gc2VxdWVuY2UgYXMgYWZ0ZXIgY29udGVudDogYGEqYFxyXG4gIGF0eEhlYWRpbmdPcGVuaW5nRmVuY2VTaXplTWF4OiA2LCAvLyA2IG51bWJlciBzaWducyBpcyBmaW5lLCA3IGlzbuKAmXQuXHJcbiAgYXV0b2xpbmtEb21haW5TaXplTWF4OiA2MywgLy8gNjMgY2hhcmFjdGVycyBpcyBmaW5lLCA2NCBpcyB0b28gbWFueS5cclxuICBhdXRvbGlua1NjaGVtZVNpemVNYXg6IDMyLCAvLyAzMiBjaGFyYWN0ZXJzIGlzIGZpbmUsIDMzIGlzIHRvbyBtYW55LlxyXG4gIGNkYXRhT3BlbmluZ1N0cmluZzogJ0NEQVRBWycsIC8vIEFuZCBwcmVjZWRlZCBieSBgPCFbYC5cclxuICBjaGFyYWN0ZXJHcm91cFdoaXRlc3BhY2U6IDEsIC8vIFN5bWJvbCB1c2VkIHRvIGluZGljYXRlIGEgY2hhcmFjdGVyIGlzIHdoaXRlc3BhY2VcclxuICBjaGFyYWN0ZXJHcm91cFB1bmN0dWF0aW9uOiAyLCAvLyBTeW1ib2wgdXNlZCB0byBpbmRpY2F0ZSBhIGNoYXJhY3RlciBpcyBwdW5jdHVhdGlvblxyXG4gIGNoYXJhY3RlclJlZmVyZW5jZURlY2ltYWxTaXplTWF4OiA3LCAvLyBgJiM5OTk5OTk5O2AuXHJcbiAgY2hhcmFjdGVyUmVmZXJlbmNlSGV4YWRlY2ltYWxTaXplTWF4OiA2LCAvLyBgJiN4ZmY5OTk5O2AuXHJcbiAgY2hhcmFjdGVyUmVmZXJlbmNlTmFtZWRTaXplTWF4OiAzMSwgLy8gYCZDb3VudGVyQ2xvY2t3aXNlQ29udG91ckludGVncmFsO2AuXHJcbiAgY29kZUZlbmNlZFNlcXVlbmNlU2l6ZU1pbjogMywgLy8gQXQgbGVhc3QgMyB0aWNrcyBvciB0aWxkZXMgYXJlIG5lZWRlZC5cclxuICBjb250ZW50VHlwZURvY3VtZW50OiAnZG9jdW1lbnQnLFxyXG4gIGNvbnRlbnRUeXBlRmxvdzogJ2Zsb3cnLFxyXG4gIGNvbnRlbnRUeXBlQ29udGVudDogJ2NvbnRlbnQnLFxyXG4gIGNvbnRlbnRUeXBlU3RyaW5nOiAnc3RyaW5nJyxcclxuICBjb250ZW50VHlwZVRleHQ6ICd0ZXh0JyxcclxuICBoYXJkQnJlYWtQcmVmaXhTaXplTWluOiAyLCAvLyBBdCBsZWFzdCAyIHRyYWlsaW5nIHNwYWNlcyBhcmUgbmVlZGVkLlxyXG4gIGh0bWxSYXc6IDEsIC8vIFN5bWJvbCBmb3IgYDxzY3JpcHQ+YFxyXG4gIGh0bWxDb21tZW50OiAyLCAvLyBTeW1ib2wgZm9yIGA8IS0tLS0+YFxyXG4gIGh0bWxJbnN0cnVjdGlvbjogMywgLy8gU3ltYm9sIGZvciBgPD9waHA/PmBcclxuICBodG1sRGVjbGFyYXRpb246IDQsIC8vIFN5bWJvbCBmb3IgYDwhZG9jdHlwZT5gXHJcbiAgaHRtbENkYXRhOiA1LCAvLyBTeW1ib2wgZm9yIGA8IVtDREFUQVtdXT5gXHJcbiAgaHRtbEJhc2ljOiA2LCAvLyBTeW1ib2wgZm9yIGA8ZGl2YFxyXG4gIGh0bWxDb21wbGV0ZTogNywgLy8gU3ltYm9sIGZvciBgPHg+YFxyXG4gIGh0bWxSYXdTaXplTWF4OiA4LCAvLyBMZW5ndGggb2YgYHRleHRhcmVhYC5cclxuICBsaW5rUmVzb3VyY2VEZXN0aW5hdGlvbkJhbGFuY2VNYXg6IDMyLCAvLyBTZWU6IDxodHRwczovL3NwZWMuY29tbW9ubWFyay5vcmcvMC4zMC8jbGluay1kZXN0aW5hdGlvbj4sIDxodHRwczovL2dpdGh1Yi5jb20vcmVtYXJranMvcmVhY3QtbWFya2Rvd24vaXNzdWVzLzY1OCNpc3N1ZWNvbW1lbnQtOTg0MzQ1NTc3PlxyXG4gIGxpbmtSZWZlcmVuY2VTaXplTWF4OiA5OTksIC8vIFNlZTogPGh0dHBzOi8vc3BlYy5jb21tb25tYXJrLm9yZy8wLjMwLyNsaW5rLWxhYmVsPlxyXG4gIGxpc3RJdGVtVmFsdWVTaXplTWF4OiAxMCwgLy8gU2VlOiA8aHR0cHM6Ly9zcGVjLmNvbW1vbm1hcmsub3JnLzAuMzAvI29yZGVyZWQtbGlzdC1tYXJrZXI+XHJcbiAgbnVtZXJpY0Jhc2VEZWNpbWFsOiAxMCxcclxuICBudW1lcmljQmFzZUhleGFkZWNpbWFsOiAweDEwLFxyXG4gIHRhYlNpemU6IDQsIC8vIFRhYnMgaGF2ZSBhIGhhcmQtY29kZWQgc2l6ZSBvZiA0LCBwZXIgQ29tbW9uTWFyay5cclxuICB0aGVtYXRpY0JyZWFrTWFya2VyQ291bnRNaW46IDMsIC8vIEF0IGxlYXN0IDMgYXN0ZXJpc2tzLCBkYXNoZXMsIG9yIHVuZGVyc2NvcmVzIGFyZSBuZWVkZWQuXHJcbiAgdjhNYXhTYWZlQ2h1bmtTaXplOiAxMDAwMCAvLyBWOCAoYW5kIHBvdGVudGlhbGx5IG90aGVycykgaGF2ZSBwcm9ibGVtcyBpbmplY3RpbmcgZ2lhbnQgYXJyYXlzIGludG8gb3RoZXIgYXJyYXlzLCBoZW5jZSB3ZSBvcGVyYXRlIGluIGNodW5rcy5cclxufSlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-symbol/constants.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-symbol/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/micromark-util-symbol/types.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"types\": function() { return /* binding */ types; }\n/* harmony export */ });\n/**\r\n * This module is compiled away!\r\n *\r\n * Here is the list of all types of tokens exposed by micromark, with a short\r\n * explanation of what they include and where they are found.\r\n * In picking names, generally, the rule is to be as explicit as possible\r\n * instead of reusing names.\r\n * For example, there is a `definitionDestination` and a `resourceDestination`,\r\n * instead of one shared name.\r\n */\r\n\r\n// Note: when changing the next record, you must also change `TokenTypeMap`\r\n// in `micromark-util-types/index.d.ts`.\r\nconst types = /** @type {const} */ ({\r\n  // Generic type for data, such as in a title, a destination, etc.\r\n  data: 'data',\r\n\r\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\r\n  // Such as, between a fenced code fence and an info string.\r\n  whitespace: 'whitespace',\r\n\r\n  // Generic type for line endings (line feed, carriage return, carriage return +\r\n  // line feed).\r\n  lineEnding: 'lineEnding',\r\n\r\n  // A line ending, but ending a blank line.\r\n  lineEndingBlank: 'lineEndingBlank',\r\n\r\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\r\n  // line.\r\n  linePrefix: 'linePrefix',\r\n\r\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\r\n  // line.\r\n  lineSuffix: 'lineSuffix',\r\n\r\n  // Whole ATX heading:\r\n  //\r\n  // ```markdown\r\n  // #\r\n  // ## Alpha\r\n  // ### Bravo ###\r\n  // ```\r\n  //\r\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\r\n  atxHeading: 'atxHeading',\r\n\r\n  // Sequence of number signs in an ATX heading (`###`).\r\n  atxHeadingSequence: 'atxHeadingSequence',\r\n\r\n  // Content in an ATX heading (`alpha`).\r\n  // Includes text.\r\n  atxHeadingText: 'atxHeadingText',\r\n\r\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\r\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\r\n  autolink: 'autolink',\r\n\r\n  // Email autolink w/o markers (`admin@example.com`)\r\n  autolinkEmail: 'autolinkEmail',\r\n\r\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\r\n  autolinkMarker: 'autolinkMarker',\r\n\r\n  // Protocol autolink w/o markers (`https://example.com`)\r\n  autolinkProtocol: 'autolinkProtocol',\r\n\r\n  // A whole character escape (`\\-`).\r\n  // Includes `escapeMarker` and `characterEscapeValue`.\r\n  characterEscape: 'characterEscape',\r\n\r\n  // The escaped character (`-`).\r\n  characterEscapeValue: 'characterEscapeValue',\r\n\r\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\r\n  // Includes `characterReferenceMarker`, an optional\r\n  // `characterReferenceMarkerNumeric`, in which case an optional\r\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\r\n  characterReference: 'characterReference',\r\n\r\n  // The start or end marker (`&` or `;`).\r\n  characterReferenceMarker: 'characterReferenceMarker',\r\n\r\n  // Mark reference as numeric (`#`).\r\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\r\n\r\n  // Mark reference as numeric (`x` or `X`).\r\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\r\n\r\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\r\n  characterReferenceValue: 'characterReferenceValue',\r\n\r\n  // Whole fenced code:\r\n  //\r\n  // ````markdown\r\n  // ```js\r\n  // alert(1)\r\n  // ```\r\n  // ````\r\n  codeFenced: 'codeFenced',\r\n\r\n  // A fenced code fence, including whitespace, sequence, info, and meta\r\n  // (` ```js `).\r\n  codeFencedFence: 'codeFencedFence',\r\n\r\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\r\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\r\n\r\n  // Info word (`js`) in a fence.\r\n  // Includes string.\r\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\r\n\r\n  // Meta words (`highlight=\"1\"`) in a fence.\r\n  // Includes string.\r\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\r\n\r\n  // A line of code.\r\n  codeFlowValue: 'codeFlowValue',\r\n\r\n  // Whole indented code:\r\n  //\r\n  // ```markdown\r\n  //     alert(1)\r\n  // ```\r\n  //\r\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\r\n  codeIndented: 'codeIndented',\r\n\r\n  // A text code (``` `alpha` ```).\r\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\r\n  // `codeTextPadding`.\r\n  codeText: 'codeText',\r\n\r\n  codeTextData: 'codeTextData',\r\n\r\n  // A space or line ending right after or before a tick.\r\n  codeTextPadding: 'codeTextPadding',\r\n\r\n  // A text code fence (` `` `).\r\n  codeTextSequence: 'codeTextSequence',\r\n\r\n  // Whole content:\r\n  //\r\n  // ```markdown\r\n  // [a]: b\r\n  // c\r\n  // =\r\n  // d\r\n  // ```\r\n  //\r\n  // Includes `paragraph` and `definition`.\r\n  content: 'content',\r\n  // Whole definition:\r\n  //\r\n  // ```markdown\r\n  // [micromark]: https://github.com/micromark/micromark\r\n  // ```\r\n  //\r\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\r\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\r\n  definition: 'definition',\r\n\r\n  // Destination of a definition (`https://github.com/micromark/micromark` or\r\n  // `<https://github.com/micromark/micromark>`).\r\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\r\n  definitionDestination: 'definitionDestination',\r\n\r\n  // Enclosed destination of a definition\r\n  // (`<https://github.com/micromark/micromark>`).\r\n  // Includes `definitionDestinationLiteralMarker` and optionally\r\n  // `definitionDestinationString`.\r\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\r\n\r\n  // Markers of an enclosed definition destination (`<` or `>`).\r\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\r\n\r\n  // Unenclosed destination of a definition\r\n  // (`https://github.com/micromark/micromark`).\r\n  // Includes `definitionDestinationString`.\r\n  definitionDestinationRaw: 'definitionDestinationRaw',\r\n\r\n  // Text in an destination (`https://github.com/micromark/micromark`).\r\n  // Includes string.\r\n  definitionDestinationString: 'definitionDestinationString',\r\n\r\n  // Label of a definition (`[micromark]`).\r\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\r\n  definitionLabel: 'definitionLabel',\r\n\r\n  // Markers of a definition label (`[` or `]`).\r\n  definitionLabelMarker: 'definitionLabelMarker',\r\n\r\n  // Value of a definition label (`micromark`).\r\n  // Includes string.\r\n  definitionLabelString: 'definitionLabelString',\r\n\r\n  // Marker between a label and a destination (`:`).\r\n  definitionMarker: 'definitionMarker',\r\n\r\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\r\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\r\n  definitionTitle: 'definitionTitle',\r\n\r\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\r\n  definitionTitleMarker: 'definitionTitleMarker',\r\n\r\n  // Data without markers in a title (`z`).\r\n  // Includes string.\r\n  definitionTitleString: 'definitionTitleString',\r\n\r\n  // Emphasis (`*alpha*`).\r\n  // Includes `emphasisSequence` and `emphasisText`.\r\n  emphasis: 'emphasis',\r\n\r\n  // Sequence of emphasis markers (`*` or `_`).\r\n  emphasisSequence: 'emphasisSequence',\r\n\r\n  // Emphasis text (`alpha`).\r\n  // Includes text.\r\n  emphasisText: 'emphasisText',\r\n\r\n  // The character escape marker (`\\`).\r\n  escapeMarker: 'escapeMarker',\r\n\r\n  // A hard break created with a backslash (`\\\\n`).\r\n  // Note: does not include the line ending.\r\n  hardBreakEscape: 'hardBreakEscape',\r\n\r\n  // A hard break created with trailing spaces (`  \\n`).\r\n  // Does not include the line ending.\r\n  hardBreakTrailing: 'hardBreakTrailing',\r\n\r\n  // Flow HTML:\r\n  //\r\n  // ```markdown\r\n  // <div\r\n  // ```\r\n  //\r\n  // Inlcudes `lineEnding`, `htmlFlowData`.\r\n  htmlFlow: 'htmlFlow',\r\n\r\n  htmlFlowData: 'htmlFlowData',\r\n\r\n  // HTML in text (the tag in `a <i> b`).\r\n  // Includes `lineEnding`, `htmlTextData`.\r\n  htmlText: 'htmlText',\r\n\r\n  htmlTextData: 'htmlTextData',\r\n\r\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\r\n  // `![alpha]`).\r\n  // Includes `label` and an optional `resource` or `reference`.\r\n  image: 'image',\r\n\r\n  // Whole link label (`[*alpha*]`).\r\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\r\n  label: 'label',\r\n\r\n  // Text in an label (`*alpha*`).\r\n  // Includes text.\r\n  labelText: 'labelText',\r\n\r\n  // Start a link label (`[`).\r\n  // Includes a `labelMarker`.\r\n  labelLink: 'labelLink',\r\n\r\n  // Start an image label (`![`).\r\n  // Includes `labelImageMarker` and `labelMarker`.\r\n  labelImage: 'labelImage',\r\n\r\n  // Marker of a label (`[` or `]`).\r\n  labelMarker: 'labelMarker',\r\n\r\n  // Marker to start an image (`!`).\r\n  labelImageMarker: 'labelImageMarker',\r\n\r\n  // End a label (`]`).\r\n  // Includes `labelMarker`.\r\n  labelEnd: 'labelEnd',\r\n\r\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\r\n  // Includes `label` and an optional `resource` or `reference`.\r\n  link: 'link',\r\n\r\n  // Whole paragraph:\r\n  //\r\n  // ```markdown\r\n  // alpha\r\n  // bravo.\r\n  // ```\r\n  //\r\n  // Includes text.\r\n  paragraph: 'paragraph',\r\n\r\n  // A reference (`[alpha]` or `[]`).\r\n  // Includes `referenceMarker` and an optional `referenceString`.\r\n  reference: 'reference',\r\n\r\n  // A reference marker (`[` or `]`).\r\n  referenceMarker: 'referenceMarker',\r\n\r\n  // Reference text (`alpha`).\r\n  // Includes string.\r\n  referenceString: 'referenceString',\r\n\r\n  // A resource (`(https://example.com \"alpha\")`).\r\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\r\n  // `whitespace` and `resourceTitle`.\r\n  resource: 'resource',\r\n\r\n  // A resource destination (`https://example.com`).\r\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\r\n  resourceDestination: 'resourceDestination',\r\n\r\n  // A literal resource destination (`<https://example.com>`).\r\n  // Includes `resourceDestinationLiteralMarker` and optionally\r\n  // `resourceDestinationString`.\r\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\r\n\r\n  // A resource destination marker (`<` or `>`).\r\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\r\n\r\n  // A raw resource destination (`https://example.com`).\r\n  // Includes `resourceDestinationString`.\r\n  resourceDestinationRaw: 'resourceDestinationRaw',\r\n\r\n  // Resource destination text (`https://example.com`).\r\n  // Includes string.\r\n  resourceDestinationString: 'resourceDestinationString',\r\n\r\n  // A resource marker (`(` or `)`).\r\n  resourceMarker: 'resourceMarker',\r\n\r\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\r\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\r\n  resourceTitle: 'resourceTitle',\r\n\r\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\r\n  resourceTitleMarker: 'resourceTitleMarker',\r\n\r\n  // Resource destination title (`alpha`).\r\n  // Includes string.\r\n  resourceTitleString: 'resourceTitleString',\r\n\r\n  // Whole setext heading:\r\n  //\r\n  // ```markdown\r\n  // alpha\r\n  // bravo\r\n  // =====\r\n  // ```\r\n  //\r\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\r\n  // `setextHeadingLine`.\r\n  setextHeading: 'setextHeading',\r\n\r\n  // Content in a setext heading (`alpha\\nbravo`).\r\n  // Includes text.\r\n  setextHeadingText: 'setextHeadingText',\r\n\r\n  // Underline in a setext heading, including whitespace suffix (`==`).\r\n  // Includes `setextHeadingLineSequence`.\r\n  setextHeadingLine: 'setextHeadingLine',\r\n\r\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\r\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\r\n\r\n  // Strong (`**alpha**`).\r\n  // Includes `strongSequence` and `strongText`.\r\n  strong: 'strong',\r\n\r\n  // Sequence of strong markers (`**` or `__`).\r\n  strongSequence: 'strongSequence',\r\n\r\n  // Strong text (`alpha`).\r\n  // Includes text.\r\n  strongText: 'strongText',\r\n\r\n  // Whole thematic break:\r\n  //\r\n  // ```markdown\r\n  // * * *\r\n  // ```\r\n  //\r\n  // Includes `thematicBreakSequence` and `whitespace`.\r\n  thematicBreak: 'thematicBreak',\r\n\r\n  // A sequence of one or more thematic break markers (`***`).\r\n  thematicBreakSequence: 'thematicBreakSequence',\r\n\r\n  // Whole block quote:\r\n  //\r\n  // ```markdown\r\n  // > a\r\n  // >\r\n  // > b\r\n  // ```\r\n  //\r\n  // Includes `blockQuotePrefix` and flow.\r\n  blockQuote: 'blockQuote',\r\n  // The `>` or `> ` of a block quote.\r\n  blockQuotePrefix: 'blockQuotePrefix',\r\n  // The `>` of a block quote prefix.\r\n  blockQuoteMarker: 'blockQuoteMarker',\r\n  // The optional ` ` of a block quote prefix.\r\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\r\n\r\n  // Whole unordered list:\r\n  //\r\n  // ```markdown\r\n  // - a\r\n  //   b\r\n  // ```\r\n  //\r\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\r\n  // lines.\r\n  listOrdered: 'listOrdered',\r\n\r\n  // Whole ordered list:\r\n  //\r\n  // ```markdown\r\n  // 1. a\r\n  //    b\r\n  // ```\r\n  //\r\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\r\n  // lines.\r\n  listUnordered: 'listUnordered',\r\n\r\n  // The indent of further list item lines.\r\n  listItemIndent: 'listItemIndent',\r\n\r\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\r\n  listItemMarker: 'listItemMarker',\r\n\r\n  // The thing that starts a list item, such as `1. `.\r\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\r\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\r\n  listItemPrefix: 'listItemPrefix',\r\n\r\n  // The whitespace after a marker.\r\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\r\n\r\n  // The numerical value of an ordered item.\r\n  listItemValue: 'listItemValue',\r\n\r\n  // Internal types used for subtokenizers, compiled away\r\n  chunkDocument: 'chunkDocument',\r\n  chunkContent: 'chunkContent',\r\n  chunkFlow: 'chunkFlow',\r\n  chunkText: 'chunkText',\r\n  chunkString: 'chunkString'\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-symbol/types.js\n"));

/***/ }),

/***/ "./node_modules/micromark-util-symbol/values.js":
/*!******************************************************!*\
  !*** ./node_modules/micromark-util-symbol/values.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"values\": function() { return /* binding */ values; }\n/* harmony export */ });\n/**\r\n * This module is compiled away!\r\n *\r\n * While micromark works based on character codes, this module includes the\r\n * string versions of ’em.\r\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\r\n * are available here.\r\n */\r\nconst values = /** @type {const} */ ({\r\n  ht: '\\t',\r\n  lf: '\\n',\r\n  cr: '\\r',\r\n  space: ' ',\r\n  exclamationMark: '!',\r\n  quotationMark: '\"',\r\n  numberSign: '#',\r\n  dollarSign: '$',\r\n  percentSign: '%',\r\n  ampersand: '&',\r\n  apostrophe: \"'\",\r\n  leftParenthesis: '(',\r\n  rightParenthesis: ')',\r\n  asterisk: '*',\r\n  plusSign: '+',\r\n  comma: ',',\r\n  dash: '-',\r\n  dot: '.',\r\n  slash: '/',\r\n  digit0: '0',\r\n  digit1: '1',\r\n  digit2: '2',\r\n  digit3: '3',\r\n  digit4: '4',\r\n  digit5: '5',\r\n  digit6: '6',\r\n  digit7: '7',\r\n  digit8: '8',\r\n  digit9: '9',\r\n  colon: ':',\r\n  semicolon: ';',\r\n  lessThan: '<',\r\n  equalsTo: '=',\r\n  greaterThan: '>',\r\n  questionMark: '?',\r\n  atSign: '@',\r\n  uppercaseA: 'A',\r\n  uppercaseB: 'B',\r\n  uppercaseC: 'C',\r\n  uppercaseD: 'D',\r\n  uppercaseE: 'E',\r\n  uppercaseF: 'F',\r\n  uppercaseG: 'G',\r\n  uppercaseH: 'H',\r\n  uppercaseI: 'I',\r\n  uppercaseJ: 'J',\r\n  uppercaseK: 'K',\r\n  uppercaseL: 'L',\r\n  uppercaseM: 'M',\r\n  uppercaseN: 'N',\r\n  uppercaseO: 'O',\r\n  uppercaseP: 'P',\r\n  uppercaseQ: 'Q',\r\n  uppercaseR: 'R',\r\n  uppercaseS: 'S',\r\n  uppercaseT: 'T',\r\n  uppercaseU: 'U',\r\n  uppercaseV: 'V',\r\n  uppercaseW: 'W',\r\n  uppercaseX: 'X',\r\n  uppercaseY: 'Y',\r\n  uppercaseZ: 'Z',\r\n  leftSquareBracket: '[',\r\n  backslash: '\\\\',\r\n  rightSquareBracket: ']',\r\n  caret: '^',\r\n  underscore: '_',\r\n  graveAccent: '`',\r\n  lowercaseA: 'a',\r\n  lowercaseB: 'b',\r\n  lowercaseC: 'c',\r\n  lowercaseD: 'd',\r\n  lowercaseE: 'e',\r\n  lowercaseF: 'f',\r\n  lowercaseG: 'g',\r\n  lowercaseH: 'h',\r\n  lowercaseI: 'i',\r\n  lowercaseJ: 'j',\r\n  lowercaseK: 'k',\r\n  lowercaseL: 'l',\r\n  lowercaseM: 'm',\r\n  lowercaseN: 'n',\r\n  lowercaseO: 'o',\r\n  lowercaseP: 'p',\r\n  lowercaseQ: 'q',\r\n  lowercaseR: 'r',\r\n  lowercaseS: 's',\r\n  lowercaseT: 't',\r\n  lowercaseU: 'u',\r\n  lowercaseV: 'v',\r\n  lowercaseW: 'w',\r\n  lowercaseX: 'x',\r\n  lowercaseY: 'y',\r\n  lowercaseZ: 'z',\r\n  leftCurlyBrace: '{',\r\n  verticalBar: '|',\r\n  rightCurlyBrace: '}',\r\n  tilde: '~',\r\n  replacementCharacter: '�'\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLXV0aWwtc3ltYm9sL3ZhbHVlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQixPQUFPO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21pY3JvbWFyay11dGlsLXN5bWJvbC92YWx1ZXMuanM/MDY1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhpcyBtb2R1bGUgaXMgY29tcGlsZWQgYXdheSFcclxuICpcclxuICogV2hpbGUgbWljcm9tYXJrIHdvcmtzIGJhc2VkIG9uIGNoYXJhY3RlciBjb2RlcywgdGhpcyBtb2R1bGUgaW5jbHVkZXMgdGhlXHJcbiAqIHN0cmluZyB2ZXJzaW9ucyBvZiDigJllbS5cclxuICogVGhlIEMwIGJsb2NrLCBleGNlcHQgZm9yIExGLCBDUiwgSFQsIGFuZCB3LyB0aGUgcmVwbGFjZW1lbnQgY2hhcmFjdGVyIGFkZGVkLFxyXG4gKiBhcmUgYXZhaWxhYmxlIGhlcmUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgdmFsdWVzID0gLyoqIEB0eXBlIHtjb25zdH0gKi8gKHtcclxuICBodDogJ1xcdCcsXHJcbiAgbGY6ICdcXG4nLFxyXG4gIGNyOiAnXFxyJyxcclxuICBzcGFjZTogJyAnLFxyXG4gIGV4Y2xhbWF0aW9uTWFyazogJyEnLFxyXG4gIHF1b3RhdGlvbk1hcms6ICdcIicsXHJcbiAgbnVtYmVyU2lnbjogJyMnLFxyXG4gIGRvbGxhclNpZ246ICckJyxcclxuICBwZXJjZW50U2lnbjogJyUnLFxyXG4gIGFtcGVyc2FuZDogJyYnLFxyXG4gIGFwb3N0cm9waGU6IFwiJ1wiLFxyXG4gIGxlZnRQYXJlbnRoZXNpczogJygnLFxyXG4gIHJpZ2h0UGFyZW50aGVzaXM6ICcpJyxcclxuICBhc3RlcmlzazogJyonLFxyXG4gIHBsdXNTaWduOiAnKycsXHJcbiAgY29tbWE6ICcsJyxcclxuICBkYXNoOiAnLScsXHJcbiAgZG90OiAnLicsXHJcbiAgc2xhc2g6ICcvJyxcclxuICBkaWdpdDA6ICcwJyxcclxuICBkaWdpdDE6ICcxJyxcclxuICBkaWdpdDI6ICcyJyxcclxuICBkaWdpdDM6ICczJyxcclxuICBkaWdpdDQ6ICc0JyxcclxuICBkaWdpdDU6ICc1JyxcclxuICBkaWdpdDY6ICc2JyxcclxuICBkaWdpdDc6ICc3JyxcclxuICBkaWdpdDg6ICc4JyxcclxuICBkaWdpdDk6ICc5JyxcclxuICBjb2xvbjogJzonLFxyXG4gIHNlbWljb2xvbjogJzsnLFxyXG4gIGxlc3NUaGFuOiAnPCcsXHJcbiAgZXF1YWxzVG86ICc9JyxcclxuICBncmVhdGVyVGhhbjogJz4nLFxyXG4gIHF1ZXN0aW9uTWFyazogJz8nLFxyXG4gIGF0U2lnbjogJ0AnLFxyXG4gIHVwcGVyY2FzZUE6ICdBJyxcclxuICB1cHBlcmNhc2VCOiAnQicsXHJcbiAgdXBwZXJjYXNlQzogJ0MnLFxyXG4gIHVwcGVyY2FzZUQ6ICdEJyxcclxuICB1cHBlcmNhc2VFOiAnRScsXHJcbiAgdXBwZXJjYXNlRjogJ0YnLFxyXG4gIHVwcGVyY2FzZUc6ICdHJyxcclxuICB1cHBlcmNhc2VIOiAnSCcsXHJcbiAgdXBwZXJjYXNlSTogJ0knLFxyXG4gIHVwcGVyY2FzZUo6ICdKJyxcclxuICB1cHBlcmNhc2VLOiAnSycsXHJcbiAgdXBwZXJjYXNlTDogJ0wnLFxyXG4gIHVwcGVyY2FzZU06ICdNJyxcclxuICB1cHBlcmNhc2VOOiAnTicsXHJcbiAgdXBwZXJjYXNlTzogJ08nLFxyXG4gIHVwcGVyY2FzZVA6ICdQJyxcclxuICB1cHBlcmNhc2VROiAnUScsXHJcbiAgdXBwZXJjYXNlUjogJ1InLFxyXG4gIHVwcGVyY2FzZVM6ICdTJyxcclxuICB1cHBlcmNhc2VUOiAnVCcsXHJcbiAgdXBwZXJjYXNlVTogJ1UnLFxyXG4gIHVwcGVyY2FzZVY6ICdWJyxcclxuICB1cHBlcmNhc2VXOiAnVycsXHJcbiAgdXBwZXJjYXNlWDogJ1gnLFxyXG4gIHVwcGVyY2FzZVk6ICdZJyxcclxuICB1cHBlcmNhc2VaOiAnWicsXHJcbiAgbGVmdFNxdWFyZUJyYWNrZXQ6ICdbJyxcclxuICBiYWNrc2xhc2g6ICdcXFxcJyxcclxuICByaWdodFNxdWFyZUJyYWNrZXQ6ICddJyxcclxuICBjYXJldDogJ14nLFxyXG4gIHVuZGVyc2NvcmU6ICdfJyxcclxuICBncmF2ZUFjY2VudDogJ2AnLFxyXG4gIGxvd2VyY2FzZUE6ICdhJyxcclxuICBsb3dlcmNhc2VCOiAnYicsXHJcbiAgbG93ZXJjYXNlQzogJ2MnLFxyXG4gIGxvd2VyY2FzZUQ6ICdkJyxcclxuICBsb3dlcmNhc2VFOiAnZScsXHJcbiAgbG93ZXJjYXNlRjogJ2YnLFxyXG4gIGxvd2VyY2FzZUc6ICdnJyxcclxuICBsb3dlcmNhc2VIOiAnaCcsXHJcbiAgbG93ZXJjYXNlSTogJ2knLFxyXG4gIGxvd2VyY2FzZUo6ICdqJyxcclxuICBsb3dlcmNhc2VLOiAnaycsXHJcbiAgbG93ZXJjYXNlTDogJ2wnLFxyXG4gIGxvd2VyY2FzZU06ICdtJyxcclxuICBsb3dlcmNhc2VOOiAnbicsXHJcbiAgbG93ZXJjYXNlTzogJ28nLFxyXG4gIGxvd2VyY2FzZVA6ICdwJyxcclxuICBsb3dlcmNhc2VROiAncScsXHJcbiAgbG93ZXJjYXNlUjogJ3InLFxyXG4gIGxvd2VyY2FzZVM6ICdzJyxcclxuICBsb3dlcmNhc2VUOiAndCcsXHJcbiAgbG93ZXJjYXNlVTogJ3UnLFxyXG4gIGxvd2VyY2FzZVY6ICd2JyxcclxuICBsb3dlcmNhc2VXOiAndycsXHJcbiAgbG93ZXJjYXNlWDogJ3gnLFxyXG4gIGxvd2VyY2FzZVk6ICd5JyxcclxuICBsb3dlcmNhc2VaOiAneicsXHJcbiAgbGVmdEN1cmx5QnJhY2U6ICd7JyxcclxuICB2ZXJ0aWNhbEJhcjogJ3wnLFxyXG4gIHJpZ2h0Q3VybHlCcmFjZTogJ30nLFxyXG4gIHRpbGRlOiAnficsXHJcbiAgcmVwbGFjZW1lbnRDaGFyYWN0ZXI6ICfvv70nXHJcbn0pXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark-util-symbol/values.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/constructs.js":
/*!******************************************************!*\
  !*** ./node_modules/micromark/dev/lib/constructs.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"attentionMarkers\": function() { return /* binding */ attentionMarkers; },\n/* harmony export */   \"contentInitial\": function() { return /* binding */ contentInitial; },\n/* harmony export */   \"disable\": function() { return /* binding */ disable; },\n/* harmony export */   \"document\": function() { return /* binding */ document; },\n/* harmony export */   \"flow\": function() { return /* binding */ flow; },\n/* harmony export */   \"flowInitial\": function() { return /* binding */ flowInitial; },\n/* harmony export */   \"insideSpan\": function() { return /* binding */ insideSpan; },\n/* harmony export */   \"string\": function() { return /* binding */ string; },\n/* harmony export */   \"text\": function() { return /* binding */ text; }\n/* harmony export */ });\n/* harmony import */ var micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-core-commonmark */ \"./node_modules/micromark-core-commonmark/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var _initialize_text_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initialize/text.js */ \"./node_modules/micromark/dev/lib/initialize/text.js\");\n/**\r\n * @typedef {import('micromark-util-types').Extension} Extension\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/** @satisfies {Extension['document']} */\r\nconst document = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.plusSign]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit0]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit1]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit2]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit3]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit4]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit5]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit6]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit7]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit8]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.digit9]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.list,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.greaterThan]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.blockQuote\r\n}\r\n\r\n/** @satisfies {Extension['contentInitial']} */\r\nconst contentInitial = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftSquareBracket]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.definition\r\n}\r\n\r\n/** @satisfies {Extension['flowInitial']} */\r\nconst flowInitial = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.horizontalTab]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeIndented,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.virtualSpace]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeIndented,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.space]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeIndented\r\n}\r\n\r\n/** @satisfies {Extension['flow']} */\r\nconst flow = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.numberSign]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.headingAtx,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.thematicBreak,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.dash]: [micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.setextUnderline, micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.thematicBreak],\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.htmlFlow,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.equalsTo]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.setextUnderline,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.thematicBreak,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.graveAccent]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeFenced,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.tilde]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeFenced\r\n}\r\n\r\n/** @satisfies {Extension['string']} */\r\nconst string = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ampersand]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.characterReference,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.characterEscape\r\n}\r\n\r\n/** @satisfies {Extension['text']} */\r\nconst text = {\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.carriageReturn]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.lineEnding,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lineFeed]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.lineEnding,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.carriageReturnLineFeed]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.lineEnding,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.exclamationMark]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.labelStartImage,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ampersand]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.characterReference,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.attention,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lessThan]: [micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.autolink, micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.htmlText],\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.leftSquareBracket]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.labelStartLink,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.backslash]: [micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.hardBreakEscape, micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.characterEscape],\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.rightSquareBracket]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.labelEnd,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.attention,\r\n  [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.graveAccent]: micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.codeText\r\n}\r\n\r\n/** @satisfies {Extension['insideSpan']} */\r\nconst insideSpan = {null: [micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.attention, _initialize_text_js__WEBPACK_IMPORTED_MODULE_2__.resolver]}\r\n\r\n/** @satisfies {Extension['attentionMarkers']} */\r\nconst attentionMarkers = {null: [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.asterisk, micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.underscore]}\r\n\r\n/** @satisfies {Extension['disable']} */\r\nconst disable = {null: []}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvY29uc3RydWN0cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0E7QUFzQmtDO0FBQ2tCO0FBQ1E7QUFDNUQ7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ2hDO0FBQ1AsR0FBRywwRUFBYyxHQUFHLDJEQUFJO0FBQ3hCLEdBQUcsMEVBQWMsR0FBRywyREFBSTtBQUN4QixHQUFHLHNFQUFVLEdBQUcsMkRBQUk7QUFDcEIsR0FBRyx3RUFBWSxHQUFHLDJEQUFJO0FBQ3RCLEdBQUcsd0VBQVksR0FBRywyREFBSTtBQUN0QixHQUFHLHdFQUFZLEdBQUcsMkRBQUk7QUFDdEIsR0FBRyx3RUFBWSxHQUFHLDJEQUFJO0FBQ3RCLEdBQUcsd0VBQVksR0FBRywyREFBSTtBQUN0QixHQUFHLHdFQUFZLEdBQUcsMkRBQUk7QUFDdEIsR0FBRyx3RUFBWSxHQUFHLDJEQUFJO0FBQ3RCLEdBQUcsd0VBQVksR0FBRywyREFBSTtBQUN0QixHQUFHLHdFQUFZLEdBQUcsMkRBQUk7QUFDdEIsR0FBRyx3RUFBWSxHQUFHLDJEQUFJO0FBQ3RCLEdBQUcsNkVBQWlCLEdBQUcsaUVBQVU7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiw2QkFBNkI7QUFDdEM7QUFDUCxHQUFHLG1GQUF1QixHQUFHLGlFQUFVO0FBQ3ZDO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQ25DO0FBQ1AsR0FBRywrRUFBbUIsR0FBRyxtRUFBWTtBQUNyQyxHQUFHLDhFQUFrQixHQUFHLG1FQUFZO0FBQ3BDLEdBQUcsdUVBQVcsR0FBRyxtRUFBWTtBQUM3QjtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUM1QjtBQUNQLEdBQUcsNEVBQWdCLEdBQUcsaUVBQVU7QUFDaEMsR0FBRywwRUFBYyxHQUFHLG9FQUFhO0FBQ2pDLEdBQUcsc0VBQVUsSUFBSSxzRUFBZSxFQUFFLG9FQUFhO0FBQy9DLEdBQUcsMEVBQWMsR0FBRywrREFBUTtBQUM1QixHQUFHLDBFQUFjLEdBQUcsc0VBQWU7QUFDbkMsR0FBRyw0RUFBZ0IsR0FBRyxvRUFBYTtBQUNuQyxHQUFHLDZFQUFpQixHQUFHLGlFQUFVO0FBQ2pDLEdBQUcsdUVBQVcsR0FBRyxpRUFBVTtBQUMzQjtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUM5QjtBQUNQLEdBQUcsMkVBQWUsR0FBRyx5RUFBa0I7QUFDdkMsR0FBRywyRUFBZSxHQUFHLHNFQUFlO0FBQ3BDO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQzVCO0FBQ1AsR0FBRyxnRkFBb0IsR0FBRyxpRUFBVTtBQUNwQyxHQUFHLDBFQUFjLEdBQUcsaUVBQVU7QUFDOUIsR0FBRyx3RkFBNEIsR0FBRyxpRUFBVTtBQUM1QyxHQUFHLGlGQUFxQixHQUFHLHNFQUFlO0FBQzFDLEdBQUcsMkVBQWUsR0FBRyx5RUFBa0I7QUFDdkMsR0FBRywwRUFBYyxHQUFHLGdFQUFTO0FBQzdCLEdBQUcsMEVBQWMsSUFBSSwrREFBUSxFQUFFLCtEQUFRO0FBQ3ZDLEdBQUcsbUZBQXVCLEdBQUcscUVBQWM7QUFDM0MsR0FBRywyRUFBZSxJQUFJLHNFQUFlLEVBQUUsc0VBQWU7QUFDdEQsR0FBRyxvRkFBd0IsR0FBRywrREFBUTtBQUN0QyxHQUFHLDRFQUFnQixHQUFHLGdFQUFTO0FBQy9CLEdBQUcsNkVBQWlCLEdBQUcsK0RBQVE7QUFDL0I7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDbEMsb0JBQW9CLE9BQU8sZ0VBQVMsRUFBRSx5REFBVztBQUN4RDtBQUNBLGdCQUFnQiwrQkFBK0I7QUFDeEMsMEJBQTBCLE9BQU8sMEVBQWMsRUFBRSw0RUFBZ0I7QUFDeEU7QUFDQSxnQkFBZ0Isc0JBQXNCO0FBQy9CLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvY29uc3RydWN0cy5qcz8wNjIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkV4dGVuc2lvbn0gRXh0ZW5zaW9uXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtcclxuICBhdHRlbnRpb24sXHJcbiAgYXV0b2xpbmssXHJcbiAgYmxvY2tRdW90ZSxcclxuICBjaGFyYWN0ZXJFc2NhcGUsXHJcbiAgY2hhcmFjdGVyUmVmZXJlbmNlLFxyXG4gIGNvZGVGZW5jZWQsXHJcbiAgY29kZUluZGVudGVkLFxyXG4gIGNvZGVUZXh0LFxyXG4gIGRlZmluaXRpb24sXHJcbiAgaGFyZEJyZWFrRXNjYXBlLFxyXG4gIGhlYWRpbmdBdHgsXHJcbiAgaHRtbEZsb3csXHJcbiAgaHRtbFRleHQsXHJcbiAgbGFiZWxFbmQsXHJcbiAgbGFiZWxTdGFydEltYWdlLFxyXG4gIGxhYmVsU3RhcnRMaW5rLFxyXG4gIGxpbmVFbmRpbmcsXHJcbiAgbGlzdCxcclxuICBzZXRleHRVbmRlcmxpbmUsXHJcbiAgdGhlbWF0aWNCcmVha1xyXG59IGZyb20gJ21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsnXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHtyZXNvbHZlciBhcyByZXNvbHZlVGV4dH0gZnJvbSAnLi9pbml0aWFsaXplL3RleHQuanMnXHJcblxyXG4vKiogQHNhdGlzZmllcyB7RXh0ZW5zaW9uWydkb2N1bWVudCddfSAqL1xyXG5leHBvcnQgY29uc3QgZG9jdW1lbnQgPSB7XHJcbiAgW2NvZGVzLmFzdGVyaXNrXTogbGlzdCxcclxuICBbY29kZXMucGx1c1NpZ25dOiBsaXN0LFxyXG4gIFtjb2Rlcy5kYXNoXTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQwXTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQxXTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQyXTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQzXTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ0XTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ1XTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ2XTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ3XTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ4XTogbGlzdCxcclxuICBbY29kZXMuZGlnaXQ5XTogbGlzdCxcclxuICBbY29kZXMuZ3JlYXRlclRoYW5dOiBibG9ja1F1b3RlXHJcbn1cclxuXHJcbi8qKiBAc2F0aXNmaWVzIHtFeHRlbnNpb25bJ2NvbnRlbnRJbml0aWFsJ119ICovXHJcbmV4cG9ydCBjb25zdCBjb250ZW50SW5pdGlhbCA9IHtcclxuICBbY29kZXMubGVmdFNxdWFyZUJyYWNrZXRdOiBkZWZpbml0aW9uXHJcbn1cclxuXHJcbi8qKiBAc2F0aXNmaWVzIHtFeHRlbnNpb25bJ2Zsb3dJbml0aWFsJ119ICovXHJcbmV4cG9ydCBjb25zdCBmbG93SW5pdGlhbCA9IHtcclxuICBbY29kZXMuaG9yaXpvbnRhbFRhYl06IGNvZGVJbmRlbnRlZCxcclxuICBbY29kZXMudmlydHVhbFNwYWNlXTogY29kZUluZGVudGVkLFxyXG4gIFtjb2Rlcy5zcGFjZV06IGNvZGVJbmRlbnRlZFxyXG59XHJcblxyXG4vKiogQHNhdGlzZmllcyB7RXh0ZW5zaW9uWydmbG93J119ICovXHJcbmV4cG9ydCBjb25zdCBmbG93ID0ge1xyXG4gIFtjb2Rlcy5udW1iZXJTaWduXTogaGVhZGluZ0F0eCxcclxuICBbY29kZXMuYXN0ZXJpc2tdOiB0aGVtYXRpY0JyZWFrLFxyXG4gIFtjb2Rlcy5kYXNoXTogW3NldGV4dFVuZGVybGluZSwgdGhlbWF0aWNCcmVha10sXHJcbiAgW2NvZGVzLmxlc3NUaGFuXTogaHRtbEZsb3csXHJcbiAgW2NvZGVzLmVxdWFsc1RvXTogc2V0ZXh0VW5kZXJsaW5lLFxyXG4gIFtjb2Rlcy51bmRlcnNjb3JlXTogdGhlbWF0aWNCcmVhayxcclxuICBbY29kZXMuZ3JhdmVBY2NlbnRdOiBjb2RlRmVuY2VkLFxyXG4gIFtjb2Rlcy50aWxkZV06IGNvZGVGZW5jZWRcclxufVxyXG5cclxuLyoqIEBzYXRpc2ZpZXMge0V4dGVuc2lvblsnc3RyaW5nJ119ICovXHJcbmV4cG9ydCBjb25zdCBzdHJpbmcgPSB7XHJcbiAgW2NvZGVzLmFtcGVyc2FuZF06IGNoYXJhY3RlclJlZmVyZW5jZSxcclxuICBbY29kZXMuYmFja3NsYXNoXTogY2hhcmFjdGVyRXNjYXBlXHJcbn1cclxuXHJcbi8qKiBAc2F0aXNmaWVzIHtFeHRlbnNpb25bJ3RleHQnXX0gKi9cclxuZXhwb3J0IGNvbnN0IHRleHQgPSB7XHJcbiAgW2NvZGVzLmNhcnJpYWdlUmV0dXJuXTogbGluZUVuZGluZyxcclxuICBbY29kZXMubGluZUZlZWRdOiBsaW5lRW5kaW5nLFxyXG4gIFtjb2Rlcy5jYXJyaWFnZVJldHVybkxpbmVGZWVkXTogbGluZUVuZGluZyxcclxuICBbY29kZXMuZXhjbGFtYXRpb25NYXJrXTogbGFiZWxTdGFydEltYWdlLFxyXG4gIFtjb2Rlcy5hbXBlcnNhbmRdOiBjaGFyYWN0ZXJSZWZlcmVuY2UsXHJcbiAgW2NvZGVzLmFzdGVyaXNrXTogYXR0ZW50aW9uLFxyXG4gIFtjb2Rlcy5sZXNzVGhhbl06IFthdXRvbGluaywgaHRtbFRleHRdLFxyXG4gIFtjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldF06IGxhYmVsU3RhcnRMaW5rLFxyXG4gIFtjb2Rlcy5iYWNrc2xhc2hdOiBbaGFyZEJyZWFrRXNjYXBlLCBjaGFyYWN0ZXJFc2NhcGVdLFxyXG4gIFtjb2Rlcy5yaWdodFNxdWFyZUJyYWNrZXRdOiBsYWJlbEVuZCxcclxuICBbY29kZXMudW5kZXJzY29yZV06IGF0dGVudGlvbixcclxuICBbY29kZXMuZ3JhdmVBY2NlbnRdOiBjb2RlVGV4dFxyXG59XHJcblxyXG4vKiogQHNhdGlzZmllcyB7RXh0ZW5zaW9uWydpbnNpZGVTcGFuJ119ICovXHJcbmV4cG9ydCBjb25zdCBpbnNpZGVTcGFuID0ge251bGw6IFthdHRlbnRpb24sIHJlc29sdmVUZXh0XX1cclxuXHJcbi8qKiBAc2F0aXNmaWVzIHtFeHRlbnNpb25bJ2F0dGVudGlvbk1hcmtlcnMnXX0gKi9cclxuZXhwb3J0IGNvbnN0IGF0dGVudGlvbk1hcmtlcnMgPSB7bnVsbDogW2NvZGVzLmFzdGVyaXNrLCBjb2Rlcy51bmRlcnNjb3JlXX1cclxuXHJcbi8qKiBAc2F0aXNmaWVzIHtFeHRlbnNpb25bJ2Rpc2FibGUnXX0gKi9cclxuZXhwb3J0IGNvbnN0IGRpc2FibGUgPSB7bnVsbDogW119XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/constructs.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/create-tokenizer.js":
/*!************************************************************!*\
  !*** ./node_modules/micromark/dev/lib/create-tokenizer.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTokenizer\": function() { return /* binding */ createTokenizer; }\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-resolve-all */ \"./node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-symbol/values.js */ \"./node_modules/micromark-util-symbol/values.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Chunk} Chunk\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\r\n * @typedef {import('micromark-util-types').Point} Point\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenType} TokenType\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n */\r\n\r\n/**\r\n * @callback Restore\r\n * @returns {void}\r\n *\r\n * @typedef Info\r\n * @property {Restore} restore\r\n * @property {number} from\r\n *\r\n * @callback ReturnHandle\r\n *   Handle a successful run.\r\n * @param {Construct} construct\r\n * @param {Info} info\r\n * @returns {void}\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('micromark')\r\n\r\n/**\r\n * Create a tokenizer.\r\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\r\n * The parser is the object dealing with it all.\r\n * `initialize` works like other constructs, except that only its `tokenize`\r\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\r\n * `from` can be given to set the point before the first character, although\r\n * when further lines are indented, they must be set with `defineSkip`.\r\n *\r\n * @param {ParseContext} parser\r\n * @param {InitialConstruct} initialize\r\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\r\n * @returns {TokenizeContext}\r\n */\r\nfunction createTokenizer(parser, initialize, from) {\r\n  /** @type {Point} */\r\n  let point = Object.assign(\r\n    from ? Object.assign({}, from) : {line: 1, column: 1, offset: 0},\r\n    {_index: 0, _bufferIndex: -1}\r\n  )\r\n  /** @type {Record<string, number>} */\r\n  const columnStart = {}\r\n  /** @type {Array<Construct>} */\r\n  const resolveAllConstructs = []\r\n  /** @type {Array<Chunk>} */\r\n  let chunks = []\r\n  /** @type {Array<Token>} */\r\n  let stack = []\r\n  /** @type {boolean | undefined} */\r\n  let consumed = true\r\n\r\n  /**\r\n   * Tools used for tokenizing.\r\n   *\r\n   * @type {Effects}\r\n   */\r\n  const effects = {\r\n    consume,\r\n    enter,\r\n    exit,\r\n    attempt: constructFactory(onsuccessfulconstruct),\r\n    check: constructFactory(onsuccessfulcheck),\r\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\r\n  }\r\n\r\n  /**\r\n   * State and tools for resolving and serializing.\r\n   *\r\n   * @type {TokenizeContext}\r\n   */\r\n  const context = {\r\n    previous: micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof,\r\n    code: micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof,\r\n    containerState: {},\r\n    events: [],\r\n    parser,\r\n    sliceStream,\r\n    sliceSerialize,\r\n    now,\r\n    defineSkip,\r\n    write\r\n  }\r\n\r\n  /**\r\n   * The state function.\r\n   *\r\n   * @type {State | void}\r\n   */\r\n  let state = initialize.tokenize.call(context, effects)\r\n\r\n  /**\r\n   * Track which character we expect to be consumed, to catch bugs.\r\n   *\r\n   * @type {Code}\r\n   */\r\n  let expectedCode\r\n\r\n  if (initialize.resolveAll) {\r\n    resolveAllConstructs.push(initialize)\r\n  }\r\n\r\n  return context\r\n\r\n  /** @type {TokenizeContext['write']} */\r\n  function write(slice) {\r\n    chunks = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__.push)(chunks, slice)\r\n\r\n    main()\r\n\r\n    // Exit if we’re not done, resolve might change stuff.\r\n    if (chunks[chunks.length - 1] !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\r\n      return []\r\n    }\r\n\r\n    addResult(initialize, 0)\r\n\r\n    // Otherwise, resolve, and exit.\r\n    context.events = (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_4__.resolveAll)(resolveAllConstructs, context.events, context)\r\n\r\n    return context.events\r\n  }\r\n\r\n  //\r\n  // Tools.\r\n  //\r\n\r\n  /** @type {TokenizeContext['sliceSerialize']} */\r\n  function sliceSerialize(token, expandTabs) {\r\n    return serializeChunks(sliceStream(token), expandTabs)\r\n  }\r\n\r\n  /** @type {TokenizeContext['sliceStream']} */\r\n  function sliceStream(token) {\r\n    return sliceChunks(chunks, token)\r\n  }\r\n\r\n  /** @type {TokenizeContext['now']} */\r\n  function now() {\r\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\r\n    const {line, column, offset, _index, _bufferIndex} = point\r\n    return {line, column, offset, _index, _bufferIndex}\r\n  }\r\n\r\n  /** @type {TokenizeContext['defineSkip']} */\r\n  function defineSkip(value) {\r\n    columnStart[value.line] = value.column\r\n    accountForPotentialSkip()\r\n    debug('position: define skip: `%j`', point)\r\n  }\r\n\r\n  //\r\n  // State management.\r\n  //\r\n\r\n  /**\r\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\r\n   * `consume`).\r\n   * Here is where we walk through the chunks, which either include strings of\r\n   * several characters, or numerical character codes.\r\n   * The reason to do this in a loop instead of a call is so the stack can\r\n   * drain.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  function main() {\r\n    /** @type {number} */\r\n    let chunkIndex\r\n\r\n    while (point._index < chunks.length) {\r\n      const chunk = chunks[point._index]\r\n\r\n      // If we’re in a buffer chunk, loop through it.\r\n      if (typeof chunk === 'string') {\r\n        chunkIndex = point._index\r\n\r\n        if (point._bufferIndex < 0) {\r\n          point._bufferIndex = 0\r\n        }\r\n\r\n        while (\r\n          point._index === chunkIndex &&\r\n          point._bufferIndex < chunk.length\r\n        ) {\r\n          go(chunk.charCodeAt(point._bufferIndex))\r\n        }\r\n      } else {\r\n        go(chunk)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deal with one code.\r\n   *\r\n   * @param {Code} code\r\n   * @returns {void}\r\n   */\r\n  function go(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(consumed === true, 'expected character to be consumed')\r\n    consumed = undefined\r\n    debug('main: passing `%s` to %s', code, state && state.name)\r\n    expectedCode = code\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(typeof state === 'function', 'expected state')\r\n    state = state(code)\r\n  }\r\n\r\n  /** @type {Effects['consume']} */\r\n  function consume(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(code === expectedCode, 'expected given code to equal expected code')\r\n\r\n    debug('consume: `%s`', code)\r\n\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(\r\n      consumed === undefined,\r\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\r\n    )\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(\r\n      code === null\r\n        ? context.events.length === 0 ||\r\n            context.events[context.events.length - 1][0] === 'exit'\r\n        : context.events[context.events.length - 1][0] === 'enter',\r\n      'expected last token to be open'\r\n    )\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\r\n      point.line++\r\n      point.column = 1\r\n      point.offset += code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.carriageReturnLineFeed ? 2 : 1\r\n      accountForPotentialSkip()\r\n      debug('position: after eol: `%j`', point)\r\n    } else if (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.virtualSpace) {\r\n      point.column++\r\n      point.offset++\r\n    }\r\n\r\n    // Not in a string chunk.\r\n    if (point._bufferIndex < 0) {\r\n      point._index++\r\n    } else {\r\n      point._bufferIndex++\r\n\r\n      // At end of string chunk.\r\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\r\n      // strings.\r\n      if (point._bufferIndex === chunks[point._index].length) {\r\n        point._bufferIndex = -1\r\n        point._index++\r\n      }\r\n    }\r\n\r\n    // Expose the previous character.\r\n    context.previous = code\r\n\r\n    // Mark as consumed.\r\n    consumed = true\r\n  }\r\n\r\n  /** @type {Effects['enter']} */\r\n  function enter(type, fields) {\r\n    /** @type {Token} */\r\n    // @ts-expect-error Patch instead of assign required fields to help GC.\r\n    const token = fields || {}\r\n    token.type = type\r\n    token.start = now()\r\n\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(typeof type === 'string', 'expected string type')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(type.length > 0, 'expected non-empty string')\r\n    debug('enter: `%s`', type)\r\n\r\n    context.events.push(['enter', token, context])\r\n\r\n    stack.push(token)\r\n\r\n    return token\r\n  }\r\n\r\n  /** @type {Effects['exit']} */\r\n  function exit(type) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(typeof type === 'string', 'expected string type')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(type.length > 0, 'expected non-empty string')\r\n\r\n    const token = stack.pop()\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(token, 'cannot close w/o open tokens')\r\n    token.end = now()\r\n\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(type === token.type, 'expected exit token to match current token')\r\n\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(\r\n      !(\r\n        token.start._index === token.end._index &&\r\n        token.start._bufferIndex === token.end._bufferIndex\r\n      ),\r\n      'expected non-empty token (`' + type + '`)'\r\n    )\r\n\r\n    debug('exit: `%s`', token.type)\r\n    context.events.push(['exit', token, context])\r\n\r\n    return token\r\n  }\r\n\r\n  /**\r\n   * Use results.\r\n   *\r\n   * @type {ReturnHandle}\r\n   */\r\n  function onsuccessfulconstruct(construct, info) {\r\n    addResult(construct, info.from)\r\n  }\r\n\r\n  /**\r\n   * Discard results.\r\n   *\r\n   * @type {ReturnHandle}\r\n   */\r\n  function onsuccessfulcheck(_, info) {\r\n    info.restore()\r\n  }\r\n\r\n  /**\r\n   * Factory to attempt/check/interrupt.\r\n   *\r\n   * @param {ReturnHandle} onreturn\r\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\r\n   */\r\n  function constructFactory(onreturn, fields) {\r\n    return hook\r\n\r\n    /**\r\n     * Handle either an object mapping codes to constructs, a list of\r\n     * constructs, or a single construct.\r\n     *\r\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\r\n     * @param {State} returnState\r\n     * @param {State | undefined} [bogusState]\r\n     * @returns {State}\r\n     */\r\n    function hook(constructs, returnState, bogusState) {\r\n      /** @type {Array<Construct>} */\r\n      let listOfConstructs\r\n      /** @type {number} */\r\n      let constructIndex\r\n      /** @type {Construct} */\r\n      let currentConstruct\r\n      /** @type {Info} */\r\n      let info\r\n\r\n      return Array.isArray(constructs)\r\n        ? /* c8 ignore next 1 */\r\n          handleListOfConstructs(constructs)\r\n        : 'tokenize' in constructs\r\n        ? // @ts-expect-error Looks like a construct.\r\n          handleListOfConstructs([constructs])\r\n        : handleMapOfConstructs(constructs)\r\n\r\n      /**\r\n       * Handle a list of construct.\r\n       *\r\n       * @param {ConstructRecord} map\r\n       * @returns {State}\r\n       */\r\n      function handleMapOfConstructs(map) {\r\n        return start\r\n\r\n        /** @type {State} */\r\n        function start(code) {\r\n          const def = code !== null && map[code]\r\n          const all = code !== null && map.null\r\n          const list = [\r\n            // To do: add more extension tests.\r\n            /* c8 ignore next 2 */\r\n            ...(Array.isArray(def) ? def : def ? [def] : []),\r\n            ...(Array.isArray(all) ? all : all ? [all] : [])\r\n          ]\r\n\r\n          return handleListOfConstructs(list)(code)\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Handle a list of construct.\r\n       *\r\n       * @param {Array<Construct>} list\r\n       * @returns {State}\r\n       */\r\n      function handleListOfConstructs(list) {\r\n        listOfConstructs = list\r\n        constructIndex = 0\r\n\r\n        if (list.length === 0) {\r\n          (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(bogusState, 'expected `bogusState` to be given')\r\n          return bogusState\r\n        }\r\n\r\n        return handleConstruct(list[constructIndex])\r\n      }\r\n\r\n      /**\r\n       * Handle a single construct.\r\n       *\r\n       * @param {Construct} construct\r\n       * @returns {State}\r\n       */\r\n      function handleConstruct(construct) {\r\n        return start\r\n\r\n        /** @type {State} */\r\n        function start(code) {\r\n          // To do: not needed to store if there is no bogus state, probably?\r\n          // Currently doesn’t work because `inspect` in document does a check\r\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\r\n          // by not storing.\r\n          info = store()\r\n          currentConstruct = construct\r\n\r\n          if (!construct.partial) {\r\n            context.currentConstruct = construct\r\n          }\r\n\r\n          // Always populated by defaults.\r\n          (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(\r\n            context.parser.constructs.disable.null,\r\n            'expected `disable.null` to be populated'\r\n          )\r\n\r\n          if (\r\n            construct.name &&\r\n            context.parser.constructs.disable.null.includes(construct.name)\r\n          ) {\r\n            return nok(code)\r\n          }\r\n\r\n          return construct.tokenize.call(\r\n            // If we do have fields, create an object w/ `context` as its\r\n            // prototype.\r\n            // This allows a “live binding”, which is needed for `interrupt`.\r\n            fields ? Object.assign(Object.create(context), fields) : context,\r\n            effects,\r\n            ok,\r\n            nok\r\n          )(code)\r\n        }\r\n      }\r\n\r\n      /** @type {State} */\r\n      function ok(code) {\r\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(code === expectedCode, 'expected code')\r\n        consumed = true\r\n        onreturn(currentConstruct, info)\r\n        return returnState\r\n      }\r\n\r\n      /** @type {State} */\r\n      function nok(code) {\r\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(code === expectedCode, 'expected code')\r\n        consumed = true\r\n        info.restore()\r\n\r\n        if (++constructIndex < listOfConstructs.length) {\r\n          return handleConstruct(listOfConstructs[constructIndex])\r\n        }\r\n\r\n        return bogusState\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Construct} construct\r\n   * @param {number} from\r\n   * @returns {void}\r\n   */\r\n  function addResult(construct, from) {\r\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\r\n      resolveAllConstructs.push(construct)\r\n    }\r\n\r\n    if (construct.resolve) {\r\n      (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__.splice)(\r\n        context.events,\r\n        from,\r\n        context.events.length - from,\r\n        construct.resolve(context.events.slice(from), context)\r\n      )\r\n    }\r\n\r\n    if (construct.resolveTo) {\r\n      context.events = construct.resolveTo(context.events, context)\r\n    }\r\n\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(\r\n      construct.partial ||\r\n        context.events.length === 0 ||\r\n        context.events[context.events.length - 1][0] === 'exit',\r\n      'expected last token to end'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Store state.\r\n   *\r\n   * @returns {Info}\r\n   */\r\n  function store() {\r\n    const startPoint = now()\r\n    const startPrevious = context.previous\r\n    const startCurrentConstruct = context.currentConstruct\r\n    const startEventsIndex = context.events.length\r\n    const startStack = Array.from(stack)\r\n\r\n    return {restore, from: startEventsIndex}\r\n\r\n    /**\r\n     * Restore state.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function restore() {\r\n      point = startPoint\r\n      context.previous = startPrevious\r\n      context.currentConstruct = startCurrentConstruct\r\n      context.events.length = startEventsIndex\r\n      stack = startStack\r\n      accountForPotentialSkip()\r\n      debug('position: restore: `%j`', point)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move the current point a bit forward in the line when it’s on a column\r\n   * skip.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  function accountForPotentialSkip() {\r\n    if (point.line in columnStart && point.column < 2) {\r\n      point.column = columnStart[point.line]\r\n      point.offset += columnStart[point.line] - 1\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the chunks from a slice of chunks in the range of a token.\r\n *\r\n * @param {Array<Chunk>} chunks\r\n * @param {Pick<Token, 'end' | 'start'>} token\r\n * @returns {Array<Chunk>}\r\n */\r\nfunction sliceChunks(chunks, token) {\r\n  const startIndex = token.start._index\r\n  const startBufferIndex = token.start._bufferIndex\r\n  const endIndex = token.end._index\r\n  const endBufferIndex = token.end._bufferIndex\r\n  /** @type {Array<Chunk>} */\r\n  let view\r\n\r\n  if (startIndex === endIndex) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(endBufferIndex > -1, 'expected non-negative end buffer index')\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(startBufferIndex > -1, 'expected non-negative start buffer index')\r\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\r\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\r\n  } else {\r\n    view = chunks.slice(startIndex, endIndex)\r\n\r\n    if (startBufferIndex > -1) {\r\n      const head = view[0]\r\n      if (typeof head === 'string') {\r\n        view[0] = head.slice(startBufferIndex)\r\n      } else {\r\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\r\n        view.shift()\r\n      }\r\n    }\r\n\r\n    if (endBufferIndex > 0) {\r\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\r\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\r\n    }\r\n  }\r\n\r\n  return view\r\n}\r\n\r\n/**\r\n * Get the string value of a slice of chunks.\r\n *\r\n * @param {Array<Chunk>} chunks\r\n * @param {boolean | undefined} [expandTabs=false]\r\n * @returns {string}\r\n */\r\nfunction serializeChunks(chunks, expandTabs) {\r\n  let index = -1\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {boolean | undefined} */\r\n  let atTab\r\n\r\n  while (++index < chunks.length) {\r\n    const chunk = chunks[index]\r\n    /** @type {string} */\r\n    let value\r\n\r\n    if (typeof chunk === 'string') {\r\n      value = chunk\r\n    } else\r\n      switch (chunk) {\r\n        case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.carriageReturn: {\r\n          value = micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.cr\r\n\r\n          break\r\n        }\r\n\r\n        case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lineFeed: {\r\n          value = micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.lf\r\n\r\n          break\r\n        }\r\n\r\n        case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.carriageReturnLineFeed: {\r\n          value = micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.cr + micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.lf\r\n\r\n          break\r\n        }\r\n\r\n        case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.horizontalTab: {\r\n          value = expandTabs ? micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.space : micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.ht\r\n\r\n          break\r\n        }\r\n\r\n        case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.virtualSpace: {\r\n          if (!expandTabs && atTab) continue\r\n          value = micromark_util_symbol_values_js__WEBPACK_IMPORTED_MODULE_6__.values.space\r\n\r\n          break\r\n        }\r\n\r\n        default: {\r\n          (0,uvu_assert__WEBPACK_IMPORTED_MODULE_1__.ok)(typeof chunk === 'number', 'expected number')\r\n          // Currently only replacement character.\r\n          value = String.fromCharCode(chunk)\r\n        }\r\n      }\r\n\r\n    atTab = chunk === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.horizontalTab\r\n    result.push(value)\r\n  }\r\n\r\n  return result.join('')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvY3JlYXRlLXRva2VuaXplci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSxnREFBZ0Q7QUFDN0QsYUFBYSx3Q0FBd0M7QUFDckQsYUFBYSxpREFBaUQ7QUFDOUQsYUFBYSw2Q0FBNkM7QUFDMUQsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSxnREFBZ0Q7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QixjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUMrQjtBQUM0QjtBQUNSO0FBQ0U7QUFDRDtBQUNFO0FBQ2Y7QUFDdkM7QUFDQSxjQUFjLGtDQUFXO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsa0JBQWtCO0FBQzdCLFdBQVcsb0RBQW9EO0FBQy9ELGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsMkJBQTJCLFdBQVcsOEJBQThCO0FBQ3BFLEtBQUs7QUFDTDtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGdCQUFnQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjLHFFQUFTO0FBQ3ZCLFVBQVUscUVBQVM7QUFDbkIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQSxhQUFhLDREQUFJO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHFFQUFTO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzRUFBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdDQUFnQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0EsNEVBQTRFO0FBQzVFLFdBQVcsNENBQTRDO0FBQ3ZELFlBQVk7QUFDWjtBQUNBO0FBQ0EsYUFBYSwrQkFBK0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixlQUFlO0FBQ2Y7QUFDQTtBQUNBLElBQUksOENBQU07QUFDVjtBQUNBO0FBQ0E7QUFDQSxJQUFJLCtDQUFNO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvQkFBb0I7QUFDakM7QUFDQSxJQUFJLDhDQUFNO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsSUFBSSwrQ0FBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBLElBQUksK0NBQU07QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNEVBQWtCO0FBQzFCO0FBQ0E7QUFDQSwrQkFBK0Isd0ZBQTRCO0FBQzNEO0FBQ0E7QUFDQSxNQUFNLGtCQUFrQiw4RUFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksK0NBQU07QUFDVixJQUFJLCtDQUFNO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQSxJQUFJLDhDQUFNO0FBQ1YsSUFBSSwrQ0FBTTtBQUNWO0FBQ0E7QUFDQSxJQUFJLCtDQUFNO0FBQ1Y7QUFDQTtBQUNBLElBQUksK0NBQU07QUFDVjtBQUNBLElBQUksK0NBQU07QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0IsY0FBYyxpQ0FBaUMsYUFBYTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBZ0Q7QUFDL0QsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsbUJBQW1CO0FBQ2xDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpQkFBaUI7QUFDbEMsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkMsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOENBQU07QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhDQUFNO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsT0FBTztBQUN4QjtBQUNBLFFBQVEsOENBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQSxRQUFRLDhDQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVc7QUFDeEIsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sOERBQU07QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4Q0FBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsOEJBQThCO0FBQ3pDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4Q0FBTTtBQUNWLElBQUksK0NBQU07QUFDVjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixRQUFRLDhDQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsYUFBYSxnRkFBb0I7QUFDakMsa0JBQWtCLHNFQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwRUFBYztBQUMzQixrQkFBa0Isc0VBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdGQUE0QjtBQUN6QyxrQkFBa0Isc0VBQVMsR0FBRyxzRUFBUztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsK0VBQW1CO0FBQ2hDLCtCQUErQix5RUFBWSxHQUFHLHNFQUFTO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4RUFBa0I7QUFDL0I7QUFDQSxrQkFBa0IseUVBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOENBQU07QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrRUFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvY3JlYXRlLXRva2VuaXplci5qcz8zMmU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNodW5rfSBDaHVua1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvZGV9IENvZGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdFJlY29yZH0gQ29uc3RydWN0UmVjb3JkXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRWZmZWN0c30gRWZmZWN0c1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkluaXRpYWxDb25zdHJ1Y3R9IEluaXRpYWxDb25zdHJ1Y3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5QYXJzZUNvbnRleHR9IFBhcnNlQ29udGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlBvaW50fSBQb2ludFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VufSBUb2tlblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuVHlwZX0gVG9rZW5UeXBlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICovXHJcblxyXG4vKipcclxuICogQGNhbGxiYWNrIFJlc3RvcmVcclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqXHJcbiAqIEB0eXBlZGVmIEluZm9cclxuICogQHByb3BlcnR5IHtSZXN0b3JlfSByZXN0b3JlXHJcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBmcm9tXHJcbiAqXHJcbiAqIEBjYWxsYmFjayBSZXR1cm5IYW5kbGVcclxuICogICBIYW5kbGUgYSBzdWNjZXNzZnVsIHJ1bi5cclxuICogQHBhcmFtIHtDb25zdHJ1Y3R9IGNvbnN0cnVjdFxyXG4gKiBAcGFyYW0ge0luZm99IGluZm9cclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqL1xyXG5cclxuaW1wb3J0IGNyZWF0ZURlYnVnIGZyb20gJ2RlYnVnJ1xyXG5pbXBvcnQge21hcmtkb3duTGluZUVuZGluZ30gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xyXG5pbXBvcnQge3B1c2gsIHNwbGljZX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2h1bmtlZCdcclxuaW1wb3J0IHtyZXNvbHZlQWxsfSBmcm9tICdtaWNyb21hcmstdXRpbC1yZXNvbHZlLWFsbCdcclxuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xyXG5pbXBvcnQge3ZhbHVlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3ZhbHVlcy5qcydcclxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXHJcblxyXG5jb25zdCBkZWJ1ZyA9IGNyZWF0ZURlYnVnKCdtaWNyb21hcmsnKVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIHRva2VuaXplci5cclxuICogVG9rZW5pemVycyBkZWFsIHdpdGggb25lIHR5cGUgb2YgZGF0YSAoZS5nLiwgY29udGFpbmVycywgZmxvdywgdGV4dCkuXHJcbiAqIFRoZSBwYXJzZXIgaXMgdGhlIG9iamVjdCBkZWFsaW5nIHdpdGggaXQgYWxsLlxyXG4gKiBgaW5pdGlhbGl6ZWAgd29ya3MgbGlrZSBvdGhlciBjb25zdHJ1Y3RzLCBleGNlcHQgdGhhdCBvbmx5IGl0cyBgdG9rZW5pemVgXHJcbiAqIGZ1bmN0aW9uIGlzIHVzZWQsIGluIHdoaWNoIGNhc2UgaXQgZG9lc27igJl0IHJlY2VpdmUgYW4gYG9rYCBvciBgbm9rYC5cclxuICogYGZyb21gIGNhbiBiZSBnaXZlbiB0byBzZXQgdGhlIHBvaW50IGJlZm9yZSB0aGUgZmlyc3QgY2hhcmFjdGVyLCBhbHRob3VnaFxyXG4gKiB3aGVuIGZ1cnRoZXIgbGluZXMgYXJlIGluZGVudGVkLCB0aGV5IG11c3QgYmUgc2V0IHdpdGggYGRlZmluZVNraXBgLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1BhcnNlQ29udGV4dH0gcGFyc2VyXHJcbiAqIEBwYXJhbSB7SW5pdGlhbENvbnN0cnVjdH0gaW5pdGlhbGl6ZVxyXG4gKiBAcGFyYW0ge09taXQ8UG9pbnQsICdfYnVmZmVySW5kZXgnIHwgJ19pbmRleCc+IHwgdW5kZWZpbmVkfSBbZnJvbV1cclxuICogQHJldHVybnMge1Rva2VuaXplQ29udGV4dH1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb2tlbml6ZXIocGFyc2VyLCBpbml0aWFsaXplLCBmcm9tKSB7XHJcbiAgLyoqIEB0eXBlIHtQb2ludH0gKi9cclxuICBsZXQgcG9pbnQgPSBPYmplY3QuYXNzaWduKFxyXG4gICAgZnJvbSA/IE9iamVjdC5hc3NpZ24oe30sIGZyb20pIDoge2xpbmU6IDEsIGNvbHVtbjogMSwgb2Zmc2V0OiAwfSxcclxuICAgIHtfaW5kZXg6IDAsIF9idWZmZXJJbmRleDogLTF9XHJcbiAgKVxyXG4gIC8qKiBAdHlwZSB7UmVjb3JkPHN0cmluZywgbnVtYmVyPn0gKi9cclxuICBjb25zdCBjb2x1bW5TdGFydCA9IHt9XHJcbiAgLyoqIEB0eXBlIHtBcnJheTxDb25zdHJ1Y3Q+fSAqL1xyXG4gIGNvbnN0IHJlc29sdmVBbGxDb25zdHJ1Y3RzID0gW11cclxuICAvKiogQHR5cGUge0FycmF5PENodW5rPn0gKi9cclxuICBsZXQgY2h1bmtzID0gW11cclxuICAvKiogQHR5cGUge0FycmF5PFRva2VuPn0gKi9cclxuICBsZXQgc3RhY2sgPSBbXVxyXG4gIC8qKiBAdHlwZSB7Ym9vbGVhbiB8IHVuZGVmaW5lZH0gKi9cclxuICBsZXQgY29uc3VtZWQgPSB0cnVlXHJcblxyXG4gIC8qKlxyXG4gICAqIFRvb2xzIHVzZWQgZm9yIHRva2VuaXppbmcuXHJcbiAgICpcclxuICAgKiBAdHlwZSB7RWZmZWN0c31cclxuICAgKi9cclxuICBjb25zdCBlZmZlY3RzID0ge1xyXG4gICAgY29uc3VtZSxcclxuICAgIGVudGVyLFxyXG4gICAgZXhpdCxcclxuICAgIGF0dGVtcHQ6IGNvbnN0cnVjdEZhY3Rvcnkob25zdWNjZXNzZnVsY29uc3RydWN0KSxcclxuICAgIGNoZWNrOiBjb25zdHJ1Y3RGYWN0b3J5KG9uc3VjY2Vzc2Z1bGNoZWNrKSxcclxuICAgIGludGVycnVwdDogY29uc3RydWN0RmFjdG9yeShvbnN1Y2Nlc3NmdWxjaGVjaywge2ludGVycnVwdDogdHJ1ZX0pXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGF0ZSBhbmQgdG9vbHMgZm9yIHJlc29sdmluZyBhbmQgc2VyaWFsaXppbmcuXHJcbiAgICpcclxuICAgKiBAdHlwZSB7VG9rZW5pemVDb250ZXh0fVxyXG4gICAqL1xyXG4gIGNvbnN0IGNvbnRleHQgPSB7XHJcbiAgICBwcmV2aW91czogY29kZXMuZW9mLFxyXG4gICAgY29kZTogY29kZXMuZW9mLFxyXG4gICAgY29udGFpbmVyU3RhdGU6IHt9LFxyXG4gICAgZXZlbnRzOiBbXSxcclxuICAgIHBhcnNlcixcclxuICAgIHNsaWNlU3RyZWFtLFxyXG4gICAgc2xpY2VTZXJpYWxpemUsXHJcbiAgICBub3csXHJcbiAgICBkZWZpbmVTa2lwLFxyXG4gICAgd3JpdGVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRoZSBzdGF0ZSBmdW5jdGlvbi5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtTdGF0ZSB8IHZvaWR9XHJcbiAgICovXHJcbiAgbGV0IHN0YXRlID0gaW5pdGlhbGl6ZS50b2tlbml6ZS5jYWxsKGNvbnRleHQsIGVmZmVjdHMpXHJcblxyXG4gIC8qKlxyXG4gICAqIFRyYWNrIHdoaWNoIGNoYXJhY3RlciB3ZSBleHBlY3QgdG8gYmUgY29uc3VtZWQsIHRvIGNhdGNoIGJ1Z3MuXHJcbiAgICpcclxuICAgKiBAdHlwZSB7Q29kZX1cclxuICAgKi9cclxuICBsZXQgZXhwZWN0ZWRDb2RlXHJcblxyXG4gIGlmIChpbml0aWFsaXplLnJlc29sdmVBbGwpIHtcclxuICAgIHJlc29sdmVBbGxDb25zdHJ1Y3RzLnB1c2goaW5pdGlhbGl6ZSlcclxuICB9XHJcblxyXG4gIHJldHVybiBjb250ZXh0XHJcblxyXG4gIC8qKiBAdHlwZSB7VG9rZW5pemVDb250ZXh0Wyd3cml0ZSddfSAqL1xyXG4gIGZ1bmN0aW9uIHdyaXRlKHNsaWNlKSB7XHJcbiAgICBjaHVua3MgPSBwdXNoKGNodW5rcywgc2xpY2UpXHJcblxyXG4gICAgbWFpbigpXHJcblxyXG4gICAgLy8gRXhpdCBpZiB3ZeKAmXJlIG5vdCBkb25lLCByZXNvbHZlIG1pZ2h0IGNoYW5nZSBzdHVmZi5cclxuICAgIGlmIChjaHVua3NbY2h1bmtzLmxlbmd0aCAtIDFdICE9PSBjb2Rlcy5lb2YpIHtcclxuICAgICAgcmV0dXJuIFtdXHJcbiAgICB9XHJcblxyXG4gICAgYWRkUmVzdWx0KGluaXRpYWxpemUsIDApXHJcblxyXG4gICAgLy8gT3RoZXJ3aXNlLCByZXNvbHZlLCBhbmQgZXhpdC5cclxuICAgIGNvbnRleHQuZXZlbnRzID0gcmVzb2x2ZUFsbChyZXNvbHZlQWxsQ29uc3RydWN0cywgY29udGV4dC5ldmVudHMsIGNvbnRleHQpXHJcblxyXG4gICAgcmV0dXJuIGNvbnRleHQuZXZlbnRzXHJcbiAgfVxyXG5cclxuICAvL1xyXG4gIC8vIFRvb2xzLlxyXG4gIC8vXHJcblxyXG4gIC8qKiBAdHlwZSB7VG9rZW5pemVDb250ZXh0WydzbGljZVNlcmlhbGl6ZSddfSAqL1xyXG4gIGZ1bmN0aW9uIHNsaWNlU2VyaWFsaXplKHRva2VuLCBleHBhbmRUYWJzKSB7XHJcbiAgICByZXR1cm4gc2VyaWFsaXplQ2h1bmtzKHNsaWNlU3RyZWFtKHRva2VuKSwgZXhwYW5kVGFicylcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7VG9rZW5pemVDb250ZXh0WydzbGljZVN0cmVhbSddfSAqL1xyXG4gIGZ1bmN0aW9uIHNsaWNlU3RyZWFtKHRva2VuKSB7XHJcbiAgICByZXR1cm4gc2xpY2VDaHVua3MoY2h1bmtzLCB0b2tlbilcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7VG9rZW5pemVDb250ZXh0Wydub3cnXX0gKi9cclxuICBmdW5jdGlvbiBub3coKSB7XHJcbiAgICAvLyBUaGlzIGlzIGEgaG90IHBhdGgsIHNvIHdlIGNsb25lIG1hbnVhbGx5IGluc3RlYWQgb2YgYE9iamVjdC5hc3NpZ24oe30sIHBvaW50KWBcclxuICAgIGNvbnN0IHtsaW5lLCBjb2x1bW4sIG9mZnNldCwgX2luZGV4LCBfYnVmZmVySW5kZXh9ID0gcG9pbnRcclxuICAgIHJldHVybiB7bGluZSwgY29sdW1uLCBvZmZzZXQsIF9pbmRleCwgX2J1ZmZlckluZGV4fVxyXG4gIH1cclxuXHJcbiAgLyoqIEB0eXBlIHtUb2tlbml6ZUNvbnRleHRbJ2RlZmluZVNraXAnXX0gKi9cclxuICBmdW5jdGlvbiBkZWZpbmVTa2lwKHZhbHVlKSB7XHJcbiAgICBjb2x1bW5TdGFydFt2YWx1ZS5saW5lXSA9IHZhbHVlLmNvbHVtblxyXG4gICAgYWNjb3VudEZvclBvdGVudGlhbFNraXAoKVxyXG4gICAgZGVidWcoJ3Bvc2l0aW9uOiBkZWZpbmUgc2tpcDogYCVqYCcsIHBvaW50KVxyXG4gIH1cclxuXHJcbiAgLy9cclxuICAvLyBTdGF0ZSBtYW5hZ2VtZW50LlxyXG4gIC8vXHJcblxyXG4gIC8qKlxyXG4gICAqIE1haW4gbG9vcCAobm90ZSB0aGF0IGBfaW5kZXhgIGFuZCBgX2J1ZmZlckluZGV4YCBpbiBgcG9pbnRgIGFyZSBtb2RpZmllZCBieVxyXG4gICAqIGBjb25zdW1lYCkuXHJcbiAgICogSGVyZSBpcyB3aGVyZSB3ZSB3YWxrIHRocm91Z2ggdGhlIGNodW5rcywgd2hpY2ggZWl0aGVyIGluY2x1ZGUgc3RyaW5ncyBvZlxyXG4gICAqIHNldmVyYWwgY2hhcmFjdGVycywgb3IgbnVtZXJpY2FsIGNoYXJhY3RlciBjb2Rlcy5cclxuICAgKiBUaGUgcmVhc29uIHRvIGRvIHRoaXMgaW4gYSBsb29wIGluc3RlYWQgb2YgYSBjYWxsIGlzIHNvIHRoZSBzdGFjayBjYW5cclxuICAgKiBkcmFpbi5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIG1haW4oKSB7XHJcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICAgIGxldCBjaHVua0luZGV4XHJcblxyXG4gICAgd2hpbGUgKHBvaW50Ll9pbmRleCA8IGNodW5rcy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgY2h1bmsgPSBjaHVua3NbcG9pbnQuX2luZGV4XVxyXG5cclxuICAgICAgLy8gSWYgd2XigJlyZSBpbiBhIGJ1ZmZlciBjaHVuaywgbG9vcCB0aHJvdWdoIGl0LlxyXG4gICAgICBpZiAodHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIGNodW5rSW5kZXggPSBwb2ludC5faW5kZXhcclxuXHJcbiAgICAgICAgaWYgKHBvaW50Ll9idWZmZXJJbmRleCA8IDApIHtcclxuICAgICAgICAgIHBvaW50Ll9idWZmZXJJbmRleCA9IDBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHdoaWxlIChcclxuICAgICAgICAgIHBvaW50Ll9pbmRleCA9PT0gY2h1bmtJbmRleCAmJlxyXG4gICAgICAgICAgcG9pbnQuX2J1ZmZlckluZGV4IDwgY2h1bmsubGVuZ3RoXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBnbyhjaHVuay5jaGFyQ29kZUF0KHBvaW50Ll9idWZmZXJJbmRleCkpXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGdvKGNodW5rKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZWFsIHdpdGggb25lIGNvZGUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge0NvZGV9IGNvZGVcclxuICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgKi9cclxuICBmdW5jdGlvbiBnbyhjb2RlKSB7XHJcbiAgICBhc3NlcnQoY29uc3VtZWQgPT09IHRydWUsICdleHBlY3RlZCBjaGFyYWN0ZXIgdG8gYmUgY29uc3VtZWQnKVxyXG4gICAgY29uc3VtZWQgPSB1bmRlZmluZWRcclxuICAgIGRlYnVnKCdtYWluOiBwYXNzaW5nIGAlc2AgdG8gJXMnLCBjb2RlLCBzdGF0ZSAmJiBzdGF0ZS5uYW1lKVxyXG4gICAgZXhwZWN0ZWRDb2RlID0gY29kZVxyXG4gICAgYXNzZXJ0KHR5cGVvZiBzdGF0ZSA9PT0gJ2Z1bmN0aW9uJywgJ2V4cGVjdGVkIHN0YXRlJylcclxuICAgIHN0YXRlID0gc3RhdGUoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7RWZmZWN0c1snY29uc3VtZSddfSAqL1xyXG4gIGZ1bmN0aW9uIGNvbnN1bWUoY29kZSkge1xyXG4gICAgYXNzZXJ0KGNvZGUgPT09IGV4cGVjdGVkQ29kZSwgJ2V4cGVjdGVkIGdpdmVuIGNvZGUgdG8gZXF1YWwgZXhwZWN0ZWQgY29kZScpXHJcblxyXG4gICAgZGVidWcoJ2NvbnN1bWU6IGAlc2AnLCBjb2RlKVxyXG5cclxuICAgIGFzc2VydChcclxuICAgICAgY29uc3VtZWQgPT09IHVuZGVmaW5lZCxcclxuICAgICAgJ2V4cGVjdGVkIGNvZGUgdG8gbm90IGhhdmUgYmVlbiBjb25zdW1lZDogdGhpcyBtaWdodCBiZSBiZWNhdXNlIGByZXR1cm4geChjb2RlKWAgaW5zdGVhZCBvZiBgcmV0dXJuIHhgIHdhcyB1c2VkJ1xyXG4gICAgKVxyXG4gICAgYXNzZXJ0KFxyXG4gICAgICBjb2RlID09PSBudWxsXHJcbiAgICAgICAgPyBjb250ZXh0LmV2ZW50cy5sZW5ndGggPT09IDAgfHxcclxuICAgICAgICAgICAgY29udGV4dC5ldmVudHNbY29udGV4dC5ldmVudHMubGVuZ3RoIC0gMV1bMF0gPT09ICdleGl0J1xyXG4gICAgICAgIDogY29udGV4dC5ldmVudHNbY29udGV4dC5ldmVudHMubGVuZ3RoIC0gMV1bMF0gPT09ICdlbnRlcicsXHJcbiAgICAgICdleHBlY3RlZCBsYXN0IHRva2VuIHRvIGJlIG9wZW4nXHJcbiAgICApXHJcblxyXG4gICAgaWYgKG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xyXG4gICAgICBwb2ludC5saW5lKytcclxuICAgICAgcG9pbnQuY29sdW1uID0gMVxyXG4gICAgICBwb2ludC5vZmZzZXQgKz0gY29kZSA9PT0gY29kZXMuY2FycmlhZ2VSZXR1cm5MaW5lRmVlZCA/IDIgOiAxXHJcbiAgICAgIGFjY291bnRGb3JQb3RlbnRpYWxTa2lwKClcclxuICAgICAgZGVidWcoJ3Bvc2l0aW9uOiBhZnRlciBlb2w6IGAlamAnLCBwb2ludClcclxuICAgIH0gZWxzZSBpZiAoY29kZSAhPT0gY29kZXMudmlydHVhbFNwYWNlKSB7XHJcbiAgICAgIHBvaW50LmNvbHVtbisrXHJcbiAgICAgIHBvaW50Lm9mZnNldCsrXHJcbiAgICB9XHJcblxyXG4gICAgLy8gTm90IGluIGEgc3RyaW5nIGNodW5rLlxyXG4gICAgaWYgKHBvaW50Ll9idWZmZXJJbmRleCA8IDApIHtcclxuICAgICAgcG9pbnQuX2luZGV4KytcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHBvaW50Ll9idWZmZXJJbmRleCsrXHJcblxyXG4gICAgICAvLyBBdCBlbmQgb2Ygc3RyaW5nIGNodW5rLlxyXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFBvaW50cyB3LyBub24tbmVnYXRpdmUgYF9idWZmZXJJbmRleGAgcmVmZXJlbmNlXHJcbiAgICAgIC8vIHN0cmluZ3MuXHJcbiAgICAgIGlmIChwb2ludC5fYnVmZmVySW5kZXggPT09IGNodW5rc1twb2ludC5faW5kZXhdLmxlbmd0aCkge1xyXG4gICAgICAgIHBvaW50Ll9idWZmZXJJbmRleCA9IC0xXHJcbiAgICAgICAgcG9pbnQuX2luZGV4KytcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEV4cG9zZSB0aGUgcHJldmlvdXMgY2hhcmFjdGVyLlxyXG4gICAgY29udGV4dC5wcmV2aW91cyA9IGNvZGVcclxuXHJcbiAgICAvLyBNYXJrIGFzIGNvbnN1bWVkLlxyXG4gICAgY29uc3VtZWQgPSB0cnVlXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge0VmZmVjdHNbJ2VudGVyJ119ICovXHJcbiAgZnVuY3Rpb24gZW50ZXIodHlwZSwgZmllbGRzKSB7XHJcbiAgICAvKiogQHR5cGUge1Rva2VufSAqL1xyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBQYXRjaCBpbnN0ZWFkIG9mIGFzc2lnbiByZXF1aXJlZCBmaWVsZHMgdG8gaGVscCBHQy5cclxuICAgIGNvbnN0IHRva2VuID0gZmllbGRzIHx8IHt9XHJcbiAgICB0b2tlbi50eXBlID0gdHlwZVxyXG4gICAgdG9rZW4uc3RhcnQgPSBub3coKVxyXG5cclxuICAgIGFzc2VydCh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycsICdleHBlY3RlZCBzdHJpbmcgdHlwZScpXHJcbiAgICBhc3NlcnQodHlwZS5sZW5ndGggPiAwLCAnZXhwZWN0ZWQgbm9uLWVtcHR5IHN0cmluZycpXHJcbiAgICBkZWJ1ZygnZW50ZXI6IGAlc2AnLCB0eXBlKVxyXG5cclxuICAgIGNvbnRleHQuZXZlbnRzLnB1c2goWydlbnRlcicsIHRva2VuLCBjb250ZXh0XSlcclxuXHJcbiAgICBzdGFjay5wdXNoKHRva2VuKVxyXG5cclxuICAgIHJldHVybiB0b2tlblxyXG4gIH1cclxuXHJcbiAgLyoqIEB0eXBlIHtFZmZlY3RzWydleGl0J119ICovXHJcbiAgZnVuY3Rpb24gZXhpdCh0eXBlKSB7XHJcbiAgICBhc3NlcnQodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnLCAnZXhwZWN0ZWQgc3RyaW5nIHR5cGUnKVxyXG4gICAgYXNzZXJ0KHR5cGUubGVuZ3RoID4gMCwgJ2V4cGVjdGVkIG5vbi1lbXB0eSBzdHJpbmcnKVxyXG5cclxuICAgIGNvbnN0IHRva2VuID0gc3RhY2sucG9wKClcclxuICAgIGFzc2VydCh0b2tlbiwgJ2Nhbm5vdCBjbG9zZSB3L28gb3BlbiB0b2tlbnMnKVxyXG4gICAgdG9rZW4uZW5kID0gbm93KClcclxuXHJcbiAgICBhc3NlcnQodHlwZSA9PT0gdG9rZW4udHlwZSwgJ2V4cGVjdGVkIGV4aXQgdG9rZW4gdG8gbWF0Y2ggY3VycmVudCB0b2tlbicpXHJcblxyXG4gICAgYXNzZXJ0KFxyXG4gICAgICAhKFxyXG4gICAgICAgIHRva2VuLnN0YXJ0Ll9pbmRleCA9PT0gdG9rZW4uZW5kLl9pbmRleCAmJlxyXG4gICAgICAgIHRva2VuLnN0YXJ0Ll9idWZmZXJJbmRleCA9PT0gdG9rZW4uZW5kLl9idWZmZXJJbmRleFxyXG4gICAgICApLFxyXG4gICAgICAnZXhwZWN0ZWQgbm9uLWVtcHR5IHRva2VuIChgJyArIHR5cGUgKyAnYCknXHJcbiAgICApXHJcblxyXG4gICAgZGVidWcoJ2V4aXQ6IGAlc2AnLCB0b2tlbi50eXBlKVxyXG4gICAgY29udGV4dC5ldmVudHMucHVzaChbJ2V4aXQnLCB0b2tlbiwgY29udGV4dF0pXHJcblxyXG4gICAgcmV0dXJuIHRva2VuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2UgcmVzdWx0cy5cclxuICAgKlxyXG4gICAqIEB0eXBlIHtSZXR1cm5IYW5kbGV9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gb25zdWNjZXNzZnVsY29uc3RydWN0KGNvbnN0cnVjdCwgaW5mbykge1xyXG4gICAgYWRkUmVzdWx0KGNvbnN0cnVjdCwgaW5mby5mcm9tKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGlzY2FyZCByZXN1bHRzLlxyXG4gICAqXHJcbiAgICogQHR5cGUge1JldHVybkhhbmRsZX1cclxuICAgKi9cclxuICBmdW5jdGlvbiBvbnN1Y2Nlc3NmdWxjaGVjayhfLCBpbmZvKSB7XHJcbiAgICBpbmZvLnJlc3RvcmUoKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmFjdG9yeSB0byBhdHRlbXB0L2NoZWNrL2ludGVycnVwdC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7UmV0dXJuSGFuZGxlfSBvbnJldHVyblxyXG4gICAqIEBwYXJhbSB7e2ludGVycnVwdD86IGJvb2xlYW4gfCB1bmRlZmluZWR9IHwgdW5kZWZpbmVkfSBbZmllbGRzXVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGNvbnN0cnVjdEZhY3Rvcnkob25yZXR1cm4sIGZpZWxkcykge1xyXG4gICAgcmV0dXJuIGhvb2tcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBlaXRoZXIgYW4gb2JqZWN0IG1hcHBpbmcgY29kZXMgdG8gY29uc3RydWN0cywgYSBsaXN0IG9mXHJcbiAgICAgKiBjb25zdHJ1Y3RzLCBvciBhIHNpbmdsZSBjb25zdHJ1Y3QuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtBcnJheTxDb25zdHJ1Y3Q+IHwgQ29uc3RydWN0IHwgQ29uc3RydWN0UmVjb3JkfSBjb25zdHJ1Y3RzXHJcbiAgICAgKiBAcGFyYW0ge1N0YXRlfSByZXR1cm5TdGF0ZVxyXG4gICAgICogQHBhcmFtIHtTdGF0ZSB8IHVuZGVmaW5lZH0gW2JvZ3VzU3RhdGVdXHJcbiAgICAgKiBAcmV0dXJucyB7U3RhdGV9XHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGhvb2soY29uc3RydWN0cywgcmV0dXJuU3RhdGUsIGJvZ3VzU3RhdGUpIHtcclxuICAgICAgLyoqIEB0eXBlIHtBcnJheTxDb25zdHJ1Y3Q+fSAqL1xyXG4gICAgICBsZXQgbGlzdE9mQ29uc3RydWN0c1xyXG4gICAgICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICAgICAgbGV0IGNvbnN0cnVjdEluZGV4XHJcbiAgICAgIC8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xyXG4gICAgICBsZXQgY3VycmVudENvbnN0cnVjdFxyXG4gICAgICAvKiogQHR5cGUge0luZm99ICovXHJcbiAgICAgIGxldCBpbmZvXHJcblxyXG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjb25zdHJ1Y3RzKVxyXG4gICAgICAgID8gLyogYzggaWdub3JlIG5leHQgMSAqL1xyXG4gICAgICAgICAgaGFuZGxlTGlzdE9mQ29uc3RydWN0cyhjb25zdHJ1Y3RzKVxyXG4gICAgICAgIDogJ3Rva2VuaXplJyBpbiBjb25zdHJ1Y3RzXHJcbiAgICAgICAgPyAvLyBAdHMtZXhwZWN0LWVycm9yIExvb2tzIGxpa2UgYSBjb25zdHJ1Y3QuXHJcbiAgICAgICAgICBoYW5kbGVMaXN0T2ZDb25zdHJ1Y3RzKFtjb25zdHJ1Y3RzXSlcclxuICAgICAgICA6IGhhbmRsZU1hcE9mQ29uc3RydWN0cyhjb25zdHJ1Y3RzKVxyXG5cclxuICAgICAgLyoqXHJcbiAgICAgICAqIEhhbmRsZSBhIGxpc3Qgb2YgY29uc3RydWN0LlxyXG4gICAgICAgKlxyXG4gICAgICAgKiBAcGFyYW0ge0NvbnN0cnVjdFJlY29yZH0gbWFwXHJcbiAgICAgICAqIEByZXR1cm5zIHtTdGF0ZX1cclxuICAgICAgICovXHJcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZU1hcE9mQ29uc3RydWN0cyhtYXApIHtcclxuICAgICAgICByZXR1cm4gc3RhcnRcclxuXHJcbiAgICAgICAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cclxuICAgICAgICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XHJcbiAgICAgICAgICBjb25zdCBkZWYgPSBjb2RlICE9PSBudWxsICYmIG1hcFtjb2RlXVxyXG4gICAgICAgICAgY29uc3QgYWxsID0gY29kZSAhPT0gbnVsbCAmJiBtYXAubnVsbFxyXG4gICAgICAgICAgY29uc3QgbGlzdCA9IFtcclxuICAgICAgICAgICAgLy8gVG8gZG86IGFkZCBtb3JlIGV4dGVuc2lvbiB0ZXN0cy5cclxuICAgICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xyXG4gICAgICAgICAgICAuLi4oQXJyYXkuaXNBcnJheShkZWYpID8gZGVmIDogZGVmID8gW2RlZl0gOiBbXSksXHJcbiAgICAgICAgICAgIC4uLihBcnJheS5pc0FycmF5KGFsbCkgPyBhbGwgOiBhbGwgPyBbYWxsXSA6IFtdKVxyXG4gICAgICAgICAgXVxyXG5cclxuICAgICAgICAgIHJldHVybiBoYW5kbGVMaXN0T2ZDb25zdHJ1Y3RzKGxpc3QpKGNvZGUpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvKipcclxuICAgICAgICogSGFuZGxlIGEgbGlzdCBvZiBjb25zdHJ1Y3QuXHJcbiAgICAgICAqXHJcbiAgICAgICAqIEBwYXJhbSB7QXJyYXk8Q29uc3RydWN0Pn0gbGlzdFxyXG4gICAgICAgKiBAcmV0dXJucyB7U3RhdGV9XHJcbiAgICAgICAqL1xyXG4gICAgICBmdW5jdGlvbiBoYW5kbGVMaXN0T2ZDb25zdHJ1Y3RzKGxpc3QpIHtcclxuICAgICAgICBsaXN0T2ZDb25zdHJ1Y3RzID0gbGlzdFxyXG4gICAgICAgIGNvbnN0cnVjdEluZGV4ID0gMFxyXG5cclxuICAgICAgICBpZiAobGlzdC5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIGFzc2VydChib2d1c1N0YXRlLCAnZXhwZWN0ZWQgYGJvZ3VzU3RhdGVgIHRvIGJlIGdpdmVuJylcclxuICAgICAgICAgIHJldHVybiBib2d1c1N0YXRlXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gaGFuZGxlQ29uc3RydWN0KGxpc3RbY29uc3RydWN0SW5kZXhdKVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvKipcclxuICAgICAgICogSGFuZGxlIGEgc2luZ2xlIGNvbnN0cnVjdC5cclxuICAgICAgICpcclxuICAgICAgICogQHBhcmFtIHtDb25zdHJ1Y3R9IGNvbnN0cnVjdFxyXG4gICAgICAgKiBAcmV0dXJucyB7U3RhdGV9XHJcbiAgICAgICAqL1xyXG4gICAgICBmdW5jdGlvbiBoYW5kbGVDb25zdHJ1Y3QoY29uc3RydWN0KSB7XHJcbiAgICAgICAgcmV0dXJuIHN0YXJ0XHJcblxyXG4gICAgICAgIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgICAgICAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xyXG4gICAgICAgICAgLy8gVG8gZG86IG5vdCBuZWVkZWQgdG8gc3RvcmUgaWYgdGhlcmUgaXMgbm8gYm9ndXMgc3RhdGUsIHByb2JhYmx5P1xyXG4gICAgICAgICAgLy8gQ3VycmVudGx5IGRvZXNu4oCZdCB3b3JrIGJlY2F1c2UgYGluc3BlY3RgIGluIGRvY3VtZW50IGRvZXMgYSBjaGVja1xyXG4gICAgICAgICAgLy8gdy9vIGEgYm9ndXMsIHdoaWNoIGRvZXNu4oCZdCBtYWtlIHNlbnNlLiBCdXQgaXQgZG9lcyBzZWVtIHRvIGhlbHAgcGVyZlxyXG4gICAgICAgICAgLy8gYnkgbm90IHN0b3JpbmcuXHJcbiAgICAgICAgICBpbmZvID0gc3RvcmUoKVxyXG4gICAgICAgICAgY3VycmVudENvbnN0cnVjdCA9IGNvbnN0cnVjdFxyXG5cclxuICAgICAgICAgIGlmICghY29uc3RydWN0LnBhcnRpYWwpIHtcclxuICAgICAgICAgICAgY29udGV4dC5jdXJyZW50Q29uc3RydWN0ID0gY29uc3RydWN0XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gQWx3YXlzIHBvcHVsYXRlZCBieSBkZWZhdWx0cy5cclxuICAgICAgICAgIGFzc2VydChcclxuICAgICAgICAgICAgY29udGV4dC5wYXJzZXIuY29uc3RydWN0cy5kaXNhYmxlLm51bGwsXHJcbiAgICAgICAgICAgICdleHBlY3RlZCBgZGlzYWJsZS5udWxsYCB0byBiZSBwb3B1bGF0ZWQnXHJcbiAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICBjb25zdHJ1Y3QubmFtZSAmJlxyXG4gICAgICAgICAgICBjb250ZXh0LnBhcnNlci5jb25zdHJ1Y3RzLmRpc2FibGUubnVsbC5pbmNsdWRlcyhjb25zdHJ1Y3QubmFtZSlcclxuICAgICAgICAgICkge1xyXG4gICAgICAgICAgICByZXR1cm4gbm9rKGNvZGUpXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcmV0dXJuIGNvbnN0cnVjdC50b2tlbml6ZS5jYWxsKFxyXG4gICAgICAgICAgICAvLyBJZiB3ZSBkbyBoYXZlIGZpZWxkcywgY3JlYXRlIGFuIG9iamVjdCB3LyBgY29udGV4dGAgYXMgaXRzXHJcbiAgICAgICAgICAgIC8vIHByb3RvdHlwZS5cclxuICAgICAgICAgICAgLy8gVGhpcyBhbGxvd3MgYSDigJxsaXZlIGJpbmRpbmfigJ0sIHdoaWNoIGlzIG5lZWRlZCBmb3IgYGludGVycnVwdGAuXHJcbiAgICAgICAgICAgIGZpZWxkcyA/IE9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShjb250ZXh0KSwgZmllbGRzKSA6IGNvbnRleHQsXHJcbiAgICAgICAgICAgIGVmZmVjdHMsXHJcbiAgICAgICAgICAgIG9rLFxyXG4gICAgICAgICAgICBub2tcclxuICAgICAgICAgICkoY29kZSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgICAgIGZ1bmN0aW9uIG9rKGNvZGUpIHtcclxuICAgICAgICBhc3NlcnQoY29kZSA9PT0gZXhwZWN0ZWRDb2RlLCAnZXhwZWN0ZWQgY29kZScpXHJcbiAgICAgICAgY29uc3VtZWQgPSB0cnVlXHJcbiAgICAgICAgb25yZXR1cm4oY3VycmVudENvbnN0cnVjdCwgaW5mbylcclxuICAgICAgICByZXR1cm4gcmV0dXJuU3RhdGVcclxuICAgICAgfVxyXG5cclxuICAgICAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cclxuICAgICAgZnVuY3Rpb24gbm9rKGNvZGUpIHtcclxuICAgICAgICBhc3NlcnQoY29kZSA9PT0gZXhwZWN0ZWRDb2RlLCAnZXhwZWN0ZWQgY29kZScpXHJcbiAgICAgICAgY29uc3VtZWQgPSB0cnVlXHJcbiAgICAgICAgaW5mby5yZXN0b3JlKClcclxuXHJcbiAgICAgICAgaWYgKCsrY29uc3RydWN0SW5kZXggPCBsaXN0T2ZDb25zdHJ1Y3RzLmxlbmd0aCkge1xyXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUNvbnN0cnVjdChsaXN0T2ZDb25zdHJ1Y3RzW2NvbnN0cnVjdEluZGV4XSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBib2d1c1N0YXRlXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7Q29uc3RydWN0fSBjb25zdHJ1Y3RcclxuICAgKiBAcGFyYW0ge251bWJlcn0gZnJvbVxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGFkZFJlc3VsdChjb25zdHJ1Y3QsIGZyb20pIHtcclxuICAgIGlmIChjb25zdHJ1Y3QucmVzb2x2ZUFsbCAmJiAhcmVzb2x2ZUFsbENvbnN0cnVjdHMuaW5jbHVkZXMoY29uc3RydWN0KSkge1xyXG4gICAgICByZXNvbHZlQWxsQ29uc3RydWN0cy5wdXNoKGNvbnN0cnVjdClcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY29uc3RydWN0LnJlc29sdmUpIHtcclxuICAgICAgc3BsaWNlKFxyXG4gICAgICAgIGNvbnRleHQuZXZlbnRzLFxyXG4gICAgICAgIGZyb20sXHJcbiAgICAgICAgY29udGV4dC5ldmVudHMubGVuZ3RoIC0gZnJvbSxcclxuICAgICAgICBjb25zdHJ1Y3QucmVzb2x2ZShjb250ZXh0LmV2ZW50cy5zbGljZShmcm9tKSwgY29udGV4dClcclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb25zdHJ1Y3QucmVzb2x2ZVRvKSB7XHJcbiAgICAgIGNvbnRleHQuZXZlbnRzID0gY29uc3RydWN0LnJlc29sdmVUbyhjb250ZXh0LmV2ZW50cywgY29udGV4dClcclxuICAgIH1cclxuXHJcbiAgICBhc3NlcnQoXHJcbiAgICAgIGNvbnN0cnVjdC5wYXJ0aWFsIHx8XHJcbiAgICAgICAgY29udGV4dC5ldmVudHMubGVuZ3RoID09PSAwIHx8XHJcbiAgICAgICAgY29udGV4dC5ldmVudHNbY29udGV4dC5ldmVudHMubGVuZ3RoIC0gMV1bMF0gPT09ICdleGl0JyxcclxuICAgICAgJ2V4cGVjdGVkIGxhc3QgdG9rZW4gdG8gZW5kJ1xyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3RvcmUgc3RhdGUuXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7SW5mb31cclxuICAgKi9cclxuICBmdW5jdGlvbiBzdG9yZSgpIHtcclxuICAgIGNvbnN0IHN0YXJ0UG9pbnQgPSBub3coKVxyXG4gICAgY29uc3Qgc3RhcnRQcmV2aW91cyA9IGNvbnRleHQucHJldmlvdXNcclxuICAgIGNvbnN0IHN0YXJ0Q3VycmVudENvbnN0cnVjdCA9IGNvbnRleHQuY3VycmVudENvbnN0cnVjdFxyXG4gICAgY29uc3Qgc3RhcnRFdmVudHNJbmRleCA9IGNvbnRleHQuZXZlbnRzLmxlbmd0aFxyXG4gICAgY29uc3Qgc3RhcnRTdGFjayA9IEFycmF5LmZyb20oc3RhY2spXHJcblxyXG4gICAgcmV0dXJuIHtyZXN0b3JlLCBmcm9tOiBzdGFydEV2ZW50c0luZGV4fVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVzdG9yZSBzdGF0ZS5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gcmVzdG9yZSgpIHtcclxuICAgICAgcG9pbnQgPSBzdGFydFBvaW50XHJcbiAgICAgIGNvbnRleHQucHJldmlvdXMgPSBzdGFydFByZXZpb3VzXHJcbiAgICAgIGNvbnRleHQuY3VycmVudENvbnN0cnVjdCA9IHN0YXJ0Q3VycmVudENvbnN0cnVjdFxyXG4gICAgICBjb250ZXh0LmV2ZW50cy5sZW5ndGggPSBzdGFydEV2ZW50c0luZGV4XHJcbiAgICAgIHN0YWNrID0gc3RhcnRTdGFja1xyXG4gICAgICBhY2NvdW50Rm9yUG90ZW50aWFsU2tpcCgpXHJcbiAgICAgIGRlYnVnKCdwb3NpdGlvbjogcmVzdG9yZTogYCVqYCcsIHBvaW50KVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTW92ZSB0aGUgY3VycmVudCBwb2ludCBhIGJpdCBmb3J3YXJkIGluIHRoZSBsaW5lIHdoZW4gaXTigJlzIG9uIGEgY29sdW1uXHJcbiAgICogc2tpcC5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGFjY291bnRGb3JQb3RlbnRpYWxTa2lwKCkge1xyXG4gICAgaWYgKHBvaW50LmxpbmUgaW4gY29sdW1uU3RhcnQgJiYgcG9pbnQuY29sdW1uIDwgMikge1xyXG4gICAgICBwb2ludC5jb2x1bW4gPSBjb2x1bW5TdGFydFtwb2ludC5saW5lXVxyXG4gICAgICBwb2ludC5vZmZzZXQgKz0gY29sdW1uU3RhcnRbcG9pbnQubGluZV0gLSAxXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBjaHVua3MgZnJvbSBhIHNsaWNlIG9mIGNodW5rcyBpbiB0aGUgcmFuZ2Ugb2YgYSB0b2tlbi5cclxuICpcclxuICogQHBhcmFtIHtBcnJheTxDaHVuaz59IGNodW5rc1xyXG4gKiBAcGFyYW0ge1BpY2s8VG9rZW4sICdlbmQnIHwgJ3N0YXJ0Jz59IHRva2VuXHJcbiAqIEByZXR1cm5zIHtBcnJheTxDaHVuaz59XHJcbiAqL1xyXG5mdW5jdGlvbiBzbGljZUNodW5rcyhjaHVua3MsIHRva2VuKSB7XHJcbiAgY29uc3Qgc3RhcnRJbmRleCA9IHRva2VuLnN0YXJ0Ll9pbmRleFxyXG4gIGNvbnN0IHN0YXJ0QnVmZmVySW5kZXggPSB0b2tlbi5zdGFydC5fYnVmZmVySW5kZXhcclxuICBjb25zdCBlbmRJbmRleCA9IHRva2VuLmVuZC5faW5kZXhcclxuICBjb25zdCBlbmRCdWZmZXJJbmRleCA9IHRva2VuLmVuZC5fYnVmZmVySW5kZXhcclxuICAvKiogQHR5cGUge0FycmF5PENodW5rPn0gKi9cclxuICBsZXQgdmlld1xyXG5cclxuICBpZiAoc3RhcnRJbmRleCA9PT0gZW5kSW5kZXgpIHtcclxuICAgIGFzc2VydChlbmRCdWZmZXJJbmRleCA+IC0xLCAnZXhwZWN0ZWQgbm9uLW5lZ2F0aXZlIGVuZCBidWZmZXIgaW5kZXgnKVxyXG4gICAgYXNzZXJ0KHN0YXJ0QnVmZmVySW5kZXggPiAtMSwgJ2V4cGVjdGVkIG5vbi1uZWdhdGl2ZSBzdGFydCBidWZmZXIgaW5kZXgnKVxyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgX2J1ZmZlckluZGV4YCBpcyB1c2VkIG9uIHN0cmluZyBjaHVua3MuXHJcbiAgICB2aWV3ID0gW2NodW5rc1tzdGFydEluZGV4XS5zbGljZShzdGFydEJ1ZmZlckluZGV4LCBlbmRCdWZmZXJJbmRleCldXHJcbiAgfSBlbHNlIHtcclxuICAgIHZpZXcgPSBjaHVua3Muc2xpY2Uoc3RhcnRJbmRleCwgZW5kSW5kZXgpXHJcblxyXG4gICAgaWYgKHN0YXJ0QnVmZmVySW5kZXggPiAtMSkge1xyXG4gICAgICBjb25zdCBoZWFkID0gdmlld1swXVxyXG4gICAgICBpZiAodHlwZW9mIGhlYWQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgdmlld1swXSA9IGhlYWQuc2xpY2Uoc3RhcnRCdWZmZXJJbmRleClcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhc3NlcnQoc3RhcnRCdWZmZXJJbmRleCA9PT0gMCwgJ2V4cGVjdGVkIGBzdGFydEJ1ZmZlckluZGV4YCB0byBiZSBgMGAnKVxyXG4gICAgICAgIHZpZXcuc2hpZnQoKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGVuZEJ1ZmZlckluZGV4ID4gMCkge1xyXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGBfYnVmZmVySW5kZXhgIGlzIHVzZWQgb24gc3RyaW5nIGNodW5rcy5cclxuICAgICAgdmlldy5wdXNoKGNodW5rc1tlbmRJbmRleF0uc2xpY2UoMCwgZW5kQnVmZmVySW5kZXgpKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHZpZXdcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgc3RyaW5nIHZhbHVlIG9mIGEgc2xpY2Ugb2YgY2h1bmtzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PENodW5rPn0gY2h1bmtzXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbiB8IHVuZGVmaW5lZH0gW2V4cGFuZFRhYnM9ZmFsc2VdXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBzZXJpYWxpemVDaHVua3MoY2h1bmtzLCBleHBhbmRUYWJzKSB7XHJcbiAgbGV0IGluZGV4ID0gLTFcclxuICAvKiogQHR5cGUge0FycmF5PHN0cmluZz59ICovXHJcbiAgY29uc3QgcmVzdWx0ID0gW11cclxuICAvKiogQHR5cGUge2Jvb2xlYW4gfCB1bmRlZmluZWR9ICovXHJcbiAgbGV0IGF0VGFiXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgY2h1bmtzLmxlbmd0aCkge1xyXG4gICAgY29uc3QgY2h1bmsgPSBjaHVua3NbaW5kZXhdXHJcbiAgICAvKiogQHR5cGUge3N0cmluZ30gKi9cclxuICAgIGxldCB2YWx1ZVxyXG5cclxuICAgIGlmICh0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHZhbHVlID0gY2h1bmtcclxuICAgIH0gZWxzZVxyXG4gICAgICBzd2l0Y2ggKGNodW5rKSB7XHJcbiAgICAgICAgY2FzZSBjb2Rlcy5jYXJyaWFnZVJldHVybjoge1xyXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZXMuY3JcclxuXHJcbiAgICAgICAgICBicmVha1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBjb2Rlcy5saW5lRmVlZDoge1xyXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZXMubGZcclxuXHJcbiAgICAgICAgICBicmVha1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBjb2Rlcy5jYXJyaWFnZVJldHVybkxpbmVGZWVkOiB7XHJcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlcy5jciArIHZhbHVlcy5sZlxyXG5cclxuICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXNlIGNvZGVzLmhvcml6b250YWxUYWI6IHtcclxuICAgICAgICAgIHZhbHVlID0gZXhwYW5kVGFicyA/IHZhbHVlcy5zcGFjZSA6IHZhbHVlcy5odFxyXG5cclxuICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXNlIGNvZGVzLnZpcnR1YWxTcGFjZToge1xyXG4gICAgICAgICAgaWYgKCFleHBhbmRUYWJzICYmIGF0VGFiKSBjb250aW51ZVxyXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZXMuc3BhY2VcclxuXHJcbiAgICAgICAgICBicmVha1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgYXNzZXJ0KHR5cGVvZiBjaHVuayA9PT0gJ251bWJlcicsICdleHBlY3RlZCBudW1iZXInKVxyXG4gICAgICAgICAgLy8gQ3VycmVudGx5IG9ubHkgcmVwbGFjZW1lbnQgY2hhcmFjdGVyLlxyXG4gICAgICAgICAgdmFsdWUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNodW5rKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgIGF0VGFiID0gY2h1bmsgPT09IGNvZGVzLmhvcml6b250YWxUYWJcclxuICAgIHJlc3VsdC5wdXNoKHZhbHVlKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/create-tokenizer.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/initialize/content.js":
/*!**************************************************************!*\
  !*** ./node_modules/micromark/dev/lib/initialize/content.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"content\": function() { return /* binding */ content; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').Initializer} Initializer\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {InitialConstruct} */\r\nconst content = {tokenize: initializeContent}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Initializer}\r\n */\r\nfunction initializeContent(effects) {\r\n  const contentStart = effects.attempt(\r\n    this.parser.constructs.contentInitial,\r\n    afterContentStartConstruct,\r\n    paragraphInitial\r\n  )\r\n  /** @type {Token} */\r\n  let previous\r\n\r\n  return contentStart\r\n\r\n  /** @type {State} */\r\n  function afterContentStartConstruct(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEnding)(code),\r\n      'expected eol or eof'\r\n    )\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEnding)\r\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, contentStart, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.linePrefix)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function paragraphInitial(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof && !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEnding)(code),\r\n      'expected anything other than a line ending or EOF'\r\n    )\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.paragraph)\r\n    return lineStart(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function lineStart(code) {\r\n    const token = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.chunkText, {\r\n      contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeText,\r\n      previous\r\n    })\r\n\r\n    if (previous) {\r\n      previous.next = token\r\n    }\r\n\r\n    previous = token\r\n\r\n    return data(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function data(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.chunkText)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.paragraph)\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEnding)(code)) {\r\n      effects.consume(code)\r\n      effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.chunkText)\r\n      return lineStart\r\n    }\r\n\r\n    // Data.\r\n    effects.consume(code)\r\n    return data\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvaW5pdGlhbGl6ZS9jb250ZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsaURBQWlEO0FBQzlELGFBQWEsNENBQTRDO0FBQ3pELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDb0Q7QUFDTztBQUNQO0FBQ1E7QUFDUjtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxrQkFBa0I7QUFDdEIsaUJBQWlCO0FBQ3hCO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsSUFBSSwrQ0FBTTtBQUNWLGVBQWUscUVBQVMsSUFBSSw0RUFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFFQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRFQUFnQjtBQUNsQztBQUNBLGlCQUFpQiw0RUFBZ0I7QUFDakMsV0FBVyxxRUFBWSx3QkFBd0IsNEVBQWdCO0FBQy9EO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQSxJQUFJLDhDQUFNO0FBQ1YsZUFBZSxxRUFBUyxLQUFLLDRFQUFrQjtBQUMvQztBQUNBO0FBQ0Esa0JBQWtCLDJFQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGdDQUFnQywyRUFBZTtBQUMvQyxtQkFBbUIseUZBQXlCO0FBQzVDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsaUJBQWlCLHFFQUFTO0FBQzFCLG1CQUFtQiwyRUFBZTtBQUNsQyxtQkFBbUIsMkVBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDRFQUFrQjtBQUMxQjtBQUNBLG1CQUFtQiwyRUFBZTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9taWNyb21hcmsvZGV2L2xpYi9pbml0aWFsaXplL2NvbnRlbnQuanM/NTBmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Jbml0aWFsQ29uc3RydWN0fSBJbml0aWFsQ29uc3RydWN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSW5pdGlhbGl6ZXJ9IEluaXRpYWxpemVyXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW59IFRva2VuXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVDb250ZXh0fSBUb2tlbml6ZUNvbnRleHRcclxuICovXHJcblxyXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXHJcbmltcG9ydCB7bWFya2Rvd25MaW5lRW5kaW5nfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXHJcbmltcG9ydCB7dHlwZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC90eXBlcy5qcydcclxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXHJcblxyXG4vKiogQHR5cGUge0luaXRpYWxDb25zdHJ1Y3R9ICovXHJcbmV4cG9ydCBjb25zdCBjb250ZW50ID0ge3Rva2VuaXplOiBpbml0aWFsaXplQ29udGVudH1cclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7VG9rZW5pemVDb250ZXh0fVxyXG4gKiBAdHlwZSB7SW5pdGlhbGl6ZXJ9XHJcbiAqL1xyXG5mdW5jdGlvbiBpbml0aWFsaXplQ29udGVudChlZmZlY3RzKSB7XHJcbiAgY29uc3QgY29udGVudFN0YXJ0ID0gZWZmZWN0cy5hdHRlbXB0KFxyXG4gICAgdGhpcy5wYXJzZXIuY29uc3RydWN0cy5jb250ZW50SW5pdGlhbCxcclxuICAgIGFmdGVyQ29udGVudFN0YXJ0Q29uc3RydWN0LFxyXG4gICAgcGFyYWdyYXBoSW5pdGlhbFxyXG4gIClcclxuICAvKiogQHR5cGUge1Rva2VufSAqL1xyXG4gIGxldCBwcmV2aW91c1xyXG5cclxuICByZXR1cm4gY29udGVudFN0YXJ0XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gYWZ0ZXJDb250ZW50U3RhcnRDb25zdHJ1Y3QoY29kZSkge1xyXG4gICAgYXNzZXJ0KFxyXG4gICAgICBjb2RlID09PSBjb2Rlcy5lb2YgfHwgbWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpLFxyXG4gICAgICAnZXhwZWN0ZWQgZW9sIG9yIGVvZidcclxuICAgIClcclxuXHJcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mKSB7XHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxpbmVFbmRpbmcpXHJcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5saW5lRW5kaW5nKVxyXG4gICAgcmV0dXJuIGZhY3RvcnlTcGFjZShlZmZlY3RzLCBjb250ZW50U3RhcnQsIHR5cGVzLmxpbmVQcmVmaXgpXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xyXG4gIGZ1bmN0aW9uIHBhcmFncmFwaEluaXRpYWwoY29kZSkge1xyXG4gICAgYXNzZXJ0KFxyXG4gICAgICBjb2RlICE9PSBjb2Rlcy5lb2YgJiYgIW1hcmtkb3duTGluZUVuZGluZyhjb2RlKSxcclxuICAgICAgJ2V4cGVjdGVkIGFueXRoaW5nIG90aGVyIHRoYW4gYSBsaW5lIGVuZGluZyBvciBFT0YnXHJcbiAgICApXHJcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLnBhcmFncmFwaClcclxuICAgIHJldHVybiBsaW5lU3RhcnQoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gbGluZVN0YXJ0KGNvZGUpIHtcclxuICAgIGNvbnN0IHRva2VuID0gZWZmZWN0cy5lbnRlcih0eXBlcy5jaHVua1RleHQsIHtcclxuICAgICAgY29udGVudFR5cGU6IGNvbnN0YW50cy5jb250ZW50VHlwZVRleHQsXHJcbiAgICAgIHByZXZpb3VzXHJcbiAgICB9KVxyXG5cclxuICAgIGlmIChwcmV2aW91cykge1xyXG4gICAgICBwcmV2aW91cy5uZXh0ID0gdG9rZW5cclxuICAgIH1cclxuXHJcbiAgICBwcmV2aW91cyA9IHRva2VuXHJcblxyXG4gICAgcmV0dXJuIGRhdGEoY29kZSlcclxuICB9XHJcblxyXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXHJcbiAgZnVuY3Rpb24gZGF0YShjb2RlKSB7XHJcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mKSB7XHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5jaHVua1RleHQpXHJcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5wYXJhZ3JhcGgpXHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBpZiAobWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpKSB7XHJcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuY2h1bmtUZXh0KVxyXG4gICAgICByZXR1cm4gbGluZVN0YXJ0XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRGF0YS5cclxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxyXG4gICAgcmV0dXJuIGRhdGFcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/initialize/content.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/initialize/document.js":
/*!***************************************************************!*\
  !*** ./node_modules/micromark/dev/lib/initialize/document.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"document\": function() { return /* binding */ document; }\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Construct} Construct\r\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').Initializer} Initializer\r\n * @typedef {import('micromark-util-types').Point} Point\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').Token} Token\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\r\n */\r\n\r\n/**\r\n * @typedef {[Construct, ContainerState]} StackItem\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {InitialConstruct} */\r\nconst document = {tokenize: initializeDocument}\r\n\r\n/** @type {Construct} */\r\nconst containerConstruct = {tokenize: tokenizeContainer}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Initializer}\r\n */\r\nfunction initializeDocument(effects) {\r\n  const self = this\r\n  /** @type {Array<StackItem>} */\r\n  const stack = []\r\n  let continued = 0\r\n  /** @type {TokenizeContext | undefined} */\r\n  let childFlow\r\n  /** @type {Token | undefined} */\r\n  let childToken\r\n  /** @type {number} */\r\n  let lineStartOffset\r\n\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    // First we iterate through the open blocks, starting with the root\r\n    // document, and descending through last children down to the last open\r\n    // block.\r\n    // Each block imposes a condition that the line must satisfy if the block is\r\n    // to remain open.\r\n    // For example, a block quote requires a `>` character.\r\n    // A paragraph requires a non-blank line.\r\n    // In this phase we may match all or just some of the open blocks.\r\n    // But we cannot close unmatched blocks yet, because we may have a lazy\r\n    // continuation line.\r\n    if (continued < stack.length) {\r\n      const item = stack[continued]\r\n      self.containerState = item[1]\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n        item[0].continuation,\r\n        'expected `continuation` to be defined on container construct'\r\n      )\r\n      return effects.attempt(\r\n        item[0].continuation,\r\n        documentContinue,\r\n        checkNewContainers\r\n      )(code)\r\n    }\r\n\r\n    // Done.\r\n    return checkNewContainers(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function documentContinue(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.containerState,\r\n      'expected `containerState` to be defined after continuation'\r\n    )\r\n\r\n    continued++\r\n\r\n    // Note: this field is called `_closeFlow` but it also closes containers.\r\n    // Perhaps a good idea to rename it but it’s already used in the wild by\r\n    // extensions.\r\n    if (self.containerState._closeFlow) {\r\n      self.containerState._closeFlow = undefined\r\n\r\n      if (childFlow) {\r\n        closeFlow()\r\n      }\r\n\r\n      // Note: this algorithm for moving events around is similar to the\r\n      // algorithm when dealing with lazy lines in `writeToChild`.\r\n      const indexBeforeExits = self.events.length\r\n      let indexBeforeFlow = indexBeforeExits\r\n      /** @type {Point | undefined} */\r\n      let point\r\n\r\n      // Find the flow chunk.\r\n      while (indexBeforeFlow--) {\r\n        if (\r\n          self.events[indexBeforeFlow][0] === 'exit' &&\r\n          self.events[indexBeforeFlow][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow\r\n        ) {\r\n          point = self.events[indexBeforeFlow][1].end\r\n          break\r\n        }\r\n      }\r\n\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(point, 'could not find previous flow chunk')\r\n\r\n      exitContainers(continued)\r\n\r\n      // Fix positions.\r\n      let index = indexBeforeExits\r\n\r\n      while (index < self.events.length) {\r\n        self.events[index][1].end = Object.assign({}, point)\r\n        index++\r\n      }\r\n\r\n      // Inject the exits earlier (they’re still also at the end).\r\n      (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(\r\n        self.events,\r\n        indexBeforeFlow + 1,\r\n        0,\r\n        self.events.slice(indexBeforeExits)\r\n      )\r\n\r\n      // Discard the duplicate exits.\r\n      self.events.length = index\r\n\r\n      return checkNewContainers(code)\r\n    }\r\n\r\n    return start(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function checkNewContainers(code) {\r\n    // Next, after consuming the continuation markers for existing blocks, we\r\n    // look for new block starts (e.g. `>` for a block quote).\r\n    // If we encounter a new block start, we close any blocks unmatched in\r\n    // step 1 before creating the new block as a child of the last matched\r\n    // block.\r\n    if (continued === stack.length) {\r\n      // No need to `check` whether there’s a container, of `exitContainers`\r\n      // would be moot.\r\n      // We can instead immediately `attempt` to parse one.\r\n      if (!childFlow) {\r\n        return documentContinued(code)\r\n      }\r\n\r\n      // If we have concrete content, such as block HTML or fenced code,\r\n      // we can’t have containers “pierce” into them, so we can immediately\r\n      // start.\r\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\r\n        return flowStart(code)\r\n      }\r\n\r\n      // If we do have flow, it could still be a blank line,\r\n      // but we’d be interrupting it w/ a new container if there’s a current\r\n      // construct.\r\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\r\n      // needed in micromark-extension-gfm-table@1.0.6).\r\n      self.interrupt = Boolean(\r\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\r\n      )\r\n    }\r\n\r\n    // Check if there is a new container.\r\n    self.containerState = {}\r\n    return effects.check(\r\n      containerConstruct,\r\n      thereIsANewContainer,\r\n      thereIsNoNewContainer\r\n    )(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function thereIsANewContainer(code) {\r\n    if (childFlow) closeFlow()\r\n    exitContainers(continued)\r\n    return documentContinued(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function thereIsNoNewContainer(code) {\r\n    self.parser.lazy[self.now().line] = continued !== stack.length\r\n    lineStartOffset = self.now().offset\r\n    return flowStart(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function documentContinued(code) {\r\n    // Try new containers.\r\n    self.containerState = {}\r\n    return effects.attempt(\r\n      containerConstruct,\r\n      containerContinue,\r\n      flowStart\r\n    )(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function containerContinue(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.currentConstruct,\r\n      'expected `currentConstruct` to be defined on tokenizer'\r\n    )\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.containerState,\r\n      'expected `containerState` to be defined on tokenizer'\r\n    )\r\n    continued++\r\n    stack.push([self.currentConstruct, self.containerState])\r\n    // Try another.\r\n    return documentContinued(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function flowStart(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof) {\r\n      if (childFlow) closeFlow()\r\n      exitContainers(0)\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    childFlow = childFlow || self.parser.flow(self.now())\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow, {\r\n      contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.contentTypeFlow,\r\n      previous: childToken,\r\n      _tokenizer: childFlow\r\n    })\r\n\r\n    return flowContinue(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function flowContinue(code) {\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof) {\r\n      writeToChild(effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow), true)\r\n      exitContainers(0)\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\r\n      effects.consume(code)\r\n      writeToChild(effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow))\r\n      // Get ready for the next line.\r\n      continued = 0\r\n      self.interrupt = undefined\r\n      return start\r\n    }\r\n\r\n    effects.consume(code)\r\n    return flowContinue\r\n  }\r\n\r\n  /**\r\n   * @param {Token} token\r\n   * @param {boolean | undefined} [eof]\r\n   * @returns {void}\r\n   */\r\n  function writeToChild(token, eof) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(childFlow, 'expected `childFlow` to be defined when continuing')\r\n    const stream = self.sliceStream(token)\r\n    if (eof) stream.push(null)\r\n    token.previous = childToken\r\n    if (childToken) childToken.next = token\r\n    childToken = token\r\n    childFlow.defineSkip(token.start)\r\n    childFlow.write(stream)\r\n\r\n    // Alright, so we just added a lazy line:\r\n    //\r\n    // ```markdown\r\n    // > a\r\n    // b.\r\n    //\r\n    // Or:\r\n    //\r\n    // > ~~~c\r\n    // d\r\n    //\r\n    // Or:\r\n    //\r\n    // > | e |\r\n    // f\r\n    // ```\r\n    //\r\n    // The construct in the second example (fenced code) does not accept lazy\r\n    // lines, so it marked itself as done at the end of its first line, and\r\n    // then the content construct parses `d`.\r\n    // Most constructs in markdown match on the first line: if the first line\r\n    // forms a construct, a non-lazy line can’t “unmake” it.\r\n    //\r\n    // The construct in the third example is potentially a GFM table, and\r\n    // those are *weird*.\r\n    // It *could* be a table, from the first line, if the following line\r\n    // matches a condition.\r\n    // In this case, that second line is lazy, which “unmakes” the first line\r\n    // and turns the whole into one content block.\r\n    //\r\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\r\n    // whether the lazy line started a new flow block.\r\n    // If it did, we exit the current containers between the two flow blocks.\r\n    if (self.parser.lazy[token.start.line]) {\r\n      let index = childFlow.events.length\r\n\r\n      while (index--) {\r\n        if (\r\n          // The token starts before the line ending…\r\n          childFlow.events[index][1].start.offset < lineStartOffset &&\r\n          // …and either is not ended yet…\r\n          (!childFlow.events[index][1].end ||\r\n            // …or ends after it.\r\n            childFlow.events[index][1].end.offset > lineStartOffset)\r\n        ) {\r\n          // Exit: there’s still something open, which means it’s a lazy line\r\n          // part of something.\r\n          return\r\n        }\r\n      }\r\n\r\n      // Note: this algorithm for moving events around is similar to the\r\n      // algorithm when closing flow in `documentContinue`.\r\n      const indexBeforeExits = self.events.length\r\n      let indexBeforeFlow = indexBeforeExits\r\n      /** @type {boolean | undefined} */\r\n      let seen\r\n      /** @type {Point | undefined} */\r\n      let point\r\n\r\n      // Find the previous chunk (the one before the lazy line).\r\n      while (indexBeforeFlow--) {\r\n        if (\r\n          self.events[indexBeforeFlow][0] === 'exit' &&\r\n          self.events[indexBeforeFlow][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkFlow\r\n        ) {\r\n          if (seen) {\r\n            point = self.events[indexBeforeFlow][1].end\r\n            break\r\n          }\r\n\r\n          seen = true\r\n        }\r\n      }\r\n\r\n      (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(point, 'could not find previous flow chunk')\r\n\r\n      exitContainers(continued)\r\n\r\n      // Fix positions.\r\n      index = indexBeforeExits\r\n\r\n      while (index < self.events.length) {\r\n        self.events[index][1].end = Object.assign({}, point)\r\n        index++\r\n      }\r\n\r\n      // Inject the exits earlier (they’re still also at the end).\r\n      (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(\r\n        self.events,\r\n        indexBeforeFlow + 1,\r\n        0,\r\n        self.events.slice(indexBeforeExits)\r\n      )\r\n\r\n      // Discard the duplicate exits.\r\n      self.events.length = index\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} size\r\n   * @returns {void}\r\n   */\r\n  function exitContainers(size) {\r\n    let index = stack.length\r\n\r\n    // Exit open containers.\r\n    while (index-- > size) {\r\n      const entry = stack[index]\r\n      self.containerState = entry[1]\r\n      ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n        entry[0].exit,\r\n        'expected `exit` to be defined on container construct'\r\n      )\r\n      entry[0].exit.call(self, effects)\r\n    }\r\n\r\n    stack.length = size\r\n  }\r\n\r\n  function closeFlow() {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      self.containerState,\r\n      'expected `containerState` to be defined when closing flow'\r\n    )\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(childFlow, 'expected `childFlow` to be defined when closing it')\r\n    childFlow.write([micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof])\r\n    childToken = undefined\r\n    childFlow = undefined\r\n    self.containerState._closeFlow = undefined\r\n  }\r\n}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Tokenizer}\r\n */\r\nfunction tokenizeContainer(effects, ok, nok) {\r\n  // Always populated by defaults.\r\n  (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n    this.parser.constructs.disable.null,\r\n    'expected `disable.null` to be populated'\r\n  )\r\n  return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(\r\n    effects,\r\n    effects.attempt(this.parser.constructs.document, ok, nok),\r\n    micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix,\r\n    this.parser.constructs.disable.null.includes('codeIndented')\r\n      ? undefined\r\n      : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize\r\n  )\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/initialize/document.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/initialize/flow.js":
/*!***********************************************************!*\
  !*** ./node_modules/micromark/dev/lib/initialize/flow.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flow\": function() { return /* binding */ flow; }\n/* harmony export */ });\n/* harmony import */ var micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-core-commonmark */ \"./node_modules/micromark-core-commonmark/dev/index.js\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-factory-space */ \"./node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').Initializer} Initializer\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** @type {InitialConstruct} */\r\nconst flow = {tokenize: initializeFlow}\r\n\r\n/**\r\n * @this {TokenizeContext}\r\n * @type {Initializer}\r\n */\r\nfunction initializeFlow(effects) {\r\n  const self = this\r\n  const initial = effects.attempt(\r\n    // Try to parse a blank line.\r\n    micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.blankLine,\r\n    atBlankEnding,\r\n    // Try to parse initial flow (essentially, only code).\r\n    effects.attempt(\r\n      this.parser.constructs.flowInitial,\r\n      afterConstruct,\r\n      (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_2__.factorySpace)(\r\n        effects,\r\n        effects.attempt(\r\n          this.parser.constructs.flow,\r\n          afterConstruct,\r\n          effects.attempt(micromark_core_commonmark__WEBPACK_IMPORTED_MODULE_1__.content, afterConstruct)\r\n        ),\r\n        micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.linePrefix\r\n      )\r\n    )\r\n  )\r\n\r\n  return initial\r\n\r\n  /** @type {State} */\r\n  function atBlankEnding(code) {\r\n    ;(0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code),\r\n      'expected eol or eof'\r\n    )\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEndingBlank)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEndingBlank)\r\n    self.currentConstruct = undefined\r\n    return initial\r\n  }\r\n\r\n  /** @type {State} */\r\n  function afterConstruct(code) {\r\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(\r\n      code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code),\r\n      'expected eol or eof'\r\n    )\r\n\r\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEnding)\r\n    effects.consume(code)\r\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.lineEnding)\r\n    self.currentConstruct = undefined\r\n    return initial\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvaW5pdGlhbGl6ZS9mbG93LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsaURBQWlEO0FBQzlELGFBQWEsNENBQTRDO0FBQ3pELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDNEQ7QUFDUjtBQUNPO0FBQ1A7QUFDQTtBQUNiO0FBQ3ZDO0FBQ0EsV0FBVyxrQkFBa0I7QUFDdEIsY0FBYztBQUNyQjtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnRUFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFFQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhEQUFPO0FBQ2pDO0FBQ0EsUUFBUSw0RUFBZ0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsSUFBSSwrQ0FBTTtBQUNWLGVBQWUscUVBQVMsSUFBSSw0RUFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFFQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQjtBQUN2QztBQUNBLGlCQUFpQixpRkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQSxJQUFJLDhDQUFNO0FBQ1YsZUFBZSxxRUFBUyxJQUFJLDRFQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscUVBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEVBQWdCO0FBQ2xDO0FBQ0EsaUJBQWlCLDRFQUFnQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvaW5pdGlhbGl6ZS9mbG93LmpzP2ExNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSW5pdGlhbENvbnN0cnVjdH0gSW5pdGlhbENvbnN0cnVjdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkluaXRpYWxpemVyfSBJbml0aWFsaXplclxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplQ29udGV4dH0gVG9rZW5pemVDb250ZXh0XHJcbiAqL1xyXG5cclxuaW1wb3J0IHtibGFua0xpbmUsIGNvbnRlbnR9IGZyb20gJ21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsnXHJcbmltcG9ydCB7ZmFjdG9yeVNwYWNlfSBmcm9tICdtaWNyb21hcmstZmFjdG9yeS1zcGFjZSdcclxuaW1wb3J0IHttYXJrZG93bkxpbmVFbmRpbmd9IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcclxuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xyXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXHJcbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xyXG5cclxuLyoqIEB0eXBlIHtJbml0aWFsQ29uc3RydWN0fSAqL1xyXG5leHBvcnQgY29uc3QgZmxvdyA9IHt0b2tlbml6ZTogaW5pdGlhbGl6ZUZsb3d9XHJcblxyXG4vKipcclxuICogQHRoaXMge1Rva2VuaXplQ29udGV4dH1cclxuICogQHR5cGUge0luaXRpYWxpemVyfVxyXG4gKi9cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZUZsb3coZWZmZWN0cykge1xyXG4gIGNvbnN0IHNlbGYgPSB0aGlzXHJcbiAgY29uc3QgaW5pdGlhbCA9IGVmZmVjdHMuYXR0ZW1wdChcclxuICAgIC8vIFRyeSB0byBwYXJzZSBhIGJsYW5rIGxpbmUuXHJcbiAgICBibGFua0xpbmUsXHJcbiAgICBhdEJsYW5rRW5kaW5nLFxyXG4gICAgLy8gVHJ5IHRvIHBhcnNlIGluaXRpYWwgZmxvdyAoZXNzZW50aWFsbHksIG9ubHkgY29kZSkuXHJcbiAgICBlZmZlY3RzLmF0dGVtcHQoXHJcbiAgICAgIHRoaXMucGFyc2VyLmNvbnN0cnVjdHMuZmxvd0luaXRpYWwsXHJcbiAgICAgIGFmdGVyQ29uc3RydWN0LFxyXG4gICAgICBmYWN0b3J5U3BhY2UoXHJcbiAgICAgICAgZWZmZWN0cyxcclxuICAgICAgICBlZmZlY3RzLmF0dGVtcHQoXHJcbiAgICAgICAgICB0aGlzLnBhcnNlci5jb25zdHJ1Y3RzLmZsb3csXHJcbiAgICAgICAgICBhZnRlckNvbnN0cnVjdCxcclxuICAgICAgICAgIGVmZmVjdHMuYXR0ZW1wdChjb250ZW50LCBhZnRlckNvbnN0cnVjdClcclxuICAgICAgICApLFxyXG4gICAgICAgIHR5cGVzLmxpbmVQcmVmaXhcclxuICAgICAgKVxyXG4gICAgKVxyXG4gIClcclxuXHJcbiAgcmV0dXJuIGluaXRpYWxcclxuXHJcbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cclxuICBmdW5jdGlvbiBhdEJsYW5rRW5kaW5nKGNvZGUpIHtcclxuICAgIGFzc2VydChcclxuICAgICAgY29kZSA9PT0gY29kZXMuZW9mIHx8IG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSxcclxuICAgICAgJ2V4cGVjdGVkIGVvbCBvciBlb2YnXHJcbiAgICApXHJcblxyXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmVvZikge1xyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nQmxhbmspXHJcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5saW5lRW5kaW5nQmxhbmspXHJcbiAgICBzZWxmLmN1cnJlbnRDb25zdHJ1Y3QgPSB1bmRlZmluZWRcclxuICAgIHJldHVybiBpbml0aWFsXHJcbiAgfVxyXG5cclxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xyXG4gIGZ1bmN0aW9uIGFmdGVyQ29uc3RydWN0KGNvZGUpIHtcclxuICAgIGFzc2VydChcclxuICAgICAgY29kZSA9PT0gY29kZXMuZW9mIHx8IG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSxcclxuICAgICAgJ2V4cGVjdGVkIGVvbCBvciBlb2YnXHJcbiAgICApXHJcblxyXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmVvZikge1xyXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nKVxyXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXHJcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGluZUVuZGluZylcclxuICAgIHNlbGYuY3VycmVudENvbnN0cnVjdCA9IHVuZGVmaW5lZFxyXG4gICAgcmV0dXJuIGluaXRpYWxcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/initialize/flow.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/initialize/text.js":
/*!***********************************************************!*\
  !*** ./node_modules/micromark/dev/lib/initialize/text.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resolver\": function() { return /* binding */ resolver; },\n/* harmony export */   \"string\": function() { return /* binding */ string; },\n/* harmony export */   \"text\": function() { return /* binding */ text; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"./node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"./node_modules/uvu/assert/index.mjs\");\n/**\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').Initializer} Initializer\r\n * @typedef {import('micromark-util-types').Resolver} Resolver\r\n * @typedef {import('micromark-util-types').State} State\r\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst resolver = {resolveAll: createResolver()}\r\nconst string = initializeFactory('string')\r\nconst text = initializeFactory('text')\r\n\r\n/**\r\n * @param {'string' | 'text'} field\r\n * @returns {InitialConstruct}\r\n */\r\nfunction initializeFactory(field) {\r\n  return {\r\n    tokenize: initializeText,\r\n    resolveAll: createResolver(\r\n      field === 'text' ? resolveAllLineSuffixes : undefined\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @this {TokenizeContext}\r\n   * @type {Initializer}\r\n   */\r\n  function initializeText(effects) {\r\n    const self = this\r\n    const constructs = this.parser.constructs[field]\r\n    const text = effects.attempt(constructs, start, notText)\r\n\r\n    return start\r\n\r\n    /** @type {State} */\r\n    function start(code) {\r\n      return atBreak(code) ? text(code) : notText(code)\r\n    }\r\n\r\n    /** @type {State} */\r\n    function notText(code) {\r\n      if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n        effects.consume(code)\r\n        return\r\n      }\r\n\r\n      effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data)\r\n      effects.consume(code)\r\n      return data\r\n    }\r\n\r\n    /** @type {State} */\r\n    function data(code) {\r\n      if (atBreak(code)) {\r\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data)\r\n        return text(code)\r\n      }\r\n\r\n      // Data.\r\n      effects.consume(code)\r\n      return data\r\n    }\r\n\r\n    /**\r\n     * @param {Code} code\r\n     * @returns {boolean}\r\n     */\r\n    function atBreak(code) {\r\n      if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\r\n        return true\r\n      }\r\n\r\n      const list = constructs[code]\r\n      let index = -1\r\n\r\n      if (list) {\r\n        // Always populated by defaults.\r\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(Array.isArray(list), 'expected `disable.null` to be populated')\r\n\r\n        while (++index < list.length) {\r\n          const item = list[index]\r\n          if (!item.previous || item.previous.call(self, self.previous)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Resolver | undefined} [extraResolver]\r\n * @returns {Resolver}\r\n */\r\nfunction createResolver(extraResolver) {\r\n  return resolveAllText\r\n\r\n  /** @type {Resolver} */\r\n  function resolveAllText(events, context) {\r\n    let index = -1\r\n    /** @type {number | undefined} */\r\n    let enter\r\n\r\n    // A rather boring computation (to merge adjacent `data` events) which\r\n    // improves mm performance by 29%.\r\n    while (++index <= events.length) {\r\n      if (enter === undefined) {\r\n        if (events[index] && events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data) {\r\n          enter = index\r\n          index++\r\n        }\r\n      } else if (!events[index] || events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data) {\r\n        // Don’t do anything if there is one data token.\r\n        if (index !== enter + 2) {\r\n          events[enter][1].end = events[index - 1][1].end\r\n          events.splice(enter + 2, index - enter - 2)\r\n          index = enter + 2\r\n        }\r\n\r\n        enter = undefined\r\n      }\r\n    }\r\n\r\n    return extraResolver ? extraResolver(events, context) : events\r\n  }\r\n}\r\n\r\n/**\r\n * A rather ugly set of instructions which again looks at chunks in the input\r\n * stream.\r\n * The reason to do this here is that it is *much* faster to parse in reverse.\r\n * And that we can’t hook into `null` to split the line suffix before an EOF.\r\n * To do: figure out if we can make this into a clean utility, or even in core.\r\n * As it will be useful for GFMs literal autolink extension (and maybe even\r\n * tables?)\r\n *\r\n * @type {Resolver}\r\n */\r\nfunction resolveAllLineSuffixes(events, context) {\r\n  let eventIndex = 0 // Skip first.\r\n\r\n  while (++eventIndex <= events.length) {\r\n    if (\r\n      (eventIndex === events.length ||\r\n        events[eventIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding) &&\r\n      events[eventIndex - 1][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.data\r\n    ) {\r\n      const data = events[eventIndex - 1][1]\r\n      const chunks = context.sliceStream(data)\r\n      let index = chunks.length\r\n      let bufferIndex = -1\r\n      let size = 0\r\n      /** @type {boolean | undefined} */\r\n      let tabs\r\n\r\n      while (index--) {\r\n        const chunk = chunks[index]\r\n\r\n        if (typeof chunk === 'string') {\r\n          bufferIndex = chunk.length\r\n\r\n          while (chunk.charCodeAt(bufferIndex - 1) === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.space) {\r\n            size++\r\n            bufferIndex--\r\n          }\r\n\r\n          if (bufferIndex) break\r\n          bufferIndex = -1\r\n        }\r\n        // Number\r\n        else if (chunk === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.horizontalTab) {\r\n          tabs = true\r\n          size++\r\n        } else if (chunk === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.virtualSpace) {\r\n          // Empty\r\n        } else {\r\n          // Replacement character, exit.\r\n          index++\r\n          break\r\n        }\r\n      }\r\n\r\n      if (size) {\r\n        const token = {\r\n          type:\r\n            eventIndex === events.length ||\r\n            tabs ||\r\n            size < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.hardBreakPrefixSizeMin\r\n              ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineSuffix\r\n              : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.hardBreakTrailing,\r\n          start: {\r\n            line: data.end.line,\r\n            column: data.end.column - size,\r\n            offset: data.end.offset - size,\r\n            _index: data.start._index + index,\r\n            _bufferIndex: index\r\n              ? bufferIndex\r\n              : data.start._bufferIndex + bufferIndex\r\n          },\r\n          end: Object.assign({}, data.end)\r\n        }\r\n\r\n        data.end = Object.assign({}, token.start)\r\n\r\n        if (data.start.offset === data.end.offset) {\r\n          Object.assign(data, token)\r\n        } else {\r\n          events.splice(\r\n            eventIndex,\r\n            0,\r\n            ['enter', token, context],\r\n            ['exit', token, context]\r\n          )\r\n          eventIndex += 2\r\n        }\r\n      }\r\n\r\n      eventIndex++\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/initialize/text.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/parse.js":
/*!*************************************************!*\
  !*** ./node_modules/micromark/dev/lib/parse.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_combine_extensions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-combine-extensions */ \"./node_modules/micromark-util-combine-extensions/index.js\");\n/* harmony import */ var _initialize_content_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initialize/content.js */ \"./node_modules/micromark/dev/lib/initialize/content.js\");\n/* harmony import */ var _initialize_document_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initialize/document.js */ \"./node_modules/micromark/dev/lib/initialize/document.js\");\n/* harmony import */ var _initialize_flow_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./initialize/flow.js */ \"./node_modules/micromark/dev/lib/initialize/flow.js\");\n/* harmony import */ var _initialize_text_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initialize/text.js */ \"./node_modules/micromark/dev/lib/initialize/text.js\");\n/* harmony import */ var _create_tokenizer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./create-tokenizer.js */ \"./node_modules/micromark/dev/lib/create-tokenizer.js\");\n/* harmony import */ var _constructs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constructs.js */ \"./node_modules/micromark/dev/lib/constructs.js\");\n/**\r\n * @typedef {import('micromark-util-types').Create} Create\r\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\r\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\r\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\r\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {ParseOptions | null | undefined} [options]\r\n * @returns {ParseContext}\r\n */\r\nfunction parse(options) {\r\n  const settings = options || {}\r\n  const constructs = /** @type {FullNormalizedExtension} */ (\r\n    (0,micromark_util_combine_extensions__WEBPACK_IMPORTED_MODULE_0__.combineExtensions)([_constructs_js__WEBPACK_IMPORTED_MODULE_1__, ...(settings.extensions || [])])\r\n  )\r\n\r\n  /** @type {ParseContext} */\r\n  const parser = {\r\n    defined: [],\r\n    lazy: {},\r\n    constructs,\r\n    content: create(_initialize_content_js__WEBPACK_IMPORTED_MODULE_2__.content),\r\n    document: create(_initialize_document_js__WEBPACK_IMPORTED_MODULE_3__.document),\r\n    flow: create(_initialize_flow_js__WEBPACK_IMPORTED_MODULE_4__.flow),\r\n    string: create(_initialize_text_js__WEBPACK_IMPORTED_MODULE_5__.string),\r\n    text: create(_initialize_text_js__WEBPACK_IMPORTED_MODULE_5__.text)\r\n  }\r\n\r\n  return parser\r\n\r\n  /**\r\n   * @param {InitialConstruct} initial\r\n   */\r\n  function create(initial) {\r\n    return creator\r\n    /** @type {Create} */\r\n    function creator(from) {\r\n      return (0,_create_tokenizer_js__WEBPACK_IMPORTED_MODULE_6__.createTokenizer)(parser, initial, from)\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcGFyc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsd0RBQXdEO0FBQ3JFLGFBQWEsaURBQWlEO0FBQzlELGFBQWEsNkNBQTZDO0FBQzFELGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0E7QUFDbUU7QUFDcEI7QUFDRTtBQUNSO0FBQ1E7QUFDSTtBQUNEO0FBQ3BEO0FBQ0E7QUFDQSxXQUFXLGlDQUFpQztBQUM1QyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsZ0NBQWdDLHlCQUF5QjtBQUN6RCxJQUFJLG9GQUFpQixFQUFFLDJDQUFpQjtBQUN4QztBQUNBO0FBQ0EsYUFBYSxjQUFjO0FBQzNCO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxvQkFBb0IsMkRBQU87QUFDM0IscUJBQXFCLDZEQUFRO0FBQzdCLGlCQUFpQixxREFBSTtBQUNyQixtQkFBbUIsdURBQU07QUFDekIsaUJBQWlCLHFEQUFJO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxhQUFhLHFFQUFlO0FBQzVCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcGFyc2UuanM/ZGZkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5DcmVhdGV9IENyZWF0ZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkZ1bGxOb3JtYWxpemVkRXh0ZW5zaW9ufSBGdWxsTm9ybWFsaXplZEV4dGVuc2lvblxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkluaXRpYWxDb25zdHJ1Y3R9IEluaXRpYWxDb25zdHJ1Y3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5QYXJzZUNvbnRleHR9IFBhcnNlQ29udGV4dFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlBhcnNlT3B0aW9uc30gUGFyc2VPcHRpb25zXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtjb21iaW5lRXh0ZW5zaW9uc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtY29tYmluZS1leHRlbnNpb25zJ1xyXG5pbXBvcnQge2NvbnRlbnR9IGZyb20gJy4vaW5pdGlhbGl6ZS9jb250ZW50LmpzJ1xyXG5pbXBvcnQge2RvY3VtZW50fSBmcm9tICcuL2luaXRpYWxpemUvZG9jdW1lbnQuanMnXHJcbmltcG9ydCB7Zmxvd30gZnJvbSAnLi9pbml0aWFsaXplL2Zsb3cuanMnXHJcbmltcG9ydCB7dGV4dCwgc3RyaW5nfSBmcm9tICcuL2luaXRpYWxpemUvdGV4dC5qcydcclxuaW1wb3J0IHtjcmVhdGVUb2tlbml6ZXJ9IGZyb20gJy4vY3JlYXRlLXRva2VuaXplci5qcydcclxuaW1wb3J0ICogYXMgZGVmYXVsdENvbnN0cnVjdHMgZnJvbSAnLi9jb25zdHJ1Y3RzLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7UGFyc2VPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXHJcbiAqIEByZXR1cm5zIHtQYXJzZUNvbnRleHR9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uob3B0aW9ucykge1xyXG4gIGNvbnN0IHNldHRpbmdzID0gb3B0aW9ucyB8fCB7fVxyXG4gIGNvbnN0IGNvbnN0cnVjdHMgPSAvKiogQHR5cGUge0Z1bGxOb3JtYWxpemVkRXh0ZW5zaW9ufSAqLyAoXHJcbiAgICBjb21iaW5lRXh0ZW5zaW9ucyhbZGVmYXVsdENvbnN0cnVjdHMsIC4uLihzZXR0aW5ncy5leHRlbnNpb25zIHx8IFtdKV0pXHJcbiAgKVxyXG5cclxuICAvKiogQHR5cGUge1BhcnNlQ29udGV4dH0gKi9cclxuICBjb25zdCBwYXJzZXIgPSB7XHJcbiAgICBkZWZpbmVkOiBbXSxcclxuICAgIGxhenk6IHt9LFxyXG4gICAgY29uc3RydWN0cyxcclxuICAgIGNvbnRlbnQ6IGNyZWF0ZShjb250ZW50KSxcclxuICAgIGRvY3VtZW50OiBjcmVhdGUoZG9jdW1lbnQpLFxyXG4gICAgZmxvdzogY3JlYXRlKGZsb3cpLFxyXG4gICAgc3RyaW5nOiBjcmVhdGUoc3RyaW5nKSxcclxuICAgIHRleHQ6IGNyZWF0ZSh0ZXh0KVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHBhcnNlclxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0luaXRpYWxDb25zdHJ1Y3R9IGluaXRpYWxcclxuICAgKi9cclxuICBmdW5jdGlvbiBjcmVhdGUoaW5pdGlhbCkge1xyXG4gICAgcmV0dXJuIGNyZWF0b3JcclxuICAgIC8qKiBAdHlwZSB7Q3JlYXRlfSAqL1xyXG4gICAgZnVuY3Rpb24gY3JlYXRvcihmcm9tKSB7XHJcbiAgICAgIHJldHVybiBjcmVhdGVUb2tlbml6ZXIocGFyc2VyLCBpbml0aWFsLCBmcm9tKVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/parse.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/postprocess.js":
/*!*******************************************************!*\
  !*** ./node_modules/micromark/dev/lib/postprocess.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"postprocess\": function() { return /* binding */ postprocess; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-subtokenize */ \"./node_modules/micromark-util-subtokenize/dev/index.js\");\n/**\r\n * @typedef {import('micromark-util-types').Event} Event\r\n */\r\n\r\n\r\n\r\n/**\r\n * @param {Array<Event>} events\r\n * @returns {Array<Event>}\r\n */\r\nfunction postprocess(events) {\r\n  while (!(0,micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_0__.subtokenize)(events)) {\r\n    // Empty\r\n  }\r\n\r\n  return events\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcG9zdHByb2Nlc3MuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0E7QUFDc0Q7QUFDdEQ7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2I7QUFDTztBQUNQLFVBQVUsdUVBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcG9zdHByb2Nlc3MuanM/NDA0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5FdmVudH0gRXZlbnRcclxuICovXHJcblxyXG5pbXBvcnQge3N1YnRva2VuaXplfSBmcm9tICdtaWNyb21hcmstdXRpbC1zdWJ0b2tlbml6ZSdcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge0FycmF5PEV2ZW50Pn0gZXZlbnRzXHJcbiAqIEByZXR1cm5zIHtBcnJheTxFdmVudD59XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcG9zdHByb2Nlc3MoZXZlbnRzKSB7XHJcbiAgd2hpbGUgKCFzdWJ0b2tlbml6ZShldmVudHMpKSB7XHJcbiAgICAvLyBFbXB0eVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGV2ZW50c1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/postprocess.js\n"));

/***/ }),

/***/ "./node_modules/micromark/dev/lib/preprocess.js":
/*!******************************************************!*\
  !*** ./node_modules/micromark/dev/lib/preprocess.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"preprocess\": function() { return /* binding */ preprocess; }\n/* harmony export */ });\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"./node_modules/micromark-util-symbol/constants.js\");\n/**\r\n * @typedef {import('micromark-util-types').Chunk} Chunk\r\n * @typedef {import('micromark-util-types').Code} Code\r\n * @typedef {import('micromark-util-types').Encoding} Encoding\r\n * @typedef {import('micromark-util-types').Value} Value\r\n */\r\n\r\n/**\r\n * @callback Preprocessor\r\n * @param {Value} value\r\n * @param {Encoding | null | undefined} [encoding]\r\n * @param {boolean | null | undefined} [end=false]\r\n * @returns {Array<Chunk>}\r\n */\r\n\r\n\r\n\r\n\r\nconst search = /[\\0\\t\\n\\r]/g\r\n\r\n/**\r\n * @returns {Preprocessor}\r\n */\r\nfunction preprocess() {\r\n  let column = 1\r\n  let buffer = ''\r\n  /** @type {boolean | undefined} */\r\n  let start = true\r\n  /** @type {boolean | undefined} */\r\n  let atCarriageReturn\r\n\r\n  return preprocessor\r\n\r\n  /** @type {Preprocessor} */\r\n  function preprocessor(value, encoding, end) {\r\n    /** @type {Array<Chunk>} */\r\n    const chunks = []\r\n    /** @type {RegExpMatchArray | null} */\r\n    let match\r\n    /** @type {number} */\r\n    let next\r\n    /** @type {number} */\r\n    let startPosition\r\n    /** @type {number} */\r\n    let endPosition\r\n    /** @type {Code} */\r\n    let code\r\n\r\n    // @ts-expect-error `Buffer` does allow an encoding.\r\n    value = buffer + value.toString(encoding)\r\n    startPosition = 0\r\n    buffer = ''\r\n\r\n    if (start) {\r\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\r\n      if (value.charCodeAt(0) === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.byteOrderMarker) {\r\n        startPosition++\r\n      }\r\n\r\n      start = undefined\r\n    }\r\n\r\n    while (startPosition < value.length) {\r\n      search.lastIndex = startPosition\r\n      match = search.exec(value)\r\n      endPosition =\r\n        match && match.index !== undefined ? match.index : value.length\r\n      code = value.charCodeAt(endPosition)\r\n\r\n      if (!match) {\r\n        buffer = value.slice(startPosition)\r\n        break\r\n      }\r\n\r\n      if (\r\n        code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lf &&\r\n        startPosition === endPosition &&\r\n        atCarriageReturn\r\n      ) {\r\n        chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.carriageReturnLineFeed)\r\n        atCarriageReturn = undefined\r\n      } else {\r\n        if (atCarriageReturn) {\r\n          chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.carriageReturn)\r\n          atCarriageReturn = undefined\r\n        }\r\n\r\n        if (startPosition < endPosition) {\r\n          chunks.push(value.slice(startPosition, endPosition))\r\n          column += endPosition - startPosition\r\n        }\r\n\r\n        switch (code) {\r\n          case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.nul: {\r\n            chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.replacementCharacter)\r\n            column++\r\n\r\n            break\r\n          }\r\n\r\n          case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.ht: {\r\n            next = Math.ceil(column / micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_1__.constants.tabSize) * micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_1__.constants.tabSize\r\n            chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.horizontalTab)\r\n            while (column++ < next) chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.virtualSpace)\r\n\r\n            break\r\n          }\r\n\r\n          case micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lf: {\r\n            chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.lineFeed)\r\n            column = 1\r\n\r\n            break\r\n          }\r\n\r\n          default: {\r\n            atCarriageReturn = true\r\n            column = 1\r\n          }\r\n        }\r\n      }\r\n\r\n      startPosition = endPosition + 1\r\n    }\r\n\r\n    if (end) {\r\n      if (atCarriageReturn) chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.carriageReturn)\r\n      if (buffer) chunks.push(buffer)\r\n      chunks.push(micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_0__.codes.eof)\r\n    }\r\n\r\n    return chunks\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcHJlcHJvY2Vzcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEseUNBQXlDO0FBQ3RELGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsNkJBQTZCO0FBQ3hDLFdBQVcsNEJBQTRCO0FBQ3ZDLGFBQWE7QUFDYjtBQUNBO0FBQ29EO0FBQ1E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxjQUFjO0FBQzNCO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLE1BQU07QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGlGQUFxQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0ZBQTRCO0FBQ2hEO0FBQ0EsUUFBUTtBQUNSO0FBQ0Esc0JBQXNCLGdGQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFFQUFTO0FBQ3hCLHdCQUF3QixzRkFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0VBQVE7QUFDdkIsc0NBQXNDLGlGQUFpQixJQUFJLGlGQUFpQjtBQUM1RSx3QkFBd0IsK0VBQW1CO0FBQzNDLGdEQUFnRCw4RUFBa0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9FQUFRO0FBQ3ZCLHdCQUF3QiwwRUFBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxnRkFBb0I7QUFDNUQ7QUFDQSxrQkFBa0IscUVBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrL2Rldi9saWIvcHJlcHJvY2Vzcy5qcz82NmQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNodW5rfSBDaHVua1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvZGV9IENvZGVcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5FbmNvZGluZ30gRW5jb2RpbmdcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5WYWx1ZX0gVmFsdWVcclxuICovXHJcblxyXG4vKipcclxuICogQGNhbGxiYWNrIFByZXByb2Nlc3NvclxyXG4gKiBAcGFyYW0ge1ZhbHVlfSB2YWx1ZVxyXG4gKiBAcGFyYW0ge0VuY29kaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2VuY29kaW5nXVxyXG4gKiBAcGFyYW0ge2Jvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkfSBbZW5kPWZhbHNlXVxyXG4gKiBAcmV0dXJucyB7QXJyYXk8Q2h1bms+fVxyXG4gKi9cclxuXHJcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcclxuaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXHJcblxyXG5jb25zdCBzZWFyY2ggPSAvW1xcMFxcdFxcblxccl0vZ1xyXG5cclxuLyoqXHJcbiAqIEByZXR1cm5zIHtQcmVwcm9jZXNzb3J9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcHJlcHJvY2VzcygpIHtcclxuICBsZXQgY29sdW1uID0gMVxyXG4gIGxldCBidWZmZXIgPSAnJ1xyXG4gIC8qKiBAdHlwZSB7Ym9vbGVhbiB8IHVuZGVmaW5lZH0gKi9cclxuICBsZXQgc3RhcnQgPSB0cnVlXHJcbiAgLyoqIEB0eXBlIHtib29sZWFuIHwgdW5kZWZpbmVkfSAqL1xyXG4gIGxldCBhdENhcnJpYWdlUmV0dXJuXHJcblxyXG4gIHJldHVybiBwcmVwcm9jZXNzb3JcclxuXHJcbiAgLyoqIEB0eXBlIHtQcmVwcm9jZXNzb3J9ICovXHJcbiAgZnVuY3Rpb24gcHJlcHJvY2Vzc29yKHZhbHVlLCBlbmNvZGluZywgZW5kKSB7XHJcbiAgICAvKiogQHR5cGUge0FycmF5PENodW5rPn0gKi9cclxuICAgIGNvbnN0IGNodW5rcyA9IFtdXHJcbiAgICAvKiogQHR5cGUge1JlZ0V4cE1hdGNoQXJyYXkgfCBudWxsfSAqL1xyXG4gICAgbGV0IG1hdGNoXHJcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICAgIGxldCBuZXh0XHJcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICAgIGxldCBzdGFydFBvc2l0aW9uXHJcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cclxuICAgIGxldCBlbmRQb3NpdGlvblxyXG4gICAgLyoqIEB0eXBlIHtDb2RlfSAqL1xyXG4gICAgbGV0IGNvZGVcclxuXHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGBCdWZmZXJgIGRvZXMgYWxsb3cgYW4gZW5jb2RpbmcuXHJcbiAgICB2YWx1ZSA9IGJ1ZmZlciArIHZhbHVlLnRvU3RyaW5nKGVuY29kaW5nKVxyXG4gICAgc3RhcnRQb3NpdGlvbiA9IDBcclxuICAgIGJ1ZmZlciA9ICcnXHJcblxyXG4gICAgaWYgKHN0YXJ0KSB7XHJcbiAgICAgIC8vIFRvIGRvOiBgbWFya2Rvd24tcnNgIGFjdHVhbGx5IHBhcnNlcyBCT01zIChieXRlIG9yZGVyIG1hcmspLlxyXG4gICAgICBpZiAodmFsdWUuY2hhckNvZGVBdCgwKSA9PT0gY29kZXMuYnl0ZU9yZGVyTWFya2VyKSB7XHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbisrXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXJ0ID0gdW5kZWZpbmVkXHJcbiAgICB9XHJcblxyXG4gICAgd2hpbGUgKHN0YXJ0UG9zaXRpb24gPCB2YWx1ZS5sZW5ndGgpIHtcclxuICAgICAgc2VhcmNoLmxhc3RJbmRleCA9IHN0YXJ0UG9zaXRpb25cclxuICAgICAgbWF0Y2ggPSBzZWFyY2guZXhlYyh2YWx1ZSlcclxuICAgICAgZW5kUG9zaXRpb24gPVxyXG4gICAgICAgIG1hdGNoICYmIG1hdGNoLmluZGV4ICE9PSB1bmRlZmluZWQgPyBtYXRjaC5pbmRleCA6IHZhbHVlLmxlbmd0aFxyXG4gICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChlbmRQb3NpdGlvbilcclxuXHJcbiAgICAgIGlmICghbWF0Y2gpIHtcclxuICAgICAgICBidWZmZXIgPSB2YWx1ZS5zbGljZShzdGFydFBvc2l0aW9uKVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChcclxuICAgICAgICBjb2RlID09PSBjb2Rlcy5sZiAmJlxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb24gPT09IGVuZFBvc2l0aW9uICYmXHJcbiAgICAgICAgYXRDYXJyaWFnZVJldHVyblxyXG4gICAgICApIHtcclxuICAgICAgICBjaHVua3MucHVzaChjb2Rlcy5jYXJyaWFnZVJldHVybkxpbmVGZWVkKVxyXG4gICAgICAgIGF0Q2FycmlhZ2VSZXR1cm4gPSB1bmRlZmluZWRcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAoYXRDYXJyaWFnZVJldHVybikge1xyXG4gICAgICAgICAgY2h1bmtzLnB1c2goY29kZXMuY2FycmlhZ2VSZXR1cm4pXHJcbiAgICAgICAgICBhdENhcnJpYWdlUmV0dXJuID0gdW5kZWZpbmVkXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoc3RhcnRQb3NpdGlvbiA8IGVuZFBvc2l0aW9uKSB7XHJcbiAgICAgICAgICBjaHVua3MucHVzaCh2YWx1ZS5zbGljZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikpXHJcbiAgICAgICAgICBjb2x1bW4gKz0gZW5kUG9zaXRpb24gLSBzdGFydFBvc2l0aW9uXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzd2l0Y2ggKGNvZGUpIHtcclxuICAgICAgICAgIGNhc2UgY29kZXMubnVsOiB7XHJcbiAgICAgICAgICAgIGNodW5rcy5wdXNoKGNvZGVzLnJlcGxhY2VtZW50Q2hhcmFjdGVyKVxyXG4gICAgICAgICAgICBjb2x1bW4rK1xyXG5cclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBjYXNlIGNvZGVzLmh0OiB7XHJcbiAgICAgICAgICAgIG5leHQgPSBNYXRoLmNlaWwoY29sdW1uIC8gY29uc3RhbnRzLnRhYlNpemUpICogY29uc3RhbnRzLnRhYlNpemVcclxuICAgICAgICAgICAgY2h1bmtzLnB1c2goY29kZXMuaG9yaXpvbnRhbFRhYilcclxuICAgICAgICAgICAgd2hpbGUgKGNvbHVtbisrIDwgbmV4dCkgY2h1bmtzLnB1c2goY29kZXMudmlydHVhbFNwYWNlKVxyXG5cclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBjYXNlIGNvZGVzLmxmOiB7XHJcbiAgICAgICAgICAgIGNodW5rcy5wdXNoKGNvZGVzLmxpbmVGZWVkKVxyXG4gICAgICAgICAgICBjb2x1bW4gPSAxXHJcblxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGRlZmF1bHQ6IHtcclxuICAgICAgICAgICAgYXRDYXJyaWFnZVJldHVybiA9IHRydWVcclxuICAgICAgICAgICAgY29sdW1uID0gMVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgc3RhcnRQb3NpdGlvbiA9IGVuZFBvc2l0aW9uICsgMVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChlbmQpIHtcclxuICAgICAgaWYgKGF0Q2FycmlhZ2VSZXR1cm4pIGNodW5rcy5wdXNoKGNvZGVzLmNhcnJpYWdlUmV0dXJuKVxyXG4gICAgICBpZiAoYnVmZmVyKSBjaHVua3MucHVzaChidWZmZXIpXHJcbiAgICAgIGNodW5rcy5wdXNoKGNvZGVzLmVvZilcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY2h1bmtzXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/micromark/dev/lib/preprocess.js\n"));

/***/ }),

/***/ "./node_modules/property-information/index.js":
/*!****************************************************!*\
  !*** ./node_modules/property-information/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"find\": function() { return /* reexport safe */ _lib_find_js__WEBPACK_IMPORTED_MODULE_0__.find; },\n/* harmony export */   \"hastToReact\": function() { return /* reexport safe */ _lib_hast_to_react_js__WEBPACK_IMPORTED_MODULE_1__.hastToReact; },\n/* harmony export */   \"html\": function() { return /* binding */ html; },\n/* harmony export */   \"normalize\": function() { return /* reexport safe */ _lib_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalize; },\n/* harmony export */   \"svg\": function() { return /* binding */ svg; }\n/* harmony export */ });\n/* harmony import */ var _lib_util_merge_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/util/merge.js */ \"./node_modules/property-information/lib/util/merge.js\");\n/* harmony import */ var _lib_xlink_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/xlink.js */ \"./node_modules/property-information/lib/xlink.js\");\n/* harmony import */ var _lib_xml_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/xml.js */ \"./node_modules/property-information/lib/xml.js\");\n/* harmony import */ var _lib_xmlns_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/xmlns.js */ \"./node_modules/property-information/lib/xmlns.js\");\n/* harmony import */ var _lib_aria_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/aria.js */ \"./node_modules/property-information/lib/aria.js\");\n/* harmony import */ var _lib_html_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/html.js */ \"./node_modules/property-information/lib/html.js\");\n/* harmony import */ var _lib_svg_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/svg.js */ \"./node_modules/property-information/lib/svg.js\");\n/* harmony import */ var _lib_find_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/find.js */ \"./node_modules/property-information/lib/find.js\");\n/* harmony import */ var _lib_hast_to_react_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/hast-to-react.js */ \"./node_modules/property-information/lib/hast-to-react.js\");\n/* harmony import */ var _lib_normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/normalize.js */ \"./node_modules/property-information/lib/normalize.js\");\n/**\r\n * @typedef {import('./lib/util/info.js').Info} Info\r\n * @typedef {import('./lib/util/schema.js').Schema} Schema\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst html = (0,_lib_util_merge_js__WEBPACK_IMPORTED_MODULE_3__.merge)([_lib_xml_js__WEBPACK_IMPORTED_MODULE_4__.xml, _lib_xlink_js__WEBPACK_IMPORTED_MODULE_5__.xlink, _lib_xmlns_js__WEBPACK_IMPORTED_MODULE_6__.xmlns, _lib_aria_js__WEBPACK_IMPORTED_MODULE_7__.aria, _lib_html_js__WEBPACK_IMPORTED_MODULE_8__.html], 'html')\r\nconst svg = (0,_lib_util_merge_js__WEBPACK_IMPORTED_MODULE_3__.merge)([_lib_xml_js__WEBPACK_IMPORTED_MODULE_4__.xml, _lib_xlink_js__WEBPACK_IMPORTED_MODULE_5__.xlink, _lib_xmlns_js__WEBPACK_IMPORTED_MODULE_6__.xmlns, _lib_aria_js__WEBPACK_IMPORTED_MODULE_7__.aria, _lib_svg_js__WEBPACK_IMPORTED_MODULE_9__.svg], 'svg')\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLHVDQUF1QztBQUNwRDtBQUNBO0FBQ3lDO0FBQ0w7QUFDSjtBQUNJO0FBQ0Y7QUFDWTtBQUNIO0FBQzNDO0FBQ2tDO0FBQ2dCO0FBQ047QUFDckMsYUFBYSx5REFBSyxFQUFFLDRDQUFHLEVBQUUsZ0RBQUssRUFBRSxnREFBSyxFQUFFLDhDQUFJLEVBQUUsOENBQVE7QUFDckQsWUFBWSx5REFBSyxFQUFFLDRDQUFHLEVBQUUsZ0RBQUssRUFBRSxnREFBSyxFQUFFLDhDQUFJLEVBQUUsNENBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2luZGV4LmpzPzkyNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL3V0aWwvaW5mby5qcycpLkluZm99IEluZm9cclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvdXRpbC9zY2hlbWEuanMnKS5TY2hlbWF9IFNjaGVtYVxyXG4gKi9cclxuXHJcbmltcG9ydCB7bWVyZ2V9IGZyb20gJy4vbGliL3V0aWwvbWVyZ2UuanMnXHJcbmltcG9ydCB7eGxpbmt9IGZyb20gJy4vbGliL3hsaW5rLmpzJ1xyXG5pbXBvcnQge3htbH0gZnJvbSAnLi9saWIveG1sLmpzJ1xyXG5pbXBvcnQge3htbG5zfSBmcm9tICcuL2xpYi94bWxucy5qcydcclxuaW1wb3J0IHthcmlhfSBmcm9tICcuL2xpYi9hcmlhLmpzJ1xyXG5pbXBvcnQge2h0bWwgYXMgaHRtbEJhc2V9IGZyb20gJy4vbGliL2h0bWwuanMnXHJcbmltcG9ydCB7c3ZnIGFzIHN2Z0Jhc2V9IGZyb20gJy4vbGliL3N2Zy5qcydcclxuXHJcbmV4cG9ydCB7ZmluZH0gZnJvbSAnLi9saWIvZmluZC5qcydcclxuZXhwb3J0IHtoYXN0VG9SZWFjdH0gZnJvbSAnLi9saWIvaGFzdC10by1yZWFjdC5qcydcclxuZXhwb3J0IHtub3JtYWxpemV9IGZyb20gJy4vbGliL25vcm1hbGl6ZS5qcydcclxuZXhwb3J0IGNvbnN0IGh0bWwgPSBtZXJnZShbeG1sLCB4bGluaywgeG1sbnMsIGFyaWEsIGh0bWxCYXNlXSwgJ2h0bWwnKVxyXG5leHBvcnQgY29uc3Qgc3ZnID0gbWVyZ2UoW3htbCwgeGxpbmssIHhtbG5zLCBhcmlhLCBzdmdCYXNlXSwgJ3N2ZycpXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/index.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/aria.js":
/*!*******************************************************!*\
  !*** ./node_modules/property-information/lib/aria.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"aria\": function() { return /* binding */ aria; }\n/* harmony export */ });\n/* harmony import */ var _util_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/types.js */ \"./node_modules/property-information/lib/util/types.js\");\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n\r\n\r\n\r\nconst aria = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  transform(_, prop) {\r\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\r\n  },\r\n  properties: {\r\n    ariaActiveDescendant: null,\r\n    ariaAtomic: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaAutoComplete: null,\r\n    ariaBusy: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaChecked: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaColCount: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaColIndex: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaColSpan: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaControls: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaCurrent: null,\r\n    ariaDescribedBy: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaDetails: null,\r\n    ariaDisabled: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaDropEffect: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaErrorMessage: null,\r\n    ariaExpanded: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaFlowTo: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaGrabbed: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaHasPopup: null,\r\n    ariaHidden: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaInvalid: null,\r\n    ariaKeyShortcuts: null,\r\n    ariaLabel: null,\r\n    ariaLabelledBy: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaLevel: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaLive: null,\r\n    ariaModal: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaMultiLine: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaMultiSelectable: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaOrientation: null,\r\n    ariaOwns: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaPlaceholder: null,\r\n    ariaPosInSet: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaPressed: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaReadOnly: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaRelevant: null,\r\n    ariaRequired: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaRoleDescription: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.spaceSeparated,\r\n    ariaRowCount: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaRowIndex: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaRowSpan: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaSelected: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.booleanish,\r\n    ariaSetSize: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaSort: null,\r\n    ariaValueMax: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaValueMin: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaValueNow: _util_types_js__WEBPACK_IMPORTED_MODULE_1__.number,\r\n    ariaValueText: null,\r\n    role: null\r\n  }\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL2FyaWEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQzNCO0FBQ3ZDO0FBQ08sYUFBYSx1REFBTTtBQUMxQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQVU7QUFDMUI7QUFDQSxjQUFjLHNEQUFVO0FBQ3hCLGlCQUFpQixzREFBVTtBQUMzQixrQkFBa0Isa0RBQU07QUFDeEIsa0JBQWtCLGtEQUFNO0FBQ3hCLGlCQUFpQixrREFBTTtBQUN2QixrQkFBa0IsMERBQWM7QUFDaEM7QUFDQSxxQkFBcUIsMERBQWM7QUFDbkM7QUFDQSxrQkFBa0Isc0RBQVU7QUFDNUIsb0JBQW9CLDBEQUFjO0FBQ2xDO0FBQ0Esa0JBQWtCLHNEQUFVO0FBQzVCLGdCQUFnQiwwREFBYztBQUM5QixpQkFBaUIsc0RBQVU7QUFDM0I7QUFDQSxnQkFBZ0Isc0RBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBEQUFjO0FBQ2xDLGVBQWUsa0RBQU07QUFDckI7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCLG1CQUFtQixzREFBVTtBQUM3Qix5QkFBeUIsc0RBQVU7QUFDbkM7QUFDQSxjQUFjLDBEQUFjO0FBQzVCO0FBQ0Esa0JBQWtCLGtEQUFNO0FBQ3hCLGlCQUFpQixzREFBVTtBQUMzQixrQkFBa0Isc0RBQVU7QUFDNUI7QUFDQSxrQkFBa0Isc0RBQVU7QUFDNUIseUJBQXlCLDBEQUFjO0FBQ3ZDLGtCQUFrQixrREFBTTtBQUN4QixrQkFBa0Isa0RBQU07QUFDeEIsaUJBQWlCLGtEQUFNO0FBQ3ZCLGtCQUFrQixzREFBVTtBQUM1QixpQkFBaUIsa0RBQU07QUFDdkI7QUFDQSxrQkFBa0Isa0RBQU07QUFDeEIsa0JBQWtCLGtEQUFNO0FBQ3hCLGtCQUFrQixrREFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvYXJpYS5qcz83ZWY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Ym9vbGVhbmlzaCwgbnVtYmVyLCBzcGFjZVNlcGFyYXRlZH0gZnJvbSAnLi91dGlsL3R5cGVzLmpzJ1xyXG5pbXBvcnQge2NyZWF0ZX0gZnJvbSAnLi91dGlsL2NyZWF0ZS5qcydcclxuXHJcbmV4cG9ydCBjb25zdCBhcmlhID0gY3JlYXRlKHtcclxuICB0cmFuc2Zvcm0oXywgcHJvcCkge1xyXG4gICAgcmV0dXJuIHByb3AgPT09ICdyb2xlJyA/IHByb3AgOiAnYXJpYS0nICsgcHJvcC5zbGljZSg0KS50b0xvd2VyQ2FzZSgpXHJcbiAgfSxcclxuICBwcm9wZXJ0aWVzOiB7XHJcbiAgICBhcmlhQWN0aXZlRGVzY2VuZGFudDogbnVsbCxcclxuICAgIGFyaWFBdG9taWM6IGJvb2xlYW5pc2gsXHJcbiAgICBhcmlhQXV0b0NvbXBsZXRlOiBudWxsLFxyXG4gICAgYXJpYUJ1c3k6IGJvb2xlYW5pc2gsXHJcbiAgICBhcmlhQ2hlY2tlZDogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFDb2xDb3VudDogbnVtYmVyLFxyXG4gICAgYXJpYUNvbEluZGV4OiBudW1iZXIsXHJcbiAgICBhcmlhQ29sU3BhbjogbnVtYmVyLFxyXG4gICAgYXJpYUNvbnRyb2xzOiBzcGFjZVNlcGFyYXRlZCxcclxuICAgIGFyaWFDdXJyZW50OiBudWxsLFxyXG4gICAgYXJpYURlc2NyaWJlZEJ5OiBzcGFjZVNlcGFyYXRlZCxcclxuICAgIGFyaWFEZXRhaWxzOiBudWxsLFxyXG4gICAgYXJpYURpc2FibGVkOiBib29sZWFuaXNoLFxyXG4gICAgYXJpYURyb3BFZmZlY3Q6IHNwYWNlU2VwYXJhdGVkLFxyXG4gICAgYXJpYUVycm9yTWVzc2FnZTogbnVsbCxcclxuICAgIGFyaWFFeHBhbmRlZDogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFGbG93VG86IHNwYWNlU2VwYXJhdGVkLFxyXG4gICAgYXJpYUdyYWJiZWQ6IGJvb2xlYW5pc2gsXHJcbiAgICBhcmlhSGFzUG9wdXA6IG51bGwsXHJcbiAgICBhcmlhSGlkZGVuOiBib29sZWFuaXNoLFxyXG4gICAgYXJpYUludmFsaWQ6IG51bGwsXHJcbiAgICBhcmlhS2V5U2hvcnRjdXRzOiBudWxsLFxyXG4gICAgYXJpYUxhYmVsOiBudWxsLFxyXG4gICAgYXJpYUxhYmVsbGVkQnk6IHNwYWNlU2VwYXJhdGVkLFxyXG4gICAgYXJpYUxldmVsOiBudW1iZXIsXHJcbiAgICBhcmlhTGl2ZTogbnVsbCxcclxuICAgIGFyaWFNb2RhbDogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFNdWx0aUxpbmU6IGJvb2xlYW5pc2gsXHJcbiAgICBhcmlhTXVsdGlTZWxlY3RhYmxlOiBib29sZWFuaXNoLFxyXG4gICAgYXJpYU9yaWVudGF0aW9uOiBudWxsLFxyXG4gICAgYXJpYU93bnM6IHNwYWNlU2VwYXJhdGVkLFxyXG4gICAgYXJpYVBsYWNlaG9sZGVyOiBudWxsLFxyXG4gICAgYXJpYVBvc0luU2V0OiBudW1iZXIsXHJcbiAgICBhcmlhUHJlc3NlZDogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFSZWFkT25seTogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFSZWxldmFudDogbnVsbCxcclxuICAgIGFyaWFSZXF1aXJlZDogYm9vbGVhbmlzaCxcclxuICAgIGFyaWFSb2xlRGVzY3JpcHRpb246IHNwYWNlU2VwYXJhdGVkLFxyXG4gICAgYXJpYVJvd0NvdW50OiBudW1iZXIsXHJcbiAgICBhcmlhUm93SW5kZXg6IG51bWJlcixcclxuICAgIGFyaWFSb3dTcGFuOiBudW1iZXIsXHJcbiAgICBhcmlhU2VsZWN0ZWQ6IGJvb2xlYW5pc2gsXHJcbiAgICBhcmlhU2V0U2l6ZTogbnVtYmVyLFxyXG4gICAgYXJpYVNvcnQ6IG51bGwsXHJcbiAgICBhcmlhVmFsdWVNYXg6IG51bWJlcixcclxuICAgIGFyaWFWYWx1ZU1pbjogbnVtYmVyLFxyXG4gICAgYXJpYVZhbHVlTm93OiBudW1iZXIsXHJcbiAgICBhcmlhVmFsdWVUZXh0OiBudWxsLFxyXG4gICAgcm9sZTogbnVsbFxyXG4gIH1cclxufSlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/aria.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/find.js":
/*!*******************************************************!*\
  !*** ./node_modules/property-information/lib/find.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"find\": function() { return /* binding */ find; }\n/* harmony export */ });\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/property-information/lib/normalize.js\");\n/* harmony import */ var _util_defined_info_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/defined-info.js */ \"./node_modules/property-information/lib/util/defined-info.js\");\n/* harmony import */ var _util_info_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/info.js */ \"./node_modules/property-information/lib/util/info.js\");\n/**\r\n * @typedef {import('./util/schema.js').Schema} Schema\r\n */\r\n\r\n\r\n\r\n\r\n\r\nconst valid = /^data[-\\w.:]+$/i\r\nconst dash = /-[a-z]/g\r\nconst cap = /[A-Z]/g\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} value\r\n * @returns {Info}\r\n */\r\nfunction find(schema, value) {\r\n  const normal = (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(value)\r\n  let prop = value\r\n  let Type = _util_info_js__WEBPACK_IMPORTED_MODULE_1__.Info\r\n\r\n  if (normal in schema.normal) {\r\n    return schema.property[schema.normal[normal]]\r\n  }\r\n\r\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\r\n    // Attribute or property.\r\n    if (value.charAt(4) === '-') {\r\n      // Turn it into a property.\r\n      const rest = value.slice(5).replace(dash, camelcase)\r\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\r\n    } else {\r\n      // Turn it into an attribute.\r\n      const rest = value.slice(4)\r\n\r\n      if (!dash.test(rest)) {\r\n        let dashes = rest.replace(cap, kebab)\r\n\r\n        if (dashes.charAt(0) !== '-') {\r\n          dashes = '-' + dashes\r\n        }\r\n\r\n        value = 'data' + dashes\r\n      }\r\n    }\r\n\r\n    Type = _util_defined_info_js__WEBPACK_IMPORTED_MODULE_2__.DefinedInfo\r\n  }\r\n\r\n  return new Type(prop, value)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction kebab($0) {\r\n  return '-' + $0.toLowerCase()\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction camelcase($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL2ZpbmQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTtBQUN3QztBQUNVO0FBQ2Y7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLGlCQUFpQix3REFBUztBQUMxQjtBQUNBLGFBQWEsK0NBQUk7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4REFBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2xpYi9maW5kLmpzPzA3MjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vdXRpbC9zY2hlbWEuanMnKS5TY2hlbWF9IFNjaGVtYVxyXG4gKi9cclxuXHJcbmltcG9ydCB7bm9ybWFsaXplfSBmcm9tICcuL25vcm1hbGl6ZS5qcydcclxuaW1wb3J0IHtEZWZpbmVkSW5mb30gZnJvbSAnLi91dGlsL2RlZmluZWQtaW5mby5qcydcclxuaW1wb3J0IHtJbmZvfSBmcm9tICcuL3V0aWwvaW5mby5qcydcclxuXHJcbmNvbnN0IHZhbGlkID0gL15kYXRhWy1cXHcuOl0rJC9pXHJcbmNvbnN0IGRhc2ggPSAvLVthLXpdL2dcclxuY29uc3QgY2FwID0gL1tBLVpdL2dcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1NjaGVtYX0gc2NoZW1hXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gKiBAcmV0dXJucyB7SW5mb31cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmaW5kKHNjaGVtYSwgdmFsdWUpIHtcclxuICBjb25zdCBub3JtYWwgPSBub3JtYWxpemUodmFsdWUpXHJcbiAgbGV0IHByb3AgPSB2YWx1ZVxyXG4gIGxldCBUeXBlID0gSW5mb1xyXG5cclxuICBpZiAobm9ybWFsIGluIHNjaGVtYS5ub3JtYWwpIHtcclxuICAgIHJldHVybiBzY2hlbWEucHJvcGVydHlbc2NoZW1hLm5vcm1hbFtub3JtYWxdXVxyXG4gIH1cclxuXHJcbiAgaWYgKG5vcm1hbC5sZW5ndGggPiA0ICYmIG5vcm1hbC5zbGljZSgwLCA0KSA9PT0gJ2RhdGEnICYmIHZhbGlkLnRlc3QodmFsdWUpKSB7XHJcbiAgICAvLyBBdHRyaWJ1dGUgb3IgcHJvcGVydHkuXHJcbiAgICBpZiAodmFsdWUuY2hhckF0KDQpID09PSAnLScpIHtcclxuICAgICAgLy8gVHVybiBpdCBpbnRvIGEgcHJvcGVydHkuXHJcbiAgICAgIGNvbnN0IHJlc3QgPSB2YWx1ZS5zbGljZSg1KS5yZXBsYWNlKGRhc2gsIGNhbWVsY2FzZSlcclxuICAgICAgcHJvcCA9ICdkYXRhJyArIHJlc3QuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyByZXN0LnNsaWNlKDEpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBUdXJuIGl0IGludG8gYW4gYXR0cmlidXRlLlxyXG4gICAgICBjb25zdCByZXN0ID0gdmFsdWUuc2xpY2UoNClcclxuXHJcbiAgICAgIGlmICghZGFzaC50ZXN0KHJlc3QpKSB7XHJcbiAgICAgICAgbGV0IGRhc2hlcyA9IHJlc3QucmVwbGFjZShjYXAsIGtlYmFiKVxyXG5cclxuICAgICAgICBpZiAoZGFzaGVzLmNoYXJBdCgwKSAhPT0gJy0nKSB7XHJcbiAgICAgICAgICBkYXNoZXMgPSAnLScgKyBkYXNoZXNcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhbHVlID0gJ2RhdGEnICsgZGFzaGVzXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBUeXBlID0gRGVmaW5lZEluZm9cclxuICB9XHJcblxyXG4gIHJldHVybiBuZXcgVHlwZShwcm9wLCB2YWx1ZSlcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSAkMFxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24ga2ViYWIoJDApIHtcclxuICByZXR1cm4gJy0nICsgJDAudG9Mb3dlckNhc2UoKVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9ICQwXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBjYW1lbGNhc2UoJDApIHtcclxuICByZXR1cm4gJDAuY2hhckF0KDEpLnRvVXBwZXJDYXNlKClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/find.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/hast-to-react.js":
/*!****************************************************************!*\
  !*** ./node_modules/property-information/lib/hast-to-react.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hastToReact\": function() { return /* binding */ hastToReact; }\n/* harmony export */ });\n/**\r\n * `hast` is close to `React`, but differs in a couple of cases.\r\n *\r\n * To get a React property from a hast property, check if it is in\r\n * `hastToReact`, if it is, then use the corresponding value,\r\n * otherwise, use the hast property.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nconst hastToReact = {\r\n  classId: 'classID',\r\n  dataType: 'datatype',\r\n  itemId: 'itemID',\r\n  strokeDashArray: 'strokeDasharray',\r\n  strokeDashOffset: 'strokeDashoffset',\r\n  strokeLineCap: 'strokeLinecap',\r\n  strokeLineJoin: 'strokeLinejoin',\r\n  strokeMiterLimit: 'strokeMiterlimit',\r\n  typeOf: 'typeof',\r\n  xLinkActuate: 'xlinkActuate',\r\n  xLinkArcRole: 'xlinkArcrole',\r\n  xLinkHref: 'xlinkHref',\r\n  xLinkRole: 'xlinkRole',\r\n  xLinkShow: 'xlinkShow',\r\n  xLinkTitle: 'xlinkTitle',\r\n  xLinkType: 'xlinkType',\r\n  xmlnsXLink: 'xmlnsXlink'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL2hhc3QtdG8tcmVhY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2xpYi9oYXN0LXRvLXJlYWN0LmpzPzI3OGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIGBoYXN0YCBpcyBjbG9zZSB0byBgUmVhY3RgLCBidXQgZGlmZmVycyBpbiBhIGNvdXBsZSBvZiBjYXNlcy5cclxuICpcclxuICogVG8gZ2V0IGEgUmVhY3QgcHJvcGVydHkgZnJvbSBhIGhhc3QgcHJvcGVydHksIGNoZWNrIGlmIGl0IGlzIGluXHJcbiAqIGBoYXN0VG9SZWFjdGAsIGlmIGl0IGlzLCB0aGVuIHVzZSB0aGUgY29ycmVzcG9uZGluZyB2YWx1ZSxcclxuICogb3RoZXJ3aXNlLCB1c2UgdGhlIGhhc3QgcHJvcGVydHkuXHJcbiAqXHJcbiAqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGhhc3RUb1JlYWN0ID0ge1xyXG4gIGNsYXNzSWQ6ICdjbGFzc0lEJyxcclxuICBkYXRhVHlwZTogJ2RhdGF0eXBlJyxcclxuICBpdGVtSWQ6ICdpdGVtSUQnLFxyXG4gIHN0cm9rZURhc2hBcnJheTogJ3N0cm9rZURhc2hhcnJheScsXHJcbiAgc3Ryb2tlRGFzaE9mZnNldDogJ3N0cm9rZURhc2hvZmZzZXQnLFxyXG4gIHN0cm9rZUxpbmVDYXA6ICdzdHJva2VMaW5lY2FwJyxcclxuICBzdHJva2VMaW5lSm9pbjogJ3N0cm9rZUxpbmVqb2luJyxcclxuICBzdHJva2VNaXRlckxpbWl0OiAnc3Ryb2tlTWl0ZXJsaW1pdCcsXHJcbiAgdHlwZU9mOiAndHlwZW9mJyxcclxuICB4TGlua0FjdHVhdGU6ICd4bGlua0FjdHVhdGUnLFxyXG4gIHhMaW5rQXJjUm9sZTogJ3hsaW5rQXJjcm9sZScsXHJcbiAgeExpbmtIcmVmOiAneGxpbmtIcmVmJyxcclxuICB4TGlua1JvbGU6ICd4bGlua1JvbGUnLFxyXG4gIHhMaW5rU2hvdzogJ3hsaW5rU2hvdycsXHJcbiAgeExpbmtUaXRsZTogJ3hsaW5rVGl0bGUnLFxyXG4gIHhMaW5rVHlwZTogJ3hsaW5rVHlwZScsXHJcbiAgeG1sbnNYTGluazogJ3htbG5zWGxpbmsnXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/hast-to-react.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/html.js":
/*!*******************************************************!*\
  !*** ./node_modules/property-information/lib/html.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"html\": function() { return /* binding */ html; }\n/* harmony export */ });\n/* harmony import */ var _util_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/types.js */ \"./node_modules/property-information/lib/util/types.js\");\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n/* harmony import */ var _util_case_insensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/case-insensitive-transform.js */ \"./node_modules/property-information/lib/util/case-insensitive-transform.js\");\n\r\n\r\n\r\n\r\nconst html = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  space: 'html',\r\n  attributes: {\r\n    acceptcharset: 'accept-charset',\r\n    classname: 'class',\r\n    htmlfor: 'for',\r\n    httpequiv: 'http-equiv'\r\n  },\r\n  transform: _util_case_insensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__.caseInsensitiveTransform,\r\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\r\n  properties: {\r\n    // Standard Properties.\r\n    abbr: null,\r\n    accept: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaSeparated,\r\n    acceptCharset: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    accessKey: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    action: null,\r\n    allow: null,\r\n    allowFullScreen: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    allowPaymentRequest: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    allowUserMedia: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    alt: null,\r\n    as: null,\r\n    async: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    autoCapitalize: null,\r\n    autoComplete: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    autoFocus: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    autoPlay: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    blocking: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    capture: null,\r\n    charSet: null,\r\n    checked: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    cite: null,\r\n    className: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    cols: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    colSpan: null,\r\n    content: null,\r\n    contentEditable: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.booleanish,\r\n    controls: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    controlsList: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    coords: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number | _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaSeparated,\r\n    crossOrigin: null,\r\n    data: null,\r\n    dateTime: null,\r\n    decoding: null,\r\n    default: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    defer: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    dir: null,\r\n    dirName: null,\r\n    disabled: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    download: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.overloadedBoolean,\r\n    draggable: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.booleanish,\r\n    encType: null,\r\n    enterKeyHint: null,\r\n    fetchPriority: null,\r\n    form: null,\r\n    formAction: null,\r\n    formEncType: null,\r\n    formMethod: null,\r\n    formNoValidate: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    formTarget: null,\r\n    headers: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    height: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    hidden: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    high: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    href: null,\r\n    hrefLang: null,\r\n    htmlFor: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    httpEquiv: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    id: null,\r\n    imageSizes: null,\r\n    imageSrcSet: null,\r\n    inert: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    inputMode: null,\r\n    integrity: null,\r\n    is: null,\r\n    isMap: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    itemId: null,\r\n    itemProp: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    itemRef: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    itemScope: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    itemType: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    kind: null,\r\n    label: null,\r\n    lang: null,\r\n    language: null,\r\n    list: null,\r\n    loading: null,\r\n    loop: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    low: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    manifest: null,\r\n    max: null,\r\n    maxLength: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    media: null,\r\n    method: null,\r\n    min: null,\r\n    minLength: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    multiple: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    muted: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    name: null,\r\n    nonce: null,\r\n    noModule: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    noValidate: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    onAbort: null,\r\n    onAfterPrint: null,\r\n    onAuxClick: null,\r\n    onBeforeMatch: null,\r\n    onBeforePrint: null,\r\n    onBeforeToggle: null,\r\n    onBeforeUnload: null,\r\n    onBlur: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onContextLost: null,\r\n    onContextMenu: null,\r\n    onContextRestored: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFormData: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLanguageChange: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadEnd: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMessageError: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRejectionHandled: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onScrollEnd: null,\r\n    onSecurityPolicyViolation: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onSlotChange: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnhandledRejection: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onWheel: null,\r\n    open: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    optimum: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    pattern: null,\r\n    ping: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    placeholder: null,\r\n    playsInline: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    popover: null,\r\n    popoverTarget: null,\r\n    popoverTargetAction: null,\r\n    poster: null,\r\n    preload: null,\r\n    readOnly: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    referrerPolicy: null,\r\n    rel: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    required: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    reversed: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    rows: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    rowSpan: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    sandbox: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    scope: null,\r\n    scoped: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    seamless: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    selected: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    shadowRootClonable: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    shadowRootDelegatesFocus: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    shadowRootMode: null,\r\n    shape: null,\r\n    size: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    sizes: null,\r\n    slot: null,\r\n    span: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    spellCheck: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.booleanish,\r\n    src: null,\r\n    srcDoc: null,\r\n    srcLang: null,\r\n    srcSet: null,\r\n    start: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    step: null,\r\n    style: null,\r\n    tabIndex: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    target: null,\r\n    title: null,\r\n    translate: null,\r\n    type: null,\r\n    typeMustMatch: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    useMap: null,\r\n    value: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.booleanish,\r\n    width: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    wrap: null,\r\n    writingSuggestions: null,\r\n\r\n    // Legacy.\r\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\r\n    align: null, // Several. Use CSS `text-align` instead,\r\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\r\n    archive: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated, // `<object>`. List of URIs to archives\r\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\r\n    background: null, // `<body>`. Use CSS `background-image` instead\r\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\r\n    border: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<table>`. Use CSS `border-width` instead,\r\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\r\n    bottomMargin: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    cellPadding: null, // `<table>`\r\n    cellSpacing: null, // `<table>`\r\n    char: null, // Several table elements. When `align=char`, sets the character to align on\r\n    charOff: null, // Several table elements. When `char`, offsets the alignment\r\n    classId: null, // `<object>`\r\n    clear: null, // `<br>`. Use CSS `clear` instead\r\n    code: null, // `<object>`\r\n    codeBase: null, // `<object>`\r\n    codeType: null, // `<object>`\r\n    color: null, // `<font>` and `<hr>`. Use CSS instead\r\n    compact: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // Lists. Use CSS to reduce space between items instead\r\n    declare: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // `<object>`\r\n    event: null, // `<script>`\r\n    face: null, // `<font>`. Use CSS instead\r\n    frame: null, // `<table>`\r\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\r\n    hSpace: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<img>` and `<object>`\r\n    leftMargin: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\r\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\r\n    lowSrc: null, // `<img>`. Use a `<picture>`\r\n    marginHeight: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    marginWidth: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    noResize: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // `<frame>`\r\n    noHref: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // `<area>`. Use no href instead of an explicit `nohref`\r\n    noShade: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // `<hr>`. Use background-color and height instead of borders\r\n    noWrap: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean, // `<td>` and `<th>`\r\n    object: null, // `<applet>`\r\n    profile: null, // `<head>`\r\n    prompt: null, // `<isindex>`\r\n    rev: null, // `<link>`\r\n    rightMargin: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    rules: null, // `<table>`\r\n    scheme: null, // `<meta>`\r\n    scrolling: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.booleanish, // `<frame>`. Use overflow in the child context\r\n    standby: null, // `<object>`\r\n    summary: null, // `<table>`\r\n    text: null, // `<body>`. Use CSS `color` instead\r\n    topMargin: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<body>`\r\n    valueType: null, // `<param>`\r\n    version: null, // `<html>`. Use a doctype.\r\n    vAlign: null, // Several. Use CSS `vertical-align` instead\r\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\r\n    vSpace: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number, // `<img>` and `<object>`\r\n\r\n    // Non-standard Properties.\r\n    allowTransparency: null,\r\n    autoCorrect: null,\r\n    autoSave: null,\r\n    disablePictureInPicture: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    disableRemotePlayback: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    prefix: null,\r\n    property: null,\r\n    results: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    security: null,\r\n    unselectable: null\r\n  }\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/normalize.js":
/*!************************************************************!*\
  !*** ./node_modules/property-information/lib/normalize.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalize\": function() { return /* binding */ normalize; }\n/* harmony export */ });\n/**\r\n * @param {string} value\r\n * @returns {string}\r\n */\r\nfunction normalize(value) {\r\n  return value.toLowerCase()\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL25vcm1hbGl6ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvbm9ybWFsaXplLmpzPzcwNmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZSh2YWx1ZSkge1xyXG4gIHJldHVybiB2YWx1ZS50b0xvd2VyQ2FzZSgpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/normalize.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/svg.js":
/*!******************************************************!*\
  !*** ./node_modules/property-information/lib/svg.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"svg\": function() { return /* binding */ svg; }\n/* harmony export */ });\n/* harmony import */ var _util_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/types.js */ \"./node_modules/property-information/lib/util/types.js\");\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n/* harmony import */ var _util_case_sensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/case-sensitive-transform.js */ \"./node_modules/property-information/lib/util/case-sensitive-transform.js\");\n\r\n\r\n\r\n\r\nconst svg = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  space: 'svg',\r\n  attributes: {\r\n    accentHeight: 'accent-height',\r\n    alignmentBaseline: 'alignment-baseline',\r\n    arabicForm: 'arabic-form',\r\n    baselineShift: 'baseline-shift',\r\n    capHeight: 'cap-height',\r\n    className: 'class',\r\n    clipPath: 'clip-path',\r\n    clipRule: 'clip-rule',\r\n    colorInterpolation: 'color-interpolation',\r\n    colorInterpolationFilters: 'color-interpolation-filters',\r\n    colorProfile: 'color-profile',\r\n    colorRendering: 'color-rendering',\r\n    crossOrigin: 'crossorigin',\r\n    dataType: 'datatype',\r\n    dominantBaseline: 'dominant-baseline',\r\n    enableBackground: 'enable-background',\r\n    fillOpacity: 'fill-opacity',\r\n    fillRule: 'fill-rule',\r\n    floodColor: 'flood-color',\r\n    floodOpacity: 'flood-opacity',\r\n    fontFamily: 'font-family',\r\n    fontSize: 'font-size',\r\n    fontSizeAdjust: 'font-size-adjust',\r\n    fontStretch: 'font-stretch',\r\n    fontStyle: 'font-style',\r\n    fontVariant: 'font-variant',\r\n    fontWeight: 'font-weight',\r\n    glyphName: 'glyph-name',\r\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\r\n    glyphOrientationVertical: 'glyph-orientation-vertical',\r\n    hrefLang: 'hreflang',\r\n    horizAdvX: 'horiz-adv-x',\r\n    horizOriginX: 'horiz-origin-x',\r\n    horizOriginY: 'horiz-origin-y',\r\n    imageRendering: 'image-rendering',\r\n    letterSpacing: 'letter-spacing',\r\n    lightingColor: 'lighting-color',\r\n    markerEnd: 'marker-end',\r\n    markerMid: 'marker-mid',\r\n    markerStart: 'marker-start',\r\n    navDown: 'nav-down',\r\n    navDownLeft: 'nav-down-left',\r\n    navDownRight: 'nav-down-right',\r\n    navLeft: 'nav-left',\r\n    navNext: 'nav-next',\r\n    navPrev: 'nav-prev',\r\n    navRight: 'nav-right',\r\n    navUp: 'nav-up',\r\n    navUpLeft: 'nav-up-left',\r\n    navUpRight: 'nav-up-right',\r\n    onAbort: 'onabort',\r\n    onActivate: 'onactivate',\r\n    onAfterPrint: 'onafterprint',\r\n    onBeforePrint: 'onbeforeprint',\r\n    onBegin: 'onbegin',\r\n    onCancel: 'oncancel',\r\n    onCanPlay: 'oncanplay',\r\n    onCanPlayThrough: 'oncanplaythrough',\r\n    onChange: 'onchange',\r\n    onClick: 'onclick',\r\n    onClose: 'onclose',\r\n    onCopy: 'oncopy',\r\n    onCueChange: 'oncuechange',\r\n    onCut: 'oncut',\r\n    onDblClick: 'ondblclick',\r\n    onDrag: 'ondrag',\r\n    onDragEnd: 'ondragend',\r\n    onDragEnter: 'ondragenter',\r\n    onDragExit: 'ondragexit',\r\n    onDragLeave: 'ondragleave',\r\n    onDragOver: 'ondragover',\r\n    onDragStart: 'ondragstart',\r\n    onDrop: 'ondrop',\r\n    onDurationChange: 'ondurationchange',\r\n    onEmptied: 'onemptied',\r\n    onEnd: 'onend',\r\n    onEnded: 'onended',\r\n    onError: 'onerror',\r\n    onFocus: 'onfocus',\r\n    onFocusIn: 'onfocusin',\r\n    onFocusOut: 'onfocusout',\r\n    onHashChange: 'onhashchange',\r\n    onInput: 'oninput',\r\n    onInvalid: 'oninvalid',\r\n    onKeyDown: 'onkeydown',\r\n    onKeyPress: 'onkeypress',\r\n    onKeyUp: 'onkeyup',\r\n    onLoad: 'onload',\r\n    onLoadedData: 'onloadeddata',\r\n    onLoadedMetadata: 'onloadedmetadata',\r\n    onLoadStart: 'onloadstart',\r\n    onMessage: 'onmessage',\r\n    onMouseDown: 'onmousedown',\r\n    onMouseEnter: 'onmouseenter',\r\n    onMouseLeave: 'onmouseleave',\r\n    onMouseMove: 'onmousemove',\r\n    onMouseOut: 'onmouseout',\r\n    onMouseOver: 'onmouseover',\r\n    onMouseUp: 'onmouseup',\r\n    onMouseWheel: 'onmousewheel',\r\n    onOffline: 'onoffline',\r\n    onOnline: 'ononline',\r\n    onPageHide: 'onpagehide',\r\n    onPageShow: 'onpageshow',\r\n    onPaste: 'onpaste',\r\n    onPause: 'onpause',\r\n    onPlay: 'onplay',\r\n    onPlaying: 'onplaying',\r\n    onPopState: 'onpopstate',\r\n    onProgress: 'onprogress',\r\n    onRateChange: 'onratechange',\r\n    onRepeat: 'onrepeat',\r\n    onReset: 'onreset',\r\n    onResize: 'onresize',\r\n    onScroll: 'onscroll',\r\n    onSeeked: 'onseeked',\r\n    onSeeking: 'onseeking',\r\n    onSelect: 'onselect',\r\n    onShow: 'onshow',\r\n    onStalled: 'onstalled',\r\n    onStorage: 'onstorage',\r\n    onSubmit: 'onsubmit',\r\n    onSuspend: 'onsuspend',\r\n    onTimeUpdate: 'ontimeupdate',\r\n    onToggle: 'ontoggle',\r\n    onUnload: 'onunload',\r\n    onVolumeChange: 'onvolumechange',\r\n    onWaiting: 'onwaiting',\r\n    onZoom: 'onzoom',\r\n    overlinePosition: 'overline-position',\r\n    overlineThickness: 'overline-thickness',\r\n    paintOrder: 'paint-order',\r\n    panose1: 'panose-1',\r\n    pointerEvents: 'pointer-events',\r\n    referrerPolicy: 'referrerpolicy',\r\n    renderingIntent: 'rendering-intent',\r\n    shapeRendering: 'shape-rendering',\r\n    stopColor: 'stop-color',\r\n    stopOpacity: 'stop-opacity',\r\n    strikethroughPosition: 'strikethrough-position',\r\n    strikethroughThickness: 'strikethrough-thickness',\r\n    strokeDashArray: 'stroke-dasharray',\r\n    strokeDashOffset: 'stroke-dashoffset',\r\n    strokeLineCap: 'stroke-linecap',\r\n    strokeLineJoin: 'stroke-linejoin',\r\n    strokeMiterLimit: 'stroke-miterlimit',\r\n    strokeOpacity: 'stroke-opacity',\r\n    strokeWidth: 'stroke-width',\r\n    tabIndex: 'tabindex',\r\n    textAnchor: 'text-anchor',\r\n    textDecoration: 'text-decoration',\r\n    textRendering: 'text-rendering',\r\n    transformOrigin: 'transform-origin',\r\n    typeOf: 'typeof',\r\n    underlinePosition: 'underline-position',\r\n    underlineThickness: 'underline-thickness',\r\n    unicodeBidi: 'unicode-bidi',\r\n    unicodeRange: 'unicode-range',\r\n    unitsPerEm: 'units-per-em',\r\n    vAlphabetic: 'v-alphabetic',\r\n    vHanging: 'v-hanging',\r\n    vIdeographic: 'v-ideographic',\r\n    vMathematical: 'v-mathematical',\r\n    vectorEffect: 'vector-effect',\r\n    vertAdvY: 'vert-adv-y',\r\n    vertOriginX: 'vert-origin-x',\r\n    vertOriginY: 'vert-origin-y',\r\n    wordSpacing: 'word-spacing',\r\n    writingMode: 'writing-mode',\r\n    xHeight: 'x-height',\r\n    // These were camelcased in Tiny. Now lowercased in SVG 2\r\n    playbackOrder: 'playbackorder',\r\n    timelineBegin: 'timelinebegin'\r\n  },\r\n  transform: _util_case_sensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__.caseSensitiveTransform,\r\n  properties: {\r\n    about: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    accentHeight: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    accumulate: null,\r\n    additive: null,\r\n    alignmentBaseline: null,\r\n    alphabetic: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    amplitude: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    arabicForm: null,\r\n    ascent: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    attributeName: null,\r\n    attributeType: null,\r\n    azimuth: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    bandwidth: null,\r\n    baselineShift: null,\r\n    baseFrequency: null,\r\n    baseProfile: null,\r\n    bbox: null,\r\n    begin: null,\r\n    bias: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    by: null,\r\n    calcMode: null,\r\n    capHeight: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    className: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    clip: null,\r\n    clipPath: null,\r\n    clipPathUnits: null,\r\n    clipRule: null,\r\n    color: null,\r\n    colorInterpolation: null,\r\n    colorInterpolationFilters: null,\r\n    colorProfile: null,\r\n    colorRendering: null,\r\n    content: null,\r\n    contentScriptType: null,\r\n    contentStyleType: null,\r\n    crossOrigin: null,\r\n    cursor: null,\r\n    cx: null,\r\n    cy: null,\r\n    d: null,\r\n    dataType: null,\r\n    defaultAction: null,\r\n    descent: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    diffuseConstant: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    direction: null,\r\n    display: null,\r\n    dur: null,\r\n    divisor: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    dominantBaseline: null,\r\n    download: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.boolean,\r\n    dx: null,\r\n    dy: null,\r\n    edgeMode: null,\r\n    editable: null,\r\n    elevation: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    enableBackground: null,\r\n    end: null,\r\n    event: null,\r\n    exponent: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    externalResourcesRequired: null,\r\n    fill: null,\r\n    fillOpacity: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    fillRule: null,\r\n    filter: null,\r\n    filterRes: null,\r\n    filterUnits: null,\r\n    floodColor: null,\r\n    floodOpacity: null,\r\n    focusable: null,\r\n    focusHighlight: null,\r\n    fontFamily: null,\r\n    fontSize: null,\r\n    fontSizeAdjust: null,\r\n    fontStretch: null,\r\n    fontStyle: null,\r\n    fontVariant: null,\r\n    fontWeight: null,\r\n    format: null,\r\n    fr: null,\r\n    from: null,\r\n    fx: null,\r\n    fy: null,\r\n    g1: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaSeparated,\r\n    g2: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaSeparated,\r\n    glyphName: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaSeparated,\r\n    glyphOrientationHorizontal: null,\r\n    glyphOrientationVertical: null,\r\n    glyphRef: null,\r\n    gradientTransform: null,\r\n    gradientUnits: null,\r\n    handler: null,\r\n    hanging: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    hatchContentUnits: null,\r\n    hatchUnits: null,\r\n    height: null,\r\n    href: null,\r\n    hrefLang: null,\r\n    horizAdvX: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    horizOriginX: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    horizOriginY: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    id: null,\r\n    ideographic: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    imageRendering: null,\r\n    initialVisibility: null,\r\n    in: null,\r\n    in2: null,\r\n    intercept: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    k: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    k1: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    k2: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    k3: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    k4: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    kernelMatrix: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    kernelUnitLength: null,\r\n    keyPoints: null, // SEMI_COLON_SEPARATED\r\n    keySplines: null, // SEMI_COLON_SEPARATED\r\n    keyTimes: null, // SEMI_COLON_SEPARATED\r\n    kerning: null,\r\n    lang: null,\r\n    lengthAdjust: null,\r\n    letterSpacing: null,\r\n    lightingColor: null,\r\n    limitingConeAngle: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    local: null,\r\n    markerEnd: null,\r\n    markerMid: null,\r\n    markerStart: null,\r\n    markerHeight: null,\r\n    markerUnits: null,\r\n    markerWidth: null,\r\n    mask: null,\r\n    maskContentUnits: null,\r\n    maskUnits: null,\r\n    mathematical: null,\r\n    max: null,\r\n    media: null,\r\n    mediaCharacterEncoding: null,\r\n    mediaContentEncodings: null,\r\n    mediaSize: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    mediaTime: null,\r\n    method: null,\r\n    min: null,\r\n    mode: null,\r\n    name: null,\r\n    navDown: null,\r\n    navDownLeft: null,\r\n    navDownRight: null,\r\n    navLeft: null,\r\n    navNext: null,\r\n    navPrev: null,\r\n    navRight: null,\r\n    navUp: null,\r\n    navUpLeft: null,\r\n    navUpRight: null,\r\n    numOctaves: null,\r\n    observer: null,\r\n    offset: null,\r\n    onAbort: null,\r\n    onActivate: null,\r\n    onAfterPrint: null,\r\n    onBeforePrint: null,\r\n    onBegin: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnd: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFocusIn: null,\r\n    onFocusOut: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onMouseWheel: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRepeat: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onShow: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onZoom: null,\r\n    opacity: null,\r\n    operator: null,\r\n    order: null,\r\n    orient: null,\r\n    orientation: null,\r\n    origin: null,\r\n    overflow: null,\r\n    overlay: null,\r\n    overlinePosition: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    overlineThickness: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    paintOrder: null,\r\n    panose1: null,\r\n    path: null,\r\n    pathLength: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    patternContentUnits: null,\r\n    patternTransform: null,\r\n    patternUnits: null,\r\n    phase: null,\r\n    ping: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.spaceSeparated,\r\n    pitch: null,\r\n    playbackOrder: null,\r\n    pointerEvents: null,\r\n    points: null,\r\n    pointsAtX: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    pointsAtY: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    pointsAtZ: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    preserveAlpha: null,\r\n    preserveAspectRatio: null,\r\n    primitiveUnits: null,\r\n    propagate: null,\r\n    property: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    r: null,\r\n    radius: null,\r\n    referrerPolicy: null,\r\n    refX: null,\r\n    refY: null,\r\n    rel: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    rev: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    renderingIntent: null,\r\n    repeatCount: null,\r\n    repeatDur: null,\r\n    requiredExtensions: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    requiredFeatures: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    requiredFonts: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    requiredFormats: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    resource: null,\r\n    restart: null,\r\n    result: null,\r\n    rotate: null,\r\n    rx: null,\r\n    ry: null,\r\n    scale: null,\r\n    seed: null,\r\n    shapeRendering: null,\r\n    side: null,\r\n    slope: null,\r\n    snapshotTime: null,\r\n    specularConstant: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    specularExponent: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    spreadMethod: null,\r\n    spacing: null,\r\n    startOffset: null,\r\n    stdDeviation: null,\r\n    stemh: null,\r\n    stemv: null,\r\n    stitchTiles: null,\r\n    stopColor: null,\r\n    stopOpacity: null,\r\n    strikethroughPosition: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    strikethroughThickness: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    string: null,\r\n    stroke: null,\r\n    strokeDashArray: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    strokeDashOffset: null,\r\n    strokeLineCap: null,\r\n    strokeLineJoin: null,\r\n    strokeMiterLimit: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    strokeOpacity: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    strokeWidth: null,\r\n    style: null,\r\n    surfaceScale: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    syncBehavior: null,\r\n    syncBehaviorDefault: null,\r\n    syncMaster: null,\r\n    syncTolerance: null,\r\n    syncToleranceDefault: null,\r\n    systemLanguage: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    tabIndex: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    tableValues: null,\r\n    target: null,\r\n    targetX: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    targetY: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    textAnchor: null,\r\n    textDecoration: null,\r\n    textRendering: null,\r\n    textLength: null,\r\n    timelineBegin: null,\r\n    title: null,\r\n    transformBehavior: null,\r\n    type: null,\r\n    typeOf: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.commaOrSpaceSeparated,\r\n    to: null,\r\n    transform: null,\r\n    transformOrigin: null,\r\n    u1: null,\r\n    u2: null,\r\n    underlinePosition: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    underlineThickness: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    unicode: null,\r\n    unicodeBidi: null,\r\n    unicodeRange: null,\r\n    unitsPerEm: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    values: null,\r\n    vAlphabetic: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    vMathematical: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    vectorEffect: null,\r\n    vHanging: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    vIdeographic: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    version: null,\r\n    vertAdvY: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    vertOriginX: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    vertOriginY: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    viewBox: null,\r\n    viewTarget: null,\r\n    visibility: null,\r\n    width: null,\r\n    widths: null,\r\n    wordSpacing: null,\r\n    writingMode: null,\r\n    x: null,\r\n    x1: null,\r\n    x2: null,\r\n    xChannelSelector: null,\r\n    xHeight: _util_types_js__WEBPACK_IMPORTED_MODULE_2__.number,\r\n    y: null,\r\n    y1: null,\r\n    y2: null,\r\n    yChannelSelector: null,\r\n    z: null,\r\n    zoomAndPan: null\r\n  }\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/svg.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/case-insensitive-transform.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/property-information/lib/util/case-insensitive-transform.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"caseInsensitiveTransform\": function() { return /* binding */ caseInsensitiveTransform; }\n/* harmony export */ });\n/* harmony import */ var _case_sensitive_transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./case-sensitive-transform.js */ \"./node_modules/property-information/lib/util/case-sensitive-transform.js\");\n\r\n\r\n/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} property\r\n * @returns {string}\r\n */\r\nfunction caseInsensitiveTransform(attributes, property) {\r\n  return (0,_case_sensitive_transform_js__WEBPACK_IMPORTED_MODULE_0__.caseSensitiveTransform)(attributes, property.toLowerCase())\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvY2FzZS1pbnNlbnNpdGl2ZS10cmFuc2Zvcm0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0U7QUFDcEU7QUFDQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQLFNBQVMsb0ZBQXNCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvdXRpbC9jYXNlLWluc2Vuc2l0aXZlLXRyYW5zZm9ybS5qcz84NzA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y2FzZVNlbnNpdGl2ZVRyYW5zZm9ybX0gZnJvbSAnLi9jYXNlLXNlbnNpdGl2ZS10cmFuc2Zvcm0uanMnXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBhdHRyaWJ1dGVzXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNhc2VJbnNlbnNpdGl2ZVRyYW5zZm9ybShhdHRyaWJ1dGVzLCBwcm9wZXJ0eSkge1xyXG4gIHJldHVybiBjYXNlU2Vuc2l0aXZlVHJhbnNmb3JtKGF0dHJpYnV0ZXMsIHByb3BlcnR5LnRvTG93ZXJDYXNlKCkpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/case-insensitive-transform.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/case-sensitive-transform.js":
/*!********************************************************************************!*\
  !*** ./node_modules/property-information/lib/util/case-sensitive-transform.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"caseSensitiveTransform\": function() { return /* binding */ caseSensitiveTransform; }\n/* harmony export */ });\n/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} attribute\r\n * @returns {string}\r\n */\r\nfunction caseSensitiveTransform(attributes, attribute) {\r\n  return attribute in attributes ? attributes[attribute] : attribute\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvY2FzZS1zZW5zaXRpdmUtdHJhbnNmb3JtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2xpYi91dGlsL2Nhc2Utc2Vuc2l0aXZlLXRyYW5zZm9ybS5qcz85NzQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAcGFyYW0ge1JlY29yZDxzdHJpbmcsIHN0cmluZz59IGF0dHJpYnV0ZXNcclxuICogQHBhcmFtIHtzdHJpbmd9IGF0dHJpYnV0ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNhc2VTZW5zaXRpdmVUcmFuc2Zvcm0oYXR0cmlidXRlcywgYXR0cmlidXRlKSB7XHJcbiAgcmV0dXJuIGF0dHJpYnV0ZSBpbiBhdHRyaWJ1dGVzID8gYXR0cmlidXRlc1thdHRyaWJ1dGVdIDogYXR0cmlidXRlXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/case-sensitive-transform.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/create.js":
/*!**************************************************************!*\
  !*** ./node_modules/property-information/lib/util/create.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": function() { return /* binding */ create; }\n/* harmony export */ });\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../normalize.js */ \"./node_modules/property-information/lib/normalize.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema.js */ \"./node_modules/property-information/lib/util/schema.js\");\n/* harmony import */ var _defined_info_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defined-info.js */ \"./node_modules/property-information/lib/util/defined-info.js\");\n/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n *\r\n * @typedef {Record<string, string>} Attributes\r\n *\r\n * @typedef {Object} Definition\r\n * @property {Record<string, number|null>} properties\r\n * @property {(attributes: Attributes, property: string) => string} transform\r\n * @property {string} [space]\r\n * @property {Attributes} [attributes]\r\n * @property {Array<string>} [mustUseProperty]\r\n */\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Definition} definition\r\n * @returns {Schema}\r\n */\r\nfunction create(definition) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  for (prop in definition.properties) {\r\n    if (own.call(definition.properties, prop)) {\r\n      const value = definition.properties[prop]\r\n      const info = new _defined_info_js__WEBPACK_IMPORTED_MODULE_0__.DefinedInfo(\r\n        prop,\r\n        definition.transform(definition.attributes || {}, prop),\r\n        value,\r\n        definition.space\r\n      )\r\n\r\n      if (\r\n        definition.mustUseProperty &&\r\n        definition.mustUseProperty.includes(prop)\r\n      ) {\r\n        info.mustUseProperty = true\r\n      }\r\n\r\n      property[prop] = info\r\n\r\n      normal[(0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(prop)] = prop\r\n      normal[(0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(info.attribute)] = prop\r\n    }\r\n  }\r\n\r\n  return new _schema_js__WEBPACK_IMPORTED_MODULE_2__.Schema(property, normal, definition.space)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvY3JlYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsa0NBQWtDO0FBQy9DLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyw2QkFBNkI7QUFDM0MsY0FBYyxzREFBc0Q7QUFDcEUsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsWUFBWTtBQUMxQixjQUFjLGVBQWU7QUFDN0I7QUFDQTtBQUN5QztBQUNQO0FBQ1c7QUFDN0M7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsWUFBWTtBQUN6QjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlEQUFXO0FBQ2xDO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx3REFBUztBQUN0QixhQUFhLHdEQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOENBQU07QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2xpYi91dGlsL2NyZWF0ZS5qcz80MzM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3NjaGVtYS5qcycpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zY2hlbWEuanMnKS5Ob3JtYWx9IE5vcm1hbFxyXG4gKlxyXG4gKiBAdHlwZWRlZiB7UmVjb3JkPHN0cmluZywgc3RyaW5nPn0gQXR0cmlidXRlc1xyXG4gKlxyXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBEZWZpbml0aW9uXHJcbiAqIEBwcm9wZXJ0eSB7UmVjb3JkPHN0cmluZywgbnVtYmVyfG51bGw+fSBwcm9wZXJ0aWVzXHJcbiAqIEBwcm9wZXJ0eSB7KGF0dHJpYnV0ZXM6IEF0dHJpYnV0ZXMsIHByb3BlcnR5OiBzdHJpbmcpID0+IHN0cmluZ30gdHJhbnNmb3JtXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbc3BhY2VdXHJcbiAqIEBwcm9wZXJ0eSB7QXR0cmlidXRlc30gW2F0dHJpYnV0ZXNdXHJcbiAqIEBwcm9wZXJ0eSB7QXJyYXk8c3RyaW5nPn0gW211c3RVc2VQcm9wZXJ0eV1cclxuICovXHJcblxyXG5pbXBvcnQge25vcm1hbGl6ZX0gZnJvbSAnLi4vbm9ybWFsaXplLmpzJ1xyXG5pbXBvcnQge1NjaGVtYX0gZnJvbSAnLi9zY2hlbWEuanMnXHJcbmltcG9ydCB7RGVmaW5lZEluZm99IGZyb20gJy4vZGVmaW5lZC1pbmZvLmpzJ1xyXG5cclxuY29uc3Qgb3duID0ge30uaGFzT3duUHJvcGVydHlcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge0RlZmluaXRpb259IGRlZmluaXRpb25cclxuICogQHJldHVybnMge1NjaGVtYX1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoZGVmaW5pdGlvbikge1xyXG4gIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cclxuICBjb25zdCBwcm9wZXJ0eSA9IHt9XHJcbiAgLyoqIEB0eXBlIHtOb3JtYWx9ICovXHJcbiAgY29uc3Qgbm9ybWFsID0ge31cclxuICAvKiogQHR5cGUge3N0cmluZ30gKi9cclxuICBsZXQgcHJvcFxyXG5cclxuICBmb3IgKHByb3AgaW4gZGVmaW5pdGlvbi5wcm9wZXJ0aWVzKSB7XHJcbiAgICBpZiAob3duLmNhbGwoZGVmaW5pdGlvbi5wcm9wZXJ0aWVzLCBwcm9wKSkge1xyXG4gICAgICBjb25zdCB2YWx1ZSA9IGRlZmluaXRpb24ucHJvcGVydGllc1twcm9wXVxyXG4gICAgICBjb25zdCBpbmZvID0gbmV3IERlZmluZWRJbmZvKFxyXG4gICAgICAgIHByb3AsXHJcbiAgICAgICAgZGVmaW5pdGlvbi50cmFuc2Zvcm0oZGVmaW5pdGlvbi5hdHRyaWJ1dGVzIHx8IHt9LCBwcm9wKSxcclxuICAgICAgICB2YWx1ZSxcclxuICAgICAgICBkZWZpbml0aW9uLnNwYWNlXHJcbiAgICAgIClcclxuXHJcbiAgICAgIGlmIChcclxuICAgICAgICBkZWZpbml0aW9uLm11c3RVc2VQcm9wZXJ0eSAmJlxyXG4gICAgICAgIGRlZmluaXRpb24ubXVzdFVzZVByb3BlcnR5LmluY2x1ZGVzKHByb3ApXHJcbiAgICAgICkge1xyXG4gICAgICAgIGluZm8ubXVzdFVzZVByb3BlcnR5ID0gdHJ1ZVxyXG4gICAgICB9XHJcblxyXG4gICAgICBwcm9wZXJ0eVtwcm9wXSA9IGluZm9cclxuXHJcbiAgICAgIG5vcm1hbFtub3JtYWxpemUocHJvcCldID0gcHJvcFxyXG4gICAgICBub3JtYWxbbm9ybWFsaXplKGluZm8uYXR0cmlidXRlKV0gPSBwcm9wXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbmV3IFNjaGVtYShwcm9wZXJ0eSwgbm9ybWFsLCBkZWZpbml0aW9uLnNwYWNlKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/create.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/defined-info.js":
/*!********************************************************************!*\
  !*** ./node_modules/property-information/lib/util/defined-info.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefinedInfo\": function() { return /* binding */ DefinedInfo; }\n/* harmony export */ });\n/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./info.js */ \"./node_modules/property-information/lib/util/info.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/property-information/lib/util/types.js\");\n\r\n\r\n\r\n/** @type {Array<keyof types>} */\r\n// @ts-expect-error: hush.\r\nconst checks = Object.keys(_types_js__WEBPACK_IMPORTED_MODULE_0__)\r\n\r\nclass DefinedInfo extends _info_js__WEBPACK_IMPORTED_MODULE_1__.Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   * @param {number|null} [mask]\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, attribute, mask, space) {\r\n    let index = -1\r\n\r\n    super(property, attribute)\r\n\r\n    mark(this, 'space', space)\r\n\r\n    if (typeof mask === 'number') {\r\n      while (++index < checks.length) {\r\n        const check = checks[index]\r\n        mark(this, checks[index], (mask & _types_js__WEBPACK_IMPORTED_MODULE_0__[check]) === _types_js__WEBPACK_IMPORTED_MODULE_0__[check])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nDefinedInfo.prototype.defined = true\r\n\r\n/**\r\n * @param {DefinedInfo} values\r\n * @param {string} key\r\n * @param {unknown} value\r\n */\r\nfunction mark(values, key, value) {\r\n  if (value) {\r\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\r\n    values[key] = value\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvZGVmaW5lZC1pbmZvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNLO0FBQ25DO0FBQ0EsV0FBVyxvQkFBb0I7QUFDL0I7QUFDQSwyQkFBMkIsc0NBQUs7QUFDaEM7QUFDTywwQkFBMEIsMENBQUk7QUFDckM7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxhQUFhO0FBQzFCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHNDQUFLLGFBQWEsc0NBQUs7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvdXRpbC9kZWZpbmVkLWluZm8uanM/OTk0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luZm99IGZyb20gJy4vaW5mby5qcydcclxuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi90eXBlcy5qcydcclxuXHJcbi8qKiBAdHlwZSB7QXJyYXk8a2V5b2YgdHlwZXM+fSAqL1xyXG4vLyBAdHMtZXhwZWN0LWVycm9yOiBodXNoLlxyXG5jb25zdCBjaGVja3MgPSBPYmplY3Qua2V5cyh0eXBlcylcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZpbmVkSW5mbyBleHRlbmRzIEluZm8ge1xyXG4gIC8qKlxyXG4gICAqIEBjb25zdHJ1Y3RvclxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyaWJ1dGVcclxuICAgKiBAcGFyYW0ge251bWJlcnxudWxsfSBbbWFza11cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gW3NwYWNlXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKHByb3BlcnR5LCBhdHRyaWJ1dGUsIG1hc2ssIHNwYWNlKSB7XHJcbiAgICBsZXQgaW5kZXggPSAtMVxyXG5cclxuICAgIHN1cGVyKHByb3BlcnR5LCBhdHRyaWJ1dGUpXHJcblxyXG4gICAgbWFyayh0aGlzLCAnc3BhY2UnLCBzcGFjZSlcclxuXHJcbiAgICBpZiAodHlwZW9mIG1hc2sgPT09ICdudW1iZXInKSB7XHJcbiAgICAgIHdoaWxlICgrK2luZGV4IDwgY2hlY2tzLmxlbmd0aCkge1xyXG4gICAgICAgIGNvbnN0IGNoZWNrID0gY2hlY2tzW2luZGV4XVxyXG4gICAgICAgIG1hcmsodGhpcywgY2hlY2tzW2luZGV4XSwgKG1hc2sgJiB0eXBlc1tjaGVja10pID09PSB0eXBlc1tjaGVja10pXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkRlZmluZWRJbmZvLnByb3RvdHlwZS5kZWZpbmVkID0gdHJ1ZVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7RGVmaW5lZEluZm99IHZhbHVlc1xyXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XHJcbiAqIEBwYXJhbSB7dW5rbm93bn0gdmFsdWVcclxuICovXHJcbmZ1bmN0aW9uIG1hcmsodmFsdWVzLCBrZXksIHZhbHVlKSB7XHJcbiAgaWYgKHZhbHVlKSB7XHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBhc3N1bWUgYHZhbHVlYCBtYXRjaGVzIHRoZSBleHBlY3RlZCB2YWx1ZSBvZiBga2V5YC5cclxuICAgIHZhbHVlc1trZXldID0gdmFsdWVcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/defined-info.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/info.js":
/*!************************************************************!*\
  !*** ./node_modules/property-information/lib/util/info.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Info\": function() { return /* binding */ Info; }\n/* harmony export */ });\nclass Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   */\r\n  constructor(property, attribute) {\r\n    /** @type {string} */\r\n    this.property = property\r\n    /** @type {string} */\r\n    this.attribute = attribute\r\n  }\r\n}\r\n\r\n/** @type {string|null} */\r\nInfo.prototype.space = null\r\nInfo.prototype.boolean = false\r\nInfo.prototype.booleanish = false\r\nInfo.prototype.overloadedBoolean = false\r\nInfo.prototype.number = false\r\nInfo.prototype.commaSeparated = false\r\nInfo.prototype.spaceSeparated = false\r\nInfo.prototype.commaOrSpaceSeparated = false\r\nInfo.prototype.mustUseProperty = false\r\nInfo.prototype.defined = false\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvaW5mby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvdXRpbC9pbmZvLmpzP2ZlODEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEluZm8ge1xyXG4gIC8qKlxyXG4gICAqIEBjb25zdHJ1Y3RvclxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyaWJ1dGVcclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvcihwcm9wZXJ0eSwgYXR0cmlidXRlKSB7XHJcbiAgICAvKiogQHR5cGUge3N0cmluZ30gKi9cclxuICAgIHRoaXMucHJvcGVydHkgPSBwcm9wZXJ0eVxyXG4gICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXHJcbiAgICB0aGlzLmF0dHJpYnV0ZSA9IGF0dHJpYnV0ZVxyXG4gIH1cclxufVxyXG5cclxuLyoqIEB0eXBlIHtzdHJpbmd8bnVsbH0gKi9cclxuSW5mby5wcm90b3R5cGUuc3BhY2UgPSBudWxsXHJcbkluZm8ucHJvdG90eXBlLmJvb2xlYW4gPSBmYWxzZVxyXG5JbmZvLnByb3RvdHlwZS5ib29sZWFuaXNoID0gZmFsc2VcclxuSW5mby5wcm90b3R5cGUub3ZlcmxvYWRlZEJvb2xlYW4gPSBmYWxzZVxyXG5JbmZvLnByb3RvdHlwZS5udW1iZXIgPSBmYWxzZVxyXG5JbmZvLnByb3RvdHlwZS5jb21tYVNlcGFyYXRlZCA9IGZhbHNlXHJcbkluZm8ucHJvdG90eXBlLnNwYWNlU2VwYXJhdGVkID0gZmFsc2VcclxuSW5mby5wcm90b3R5cGUuY29tbWFPclNwYWNlU2VwYXJhdGVkID0gZmFsc2VcclxuSW5mby5wcm90b3R5cGUubXVzdFVzZVByb3BlcnR5ID0gZmFsc2VcclxuSW5mby5wcm90b3R5cGUuZGVmaW5lZCA9IGZhbHNlXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/info.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/merge.js":
/*!*************************************************************!*\
  !*** ./node_modules/property-information/lib/util/merge.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"merge\": function() { return /* binding */ merge; }\n/* harmony export */ });\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.js */ \"./node_modules/property-information/lib/util/schema.js\");\n/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n */\r\n\r\n\r\n\r\n/**\r\n * @param {Schema[]} definitions\r\n * @param {string} [space]\r\n * @returns {Schema}\r\n */\r\nfunction merge(definitions, space) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  let index = -1\r\n\r\n  while (++index < definitions.length) {\r\n    Object.assign(property, definitions[index].property)\r\n    Object.assign(normal, definitions[index].normal)\r\n  }\r\n\r\n  return new _schema_js__WEBPACK_IMPORTED_MODULE_0__.Schema(property, normal, space)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvbWVyZ2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsa0NBQWtDO0FBQy9DLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLFlBQVk7QUFDekI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOENBQU07QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3BlcnR5LWluZm9ybWF0aW9uL2xpYi91dGlsL21lcmdlLmpzP2NmMTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vc2NoZW1hLmpzJykuUHJvcGVydGllc30gUHJvcGVydGllc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3NjaGVtYS5qcycpLk5vcm1hbH0gTm9ybWFsXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtTY2hlbWF9IGZyb20gJy4vc2NoZW1hLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7U2NoZW1hW119IGRlZmluaXRpb25zXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbc3BhY2VdXHJcbiAqIEByZXR1cm5zIHtTY2hlbWF9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2UoZGVmaW5pdGlvbnMsIHNwYWNlKSB7XHJcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xyXG4gIGNvbnN0IHByb3BlcnR5ID0ge31cclxuICAvKiogQHR5cGUge05vcm1hbH0gKi9cclxuICBjb25zdCBub3JtYWwgPSB7fVxyXG4gIGxldCBpbmRleCA9IC0xXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgZGVmaW5pdGlvbnMubGVuZ3RoKSB7XHJcbiAgICBPYmplY3QuYXNzaWduKHByb3BlcnR5LCBkZWZpbml0aW9uc1tpbmRleF0ucHJvcGVydHkpXHJcbiAgICBPYmplY3QuYXNzaWduKG5vcm1hbCwgZGVmaW5pdGlvbnNbaW5kZXhdLm5vcm1hbClcclxuICB9XHJcblxyXG4gIHJldHVybiBuZXcgU2NoZW1hKHByb3BlcnR5LCBub3JtYWwsIHNwYWNlKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/merge.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/schema.js":
/*!**************************************************************!*\
  !*** ./node_modules/property-information/lib/util/schema.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Schema\": function() { return /* binding */ Schema; }\n/* harmony export */ });\n/**\r\n * @typedef {import('./info.js').Info} Info\r\n * @typedef {Record<string, Info>} Properties\r\n * @typedef {Record<string, string>} Normal\r\n */\r\n\r\nclass Schema {\r\n  /**\r\n   * @constructor\r\n   * @param {Properties} property\r\n   * @param {Normal} normal\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, normal, space) {\r\n    this.property = property\r\n    this.normal = normal\r\n    if (space) {\r\n      this.space = space\r\n    }\r\n  }\r\n}\r\n\r\n/** @type {Properties} */\r\nSchema.prototype.property = {}\r\n/** @type {Normal} */\r\nSchema.prototype.normal = {}\r\n/** @type {string|null} */\r\nSchema.prototype.space = null\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvc2NoZW1hLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsMEJBQTBCO0FBQ3ZDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLFlBQVk7QUFDekIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsYUFBYTtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvc2NoZW1hLmpzPzMwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW5mby5qcycpLkluZm99IEluZm9cclxuICogQHR5cGVkZWYge1JlY29yZDxzdHJpbmcsIEluZm8+fSBQcm9wZXJ0aWVzXHJcbiAqIEB0eXBlZGVmIHtSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBOb3JtYWxcclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgU2NoZW1hIHtcclxuICAvKipcclxuICAgKiBAY29uc3RydWN0b3JcclxuICAgKiBAcGFyYW0ge1Byb3BlcnRpZXN9IHByb3BlcnR5XHJcbiAgICogQHBhcmFtIHtOb3JtYWx9IG5vcm1hbFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbc3BhY2VdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IocHJvcGVydHksIG5vcm1hbCwgc3BhY2UpIHtcclxuICAgIHRoaXMucHJvcGVydHkgPSBwcm9wZXJ0eVxyXG4gICAgdGhpcy5ub3JtYWwgPSBub3JtYWxcclxuICAgIGlmIChzcGFjZSkge1xyXG4gICAgICB0aGlzLnNwYWNlID0gc3BhY2VcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cclxuU2NoZW1hLnByb3RvdHlwZS5wcm9wZXJ0eSA9IHt9XHJcbi8qKiBAdHlwZSB7Tm9ybWFsfSAqL1xyXG5TY2hlbWEucHJvdG90eXBlLm5vcm1hbCA9IHt9XHJcbi8qKiBAdHlwZSB7c3RyaW5nfG51bGx9ICovXHJcblNjaGVtYS5wcm90b3R5cGUuc3BhY2UgPSBudWxsXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/schema.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/util/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/property-information/lib/util/types.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"boolean\": function() { return /* binding */ boolean; },\n/* harmony export */   \"booleanish\": function() { return /* binding */ booleanish; },\n/* harmony export */   \"commaOrSpaceSeparated\": function() { return /* binding */ commaOrSpaceSeparated; },\n/* harmony export */   \"commaSeparated\": function() { return /* binding */ commaSeparated; },\n/* harmony export */   \"number\": function() { return /* binding */ number; },\n/* harmony export */   \"overloadedBoolean\": function() { return /* binding */ overloadedBoolean; },\n/* harmony export */   \"spaceSeparated\": function() { return /* binding */ spaceSeparated; }\n/* harmony export */ });\nlet powers = 0\r\n\r\nconst boolean = increment()\r\nconst booleanish = increment()\r\nconst overloadedBoolean = increment()\r\nconst number = increment()\r\nconst spaceSeparated = increment()\r\nconst commaSeparated = increment()\r\nconst commaOrSpaceSeparated = increment()\r\n\r\nfunction increment() {\r\n  return 2 ** ++powers\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3V0aWwvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIvdXRpbC90eXBlcy5qcz8zMGQ5Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBwb3dlcnMgPSAwXHJcblxyXG5leHBvcnQgY29uc3QgYm9vbGVhbiA9IGluY3JlbWVudCgpXHJcbmV4cG9ydCBjb25zdCBib29sZWFuaXNoID0gaW5jcmVtZW50KClcclxuZXhwb3J0IGNvbnN0IG92ZXJsb2FkZWRCb29sZWFuID0gaW5jcmVtZW50KClcclxuZXhwb3J0IGNvbnN0IG51bWJlciA9IGluY3JlbWVudCgpXHJcbmV4cG9ydCBjb25zdCBzcGFjZVNlcGFyYXRlZCA9IGluY3JlbWVudCgpXHJcbmV4cG9ydCBjb25zdCBjb21tYVNlcGFyYXRlZCA9IGluY3JlbWVudCgpXHJcbmV4cG9ydCBjb25zdCBjb21tYU9yU3BhY2VTZXBhcmF0ZWQgPSBpbmNyZW1lbnQoKVxyXG5cclxuZnVuY3Rpb24gaW5jcmVtZW50KCkge1xyXG4gIHJldHVybiAyICoqICsrcG93ZXJzXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/util/types.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/xlink.js":
/*!********************************************************!*\
  !*** ./node_modules/property-information/lib/xlink.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"xlink\": function() { return /* binding */ xlink; }\n/* harmony export */ });\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n\r\n\r\nconst xlink = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  space: 'xlink',\r\n  transform(_, prop) {\r\n    return 'xlink:' + prop.slice(5).toLowerCase()\r\n  },\r\n  properties: {\r\n    xLinkActuate: null,\r\n    xLinkArcRole: null,\r\n    xLinkHref: null,\r\n    xLinkRole: null,\r\n    xLinkShow: null,\r\n    xLinkTitle: null,\r\n    xLinkType: null\r\n  }\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3hsaW5rLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ3ZDO0FBQ08sY0FBYyx1REFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3hsaW5rLmpzP2M3M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGV9IGZyb20gJy4vdXRpbC9jcmVhdGUuanMnXHJcblxyXG5leHBvcnQgY29uc3QgeGxpbmsgPSBjcmVhdGUoe1xyXG4gIHNwYWNlOiAneGxpbmsnLFxyXG4gIHRyYW5zZm9ybShfLCBwcm9wKSB7XHJcbiAgICByZXR1cm4gJ3hsaW5rOicgKyBwcm9wLnNsaWNlKDUpLnRvTG93ZXJDYXNlKClcclxuICB9LFxyXG4gIHByb3BlcnRpZXM6IHtcclxuICAgIHhMaW5rQWN0dWF0ZTogbnVsbCxcclxuICAgIHhMaW5rQXJjUm9sZTogbnVsbCxcclxuICAgIHhMaW5rSHJlZjogbnVsbCxcclxuICAgIHhMaW5rUm9sZTogbnVsbCxcclxuICAgIHhMaW5rU2hvdzogbnVsbCxcclxuICAgIHhMaW5rVGl0bGU6IG51bGwsXHJcbiAgICB4TGlua1R5cGU6IG51bGxcclxuICB9XHJcbn0pXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/xlink.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/xml.js":
/*!******************************************************!*\
  !*** ./node_modules/property-information/lib/xml.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"xml\": function() { return /* binding */ xml; }\n/* harmony export */ });\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n\r\n\r\nconst xml = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  space: 'xml',\r\n  transform(_, prop) {\r\n    return 'xml:' + prop.slice(3).toLowerCase()\r\n  },\r\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3htbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUN2QztBQUNPLFlBQVksdURBQU07QUFDekI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGVBQWU7QUFDZixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1pbmZvcm1hdGlvbi9saWIveG1sLmpzPzVhYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGV9IGZyb20gJy4vdXRpbC9jcmVhdGUuanMnXHJcblxyXG5leHBvcnQgY29uc3QgeG1sID0gY3JlYXRlKHtcclxuICBzcGFjZTogJ3htbCcsXHJcbiAgdHJhbnNmb3JtKF8sIHByb3ApIHtcclxuICAgIHJldHVybiAneG1sOicgKyBwcm9wLnNsaWNlKDMpLnRvTG93ZXJDYXNlKClcclxuICB9LFxyXG4gIHByb3BlcnRpZXM6IHt4bWxMYW5nOiBudWxsLCB4bWxCYXNlOiBudWxsLCB4bWxTcGFjZTogbnVsbH1cclxufSlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/xml.js\n"));

/***/ }),

/***/ "./node_modules/property-information/lib/xmlns.js":
/*!********************************************************!*\
  !*** ./node_modules/property-information/lib/xmlns.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"xmlns\": function() { return /* binding */ xmlns; }\n/* harmony export */ });\n/* harmony import */ var _util_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/create.js */ \"./node_modules/property-information/lib/util/create.js\");\n/* harmony import */ var _util_case_insensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/case-insensitive-transform.js */ \"./node_modules/property-information/lib/util/case-insensitive-transform.js\");\n\r\n\r\n\r\nconst xmlns = (0,_util_create_js__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n  space: 'xmlns',\r\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\r\n  transform: _util_case_insensitive_transform_js__WEBPACK_IMPORTED_MODULE_1__.caseInsensitiveTransform,\r\n  properties: {xmlns: null, xmlnsXLink: null}\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3htbG5zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUNzQztBQUM3RTtBQUNPLGNBQWMsdURBQU07QUFDM0I7QUFDQSxlQUFlLDBCQUEwQjtBQUN6QyxhQUFhLHlGQUF3QjtBQUNyQyxlQUFlO0FBQ2YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvcGVydHktaW5mb3JtYXRpb24vbGliL3htbG5zLmpzP2MxZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGV9IGZyb20gJy4vdXRpbC9jcmVhdGUuanMnXHJcbmltcG9ydCB7Y2FzZUluc2Vuc2l0aXZlVHJhbnNmb3JtfSBmcm9tICcuL3V0aWwvY2FzZS1pbnNlbnNpdGl2ZS10cmFuc2Zvcm0uanMnXHJcblxyXG5leHBvcnQgY29uc3QgeG1sbnMgPSBjcmVhdGUoe1xyXG4gIHNwYWNlOiAneG1sbnMnLFxyXG4gIGF0dHJpYnV0ZXM6IHt4bWxuc3hsaW5rOiAneG1sbnM6eGxpbmsnfSxcclxuICB0cmFuc2Zvcm06IGNhc2VJbnNlbnNpdGl2ZVRyYW5zZm9ybSxcclxuICBwcm9wZXJ0aWVzOiB7eG1sbnM6IG51bGwsIHhtbG5zWExpbms6IG51bGx9XHJcbn0pXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/property-information/lib/xmlns.js\n"));

/***/ }),

/***/ "./node_modules/react-markdown/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-markdown/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _lib_react_markdown_js__WEBPACK_IMPORTED_MODULE_1__.ReactMarkdown; },\n/* harmony export */   \"uriTransformer\": function() { return /* reexport safe */ _lib_uri_transformer_js__WEBPACK_IMPORTED_MODULE_0__.uriTransformer; }\n/* harmony export */ });\n/* harmony import */ var _lib_uri_transformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/uri-transformer.js */ \"./node_modules/react-markdown/lib/uri-transformer.js\");\n/* harmony import */ var _lib_react_markdown_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/react-markdown.js */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/**\r\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\r\n * @typedef {import('./lib/ast-to-react.js').Components} Components\r\n */\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSx3REFBd0Q7QUFDckUsYUFBYSw0Q0FBNEM7QUFDekQ7QUFDQTtBQUN1RDtBQUN2RDtBQUNnRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vaW5kZXguanM/MDM5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvcmVhY3QtbWFya2Rvd24uanMnKS5SZWFjdE1hcmtkb3duT3B0aW9uc30gT3B0aW9uc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9hc3QtdG8tcmVhY3QuanMnKS5Db21wb25lbnRzfSBDb21wb25lbnRzXHJcbiAqL1xyXG5cclxuZXhwb3J0IHt1cmlUcmFuc2Zvcm1lcn0gZnJvbSAnLi9saWIvdXJpLXRyYW5zZm9ybWVyLmpzJ1xyXG5cclxuZXhwb3J0IHtSZWFjdE1hcmtkb3duIGFzIGRlZmF1bHR9IGZyb20gJy4vbGliL3JlYWN0LW1hcmtkb3duLmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-markdown/index.js\n"));

/***/ }),

/***/ "./node_modules/react-markdown/lib/ast-to-react.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-markdown/lib/ast-to-react.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"childrenToReact\": function() { return /* binding */ childrenToReact; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-whitespace */ \"./node_modules/hast-util-whitespace/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! property-information */ \"./node_modules/property-information/index.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! space-separated-tokens */ \"./node_modules/space-separated-tokens/index.js\");\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! comma-separated-tokens */ \"./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var style_to_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-to-object */ \"./node_modules/style-to-object/index.mjs\");\n/* harmony import */ var _uri_transformer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uri-transformer.js */ \"./node_modules/react-markdown/lib/uri-transformer.js\");\n/**\r\n * @template T\r\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\r\n */\r\n\r\n/**\r\n * @template {import('react').ElementType} T\r\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\r\n */\r\n\r\n/**\r\n * @typedef {import('react').ReactNode} ReactNode\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').DocType} Doctype\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\r\n *\r\n * @typedef Raw\r\n * @property {'raw'} type\r\n * @property {string} value\r\n *\r\n * @typedef Context\r\n * @property {Options} options\r\n * @property {Schema} schema\r\n * @property {number} listDepth\r\n *\r\n * @callback TransformLink\r\n * @param {string} href\r\n * @param {Array<ElementContent>} children\r\n * @param {string?} title\r\n * @returns {string}\r\n *\r\n * @callback TransformImage\r\n * @param {string} src\r\n * @param {string} alt\r\n * @param {string?} title\r\n * @returns {string}\r\n *\r\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\r\n *\r\n * @callback TransformLinkTarget\r\n * @param {string} href\r\n * @param {Array<ElementContent>} children\r\n * @param {string?} title\r\n * @returns {TransformLinkTargetType|undefined}\r\n *\r\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\r\n *\r\n * To do: is `data-sourcepos` typeable?\r\n *\r\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\r\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\r\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\r\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\r\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\r\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\r\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\r\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\r\n *\r\n * @typedef {ComponentType<CodeProps>} CodeComponent\r\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\r\n * @typedef {ComponentType<LiProps>} LiComponent\r\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\r\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\r\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\r\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\r\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\r\n *\r\n * @typedef SpecialComponents\r\n * @property {CodeComponent|ReactMarkdownNames} code\r\n * @property {HeadingComponent|ReactMarkdownNames} h1\r\n * @property {HeadingComponent|ReactMarkdownNames} h2\r\n * @property {HeadingComponent|ReactMarkdownNames} h3\r\n * @property {HeadingComponent|ReactMarkdownNames} h4\r\n * @property {HeadingComponent|ReactMarkdownNames} h5\r\n * @property {HeadingComponent|ReactMarkdownNames} h6\r\n * @property {LiComponent|ReactMarkdownNames} li\r\n * @property {OrderedListComponent|ReactMarkdownNames} ol\r\n * @property {TableDataCellComponent|ReactMarkdownNames} td\r\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\r\n * @property {TableRowComponent|ReactMarkdownNames} tr\r\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\r\n *\r\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\r\n *\r\n * @typedef Options\r\n * @property {boolean} [sourcePos=false]\r\n * @property {boolean} [rawSourcePos=false]\r\n * @property {boolean} [skipHtml=false]\r\n * @property {boolean} [includeElementIndex=false]\r\n * @property {null|false|TransformLink} [transformLinkUri]\r\n * @property {TransformImage} [transformImageUri]\r\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\r\n * @property {Components} [components]\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n// The table-related elements that must not contain whitespace text according\r\n// to React.\r\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\r\n\r\n/**\r\n * @param {Context} context\r\n * @param {Element|Root} node\r\n */\r\nfunction childrenToReact(context, node) {\r\n  /** @type {Array<ReactNode>} */\r\n  const children = []\r\n  let childIndex = -1\r\n  /** @type {Comment|Doctype|Element|Raw|Text} */\r\n  let child\r\n\r\n  while (++childIndex < node.children.length) {\r\n    child = node.children[childIndex]\r\n\r\n    if (child.type === 'element') {\r\n      children.push(toReact(context, child, childIndex, node))\r\n    } else if (child.type === 'text') {\r\n      // Currently, a warning is triggered by react for *any* white space in\r\n      // tables.\r\n      // So we drop it.\r\n      // See: <https://github.com/facebook/react/pull/7081>.\r\n      // See: <https://github.com/facebook/react/pull/7515>.\r\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\r\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\r\n      if (\r\n        node.type !== 'element' ||\r\n        !tableElements.has(node.tagName) ||\r\n        !(0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__.whitespace)(child)\r\n      ) {\r\n        children.push(child.value)\r\n      }\r\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\r\n      // Default behavior is to show (encoded) HTML.\r\n      children.push(child.value)\r\n    }\r\n  }\r\n\r\n  return children\r\n}\r\n\r\n/**\r\n * @param {Context} context\r\n * @param {Element} node\r\n * @param {number} index\r\n * @param {Element|Root} parent\r\n */\r\nfunction toReact(context, node, index, parent) {\r\n  const options = context.options\r\n  const transform =\r\n    options.transformLinkUri === undefined\r\n      ? _uri_transformer_js__WEBPACK_IMPORTED_MODULE_4__.uriTransformer\r\n      : options.transformLinkUri\r\n  const parentSchema = context.schema\r\n  /** @type {ReactMarkdownNames} */\r\n  // @ts-expect-error assume a known HTML/SVG element.\r\n  const name = node.tagName\r\n  /** @type {Record<string, unknown>} */\r\n  const properties = {}\r\n  let schema = parentSchema\r\n  /** @type {string} */\r\n  let property\r\n\r\n  if (parentSchema.space === 'html' && name === 'svg') {\r\n    schema = property_information__WEBPACK_IMPORTED_MODULE_5__.svg\r\n    context.schema = schema\r\n  }\r\n\r\n  if (node.properties) {\r\n    for (property in node.properties) {\r\n      if (own.call(node.properties, property)) {\r\n        addProperty(properties, property, node.properties[property], context)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (name === 'ol' || name === 'ul') {\r\n    context.listDepth++\r\n  }\r\n\r\n  const children = childrenToReact(context, node)\r\n\r\n  if (name === 'ol' || name === 'ul') {\r\n    context.listDepth--\r\n  }\r\n\r\n  // Restore parent schema.\r\n  context.schema = parentSchema\r\n\r\n  // Nodes created by plugins do not have positional info, in which case we use\r\n  // an object that matches the position interface.\r\n  const position = node.position || {\r\n    start: {line: null, column: null, offset: null},\r\n    end: {line: null, column: null, offset: null}\r\n  }\r\n  const component =\r\n    options.components && own.call(options.components, name)\r\n      ? options.components[name]\r\n      : name\r\n  const basic = typeof component === 'string' || component === react__WEBPACK_IMPORTED_MODULE_0__.Fragment\r\n\r\n  if (!react_is__WEBPACK_IMPORTED_MODULE_1__.isValidElementType(component)) {\r\n    throw new TypeError(\r\n      `Component for name \\`${name}\\` not defined or is not renderable`\r\n    )\r\n  }\r\n\r\n  properties.key = index\r\n\r\n  if (name === 'a' && options.linkTarget) {\r\n    properties.target =\r\n      typeof options.linkTarget === 'function'\r\n        ? options.linkTarget(\r\n            String(properties.href || ''),\r\n            node.children,\r\n            typeof properties.title === 'string' ? properties.title : null\r\n          )\r\n        : options.linkTarget\r\n  }\r\n\r\n  if (name === 'a' && transform) {\r\n    properties.href = transform(\r\n      String(properties.href || ''),\r\n      node.children,\r\n      typeof properties.title === 'string' ? properties.title : null\r\n    )\r\n  }\r\n\r\n  if (\r\n    !basic &&\r\n    name === 'code' &&\r\n    parent.type === 'element' &&\r\n    parent.tagName !== 'pre'\r\n  ) {\r\n    properties.inline = true\r\n  }\r\n\r\n  if (\r\n    !basic &&\r\n    (name === 'h1' ||\r\n      name === 'h2' ||\r\n      name === 'h3' ||\r\n      name === 'h4' ||\r\n      name === 'h5' ||\r\n      name === 'h6')\r\n  ) {\r\n    properties.level = Number.parseInt(name.charAt(1), 10)\r\n  }\r\n\r\n  if (name === 'img' && options.transformImageUri) {\r\n    properties.src = options.transformImageUri(\r\n      String(properties.src || ''),\r\n      String(properties.alt || ''),\r\n      typeof properties.title === 'string' ? properties.title : null\r\n    )\r\n  }\r\n\r\n  if (!basic && name === 'li' && parent.type === 'element') {\r\n    const input = getInputElement(node)\r\n    properties.checked =\r\n      input && input.properties ? Boolean(input.properties.checked) : null\r\n    properties.index = getElementsBeforeCount(parent, node)\r\n    properties.ordered = parent.tagName === 'ol'\r\n  }\r\n\r\n  if (!basic && (name === 'ol' || name === 'ul')) {\r\n    properties.ordered = name === 'ol'\r\n    properties.depth = context.listDepth\r\n  }\r\n\r\n  if (name === 'td' || name === 'th') {\r\n    if (properties.align) {\r\n      if (!properties.style) properties.style = {}\r\n      // @ts-expect-error assume `style` is an object\r\n      properties.style.textAlign = properties.align\r\n      delete properties.align\r\n    }\r\n\r\n    if (!basic) {\r\n      properties.isHeader = name === 'th'\r\n    }\r\n  }\r\n\r\n  if (!basic && name === 'tr' && parent.type === 'element') {\r\n    properties.isHeader = Boolean(parent.tagName === 'thead')\r\n  }\r\n\r\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\r\n  if (options.sourcePos) {\r\n    properties['data-sourcepos'] = flattenPosition(position)\r\n  }\r\n\r\n  if (!basic && options.rawSourcePos) {\r\n    properties.sourcePosition = node.position\r\n  }\r\n\r\n  // If `includeElementIndex` is given, pass node index info to components.\r\n  if (!basic && options.includeElementIndex) {\r\n    properties.index = getElementsBeforeCount(parent, node)\r\n    properties.siblingCount = getElementsBeforeCount(parent)\r\n  }\r\n\r\n  if (!basic) {\r\n    properties.node = node\r\n  }\r\n\r\n  // Ensure no React warnings are emitted for void elements w/ children.\r\n  return children.length > 0\r\n    ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(component, properties, children)\r\n    : react__WEBPACK_IMPORTED_MODULE_0__.createElement(component, properties)\r\n}\r\n\r\n/**\r\n * @param {Element|Root} node\r\n * @returns {Element?}\r\n */\r\nfunction getInputElement(node) {\r\n  let index = -1\r\n\r\n  while (++index < node.children.length) {\r\n    const child = node.children[index]\r\n\r\n    if (child.type === 'element' && child.tagName === 'input') {\r\n      return child\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n/**\r\n * @param {Element|Root} parent\r\n * @param {Element} [node]\r\n * @returns {number}\r\n */\r\nfunction getElementsBeforeCount(parent, node) {\r\n  let index = -1\r\n  let count = 0\r\n\r\n  while (++index < parent.children.length) {\r\n    if (parent.children[index] === node) break\r\n    if (parent.children[index].type === 'element') count++\r\n  }\r\n\r\n  return count\r\n}\r\n\r\n/**\r\n * @param {Record<string, unknown>} props\r\n * @param {string} prop\r\n * @param {unknown} value\r\n * @param {Context} ctx\r\n */\r\nfunction addProperty(props, prop, value, ctx) {\r\n  const info = (0,property_information__WEBPACK_IMPORTED_MODULE_5__.find)(ctx.schema, prop)\r\n  let result = value\r\n\r\n  // Ignore nullish and `NaN` values.\r\n  // eslint-disable-next-line no-self-compare\r\n  if (result === null || result === undefined || result !== result) {\r\n    return\r\n  }\r\n\r\n  // Accept `array`.\r\n  // Most props are space-separated.\r\n  if (Array.isArray(result)) {\r\n    result = info.commaSeparated ? (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_6__.stringify)(result) : (0,space_separated_tokens__WEBPACK_IMPORTED_MODULE_7__.stringify)(result)\r\n  }\r\n\r\n  if (info.property === 'style' && typeof result === 'string') {\r\n    result = parseStyle(result)\r\n  }\r\n\r\n  if (info.space && info.property) {\r\n    props[\r\n      own.call(property_information__WEBPACK_IMPORTED_MODULE_5__.hastToReact, info.property)\r\n        ? property_information__WEBPACK_IMPORTED_MODULE_5__.hastToReact[info.property]\r\n        : info.property\r\n    ] = result\r\n  } else if (info.attribute) {\r\n    props[info.attribute] = result\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @returns {Record<string, string>}\r\n */\r\nfunction parseStyle(value) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n\r\n  try {\r\n    ;(0,style_to_object__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value, iterator)\r\n  } catch {\r\n    // Silent.\r\n  }\r\n\r\n  return result\r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {string} v\r\n   */\r\n  function iterator(name, v) {\r\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\r\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\r\n  }\r\n}\r\n\r\n/**\r\n * @param {unknown} _\r\n * @param {string} $1\r\n */\r\nfunction styleReplacer(_, $1) {\r\n  return $1.toUpperCase()\r\n}\r\n\r\n/**\r\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\r\n * @returns {string}\r\n */\r\nfunction flattenPosition(pos) {\r\n  return [\r\n    pos.start.line,\r\n    ':',\r\n    pos.start.column,\r\n    '-',\r\n    pos.end.line,\r\n    ':',\r\n    pos.end.column\r\n  ]\r\n    .map(String)\r\n    .join('')\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-markdown/lib/ast-to-react.js\n"));

/***/ }),

/***/ "./node_modules/react-markdown/lib/react-markdown.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-markdown/lib/react-markdown.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReactMarkdown\": function() { return /* binding */ ReactMarkdown; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var vfile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vfile */ \"./node_modules/vfile/index.js\");\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unified */ \"./node_modules/unified/index.js\");\n/* harmony import */ var remark_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! remark-parse */ \"./node_modules/remark-parse/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! remark-rehype */ \"./node_modules/remark-rehype/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! property-information */ \"./node_modules/property-information/index.js\");\n/* harmony import */ var _rehype_filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rehype-filter.js */ \"./node_modules/react-markdown/lib/rehype-filter.js\");\n/* harmony import */ var _ast_to_react_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ast-to-react.js */ \"./node_modules/react-markdown/lib/ast-to-react.js\");\n/**\r\n * @typedef {import('react').ReactNode} ReactNode\r\n * @typedef {import('react').ReactElement<{}>} ReactElement\r\n * @typedef {import('unified').PluggableList} PluggableList\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\r\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\r\n *\r\n * @typedef CoreOptions\r\n * @property {string} children\r\n *\r\n * @typedef PluginOptions\r\n * @property {PluggableList} [remarkPlugins=[]]\r\n * @property {PluggableList} [rehypePlugins=[]]\r\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\r\n *\r\n * @typedef LayoutOptions\r\n * @property {string} [className]\r\n *\r\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\r\n *\r\n * @typedef Deprecation\r\n * @property {string} id\r\n * @property {string} [to]\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst own = {}.hasOwnProperty\r\nconst changelog =\r\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\r\n\r\n/** @type {Record<string, Deprecation>} */\r\nconst deprecated = {\r\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\r\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\r\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\r\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\r\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\r\n  source: {to: 'children', id: 'change-source-to-children'},\r\n  allowNode: {\r\n    to: 'allowElement',\r\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\r\n  },\r\n  allowedTypes: {\r\n    to: 'allowedElements',\r\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\r\n  },\r\n  disallowedTypes: {\r\n    to: 'disallowedElements',\r\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\r\n  },\r\n  includeNodeIndex: {\r\n    to: 'includeElementIndex',\r\n    id: 'change-includenodeindex-to-includeelementindex'\r\n  }\r\n}\r\n\r\n/**\r\n * React component to render markdown.\r\n *\r\n * @param {ReactMarkdownOptions} options\r\n * @returns {ReactElement}\r\n */\r\nfunction ReactMarkdown(options) {\r\n  for (const key in deprecated) {\r\n    if (own.call(deprecated, key) && own.call(options, key)) {\r\n      const deprecation = deprecated[key]\r\n      console.warn(\r\n        `[react-markdown] Warning: please ${\r\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\r\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\r\n      )\r\n      delete deprecated[key]\r\n    }\r\n  }\r\n\r\n  const processor = (0,unified__WEBPACK_IMPORTED_MODULE_1__.unified)()\r\n    .use(remark_parse__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\r\n    .use(options.remarkPlugins || [])\r\n    .use(remark_rehype__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\r\n      ...options.remarkRehypeOptions,\r\n      allowDangerousHtml: true\r\n    })\r\n    .use(options.rehypePlugins || [])\r\n    .use(_rehype_filter_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], options)\r\n\r\n  const file = new vfile__WEBPACK_IMPORTED_MODULE_5__.VFile()\r\n\r\n  if (typeof options.children === 'string') {\r\n    file.value = options.children\r\n  } else if (options.children !== undefined && options.children !== null) {\r\n    console.warn(\r\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\r\n    )\r\n  }\r\n\r\n  const hastNode = processor.runSync(processor.parse(file), file)\r\n\r\n  if (hastNode.type !== 'root') {\r\n    throw new TypeError('Expected a `root` node')\r\n  }\r\n\r\n  /** @type {ReactElement} */\r\n  let result = react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    react__WEBPACK_IMPORTED_MODULE_0__.Fragment,\r\n    {},\r\n    (0,_ast_to_react_js__WEBPACK_IMPORTED_MODULE_6__.childrenToReact)({options, schema: property_information__WEBPACK_IMPORTED_MODULE_7__.html, listDepth: 0}, hastNode)\r\n  )\r\n\r\n  if (options.className) {\r\n    result = react__WEBPACK_IMPORTED_MODULE_0__.createElement('div', {className: options.className}, result)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nReactMarkdown.propTypes = {\r\n  // Core options:\r\n  children: prop_types__WEBPACK_IMPORTED_MODULE_8__.string,\r\n  // Layout options:\r\n  className: prop_types__WEBPACK_IMPORTED_MODULE_8__.string,\r\n  // Filter options:\r\n  allowElement: prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n  allowedElements: prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_8__.string),\r\n  disallowedElements: prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_8__.string),\r\n  unwrapDisallowed: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n  // Plugin options:\r\n  remarkPlugins: prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n    prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.object,\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n        prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.string,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.object,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n            // prettier-ignore\r\n            // type-coverage:ignore-next-line\r\n            prop_types__WEBPACK_IMPORTED_MODULE_8__.any\r\n          )\r\n        ])\r\n      )\r\n    ])\r\n  ),\r\n  rehypePlugins: prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n    prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.object,\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n      prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n        prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.string,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.object,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n          prop_types__WEBPACK_IMPORTED_MODULE_8__.arrayOf(\r\n            // prettier-ignore\r\n            // type-coverage:ignore-next-line\r\n            prop_types__WEBPACK_IMPORTED_MODULE_8__.any\r\n          )\r\n        ])\r\n      )\r\n    ])\r\n  ),\r\n  // Transform options:\r\n  sourcePos: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n  rawSourcePos: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n  skipHtml: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n  includeElementIndex: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\r\n  transformLinkUri: prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_8__.func, prop_types__WEBPACK_IMPORTED_MODULE_8__.bool]),\r\n  linkTarget: prop_types__WEBPACK_IMPORTED_MODULE_8__.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_8__.func, prop_types__WEBPACK_IMPORTED_MODULE_8__.string]),\r\n  transformImageUri: prop_types__WEBPACK_IMPORTED_MODULE_8__.func,\r\n  components: prop_types__WEBPACK_IMPORTED_MODULE_8__.object\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-markdown/lib/react-markdown.js\n"));

/***/ }),

/***/ "./node_modules/react-markdown/lib/rehype-filter.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-markdown/lib/rehype-filter.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rehypeFilter; }\n/* harmony export */ });\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/index.js\");\n\r\n\r\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Element} Element\r\n *\r\n * @callback AllowElement\r\n * @param {Element} element\r\n * @param {number} index\r\n * @param {Element|Root} parent\r\n * @returns {boolean|undefined}\r\n *\r\n * @typedef Options\r\n * @property {Array<string>} [allowedElements]\r\n * @property {Array<string>} [disallowedElements=[]]\r\n * @property {AllowElement} [allowElement]\r\n * @property {boolean} [unwrapDisallowed=false]\r\n */\r\n\r\n/**\r\n * @type {import('unified').Plugin<[Options], Root>}\r\n */\r\nfunction rehypeFilter(options) {\r\n  if (options.allowedElements && options.disallowedElements) {\r\n    throw new TypeError(\r\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\r\n    )\r\n  }\r\n\r\n  if (\r\n    options.allowedElements ||\r\n    options.disallowedElements ||\r\n    options.allowElement\r\n  ) {\r\n    return (tree) => {\r\n      (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_0__.visit)(tree, 'element', (node, index, parent_) => {\r\n        const parent = /** @type {Element|Root} */ (parent_)\r\n        /** @type {boolean|undefined} */\r\n        let remove\r\n\r\n        if (options.allowedElements) {\r\n          remove = !options.allowedElements.includes(node.tagName)\r\n        } else if (options.disallowedElements) {\r\n          remove = options.disallowedElements.includes(node.tagName)\r\n        }\r\n\r\n        if (!remove && options.allowElement && typeof index === 'number') {\r\n          remove = !options.allowElement(node, index, parent)\r\n        }\r\n\r\n        if (remove && typeof index === 'number') {\r\n          if (options.unwrapDisallowed && node.children) {\r\n            parent.children.splice(index, 1, ...node.children)\r\n          } else {\r\n            parent.children.splice(index, 1)\r\n          }\r\n\r\n          return index\r\n        }\r\n\r\n        return undefined\r\n      })\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbGliL3JlaHlwZS1maWx0ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDdEM7QUFDQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEscUJBQXFCO0FBQ2xDLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWMsZUFBZTtBQUM3QixjQUFjLGVBQWU7QUFDN0IsY0FBYyxjQUFjO0FBQzVCLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdURBQUs7QUFDWCxrQ0FBa0MsY0FBYztBQUNoRCxtQkFBbUIsbUJBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbGliL3JlaHlwZS1maWx0ZXIuanM/NDc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3Zpc2l0fSBmcm9tICd1bmlzdC11dGlsLXZpc2l0J1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUm9vdH0gUm9vdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxyXG4gKlxyXG4gKiBAY2FsbGJhY2sgQWxsb3dFbGVtZW50XHJcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxyXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcclxuICogQHBhcmFtIHtFbGVtZW50fFJvb3R9IHBhcmVudFxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbnx1bmRlZmluZWR9XHJcbiAqXHJcbiAqIEB0eXBlZGVmIE9wdGlvbnNcclxuICogQHByb3BlcnR5IHtBcnJheTxzdHJpbmc+fSBbYWxsb3dlZEVsZW1lbnRzXVxyXG4gKiBAcHJvcGVydHkge0FycmF5PHN0cmluZz59IFtkaXNhbGxvd2VkRWxlbWVudHM9W11dXHJcbiAqIEBwcm9wZXJ0eSB7QWxsb3dFbGVtZW50fSBbYWxsb3dFbGVtZW50XVxyXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFt1bndyYXBEaXNhbGxvd2VkPWZhbHNlXVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtPcHRpb25zXSwgUm9vdD59XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWh5cGVGaWx0ZXIob3B0aW9ucykge1xyXG4gIGlmIChvcHRpb25zLmFsbG93ZWRFbGVtZW50cyAmJiBvcHRpb25zLmRpc2FsbG93ZWRFbGVtZW50cykge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcclxuICAgICAgJ09ubHkgb25lIG9mIGBhbGxvd2VkRWxlbWVudHNgIGFuZCBgZGlzYWxsb3dlZEVsZW1lbnRzYCBzaG91bGQgYmUgZGVmaW5lZCdcclxuICAgIClcclxuICB9XHJcblxyXG4gIGlmIChcclxuICAgIG9wdGlvbnMuYWxsb3dlZEVsZW1lbnRzIHx8XHJcbiAgICBvcHRpb25zLmRpc2FsbG93ZWRFbGVtZW50cyB8fFxyXG4gICAgb3B0aW9ucy5hbGxvd0VsZW1lbnRcclxuICApIHtcclxuICAgIHJldHVybiAodHJlZSkgPT4ge1xyXG4gICAgICB2aXNpdCh0cmVlLCAnZWxlbWVudCcsIChub2RlLCBpbmRleCwgcGFyZW50XykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBhcmVudCA9IC8qKiBAdHlwZSB7RWxlbWVudHxSb290fSAqLyAocGFyZW50XylcclxuICAgICAgICAvKiogQHR5cGUge2Jvb2xlYW58dW5kZWZpbmVkfSAqL1xyXG4gICAgICAgIGxldCByZW1vdmVcclxuXHJcbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZEVsZW1lbnRzKSB7XHJcbiAgICAgICAgICByZW1vdmUgPSAhb3B0aW9ucy5hbGxvd2VkRWxlbWVudHMuaW5jbHVkZXMobm9kZS50YWdOYW1lKVxyXG4gICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5kaXNhbGxvd2VkRWxlbWVudHMpIHtcclxuICAgICAgICAgIHJlbW92ZSA9IG9wdGlvbnMuZGlzYWxsb3dlZEVsZW1lbnRzLmluY2x1ZGVzKG5vZGUudGFnTmFtZSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghcmVtb3ZlICYmIG9wdGlvbnMuYWxsb3dFbGVtZW50ICYmIHR5cGVvZiBpbmRleCA9PT0gJ251bWJlcicpIHtcclxuICAgICAgICAgIHJlbW92ZSA9ICFvcHRpb25zLmFsbG93RWxlbWVudChub2RlLCBpbmRleCwgcGFyZW50KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHJlbW92ZSAmJiB0eXBlb2YgaW5kZXggPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICBpZiAob3B0aW9ucy51bndyYXBEaXNhbGxvd2VkICYmIG5vZGUuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgcGFyZW50LmNoaWxkcmVuLnNwbGljZShpbmRleCwgMSwgLi4ubm9kZS5jaGlsZHJlbilcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBhcmVudC5jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcmV0dXJuIGluZGV4XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-markdown/lib/rehype-filter.js\n"));

/***/ }),

/***/ "./node_modules/react-markdown/lib/uri-transformer.js":
/*!************************************************************!*\
  !*** ./node_modules/react-markdown/lib/uri-transformer.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"uriTransformer\": function() { return /* binding */ uriTransformer; }\n/* harmony export */ });\nconst protocols = ['http', 'https', 'mailto', 'tel']\r\n\r\n/**\r\n * @param {string} uri\r\n * @returns {string}\r\n */\r\nfunction uriTransformer(uri) {\r\n  const url = (uri || '').trim()\r\n  const first = url.charAt(0)\r\n\r\n  if (first === '#' || first === '/') {\r\n    return url\r\n  }\r\n\r\n  const colon = url.indexOf(':')\r\n  if (colon === -1) {\r\n    return url\r\n  }\r\n\r\n  let index = -1\r\n\r\n  while (++index < protocols.length) {\r\n    const protocol = protocols[index]\r\n\r\n    if (\r\n      colon === protocol.length &&\r\n      url.slice(0, protocol.length).toLowerCase() === protocol\r\n    ) {\r\n      return url\r\n    }\r\n  }\r\n\r\n  index = url.indexOf('?')\r\n  if (index !== -1 && colon > index) {\r\n    return url\r\n  }\r\n\r\n  index = url.indexOf('#')\r\n  if (index !== -1 && colon > index) {\r\n    return url\r\n  }\r\n\r\n  // eslint-disable-next-line no-script-url\r\n  return 'javascript:void(0)'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbGliL3VyaS10cmFuc2Zvcm1lci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbGliL3VyaS10cmFuc2Zvcm1lci5qcz84MzdiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByb3RvY29scyA9IFsnaHR0cCcsICdodHRwcycsICdtYWlsdG8nLCAndGVsJ11cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJpXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXJpVHJhbnNmb3JtZXIodXJpKSB7XHJcbiAgY29uc3QgdXJsID0gKHVyaSB8fCAnJykudHJpbSgpXHJcbiAgY29uc3QgZmlyc3QgPSB1cmwuY2hhckF0KDApXHJcblxyXG4gIGlmIChmaXJzdCA9PT0gJyMnIHx8IGZpcnN0ID09PSAnLycpIHtcclxuICAgIHJldHVybiB1cmxcclxuICB9XHJcblxyXG4gIGNvbnN0IGNvbG9uID0gdXJsLmluZGV4T2YoJzonKVxyXG4gIGlmIChjb2xvbiA9PT0gLTEpIHtcclxuICAgIHJldHVybiB1cmxcclxuICB9XHJcblxyXG4gIGxldCBpbmRleCA9IC0xXHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgcHJvdG9jb2xzLmxlbmd0aCkge1xyXG4gICAgY29uc3QgcHJvdG9jb2wgPSBwcm90b2NvbHNbaW5kZXhdXHJcblxyXG4gICAgaWYgKFxyXG4gICAgICBjb2xvbiA9PT0gcHJvdG9jb2wubGVuZ3RoICYmXHJcbiAgICAgIHVybC5zbGljZSgwLCBwcm90b2NvbC5sZW5ndGgpLnRvTG93ZXJDYXNlKCkgPT09IHByb3RvY29sXHJcbiAgICApIHtcclxuICAgICAgcmV0dXJuIHVybFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW5kZXggPSB1cmwuaW5kZXhPZignPycpXHJcbiAgaWYgKGluZGV4ICE9PSAtMSAmJiBjb2xvbiA+IGluZGV4KSB7XHJcbiAgICByZXR1cm4gdXJsXHJcbiAgfVxyXG5cclxuICBpbmRleCA9IHVybC5pbmRleE9mKCcjJylcclxuICBpZiAoaW5kZXggIT09IC0xICYmIGNvbG9uID4gaW5kZXgpIHtcclxuICAgIHJldHVybiB1cmxcclxuICB9XHJcblxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zY3JpcHQtdXJsXHJcbiAgcmV0dXJuICdqYXZhc2NyaXB0OnZvaWQoMCknXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-markdown/lib/uri-transformer.js\n"));

/***/ }),

/***/ "./node_modules/remark-gfm/index.js":
/*!******************************************!*\
  !*** ./node_modules/remark-gfm/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkGfm; }\n/* harmony export */ });\n/* harmony import */ var micromark_extension_gfm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-extension-gfm */ \"./node_modules/micromark-extension-gfm/index.js\");\n/* harmony import */ var mdast_util_gfm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-gfm */ \"./node_modules/mdast-util-gfm/index.js\");\n/**\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\r\n *\r\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\r\n */\r\nfunction remarkGfm(options = {}) {\r\n  const data = this.data()\r\n\r\n  add('micromarkExtensions', (0,micromark_extension_gfm__WEBPACK_IMPORTED_MODULE_0__.gfm)(options))\r\n  add('fromMarkdownExtensions', (0,mdast_util_gfm__WEBPACK_IMPORTED_MODULE_1__.gfmFromMarkdown)())\r\n  add('toMarkdownExtensions', (0,mdast_util_gfm__WEBPACK_IMPORTED_MODULE_1__.gfmToMarkdown)(options))\r\n\r\n  /**\r\n   * @param {string} field\r\n   * @param {unknown} value\r\n   */\r\n  function add(field, value) {\r\n    const list = /** @type {unknown[]} */ (\r\n      // Other extensions\r\n      /* c8 ignore next 2 */\r\n      data[field] ? data[field] : (data[field] = [])\r\n    )\r\n\r\n    list.push(value)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVtYXJrLWdmbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsOEVBQThFO0FBQzNGO0FBQ0E7QUFDMkM7QUFDa0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDZSwrQkFBK0I7QUFDOUM7QUFDQTtBQUNBLDZCQUE2Qiw0REFBRztBQUNoQyxnQ0FBZ0MsK0RBQWU7QUFDL0MsOEJBQThCLDZEQUFhO0FBQzNDO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSw0QkFBNEIsV0FBVztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZW1hcmstZ2ZtL2luZGV4LmpzPzMxYTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstZXh0ZW5zaW9uLWdmbScpLk9wdGlvbnMgJiBpbXBvcnQoJ21kYXN0LXV0aWwtZ2ZtJykuT3B0aW9uc30gT3B0aW9uc1xyXG4gKi9cclxuXHJcbmltcG9ydCB7Z2ZtfSBmcm9tICdtaWNyb21hcmstZXh0ZW5zaW9uLWdmbSdcclxuaW1wb3J0IHtnZm1Gcm9tTWFya2Rvd24sIGdmbVRvTWFya2Rvd259IGZyb20gJ21kYXN0LXV0aWwtZ2ZtJ1xyXG5cclxuLyoqXHJcbiAqIFBsdWdpbiB0byBzdXBwb3J0IEdGTSAoYXV0b2xpbmsgbGl0ZXJhbHMsIGZvb3Rub3Rlcywgc3RyaWtldGhyb3VnaCwgdGFibGVzLCB0YXNrbGlzdHMpLlxyXG4gKlxyXG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtPcHRpb25zP118dm9pZFtdLCBSb290Pn1cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbWFya0dmbShvcHRpb25zID0ge30pIHtcclxuICBjb25zdCBkYXRhID0gdGhpcy5kYXRhKClcclxuXHJcbiAgYWRkKCdtaWNyb21hcmtFeHRlbnNpb25zJywgZ2ZtKG9wdGlvbnMpKVxyXG4gIGFkZCgnZnJvbU1hcmtkb3duRXh0ZW5zaW9ucycsIGdmbUZyb21NYXJrZG93bigpKVxyXG4gIGFkZCgndG9NYXJrZG93bkV4dGVuc2lvbnMnLCBnZm1Ub01hcmtkb3duKG9wdGlvbnMpKVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gZmllbGRcclxuICAgKiBAcGFyYW0ge3Vua25vd259IHZhbHVlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gYWRkKGZpZWxkLCB2YWx1ZSkge1xyXG4gICAgY29uc3QgbGlzdCA9IC8qKiBAdHlwZSB7dW5rbm93bltdfSAqLyAoXHJcbiAgICAgIC8vIE90aGVyIGV4dGVuc2lvbnNcclxuICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xyXG4gICAgICBkYXRhW2ZpZWxkXSA/IGRhdGFbZmllbGRdIDogKGRhdGFbZmllbGRdID0gW10pXHJcbiAgICApXHJcblxyXG4gICAgbGlzdC5wdXNoKHZhbHVlKVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/remark-gfm/index.js\n"));

/***/ }),

/***/ "./node_modules/remark-parse/index.js":
/*!********************************************!*\
  !*** ./node_modules/remark-parse/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/remark-parse/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvaW5kZXguanM/OWJjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHR9IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/remark-parse/index.js\n"));

/***/ }),

/***/ "./node_modules/remark-parse/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/remark-parse/lib/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkParse; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-from-markdown */ \"./node_modules/mdast-util-from-markdown/dev/index.js\");\n/**\r\n * @typedef {import('mdast').Root} Root\r\n * @typedef {import('mdast-util-from-markdown').Options} Options\r\n */\r\n\r\n\r\n\r\n/**\r\n * @this {import('unified').Processor}\r\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\r\n */\r\nfunction remarkParse(options) {\r\n  /** @type {import('unified').ParserFunction<Root>} */\r\n  const parser = (doc) => {\r\n    // Assume options.\r\n    const settings = /** @type {Options} */ (this.data('settings'))\r\n\r\n    return (0,mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_0__.fromMarkdown)(\r\n      doc,\r\n      Object.assign({}, settings, options, {\r\n        // Note: these options are not in the readme.\r\n        // The goal is for them to be set by plugins on `data` instead of being\r\n        // passed by users.\r\n        extensions: this.data('micromarkExtensions') || [],\r\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\r\n      })\r\n    )\r\n  }\r\n\r\n  Object.assign(this, {Parser: parser})\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSw0Q0FBNEM7QUFDekQ7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0EsVUFBVTtBQUNWLFVBQVU7QUFDVjtBQUNlO0FBQ2YsYUFBYSx3Q0FBd0M7QUFDckQ7QUFDQTtBQUNBLGdDQUFnQyxTQUFTO0FBQ3pDO0FBQ0EsV0FBVyxzRUFBWTtBQUN2QjtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixlQUFlO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL2luZGV4LmpzPzRjZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLWZyb20tbWFya2Rvd24nKS5PcHRpb25zfSBPcHRpb25zXHJcbiAqL1xyXG5cclxuaW1wb3J0IHtmcm9tTWFya2Rvd259IGZyb20gJ21kYXN0LXV0aWwtZnJvbS1tYXJrZG93bidcclxuXHJcbi8qKlxyXG4gKiBAdGhpcyB7aW1wb3J0KCd1bmlmaWVkJykuUHJvY2Vzc29yfVxyXG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtPcHRpb25zP10gfCB2b2lkW10sIHN0cmluZywgUm9vdD59XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1hcmtQYXJzZShvcHRpb25zKSB7XHJcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ3VuaWZpZWQnKS5QYXJzZXJGdW5jdGlvbjxSb290Pn0gKi9cclxuICBjb25zdCBwYXJzZXIgPSAoZG9jKSA9PiB7XHJcbiAgICAvLyBBc3N1bWUgb3B0aW9ucy5cclxuICAgIGNvbnN0IHNldHRpbmdzID0gLyoqIEB0eXBlIHtPcHRpb25zfSAqLyAodGhpcy5kYXRhKCdzZXR0aW5ncycpKVxyXG5cclxuICAgIHJldHVybiBmcm9tTWFya2Rvd24oXHJcbiAgICAgIGRvYyxcclxuICAgICAgT2JqZWN0LmFzc2lnbih7fSwgc2V0dGluZ3MsIG9wdGlvbnMsIHtcclxuICAgICAgICAvLyBOb3RlOiB0aGVzZSBvcHRpb25zIGFyZSBub3QgaW4gdGhlIHJlYWRtZS5cclxuICAgICAgICAvLyBUaGUgZ29hbCBpcyBmb3IgdGhlbSB0byBiZSBzZXQgYnkgcGx1Z2lucyBvbiBgZGF0YWAgaW5zdGVhZCBvZiBiZWluZ1xyXG4gICAgICAgIC8vIHBhc3NlZCBieSB1c2Vycy5cclxuICAgICAgICBleHRlbnNpb25zOiB0aGlzLmRhdGEoJ21pY3JvbWFya0V4dGVuc2lvbnMnKSB8fCBbXSxcclxuICAgICAgICBtZGFzdEV4dGVuc2lvbnM6IHRoaXMuZGF0YSgnZnJvbU1hcmtkb3duRXh0ZW5zaW9ucycpIHx8IFtdXHJcbiAgICAgIH0pXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBPYmplY3QuYXNzaWduKHRoaXMsIHtQYXJzZXI6IHBhcnNlcn0pXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/remark-parse/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/remark-rehype/index.js":
/*!*********************************************!*\
  !*** ./node_modules/remark-rehype/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": function() { return /* reexport safe */ mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.all; },\n/* harmony export */   \"default\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"defaultHandlers\": function() { return /* reexport safe */ mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.defaultHandlers; },\n/* harmony export */   \"one\": function() { return /* reexport safe */ mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.one; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"./node_modules/mdast-util-to-hast/index.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/remark-rehype/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Options} Options\r\n * @typedef {import('./lib/index.js').Processor} Processor\r\n */\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVtYXJrLXJlaHlwZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsa0NBQWtDO0FBQy9DLGFBQWEsb0NBQW9DO0FBQ2pEO0FBQ0E7QUFDNEQ7QUFDNUQ7QUFDc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1yZWh5cGUvaW5kZXguanM/MGMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5PcHRpb25zfSBPcHRpb25zXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuUHJvY2Vzc29yfSBQcm9jZXNzb3JcclxuICovXHJcblxyXG5leHBvcnQge2RlZmF1bHRIYW5kbGVycywgYWxsLCBvbmV9IGZyb20gJ21kYXN0LXV0aWwtdG8taGFzdCdcclxuXHJcbmV4cG9ydCB7ZGVmYXVsdH0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/remark-rehype/index.js\n"));

/***/ }),

/***/ "./node_modules/remark-rehype/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/remark-rehype/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"./node_modules/mdast-util-to-hast/index.js\");\n/**\r\n * @typedef {import('hast').Root} HastRoot\r\n * @typedef {import('mdast').Root} MdastRoot\r\n * @typedef {import('mdast-util-to-hast').Options} Options\r\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\r\n *\r\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\r\n */\r\n\r\n\r\n\r\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\r\n\r\n/**\r\n * Plugin that turns markdown into HTML to support rehype.\r\n *\r\n * *   If a destination processor is given, that processor runs with a new HTML\r\n *     (hast) tree (bridge-mode).\r\n *     As the given processor runs with a hast tree, and rehype plugins support\r\n *     hast, that means rehype plugins can be used with the given processor.\r\n *     The hast tree is discarded in the end.\r\n *     It’s highly unlikely that you want to do this.\r\n * *   The common case is to not pass a destination processor, in which case the\r\n *     current processor continues running with a new HTML (hast) tree\r\n *     (mutate-mode).\r\n *     As the current processor continues with a hast tree, and rehype plugins\r\n *     support hast, that means rehype plugins can be used after\r\n *     `remark-rehype`.\r\n *     It’s likely that this is what you want to do.\r\n *\r\n * @param destination\r\n *   Optional unified processor.\r\n * @param options\r\n *   Options passed to `mdast-util-to-hast`.\r\n */\r\nconst remarkRehype =\r\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\r\n  (\r\n    function (destination, options) {\r\n      return destination && 'run' in destination\r\n        ? bridge(destination, options)\r\n        : mutate(destination || options)\r\n    }\r\n  )\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (remarkRehype);\r\n\r\n/**\r\n * Bridge-mode.\r\n * Runs the destination with the new hast tree.\r\n *\r\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\r\n */\r\nfunction bridge(destination, options) {\r\n  return (node, file, next) => {\r\n    destination.run((0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, options), file, (error) => {\r\n      next(error)\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Mutate-mode.\r\n * Further plugins run on the hast tree.\r\n *\r\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\r\n */\r\nfunction mutate(options) {\r\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\r\n  return (node) => (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, options)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVtYXJrLXJlaHlwZS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsaURBQWlEO0FBQzlEO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUN5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzR0FBc0c7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMERBQU07QUFDMUI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBEQUFNO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZW1hcmstcmVoeXBlL2xpYi9pbmRleC5qcz9kYmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUm9vdH0gSGFzdFJvb3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBNZGFzdFJvb3RcclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC10by1oYXN0JykuT3B0aW9uc30gT3B0aW9uc1xyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlmaWVkJykuUHJvY2Vzc29yPGFueSwgYW55LCBhbnksIGFueT59IFByb2Nlc3NvclxyXG4gKlxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLWhhc3QnKX0gRG9Ob3RUb3VjaEFzVGhpc0ltcG9ydEluY2x1ZGVzUmF3SW5UcmVlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHt0b0hhc3R9IGZyb20gJ21kYXN0LXV0aWwtdG8taGFzdCdcclxuXHJcbi8vIE5vdGU6IHRoZSBgPE1kYXN0Um9vdCwgSGFzdFJvb3Q+YCBvdmVybG9hZCBkb2VzbuKAmXQgc2VlbSB0byB3b3JrIDonKFxyXG5cclxuLyoqXHJcbiAqIFBsdWdpbiB0aGF0IHR1cm5zIG1hcmtkb3duIGludG8gSFRNTCB0byBzdXBwb3J0IHJlaHlwZS5cclxuICpcclxuICogKiAgIElmIGEgZGVzdGluYXRpb24gcHJvY2Vzc29yIGlzIGdpdmVuLCB0aGF0IHByb2Nlc3NvciBydW5zIHdpdGggYSBuZXcgSFRNTFxyXG4gKiAgICAgKGhhc3QpIHRyZWUgKGJyaWRnZS1tb2RlKS5cclxuICogICAgIEFzIHRoZSBnaXZlbiBwcm9jZXNzb3IgcnVucyB3aXRoIGEgaGFzdCB0cmVlLCBhbmQgcmVoeXBlIHBsdWdpbnMgc3VwcG9ydFxyXG4gKiAgICAgaGFzdCwgdGhhdCBtZWFucyByZWh5cGUgcGx1Z2lucyBjYW4gYmUgdXNlZCB3aXRoIHRoZSBnaXZlbiBwcm9jZXNzb3IuXHJcbiAqICAgICBUaGUgaGFzdCB0cmVlIGlzIGRpc2NhcmRlZCBpbiB0aGUgZW5kLlxyXG4gKiAgICAgSXTigJlzIGhpZ2hseSB1bmxpa2VseSB0aGF0IHlvdSB3YW50IHRvIGRvIHRoaXMuXHJcbiAqICogICBUaGUgY29tbW9uIGNhc2UgaXMgdG8gbm90IHBhc3MgYSBkZXN0aW5hdGlvbiBwcm9jZXNzb3IsIGluIHdoaWNoIGNhc2UgdGhlXHJcbiAqICAgICBjdXJyZW50IHByb2Nlc3NvciBjb250aW51ZXMgcnVubmluZyB3aXRoIGEgbmV3IEhUTUwgKGhhc3QpIHRyZWVcclxuICogICAgIChtdXRhdGUtbW9kZSkuXHJcbiAqICAgICBBcyB0aGUgY3VycmVudCBwcm9jZXNzb3IgY29udGludWVzIHdpdGggYSBoYXN0IHRyZWUsIGFuZCByZWh5cGUgcGx1Z2luc1xyXG4gKiAgICAgc3VwcG9ydCBoYXN0LCB0aGF0IG1lYW5zIHJlaHlwZSBwbHVnaW5zIGNhbiBiZSB1c2VkIGFmdGVyXHJcbiAqICAgICBgcmVtYXJrLXJlaHlwZWAuXHJcbiAqICAgICBJdOKAmXMgbGlrZWx5IHRoYXQgdGhpcyBpcyB3aGF0IHlvdSB3YW50IHRvIGRvLlxyXG4gKlxyXG4gKiBAcGFyYW0gZGVzdGluYXRpb25cclxuICogICBPcHRpb25hbCB1bmlmaWVkIHByb2Nlc3Nvci5cclxuICogQHBhcmFtIG9wdGlvbnNcclxuICogICBPcHRpb25zIHBhc3NlZCB0byBgbWRhc3QtdXRpbC10by1oYXN0YC5cclxuICovXHJcbmNvbnN0IHJlbWFya1JlaHlwZSA9XHJcbiAgLyoqIEB0eXBlIHsoaW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtQcm9jZXNzb3IsIE9wdGlvbnM/XXxbbnVsbHx1bmRlZmluZWQsIE9wdGlvbnM/XXxbT3B0aW9uc118W10sIE1kYXN0Um9vdD4pfSAqL1xyXG4gIChcclxuICAgIGZ1bmN0aW9uIChkZXN0aW5hdGlvbiwgb3B0aW9ucykge1xyXG4gICAgICByZXR1cm4gZGVzdGluYXRpb24gJiYgJ3J1bicgaW4gZGVzdGluYXRpb25cclxuICAgICAgICA/IGJyaWRnZShkZXN0aW5hdGlvbiwgb3B0aW9ucylcclxuICAgICAgICA6IG11dGF0ZShkZXN0aW5hdGlvbiB8fCBvcHRpb25zKVxyXG4gICAgfVxyXG4gIClcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJlbWFya1JlaHlwZVxyXG5cclxuLyoqXHJcbiAqIEJyaWRnZS1tb2RlLlxyXG4gKiBSdW5zIHRoZSBkZXN0aW5hdGlvbiB3aXRoIHRoZSBuZXcgaGFzdCB0cmVlLlxyXG4gKlxyXG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtQcm9jZXNzb3IsIE9wdGlvbnM/XSwgTWRhc3RSb290Pn1cclxuICovXHJcbmZ1bmN0aW9uIGJyaWRnZShkZXN0aW5hdGlvbiwgb3B0aW9ucykge1xyXG4gIHJldHVybiAobm9kZSwgZmlsZSwgbmV4dCkgPT4ge1xyXG4gICAgZGVzdGluYXRpb24ucnVuKHRvSGFzdChub2RlLCBvcHRpb25zKSwgZmlsZSwgKGVycm9yKSA9PiB7XHJcbiAgICAgIG5leHQoZXJyb3IpXHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIE11dGF0ZS1tb2RlLlxyXG4gKiBGdXJ0aGVyIHBsdWdpbnMgcnVuIG9uIHRoZSBoYXN0IHRyZWUuXHJcbiAqXHJcbiAqIEB0eXBlIHtpbXBvcnQoJ3VuaWZpZWQnKS5QbHVnaW48W09wdGlvbnM/XXx2b2lkW10sIE1kYXN0Um9vdCwgSGFzdFJvb3Q+fVxyXG4gKi9cclxuZnVuY3Rpb24gbXV0YXRlKG9wdGlvbnMpIHtcclxuICAvLyBAdHMtZXhwZWN0LWVycm9yOiBhc3N1bWUgYSBjb3JyZXNwb25kaW5nIG5vZGUgaXMgcmV0dXJuZWQgYnkgYHRvSGFzdGAuXHJcbiAgcmV0dXJuIChub2RlKSA9PiB0b0hhc3Qobm9kZSwgb3B0aW9ucylcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/remark-rehype/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/space-separated-tokens/index.js":
/*!******************************************************!*\
  !*** ./node_modules/space-separated-tokens/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; }\n/* harmony export */ });\n/**\r\n * Parse space-separated tokens to an array of strings.\r\n *\r\n * @param {string} value\r\n *   Space-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nfunction parse(value) {\r\n  const input = String(value || '').trim()\r\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\r\n}\r\n\r\n/**\r\n * Serialize an array of strings as space separated-tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @returns {string}\r\n *   Space-separated tokens.\r\n */\r\nfunction stringify(values) {\r\n  return values.join(' ').trim()\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3BhY2Utc2VwYXJhdGVkLXRva2Vucy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NwYWNlLXNlcGFyYXRlZC10b2tlbnMvaW5kZXguanM/MTEzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUGFyc2Ugc3BhY2Utc2VwYXJhdGVkIHRva2VucyB0byBhbiBhcnJheSBvZiBzdHJpbmdzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICogICBTcGFjZS1zZXBhcmF0ZWQgdG9rZW5zLlxyXG4gKiBAcmV0dXJucyB7QXJyYXk8c3RyaW5nPn1cclxuICogICBMaXN0IG9mIHRva2Vucy5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSh2YWx1ZSkge1xyXG4gIGNvbnN0IGlucHV0ID0gU3RyaW5nKHZhbHVlIHx8ICcnKS50cmltKClcclxuICByZXR1cm4gaW5wdXQgPyBpbnB1dC5zcGxpdCgvWyBcXHRcXG5cXHJcXGZdKy9nKSA6IFtdXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTZXJpYWxpemUgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhcyBzcGFjZSBzZXBhcmF0ZWQtdG9rZW5zLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5PHN0cmluZ3xudW1iZXI+fSB2YWx1ZXNcclxuICogICBMaXN0IG9mIHRva2Vucy5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBTcGFjZS1zZXBhcmF0ZWQgdG9rZW5zLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSh2YWx1ZXMpIHtcclxuICByZXR1cm4gdmFsdWVzLmpvaW4oJyAnKS50cmltKClcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/space-separated-tokens/index.js\n"));

/***/ }),

/***/ "./node_modules/style-to-object/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/style-to-object/index.mjs ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./node_modules/style-to-object/index.js\");\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_index_js__WEBPACK_IMPORTED_MODULE_0__);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tb2JqZWN0L2luZGV4Lm1qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUF1QztBQUN2QztBQUNBLCtEQUFlLHNDQUFhLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N0eWxlLXRvLW9iamVjdC9pbmRleC5tanM/NWM4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3R5bGVUb09iamVjdCBmcm9tICcuL2luZGV4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFN0eWxlVG9PYmplY3Q7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-to-object/index.mjs\n"));

/***/ }),

/***/ "./node_modules/trim-lines/index.js":
/*!******************************************!*\
  !*** ./node_modules/trim-lines/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trimLines\": function() { return /* binding */ trimLines; }\n/* harmony export */ });\nconst tab = 9 /* `\\t` */\r\nconst space = 32 /* ` ` */\r\n\r\n/**\r\n * Remove initial and final spaces and tabs at the line breaks in `value`.\r\n * Does not trim initial and final spaces and tabs of the value itself.\r\n *\r\n * @param {string} value\r\n *   Value to trim.\r\n * @returns {string}\r\n *   Trimmed value.\r\n */\r\nfunction trimLines(value) {\r\n  const source = String(value)\r\n  const search = /\\r?\\n|\\r/g\r\n  let match = search.exec(source)\r\n  let last = 0\r\n  /** @type {Array<string>} */\r\n  const lines = []\r\n\r\n  while (match) {\r\n    lines.push(\r\n      trimLine(source.slice(last, match.index), last > 0, true),\r\n      match[0]\r\n    )\r\n\r\n    last = match.index + match[0].length\r\n    match = search.exec(source)\r\n  }\r\n\r\n  lines.push(trimLine(source.slice(last), last > 0, false))\r\n\r\n  return lines.join('')\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n *   Line to trim.\r\n * @param {boolean} start\r\n *   Whether to trim the start of the line.\r\n * @param {boolean} end\r\n *   Whether to trim the end of the line.\r\n * @returns {string}\r\n *   Trimmed line.\r\n */\r\nfunction trimLine(value, start, end) {\r\n  let startIndex = 0\r\n  let endIndex = value.length\r\n\r\n  if (start) {\r\n    let code = value.codePointAt(startIndex)\r\n\r\n    while (code === tab || code === space) {\r\n      startIndex++\r\n      code = value.codePointAt(startIndex)\r\n    }\r\n  }\r\n\r\n  if (end) {\r\n    let code = value.codePointAt(endIndex - 1)\r\n\r\n    while (code === tab || code === space) {\r\n      endIndex--\r\n      code = value.codePointAt(endIndex - 1)\r\n    }\r\n  }\r\n\r\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHJpbS1saW5lcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RyaW0tbGluZXMvaW5kZXguanM/NGEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0YWIgPSA5IC8qIGBcXHRgICovXHJcbmNvbnN0IHNwYWNlID0gMzIgLyogYCBgICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIGluaXRpYWwgYW5kIGZpbmFsIHNwYWNlcyBhbmQgdGFicyBhdCB0aGUgbGluZSBicmVha3MgaW4gYHZhbHVlYC5cclxuICogRG9lcyBub3QgdHJpbSBpbml0aWFsIGFuZCBmaW5hbCBzcGFjZXMgYW5kIHRhYnMgb2YgdGhlIHZhbHVlIGl0c2VsZi5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAqICAgVmFsdWUgdG8gdHJpbS5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBUcmltbWVkIHZhbHVlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRyaW1MaW5lcyh2YWx1ZSkge1xyXG4gIGNvbnN0IHNvdXJjZSA9IFN0cmluZyh2YWx1ZSlcclxuICBjb25zdCBzZWFyY2ggPSAvXFxyP1xcbnxcXHIvZ1xyXG4gIGxldCBtYXRjaCA9IHNlYXJjaC5leGVjKHNvdXJjZSlcclxuICBsZXQgbGFzdCA9IDBcclxuICAvKiogQHR5cGUge0FycmF5PHN0cmluZz59ICovXHJcbiAgY29uc3QgbGluZXMgPSBbXVxyXG5cclxuICB3aGlsZSAobWF0Y2gpIHtcclxuICAgIGxpbmVzLnB1c2goXHJcbiAgICAgIHRyaW1MaW5lKHNvdXJjZS5zbGljZShsYXN0LCBtYXRjaC5pbmRleCksIGxhc3QgPiAwLCB0cnVlKSxcclxuICAgICAgbWF0Y2hbMF1cclxuICAgIClcclxuXHJcbiAgICBsYXN0ID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGhcclxuICAgIG1hdGNoID0gc2VhcmNoLmV4ZWMoc291cmNlKVxyXG4gIH1cclxuXHJcbiAgbGluZXMucHVzaCh0cmltTGluZShzb3VyY2Uuc2xpY2UobGFzdCksIGxhc3QgPiAwLCBmYWxzZSkpXHJcblxyXG4gIHJldHVybiBsaW5lcy5qb2luKCcnKVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAqICAgTGluZSB0byB0cmltLlxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHN0YXJ0XHJcbiAqICAgV2hldGhlciB0byB0cmltIHRoZSBzdGFydCBvZiB0aGUgbGluZS5cclxuICogQHBhcmFtIHtib29sZWFufSBlbmRcclxuICogICBXaGV0aGVyIHRvIHRyaW0gdGhlIGVuZCBvZiB0aGUgbGluZS5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBUcmltbWVkIGxpbmUuXHJcbiAqL1xyXG5mdW5jdGlvbiB0cmltTGluZSh2YWx1ZSwgc3RhcnQsIGVuZCkge1xyXG4gIGxldCBzdGFydEluZGV4ID0gMFxyXG4gIGxldCBlbmRJbmRleCA9IHZhbHVlLmxlbmd0aFxyXG5cclxuICBpZiAoc3RhcnQpIHtcclxuICAgIGxldCBjb2RlID0gdmFsdWUuY29kZVBvaW50QXQoc3RhcnRJbmRleClcclxuXHJcbiAgICB3aGlsZSAoY29kZSA9PT0gdGFiIHx8IGNvZGUgPT09IHNwYWNlKSB7XHJcbiAgICAgIHN0YXJ0SW5kZXgrK1xyXG4gICAgICBjb2RlID0gdmFsdWUuY29kZVBvaW50QXQoc3RhcnRJbmRleClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChlbmQpIHtcclxuICAgIGxldCBjb2RlID0gdmFsdWUuY29kZVBvaW50QXQoZW5kSW5kZXggLSAxKVxyXG5cclxuICAgIHdoaWxlIChjb2RlID09PSB0YWIgfHwgY29kZSA9PT0gc3BhY2UpIHtcclxuICAgICAgZW5kSW5kZXgtLVxyXG4gICAgICBjb2RlID0gdmFsdWUuY29kZVBvaW50QXQoZW5kSW5kZXggLSAxKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGVuZEluZGV4ID4gc3RhcnRJbmRleCA/IHZhbHVlLnNsaWNlKHN0YXJ0SW5kZXgsIGVuZEluZGV4KSA6ICcnXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/trim-lines/index.js\n"));

/***/ }),

/***/ "./node_modules/trough/index.js":
/*!**************************************!*\
  !*** ./node_modules/trough/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trough\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.trough; },\n/* harmony export */   \"wrap\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.wrap; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/trough/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Callback} Callback\r\n * @typedef {import('./lib/index.js').Middleware} Middleware\r\n * @typedef {import('./lib/index.js').Pipeline} Pipeline\r\n * @typedef {import('./lib/index.js').Run} Run\r\n * @typedef {import('./lib/index.js').Use} Use\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHJvdWdoL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSxtQ0FBbUM7QUFDaEQsYUFBYSw4QkFBOEI7QUFDM0MsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUMyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdHJvdWdoL2luZGV4LmpzPzM2NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuQ2FsbGJhY2t9IENhbGxiYWNrXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuTWlkZGxld2FyZX0gTWlkZGxld2FyZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLlBpcGVsaW5lfSBQaXBlbGluZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2xpYi9pbmRleC5qcycpLlJ1bn0gUnVuXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuVXNlfSBVc2VcclxuICovXHJcblxyXG5leHBvcnQge3Ryb3VnaCwgd3JhcH0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/trough/index.js\n"));

/***/ }),

/***/ "./node_modules/trough/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/trough/lib/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trough\": function() { return /* binding */ trough; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n// To do: remove `void`s\r\n// To do: remove `null` from output of our APIs, allow it as user APIs.\r\n\r\n/**\r\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\r\n *   Callback.\r\n *\r\n * @typedef {(...input: Array<any>) => any} Middleware\r\n *   Ware.\r\n *\r\n * @typedef Pipeline\r\n *   Pipeline.\r\n * @property {Run} run\r\n *   Run the pipeline.\r\n * @property {Use} use\r\n *   Add middleware.\r\n *\r\n * @typedef {(...input: Array<any>) => void} Run\r\n *   Call all middleware.\r\n *\r\n *   Calls `done` on completion with either an error or the output of the\r\n *   last middleware.\r\n *\r\n *   > 👉 **Note**: as the length of input defines whether async functions get a\r\n *   > `next` function,\r\n *   > it’s recommended to keep `input` at one value normally.\r\n\r\n *\r\n * @typedef {(fn: Middleware) => Pipeline} Use\r\n *   Add middleware.\r\n */\r\n\r\n/**\r\n * Create new middleware.\r\n *\r\n * @returns {Pipeline}\r\n *   Pipeline.\r\n */\r\nfunction trough() {\r\n  /** @type {Array<Middleware>} */\r\n  const fns = []\r\n  /** @type {Pipeline} */\r\n  const pipeline = {run, use}\r\n\r\n  return pipeline\r\n\r\n  /** @type {Run} */\r\n  function run(...values) {\r\n    let middlewareIndex = -1\r\n    /** @type {Callback} */\r\n    const callback = values.pop()\r\n\r\n    if (typeof callback !== 'function') {\r\n      throw new TypeError('Expected function as last argument, not ' + callback)\r\n    }\r\n\r\n    next(null, ...values)\r\n\r\n    /**\r\n     * Run the next `fn`, or we’re done.\r\n     *\r\n     * @param {Error | null | undefined} error\r\n     * @param {Array<any>} output\r\n     */\r\n    function next(error, ...output) {\r\n      const fn = fns[++middlewareIndex]\r\n      let index = -1\r\n\r\n      if (error) {\r\n        callback(error)\r\n        return\r\n      }\r\n\r\n      // Copy non-nullish input into values.\r\n      while (++index < values.length) {\r\n        if (output[index] === null || output[index] === undefined) {\r\n          output[index] = values[index]\r\n        }\r\n      }\r\n\r\n      // Save the newly created `output` for the next call.\r\n      values = output\r\n\r\n      // Next or done.\r\n      if (fn) {\r\n        wrap(fn, next)(...output)\r\n      } else {\r\n        callback(null, ...output)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Use} */\r\n  function use(middelware) {\r\n    if (typeof middelware !== 'function') {\r\n      throw new TypeError(\r\n        'Expected `middelware` to be a function, not ' + middelware\r\n      )\r\n    }\r\n\r\n    fns.push(middelware)\r\n    return pipeline\r\n  }\r\n}\r\n\r\n/**\r\n * Wrap `middleware` into a uniform interface.\r\n *\r\n * You can pass all input to the resulting function.\r\n * `callback` is then called with the output of `middleware`.\r\n *\r\n * If `middleware` accepts more arguments than the later given in input,\r\n * an extra `done` function is passed to it after that input,\r\n * which must be called by `middleware`.\r\n *\r\n * The first value in `input` is the main input value.\r\n * All other input values are the rest input values.\r\n * The values given to `callback` are the input values,\r\n * merged with every non-nullish output value.\r\n *\r\n * * if `middleware` throws an error,\r\n *   returns a promise that is rejected,\r\n *   or calls the given `done` function with an error,\r\n *   `callback` is called with that error\r\n * * if `middleware` returns a value or returns a promise that is resolved,\r\n *   that value is the main output value\r\n * * if `middleware` calls `done`,\r\n *   all non-nullish values except for the first one (the error) overwrite the\r\n *   output values\r\n *\r\n * @param {Middleware} middleware\r\n *   Function to wrap.\r\n * @param {Callback} callback\r\n *   Callback called with the output of `middleware`.\r\n * @returns {Run}\r\n *   Wrapped middleware.\r\n */\r\nfunction wrap(middleware, callback) {\r\n  /** @type {boolean} */\r\n  let called\r\n\r\n  return wrapped\r\n\r\n  /**\r\n   * Call `middleware`.\r\n   * @this {any}\r\n   * @param {Array<any>} parameters\r\n   * @returns {void}\r\n   */\r\n  function wrapped(...parameters) {\r\n    const fnExpectsCallback = middleware.length > parameters.length\r\n    /** @type {any} */\r\n    let result\r\n\r\n    if (fnExpectsCallback) {\r\n      parameters.push(done)\r\n    }\r\n\r\n    try {\r\n      result = middleware.apply(this, parameters)\r\n    } catch (error) {\r\n      const exception = /** @type {Error} */ (error)\r\n\r\n      // Well, this is quite the pickle.\r\n      // `middleware` received a callback and called it synchronously, but that\r\n      // threw an error.\r\n      // The only thing left to do is to throw the thing instead.\r\n      if (fnExpectsCallback && called) {\r\n        throw exception\r\n      }\r\n\r\n      return done(exception)\r\n    }\r\n\r\n    if (!fnExpectsCallback) {\r\n      if (result && result.then && typeof result.then === 'function') {\r\n        result.then(then, done)\r\n      } else if (result instanceof Error) {\r\n        done(result)\r\n      } else {\r\n        then(result)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call `callback`, only once.\r\n   *\r\n   * @type {Callback}\r\n   */\r\n  function done(error, ...output) {\r\n    if (!called) {\r\n      called = true\r\n      callback(error, ...output)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call `done` with one value.\r\n   *\r\n   * @param {any} [value]\r\n   */\r\n  function then(value) {\r\n    done(null, value)\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/trough/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unified/index.js":
/*!***************************************!*\
  !*** ./node_modules/unified/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unified\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.unified; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unified/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pZmllZC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdW5pZmllZC9pbmRleC5qcz84MTNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7dW5pZmllZH0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unified/index.js\n"));

/***/ }),

/***/ "./node_modules/unified/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/unified/lib/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unified\": function() { return /* binding */ unified; }\n/* harmony export */ });\n/* harmony import */ var bail__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bail */ \"./node_modules/bail/index.js\");\n/* harmony import */ var is_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\");\n/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! extend */ \"./node_modules/extend/index.js\");\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n/* harmony import */ var trough__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! trough */ \"./node_modules/trough/index.js\");\n/* harmony import */ var vfile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vfile */ \"./node_modules/vfile/index.js\");\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\r\n * @typedef {import('vfile').VFileValue} VFileValue\r\n * @typedef {import('..').Processor} Processor\r\n * @typedef {import('..').Plugin} Plugin\r\n * @typedef {import('..').Preset} Preset\r\n * @typedef {import('..').Pluggable} Pluggable\r\n * @typedef {import('..').PluggableList} PluggableList\r\n * @typedef {import('..').Transformer} Transformer\r\n * @typedef {import('..').Parser} Parser\r\n * @typedef {import('..').Compiler} Compiler\r\n * @typedef {import('..').RunCallback} RunCallback\r\n * @typedef {import('..').ProcessCallback} ProcessCallback\r\n *\r\n * @typedef Context\r\n * @property {Node} tree\r\n * @property {VFile} file\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Expose a frozen processor.\r\nconst unified = base().freeze()\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n// Function to create the first processor.\r\n/**\r\n * @returns {Processor}\r\n */\r\nfunction base() {\r\n  const transformers = (0,trough__WEBPACK_IMPORTED_MODULE_3__.trough)()\r\n  /** @type {Processor['attachers']} */\r\n  const attachers = []\r\n  /** @type {Record<string, unknown>} */\r\n  let namespace = {}\r\n  /** @type {boolean|undefined} */\r\n  let frozen\r\n  let freezeIndex = -1\r\n\r\n  // Data management.\r\n  // @ts-expect-error: overloads are handled.\r\n  processor.data = data\r\n  processor.Parser = undefined\r\n  processor.Compiler = undefined\r\n\r\n  // Lock.\r\n  processor.freeze = freeze\r\n\r\n  // Plugins.\r\n  processor.attachers = attachers\r\n  // @ts-expect-error: overloads are handled.\r\n  processor.use = use\r\n\r\n  // API.\r\n  processor.parse = parse\r\n  processor.stringify = stringify\r\n  // @ts-expect-error: overloads are handled.\r\n  processor.run = run\r\n  processor.runSync = runSync\r\n  // @ts-expect-error: overloads are handled.\r\n  processor.process = process\r\n  processor.processSync = processSync\r\n\r\n  // Expose.\r\n  return processor\r\n\r\n  // Create a new processor based on the processor in the current scope.\r\n  /** @type {Processor} */\r\n  function processor() {\r\n    const destination = base()\r\n    let index = -1\r\n\r\n    while (++index < attachers.length) {\r\n      destination.use(...attachers[index])\r\n    }\r\n\r\n    destination.data(extend__WEBPACK_IMPORTED_MODULE_1__(true, {}, namespace))\r\n\r\n    return destination\r\n  }\r\n\r\n  /**\r\n   * @param {string|Record<string, unknown>} [key]\r\n   * @param {unknown} [value]\r\n   * @returns {unknown}\r\n   */\r\n  function data(key, value) {\r\n    if (typeof key === 'string') {\r\n      // Set `key`.\r\n      if (arguments.length === 2) {\r\n        assertUnfrozen('data', frozen)\r\n        namespace[key] = value\r\n        return processor\r\n      }\r\n\r\n      // Get `key`.\r\n      return (own.call(namespace, key) && namespace[key]) || null\r\n    }\r\n\r\n    // Set space.\r\n    if (key) {\r\n      assertUnfrozen('data', frozen)\r\n      namespace = key\r\n      return processor\r\n    }\r\n\r\n    // Get space.\r\n    return namespace\r\n  }\r\n\r\n  /** @type {Processor['freeze']} */\r\n  function freeze() {\r\n    if (frozen) {\r\n      return processor\r\n    }\r\n\r\n    while (++freezeIndex < attachers.length) {\r\n      const [attacher, ...options] = attachers[freezeIndex]\r\n\r\n      if (options[0] === false) {\r\n        continue\r\n      }\r\n\r\n      if (options[0] === true) {\r\n        options[0] = undefined\r\n      }\r\n\r\n      /** @type {Transformer|void} */\r\n      const transformer = attacher.call(processor, ...options)\r\n\r\n      if (typeof transformer === 'function') {\r\n        transformers.use(transformer)\r\n      }\r\n    }\r\n\r\n    frozen = true\r\n    freezeIndex = Number.POSITIVE_INFINITY\r\n\r\n    return processor\r\n  }\r\n\r\n  /**\r\n   * @param {Pluggable|null|undefined} [value]\r\n   * @param {...unknown} options\r\n   * @returns {Processor}\r\n   */\r\n  function use(value, ...options) {\r\n    /** @type {Record<string, unknown>|undefined} */\r\n    let settings\r\n\r\n    assertUnfrozen('use', frozen)\r\n\r\n    if (value === null || value === undefined) {\r\n      // Empty.\r\n    } else if (typeof value === 'function') {\r\n      addPlugin(value, ...options)\r\n    } else if (typeof value === 'object') {\r\n      if (Array.isArray(value)) {\r\n        addList(value)\r\n      } else {\r\n        addPreset(value)\r\n      }\r\n    } else {\r\n      throw new TypeError('Expected usable value, not `' + value + '`')\r\n    }\r\n\r\n    if (settings) {\r\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\r\n    }\r\n\r\n    return processor\r\n\r\n    /**\r\n     * @param {import('..').Pluggable<unknown[]>} value\r\n     * @returns {void}\r\n     */\r\n    function add(value) {\r\n      if (typeof value === 'function') {\r\n        addPlugin(value)\r\n      } else if (typeof value === 'object') {\r\n        if (Array.isArray(value)) {\r\n          const [plugin, ...options] = value\r\n          addPlugin(plugin, ...options)\r\n        } else {\r\n          addPreset(value)\r\n        }\r\n      } else {\r\n        throw new TypeError('Expected usable value, not `' + value + '`')\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {Preset} result\r\n     * @returns {void}\r\n     */\r\n    function addPreset(result) {\r\n      addList(result.plugins)\r\n\r\n      if (result.settings) {\r\n        settings = Object.assign(settings || {}, result.settings)\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {PluggableList|null|undefined} [plugins]\r\n     * @returns {void}\r\n     */\r\n    function addList(plugins) {\r\n      let index = -1\r\n\r\n      if (plugins === null || plugins === undefined) {\r\n        // Empty.\r\n      } else if (Array.isArray(plugins)) {\r\n        while (++index < plugins.length) {\r\n          const thing = plugins[index]\r\n          add(thing)\r\n        }\r\n      } else {\r\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {Plugin} plugin\r\n     * @param {...unknown} [value]\r\n     * @returns {void}\r\n     */\r\n    function addPlugin(plugin, value) {\r\n      let index = -1\r\n      /** @type {Processor['attachers'][number]|undefined} */\r\n      let entry\r\n\r\n      while (++index < attachers.length) {\r\n        if (attachers[index][0] === plugin) {\r\n          entry = attachers[index]\r\n          break\r\n        }\r\n      }\r\n\r\n      if (entry) {\r\n        if ((0,is_plain_obj__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(entry[1]) && (0,is_plain_obj__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value)) {\r\n          value = extend__WEBPACK_IMPORTED_MODULE_1__(true, entry[1], value)\r\n        }\r\n\r\n        entry[1] = value\r\n      } else {\r\n        // @ts-expect-error: fine.\r\n        attachers.push([...arguments])\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Processor['parse']} */\r\n  function parse(doc) {\r\n    processor.freeze()\r\n    const file = vfile(doc)\r\n    const Parser = processor.Parser\r\n    assertParser('parse', Parser)\r\n\r\n    if (newable(Parser, 'parse')) {\r\n      // @ts-expect-error: `newable` checks this.\r\n      return new Parser(String(file), file).parse()\r\n    }\r\n\r\n    // @ts-expect-error: `newable` checks this.\r\n    return Parser(String(file), file) // eslint-disable-line new-cap\r\n  }\r\n\r\n  /** @type {Processor['stringify']} */\r\n  function stringify(node, doc) {\r\n    processor.freeze()\r\n    const file = vfile(doc)\r\n    const Compiler = processor.Compiler\r\n    assertCompiler('stringify', Compiler)\r\n    assertNode(node)\r\n\r\n    if (newable(Compiler, 'compile')) {\r\n      // @ts-expect-error: `newable` checks this.\r\n      return new Compiler(node, file).compile()\r\n    }\r\n\r\n    // @ts-expect-error: `newable` checks this.\r\n    return Compiler(node, file) // eslint-disable-line new-cap\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node\r\n   * @param {VFileCompatible|RunCallback} [doc]\r\n   * @param {RunCallback} [callback]\r\n   * @returns {Promise<Node>|void}\r\n   */\r\n  function run(node, doc, callback) {\r\n    assertNode(node)\r\n    processor.freeze()\r\n\r\n    if (!callback && typeof doc === 'function') {\r\n      callback = doc\r\n      doc = undefined\r\n    }\r\n\r\n    if (!callback) {\r\n      return new Promise(executor)\r\n    }\r\n\r\n    executor(null, callback)\r\n\r\n    /**\r\n     * @param {null|((node: Node) => void)} resolve\r\n     * @param {(error: Error) => void} reject\r\n     * @returns {void}\r\n     */\r\n    function executor(resolve, reject) {\r\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\r\n      transformers.run(node, vfile(doc), done)\r\n\r\n      /**\r\n       * @param {Error|null} error\r\n       * @param {Node} tree\r\n       * @param {VFile} file\r\n       * @returns {void}\r\n       */\r\n      function done(error, tree, file) {\r\n        tree = tree || node\r\n        if (error) {\r\n          reject(error)\r\n        } else if (resolve) {\r\n          resolve(tree)\r\n        } else {\r\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\r\n          callback(null, tree, file)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Processor['runSync']} */\r\n  function runSync(node, file) {\r\n    /** @type {Node|undefined} */\r\n    let result\r\n    /** @type {boolean|undefined} */\r\n    let complete\r\n\r\n    processor.run(node, file, done)\r\n\r\n    assertDone('runSync', 'run', complete)\r\n\r\n    // @ts-expect-error: we either bailed on an error or have a tree.\r\n    return result\r\n\r\n    /**\r\n     * @param {Error|null} [error]\r\n     * @param {Node} [tree]\r\n     * @returns {void}\r\n     */\r\n    function done(error, tree) {\r\n      ;(0,bail__WEBPACK_IMPORTED_MODULE_4__.bail)(error)\r\n      result = tree\r\n      complete = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {VFileCompatible} doc\r\n   * @param {ProcessCallback} [callback]\r\n   * @returns {Promise<VFile>|undefined}\r\n   */\r\n  function process(doc, callback) {\r\n    processor.freeze()\r\n    assertParser('process', processor.Parser)\r\n    assertCompiler('process', processor.Compiler)\r\n\r\n    if (!callback) {\r\n      return new Promise(executor)\r\n    }\r\n\r\n    executor(null, callback)\r\n\r\n    /**\r\n     * @param {null|((file: VFile) => void)} resolve\r\n     * @param {(error?: Error|null|undefined) => void} reject\r\n     * @returns {void}\r\n     */\r\n    function executor(resolve, reject) {\r\n      const file = vfile(doc)\r\n\r\n      processor.run(processor.parse(file), file, (error, tree, file) => {\r\n        if (error || !tree || !file) {\r\n          done(error)\r\n        } else {\r\n          /** @type {unknown} */\r\n          const result = processor.stringify(tree, file)\r\n\r\n          if (result === undefined || result === null) {\r\n            // Empty.\r\n          } else if (looksLikeAVFileValue(result)) {\r\n            file.value = result\r\n          } else {\r\n            file.result = result\r\n          }\r\n\r\n          done(error, file)\r\n        }\r\n      })\r\n\r\n      /**\r\n       * @param {Error|null|undefined} [error]\r\n       * @param {VFile|undefined} [file]\r\n       * @returns {void}\r\n       */\r\n      function done(error, file) {\r\n        if (error || !file) {\r\n          reject(error)\r\n        } else if (resolve) {\r\n          resolve(file)\r\n        } else {\r\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\r\n          callback(null, file)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Processor['processSync']} */\r\n  function processSync(doc) {\r\n    /** @type {boolean|undefined} */\r\n    let complete\r\n\r\n    processor.freeze()\r\n    assertParser('processSync', processor.Parser)\r\n    assertCompiler('processSync', processor.Compiler)\r\n\r\n    const file = vfile(doc)\r\n\r\n    processor.process(file, done)\r\n\r\n    assertDone('processSync', 'process', complete)\r\n\r\n    return file\r\n\r\n    /**\r\n     * @param {Error|null|undefined} [error]\r\n     * @returns {void}\r\n     */\r\n    function done(error) {\r\n      complete = true\r\n      ;(0,bail__WEBPACK_IMPORTED_MODULE_4__.bail)(error)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Check if `value` is a constructor.\r\n *\r\n * @param {unknown} value\r\n * @param {string} name\r\n * @returns {boolean}\r\n */\r\nfunction newable(value, name) {\r\n  return (\r\n    typeof value === 'function' &&\r\n    // Prototypes do exist.\r\n    // type-coverage:ignore-next-line\r\n    value.prototype &&\r\n    // A function with keys in its prototype is probably a constructor.\r\n    // Classes’ prototype methods are not enumerable, so we check if some value\r\n    // exists in the prototype.\r\n    // type-coverage:ignore-next-line\r\n    (keys(value.prototype) || name in value.prototype)\r\n  )\r\n}\r\n\r\n/**\r\n * Check if `value` is an object with keys.\r\n *\r\n * @param {Record<string, unknown>} value\r\n * @returns {boolean}\r\n */\r\nfunction keys(value) {\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Assert a parser is available.\r\n *\r\n * @param {string} name\r\n * @param {unknown} value\r\n * @returns {asserts value is Parser}\r\n */\r\nfunction assertParser(name, value) {\r\n  if (typeof value !== 'function') {\r\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\r\n  }\r\n}\r\n\r\n/**\r\n * Assert a compiler is available.\r\n *\r\n * @param {string} name\r\n * @param {unknown} value\r\n * @returns {asserts value is Compiler}\r\n */\r\nfunction assertCompiler(name, value) {\r\n  if (typeof value !== 'function') {\r\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\r\n  }\r\n}\r\n\r\n/**\r\n * Assert the processor is not frozen.\r\n *\r\n * @param {string} name\r\n * @param {unknown} frozen\r\n * @returns {asserts frozen is false}\r\n */\r\nfunction assertUnfrozen(name, frozen) {\r\n  if (frozen) {\r\n    throw new Error(\r\n      'Cannot call `' +\r\n        name +\r\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Assert `node` is a unist node.\r\n *\r\n * @param {unknown} node\r\n * @returns {asserts node is Node}\r\n */\r\nfunction assertNode(node) {\r\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\r\n  // type-coverage:ignore-next-line\r\n  if (!(0,is_plain_obj__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node) || typeof node.type !== 'string') {\r\n    throw new TypeError('Expected node, got `' + node + '`')\r\n    // Fine.\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that `complete` is `true`.\r\n *\r\n * @param {string} name\r\n * @param {string} asyncName\r\n * @param {unknown} complete\r\n * @returns {asserts complete is true}\r\n */\r\nfunction assertDone(name, asyncName, complete) {\r\n  if (!complete) {\r\n    throw new Error(\r\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * @param {VFileCompatible} [value]\r\n * @returns {VFile}\r\n */\r\nfunction vfile(value) {\r\n  return looksLikeAVFile(value) ? value : new vfile__WEBPACK_IMPORTED_MODULE_5__.VFile(value)\r\n}\r\n\r\n/**\r\n * @param {VFileCompatible} [value]\r\n * @returns {value is VFile}\r\n */\r\nfunction looksLikeAVFile(value) {\r\n  return Boolean(\r\n    value &&\r\n      typeof value === 'object' &&\r\n      'message' in value &&\r\n      'messages' in value\r\n  )\r\n}\r\n\r\n/**\r\n * @param {unknown} [value]\r\n * @returns {value is VFileValue}\r\n */\r\nfunction looksLikeAVFileValue(value) {\r\n  return typeof value === 'string' || is_buffer__WEBPACK_IMPORTED_MODULE_0__(value)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unified/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-generated/index.js":
/*!****************************************************!*\
  !*** ./node_modules/unist-util-generated/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generated\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.generated; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-generated/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1nZW5lcmF0ZWQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtZ2VuZXJhdGVkL2luZGV4LmpzPzlmNDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtnZW5lcmF0ZWR9IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/unist-util-generated/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-generated/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/unist-util-generated/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generated\": function() { return /* binding */ generated; }\n/* harmony export */ });\n/**\r\n * @typedef PointLike\r\n * @property {number | null | undefined} [line]\r\n * @property {number | null | undefined} [column]\r\n * @property {number | null | undefined} [offset]\r\n *\r\n * @typedef PositionLike\r\n * @property {PointLike | null | undefined} [start]\r\n * @property {PointLike | null | undefined} [end]\r\n *\r\n * @typedef NodeLike\r\n * @property {PositionLike | null | undefined} [position]\r\n */\r\n\r\n/**\r\n * Check if `node` is generated.\r\n *\r\n * @param {NodeLike | null | undefined} [node]\r\n *   Node to check.\r\n * @returns {boolean}\r\n *   Whether `node` is generated (does not have positional info).\r\n */\r\nfunction generated(node) {\r\n  return (\r\n    !node ||\r\n    !node.position ||\r\n    !node.position.start ||\r\n    !node.position.start.line ||\r\n    !node.position.start.column ||\r\n    !node.position.end ||\r\n    !node.position.end.line ||\r\n    !node.position.end.column\r\n  )\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1nZW5lcmF0ZWQvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsY0FBYywyQkFBMkI7QUFDekMsY0FBYywyQkFBMkI7QUFDekMsY0FBYywyQkFBMkI7QUFDekM7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0E7QUFDQSxjQUFjLGlDQUFpQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1nZW5lcmF0ZWQvbGliL2luZGV4LmpzP2FkMzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIFBvaW50TGlrZVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtsaW5lXVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtjb2x1bW5dXHJcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29mZnNldF1cclxuICpcclxuICogQHR5cGVkZWYgUG9zaXRpb25MaWtlXHJcbiAqIEBwcm9wZXJ0eSB7UG9pbnRMaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3N0YXJ0XVxyXG4gKiBAcHJvcGVydHkge1BvaW50TGlrZSB8IG51bGwgfCB1bmRlZmluZWR9IFtlbmRdXHJcbiAqXHJcbiAqIEB0eXBlZGVmIE5vZGVMaWtlXHJcbiAqIEBwcm9wZXJ0eSB7UG9zaXRpb25MaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3Bvc2l0aW9uXVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBDaGVjayBpZiBgbm9kZWAgaXMgZ2VuZXJhdGVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge05vZGVMaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW25vZGVdXHJcbiAqICAgTm9kZSB0byBjaGVjay5cclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqICAgV2hldGhlciBgbm9kZWAgaXMgZ2VuZXJhdGVkIChkb2VzIG5vdCBoYXZlIHBvc2l0aW9uYWwgaW5mbykuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVkKG5vZGUpIHtcclxuICByZXR1cm4gKFxyXG4gICAgIW5vZGUgfHxcclxuICAgICFub2RlLnBvc2l0aW9uIHx8XHJcbiAgICAhbm9kZS5wb3NpdGlvbi5zdGFydCB8fFxyXG4gICAgIW5vZGUucG9zaXRpb24uc3RhcnQubGluZSB8fFxyXG4gICAgIW5vZGUucG9zaXRpb24uc3RhcnQuY29sdW1uIHx8XHJcbiAgICAhbm9kZS5wb3NpdGlvbi5lbmQgfHxcclxuICAgICFub2RlLnBvc2l0aW9uLmVuZC5saW5lIHx8XHJcbiAgICAhbm9kZS5wb3NpdGlvbi5lbmQuY29sdW1uXHJcbiAgKVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unist-util-generated/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-is/index.js":
/*!*********************************************!*\
  !*** ./node_modules/unist-util-is/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convert\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.convert; },\n/* harmony export */   \"is\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.is; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-is/lib/index.js\");\n/**\r\n * @typedef {import('./lib/index.js').Test} Test\r\n * @typedef {import('./lib/index.js').TestFunctionAnything} TestFunctionAnything\r\n * @typedef {import('./lib/index.js').AssertAnything} AssertAnything\r\n */\r\n\r\n/**\r\n * @template {import('unist').Node} Kind\r\n * @typedef {import('./lib/index.js').PredicateTest<Kind>} PredicateTest\r\n */\r\n\r\n/**\r\n * @template {import('unist').Node} Kind\r\n * @typedef {import('./lib/index.js').TestFunctionPredicate<Kind>} TestFunctionPredicate\r\n */\r\n\r\n/**\r\n * @template {import('unist').Node} Kind\r\n * @typedef {import('./lib/index.js').AssertPredicate<Kind>} AssertPredicate\r\n */\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1pcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0NBQStDO0FBQzVELGFBQWEseUNBQXlDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0JBQXNCO0FBQ3BDLGFBQWEsOENBQThDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0JBQXNCO0FBQ3BDLGFBQWEsc0RBQXNEO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0JBQXNCO0FBQ3BDLGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtaXMvaW5kZXguanM/MDU1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5UZXN0fSBUZXN0XHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuVGVzdEZ1bmN0aW9uQW55dGhpbmd9IFRlc3RGdW5jdGlvbkFueXRoaW5nXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuQXNzZXJ0QW55dGhpbmd9IEFzc2VydEFueXRoaW5nXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0ZW1wbGF0ZSB7aW1wb3J0KCd1bmlzdCcpLk5vZGV9IEtpbmRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5QcmVkaWNhdGVUZXN0PEtpbmQ+fSBQcmVkaWNhdGVUZXN0XHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0ZW1wbGF0ZSB7aW1wb3J0KCd1bmlzdCcpLk5vZGV9IEtpbmRcclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9saWIvaW5kZXguanMnKS5UZXN0RnVuY3Rpb25QcmVkaWNhdGU8S2luZD59IFRlc3RGdW5jdGlvblByZWRpY2F0ZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdGVtcGxhdGUge2ltcG9ydCgndW5pc3QnKS5Ob2RlfSBLaW5kXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vbGliL2luZGV4LmpzJykuQXNzZXJ0UHJlZGljYXRlPEtpbmQ+fSBBc3NlcnRQcmVkaWNhdGVcclxuICovXHJcblxyXG5leHBvcnQge2lzLCBjb252ZXJ0fSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/unist-util-is/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-is/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/unist-util-is/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convert\": function() { return /* binding */ convert; },\n/* harmony export */   \"is\": function() { return /* binding */ is; }\n/* harmony export */ });\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, unknown>} Props\r\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\r\n *   Check for an arbitrary node, unaware of TypeScript inferral.\r\n *\r\n * @callback TestFunctionAnything\r\n *   Check if a node passes a test, unaware of TypeScript inferral.\r\n * @param {unknown} this\r\n *   The given context.\r\n * @param {Node} node\r\n *   A node.\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {boolean | void}\r\n *   Whether this node passes the test.\r\n */\r\n\r\n/**\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\r\n *   Check for a node that can be inferred by TypeScript.\r\n */\r\n\r\n/**\r\n * Check if a node passes a certain test.\r\n *\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @callback TestFunctionPredicate\r\n *   Complex test function for a node that can be inferred by TypeScript.\r\n * @param {Node} node\r\n *   A node.\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {node is Kind}\r\n *   Whether this node passes the test.\r\n */\r\n\r\n/**\r\n * @callback AssertAnything\r\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\r\n * @param {unknown} [node]\r\n *   Anything (typically a node).\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {boolean}\r\n *   Whether this is a node and passes a test.\r\n */\r\n\r\n/**\r\n * Check if a node is a node and passes a certain node test.\r\n *\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @callback AssertPredicate\r\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\r\n * @param {unknown} [node]\r\n *   Anything (typically a node).\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {node is Kind}\r\n *   Whether this is a node and passes a test.\r\n */\r\n\r\n/**\r\n * Check if `node` is a `Node` and whether it passes the given test.\r\n *\r\n * @param node\r\n *   Thing to check, typically `Node`.\r\n * @param test\r\n *   A check for a specific node.\r\n * @param index\r\n *   The node’s position in its parent.\r\n * @param parent\r\n *   The node’s parent.\r\n * @returns\r\n *   Whether `node` is a node and passes a test.\r\n */\r\nconst is =\r\n  /**\r\n   * @type {(\r\n   *   (() => false) &\r\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\r\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\r\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\r\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {unknown} [node]\r\n     * @param {Test} [test]\r\n     * @param {number | null | undefined} [index]\r\n     * @param {Parent | null | undefined} [parent]\r\n     * @param {unknown} [context]\r\n     * @returns {boolean}\r\n     */\r\n    // eslint-disable-next-line max-params\r\n    function is(node, test, index, parent, context) {\r\n      const check = convert(test)\r\n\r\n      if (\r\n        index !== undefined &&\r\n        index !== null &&\r\n        (typeof index !== 'number' ||\r\n          index < 0 ||\r\n          index === Number.POSITIVE_INFINITY)\r\n      ) {\r\n        throw new Error('Expected positive finite index')\r\n      }\r\n\r\n      if (\r\n        parent !== undefined &&\r\n        parent !== null &&\r\n        (!is(parent) || !parent.children)\r\n      ) {\r\n        throw new Error('Expected parent node')\r\n      }\r\n\r\n      if (\r\n        (parent === undefined || parent === null) !==\r\n        (index === undefined || index === null)\r\n      ) {\r\n        throw new Error('Expected both parent and index')\r\n      }\r\n\r\n      // @ts-expect-error Looks like a node.\r\n      return node && node.type && typeof node.type === 'string'\r\n        ? Boolean(check.call(context, node, index, parent))\r\n        : false\r\n    }\r\n  )\r\n\r\n/**\r\n * Generate an assertion from a test.\r\n *\r\n * Useful if you’re going to test many nodes, for example when creating a\r\n * utility where something else passes a compatible test.\r\n *\r\n * The created function is a bit faster because it expects valid input only:\r\n * a `node`, `index`, and `parent`.\r\n *\r\n * @param test\r\n *   *   when nullish, checks if `node` is a `Node`.\r\n *   *   when `string`, works like passing `(node) => node.type === test`.\r\n *   *   when `function` checks if function passed the node is true.\r\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\r\n *   *   when `array`, checks if any one of the subtests pass.\r\n * @returns\r\n *   An assertion.\r\n */\r\nconst convert =\r\n  /**\r\n   * @type {(\r\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\r\n   *   ((test?: Test) => AssertAnything)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Test} [test]\r\n     * @returns {AssertAnything}\r\n     */\r\n    function (test) {\r\n      if (test === undefined || test === null) {\r\n        return ok\r\n      }\r\n\r\n      if (typeof test === 'string') {\r\n        return typeFactory(test)\r\n      }\r\n\r\n      if (typeof test === 'object') {\r\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\r\n      }\r\n\r\n      if (typeof test === 'function') {\r\n        return castFactory(test)\r\n      }\r\n\r\n      throw new Error('Expected function, string, or object as test')\r\n    }\r\n  )\r\n\r\n/**\r\n * @param {Array<string | Props | TestFunctionAnything>} tests\r\n * @returns {AssertAnything}\r\n */\r\nfunction anyFactory(tests) {\r\n  /** @type {Array<AssertAnything>} */\r\n  const checks = []\r\n  let index = -1\r\n\r\n  while (++index < tests.length) {\r\n    checks[index] = convert(tests[index])\r\n  }\r\n\r\n  return castFactory(any)\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @param {Array<unknown>} parameters\r\n   * @returns {boolean}\r\n   */\r\n  function any(...parameters) {\r\n    let index = -1\r\n\r\n    while (++index < checks.length) {\r\n      if (checks[index].call(this, ...parameters)) return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Turn an object into a test for a node with a certain fields.\r\n *\r\n * @param {Props} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction propsFactory(check) {\r\n  return castFactory(all)\r\n\r\n  /**\r\n   * @param {Node} node\r\n   * @returns {boolean}\r\n   */\r\n  function all(node) {\r\n    /** @type {string} */\r\n    let key\r\n\r\n    for (key in check) {\r\n      // @ts-expect-error: hush, it sure works as an index.\r\n      if (node[key] !== check[key]) return false\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a string into a test for a node with a certain type.\r\n *\r\n * @param {string} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction typeFactory(check) {\r\n  return castFactory(type)\r\n\r\n  /**\r\n   * @param {Node} node\r\n   */\r\n  function type(node) {\r\n    return node && node.type === check\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a custom test into a test for a node that passes that test.\r\n *\r\n * @param {TestFunctionAnything} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction castFactory(check) {\r\n  return assertion\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @param {unknown} node\r\n   * @param {Array<unknown>} parameters\r\n   * @returns {boolean}\r\n   */\r\n  function assertion(node, ...parameters) {\r\n    return Boolean(\r\n      node &&\r\n        typeof node === 'object' &&\r\n        'type' in node &&\r\n        // @ts-expect-error: fine.\r\n        Boolean(check.call(this, node, ...parameters))\r\n    )\r\n  }\r\n}\r\n\r\nfunction ok() {\r\n  return true\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unist-util-is/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-position/index.js":
/*!***************************************************!*\
  !*** ./node_modules/unist-util-position/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pointEnd\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.pointEnd; },\n/* harmony export */   \"pointStart\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.pointStart; },\n/* harmony export */   \"position\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.position; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-position/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1wb3NpdGlvbi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXBvc2l0aW9uL2luZGV4LmpzP2Y2MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtwb2ludEVuZCwgcG9pbnRTdGFydCwgcG9zaXRpb259IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/unist-util-position/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-position/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/unist-util-position/lib/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pointEnd\": function() { return /* binding */ pointEnd; },\n/* harmony export */   \"pointStart\": function() { return /* binding */ pointStart; },\n/* harmony export */   \"position\": function() { return /* binding */ position; }\n/* harmony export */ });\n/**\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Point} Point\r\n */\r\n\r\n/**\r\n * @typedef NodeLike\r\n * @property {string} type\r\n * @property {PositionLike | null | undefined} [position]\r\n *\r\n * @typedef PositionLike\r\n * @property {PointLike | null | undefined} [start]\r\n * @property {PointLike | null | undefined} [end]\r\n *\r\n * @typedef PointLike\r\n * @property {number | null | undefined} [line]\r\n * @property {number | null | undefined} [column]\r\n * @property {number | null | undefined} [offset]\r\n */\r\n\r\n/**\r\n * Get the starting point of `node`.\r\n *\r\n * @param node\r\n *   Node.\r\n * @returns\r\n *   Point.\r\n */\r\nconst pointStart = point('start')\r\n\r\n/**\r\n * Get the ending point of `node`.\r\n *\r\n * @param node\r\n *   Node.\r\n * @returns\r\n *   Point.\r\n */\r\nconst pointEnd = point('end')\r\n\r\n/**\r\n * Get the positional info of `node`.\r\n *\r\n * @param {NodeLike | Node | null | undefined} [node]\r\n *   Node.\r\n * @returns {Position}\r\n *   Position.\r\n */\r\nfunction position(node) {\r\n  return {start: pointStart(node), end: pointEnd(node)}\r\n}\r\n\r\n/**\r\n * Get the positional info of `node`.\r\n *\r\n * @param {'start' | 'end'} type\r\n *   Side.\r\n * @returns\r\n *   Getter.\r\n */\r\nfunction point(type) {\r\n  return point\r\n\r\n  /**\r\n   * Get the point info of `node` at a bound side.\r\n   *\r\n   * @param {NodeLike | Node | null | undefined} [node]\r\n   * @returns {Point}\r\n   */\r\n  function point(node) {\r\n    const point = (node && node.position && node.position[type]) || {}\r\n\r\n    // To do: next major: don’t return points when invalid.\r\n    return {\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      line: point.line || null,\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      column: point.column || null,\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      offset: point.offset > -1 ? point.offset : null\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1wb3NpdGlvbi9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLGlDQUFpQztBQUMvQztBQUNBO0FBQ0EsY0FBYyw4QkFBOEI7QUFDNUMsY0FBYyw4QkFBOEI7QUFDNUM7QUFDQTtBQUNBLGNBQWMsMkJBQTJCO0FBQ3pDLGNBQWMsMkJBQTJCO0FBQ3pDLGNBQWMsMkJBQTJCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvQ0FBb0M7QUFDL0M7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0NBQW9DO0FBQ2pELGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtcG9zaXRpb24vbGliL2luZGV4LmpzPzRhYmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuUG9zaXRpb259IFBvc2l0aW9uXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdCcpLlBvaW50fSBQb2ludFxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiBOb2RlTGlrZVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdHlwZVxyXG4gKiBAcHJvcGVydHkge1Bvc2l0aW9uTGlrZSB8IG51bGwgfCB1bmRlZmluZWR9IFtwb3NpdGlvbl1cclxuICpcclxuICogQHR5cGVkZWYgUG9zaXRpb25MaWtlXHJcbiAqIEBwcm9wZXJ0eSB7UG9pbnRMaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3N0YXJ0XVxyXG4gKiBAcHJvcGVydHkge1BvaW50TGlrZSB8IG51bGwgfCB1bmRlZmluZWR9IFtlbmRdXHJcbiAqXHJcbiAqIEB0eXBlZGVmIFBvaW50TGlrZVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtsaW5lXVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtjb2x1bW5dXHJcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29mZnNldF1cclxuICovXHJcblxyXG4vKipcclxuICogR2V0IHRoZSBzdGFydGluZyBwb2ludCBvZiBgbm9kZWAuXHJcbiAqXHJcbiAqIEBwYXJhbSBub2RlXHJcbiAqICAgTm9kZS5cclxuICogQHJldHVybnNcclxuICogICBQb2ludC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBwb2ludFN0YXJ0ID0gcG9pbnQoJ3N0YXJ0JylcclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIGVuZGluZyBwb2ludCBvZiBgbm9kZWAuXHJcbiAqXHJcbiAqIEBwYXJhbSBub2RlXHJcbiAqICAgTm9kZS5cclxuICogQHJldHVybnNcclxuICogICBQb2ludC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBwb2ludEVuZCA9IHBvaW50KCdlbmQnKVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgcG9zaXRpb25hbCBpbmZvIG9mIGBub2RlYC5cclxuICpcclxuICogQHBhcmFtIHtOb2RlTGlrZSB8IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbbm9kZV1cclxuICogICBOb2RlLlxyXG4gKiBAcmV0dXJucyB7UG9zaXRpb259XHJcbiAqICAgUG9zaXRpb24uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcG9zaXRpb24obm9kZSkge1xyXG4gIHJldHVybiB7c3RhcnQ6IHBvaW50U3RhcnQobm9kZSksIGVuZDogcG9pbnRFbmQobm9kZSl9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIHBvc2l0aW9uYWwgaW5mbyBvZiBgbm9kZWAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7J3N0YXJ0JyB8ICdlbmQnfSB0eXBlXHJcbiAqICAgU2lkZS5cclxuICogQHJldHVybnNcclxuICogICBHZXR0ZXIuXHJcbiAqL1xyXG5mdW5jdGlvbiBwb2ludCh0eXBlKSB7XHJcbiAgcmV0dXJuIHBvaW50XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0aGUgcG9pbnQgaW5mbyBvZiBgbm9kZWAgYXQgYSBib3VuZCBzaWRlLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtOb2RlTGlrZSB8IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbbm9kZV1cclxuICAgKiBAcmV0dXJucyB7UG9pbnR9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gcG9pbnQobm9kZSkge1xyXG4gICAgY29uc3QgcG9pbnQgPSAobm9kZSAmJiBub2RlLnBvc2l0aW9uICYmIG5vZGUucG9zaXRpb25bdHlwZV0pIHx8IHt9XHJcblxyXG4gICAgLy8gVG8gZG86IG5leHQgbWFqb3I6IGRvbuKAmXQgcmV0dXJuIHBvaW50cyB3aGVuIGludmFsaWQuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBpbiBwcmFjdGljZSwgbnVsbCBpcyBhbGxvd2VkLlxyXG4gICAgICBsaW5lOiBwb2ludC5saW5lIHx8IG51bGwsXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGluIHByYWN0aWNlLCBudWxsIGlzIGFsbG93ZWQuXHJcbiAgICAgIGNvbHVtbjogcG9pbnQuY29sdW1uIHx8IG51bGwsXHJcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGluIHByYWN0aWNlLCBudWxsIGlzIGFsbG93ZWQuXHJcbiAgICAgIG9mZnNldDogcG9pbnQub2Zmc2V0ID4gLTEgPyBwb2ludC5vZmZzZXQgOiBudWxsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unist-util-position/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-stringify-position/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/unist-util-stringify-position/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringifyPosition\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.stringifyPosition; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-stringify-position/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1zdHJpbmdpZnktcG9zaXRpb24vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtc3RyaW5naWZ5LXBvc2l0aW9uL2luZGV4LmpzPzE2OWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtzdHJpbmdpZnlQb3NpdGlvbn0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unist-util-stringify-position/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-stringify-position/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/unist-util-stringify-position/lib/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringifyPosition\": function() { return /* binding */ stringifyPosition; }\n/* harmony export */ });\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Position} Position\r\n */\r\n\r\n/**\r\n * @typedef NodeLike\r\n * @property {string} type\r\n * @property {PositionLike | null | undefined} [position]\r\n *\r\n * @typedef PositionLike\r\n * @property {PointLike | null | undefined} [start]\r\n * @property {PointLike | null | undefined} [end]\r\n *\r\n * @typedef PointLike\r\n * @property {number | null | undefined} [line]\r\n * @property {number | null | undefined} [column]\r\n * @property {number | null | undefined} [offset]\r\n */\r\n\r\n/**\r\n * Serialize the positional info of a point, position (start and end points),\r\n * or node.\r\n *\r\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\r\n *   Node, position, or point.\r\n * @returns {string}\r\n *   Pretty printed positional info of a node (`string`).\r\n *\r\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\r\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\r\n *   column, `s` for `start`, and `e` for end.\r\n *   An empty string (`''`) is returned if the given value is neither `node`,\r\n *   `position`, nor `point`.\r\n */\r\nfunction stringifyPosition(value) {\r\n  // Nothing.\r\n  if (!value || typeof value !== 'object') {\r\n    return ''\r\n  }\r\n\r\n  // Node.\r\n  if ('position' in value || 'type' in value) {\r\n    return position(value.position)\r\n  }\r\n\r\n  // Position.\r\n  if ('start' in value || 'end' in value) {\r\n    return position(value)\r\n  }\r\n\r\n  // Point.\r\n  if ('line' in value || 'column' in value) {\r\n    return point(value)\r\n  }\r\n\r\n  // ?\r\n  return ''\r\n}\r\n\r\n/**\r\n * @param {Point | PointLike | null | undefined} point\r\n * @returns {string}\r\n */\r\nfunction point(point) {\r\n  return index(point && point.line) + ':' + index(point && point.column)\r\n}\r\n\r\n/**\r\n * @param {Position | PositionLike | null | undefined} pos\r\n * @returns {string}\r\n */\r\nfunction position(pos) {\r\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\r\n}\r\n\r\n/**\r\n * @param {number | null | undefined} value\r\n * @returns {number}\r\n */\r\nfunction index(value) {\r\n  return value && typeof value === 'number' ? value : 1\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1zdHJpbmdpZnktcG9zaXRpb24vbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsdUJBQXVCO0FBQ3BDLGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsaUNBQWlDO0FBQy9DO0FBQ0E7QUFDQSxjQUFjLDhCQUE4QjtBQUM1QyxjQUFjLDhCQUE4QjtBQUM1QztBQUNBO0FBQ0EsY0FBYywyQkFBMkI7QUFDekMsY0FBYywyQkFBMkI7QUFDekMsY0FBYywyQkFBMkI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRkFBa0Y7QUFDN0Y7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNDQUFzQztBQUNqRCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0Q0FBNEM7QUFDdkQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1zdHJpbmdpZnktcG9zaXRpb24vbGliL2luZGV4LmpzPzdmYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdCcpLlBvaW50fSBQb2ludFxyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdCcpLlBvc2l0aW9ufSBQb3NpdGlvblxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAdHlwZWRlZiBOb2RlTGlrZVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdHlwZVxyXG4gKiBAcHJvcGVydHkge1Bvc2l0aW9uTGlrZSB8IG51bGwgfCB1bmRlZmluZWR9IFtwb3NpdGlvbl1cclxuICpcclxuICogQHR5cGVkZWYgUG9zaXRpb25MaWtlXHJcbiAqIEBwcm9wZXJ0eSB7UG9pbnRMaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3N0YXJ0XVxyXG4gKiBAcHJvcGVydHkge1BvaW50TGlrZSB8IG51bGwgfCB1bmRlZmluZWR9IFtlbmRdXHJcbiAqXHJcbiAqIEB0eXBlZGVmIFBvaW50TGlrZVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtsaW5lXVxyXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGwgfCB1bmRlZmluZWR9IFtjb2x1bW5dXHJcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29mZnNldF1cclxuICovXHJcblxyXG4vKipcclxuICogU2VyaWFsaXplIHRoZSBwb3NpdGlvbmFsIGluZm8gb2YgYSBwb2ludCwgcG9zaXRpb24gKHN0YXJ0IGFuZCBlbmQgcG9pbnRzKSxcclxuICogb3Igbm9kZS5cclxuICpcclxuICogQHBhcmFtIHtOb2RlIHwgTm9kZUxpa2UgfCBQb3NpdGlvbiB8IFBvc2l0aW9uTGlrZSB8IFBvaW50IHwgUG9pbnRMaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3ZhbHVlXVxyXG4gKiAgIE5vZGUsIHBvc2l0aW9uLCBvciBwb2ludC5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBQcmV0dHkgcHJpbnRlZCBwb3NpdGlvbmFsIGluZm8gb2YgYSBub2RlIChgc3RyaW5nYCkuXHJcbiAqXHJcbiAqICAgSW4gdGhlIGZvcm1hdCBvZiBhIHJhbmdlIGBsczpjcy1sZTpjZWAgKHdoZW4gZ2l2ZW4gYG5vZGVgIG9yIGBwb3NpdGlvbmApXHJcbiAqICAgb3IgYSBwb2ludCBgbDpjYCAod2hlbiBnaXZlbiBgcG9pbnRgKSwgd2hlcmUgYGxgIHN0YW5kcyBmb3IgbGluZSwgYGNgIGZvclxyXG4gKiAgIGNvbHVtbiwgYHNgIGZvciBgc3RhcnRgLCBhbmQgYGVgIGZvciBlbmQuXHJcbiAqICAgQW4gZW1wdHkgc3RyaW5nIChgJydgKSBpcyByZXR1cm5lZCBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgbmVpdGhlciBgbm9kZWAsXHJcbiAqICAgYHBvc2l0aW9uYCwgbm9yIGBwb2ludGAuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5UG9zaXRpb24odmFsdWUpIHtcclxuICAvLyBOb3RoaW5nLlxyXG4gIGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xyXG4gICAgcmV0dXJuICcnXHJcbiAgfVxyXG5cclxuICAvLyBOb2RlLlxyXG4gIGlmICgncG9zaXRpb24nIGluIHZhbHVlIHx8ICd0eXBlJyBpbiB2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHBvc2l0aW9uKHZhbHVlLnBvc2l0aW9uKVxyXG4gIH1cclxuXHJcbiAgLy8gUG9zaXRpb24uXHJcbiAgaWYgKCdzdGFydCcgaW4gdmFsdWUgfHwgJ2VuZCcgaW4gdmFsdWUpIHtcclxuICAgIHJldHVybiBwb3NpdGlvbih2YWx1ZSlcclxuICB9XHJcblxyXG4gIC8vIFBvaW50LlxyXG4gIGlmICgnbGluZScgaW4gdmFsdWUgfHwgJ2NvbHVtbicgaW4gdmFsdWUpIHtcclxuICAgIHJldHVybiBwb2ludCh2YWx1ZSlcclxuICB9XHJcblxyXG4gIC8vID9cclxuICByZXR1cm4gJydcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7UG9pbnQgfCBQb2ludExpa2UgfCBudWxsIHwgdW5kZWZpbmVkfSBwb2ludFxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gcG9pbnQocG9pbnQpIHtcclxuICByZXR1cm4gaW5kZXgocG9pbnQgJiYgcG9pbnQubGluZSkgKyAnOicgKyBpbmRleChwb2ludCAmJiBwb2ludC5jb2x1bW4pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1Bvc2l0aW9uIHwgUG9zaXRpb25MaWtlIHwgbnVsbCB8IHVuZGVmaW5lZH0gcG9zXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBwb3NpdGlvbihwb3MpIHtcclxuICByZXR1cm4gcG9pbnQocG9zICYmIHBvcy5zdGFydCkgKyAnLScgKyBwb2ludChwb3MgJiYgcG9zLmVuZClcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7bnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZH0gdmFsdWVcclxuICogQHJldHVybnMge251bWJlcn1cclxuICovXHJcbmZ1bmN0aW9uIGluZGV4KHZhbHVlKSB7XHJcbiAgcmV0dXJuIHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgPyB2YWx1ZSA6IDFcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/unist-util-stringify-position/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-visit-parents/index.js":
/*!********************************************************!*\
  !*** ./node_modules/unist-util-visit-parents/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTINUE\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.CONTINUE; },\n/* harmony export */   \"EXIT\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.EXIT; },\n/* harmony export */   \"SKIP\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.SKIP; },\n/* harmony export */   \"visitParents\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.visitParents; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-visit-parents/lib/index.js\");\n// Note: types exported from `index.d.ts`\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC1wYXJlbnRzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDaUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtdmlzaXQtcGFyZW50cy9pbmRleC5qcz85OTVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IHR5cGVzIGV4cG9ydGVkIGZyb20gYGluZGV4LmQudHNgXHJcbmV4cG9ydCB7Q09OVElOVUUsIEVYSVQsIFNLSVAsIHZpc2l0UGFyZW50c30gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unist-util-visit-parents/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-visit-parents/lib/color.browser.js":
/*!********************************************************************!*\
  !*** ./node_modules/unist-util-visit-parents/lib/color.browser.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"color\": function() { return /* binding */ color; }\n/* harmony export */ });\n/**\r\n * @param {string} d\r\n * @returns {string}\r\n */\r\nfunction color(d) {\r\n  return d\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC1wYXJlbnRzL2xpYi9jb2xvci5icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtdmlzaXQtcGFyZW50cy9saWIvY29sb3IuYnJvd3Nlci5qcz8yNGEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gZFxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbG9yKGQpIHtcclxuICByZXR1cm4gZFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unist-util-visit-parents/lib/color.browser.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-visit-parents/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/unist-util-visit-parents/lib/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTINUE\": function() { return /* binding */ CONTINUE; },\n/* harmony export */   \"EXIT\": function() { return /* binding */ EXIT; },\n/* harmony export */   \"SKIP\": function() { return /* binding */ SKIP; },\n/* harmony export */   \"visitParents\": function() { return /* binding */ visitParents; }\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"./node_modules/unist-util-is/index.js\");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ \"./node_modules/unist-util-visit-parents/lib/color.browser.js\");\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('unist-util-is').Test} Test\r\n */\r\n\r\n/**\r\n * @typedef {boolean | 'skip'} Action\r\n *   Union of the action types.\r\n *\r\n * @typedef {number} Index\r\n *   Move to the sibling at `index` next (after node itself is completely\r\n *   traversed).\r\n *\r\n *   Useful if mutating the tree, such as removing the node the visitor is\r\n *   currently on, or any of its previous siblings.\r\n *   Results less than 0 or greater than or equal to `children.length` stop\r\n *   traversing the parent.\r\n *\r\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\r\n *   List with one or two values, the first an action, the second an index.\r\n *\r\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\r\n *   Any value that can be returned from a visitor.\r\n */\r\n\r\n/**\r\n * @template {Node} [Visited=Node]\r\n *   Visited node type.\r\n * @template {Parent} [Ancestor=Parent]\r\n *   Ancestor type.\r\n * @callback Visitor\r\n *   Handle a node (matching `test`, if given).\r\n *\r\n *   Visitors are free to transform `node`.\r\n *   They can also transform the parent of node (the last of `ancestors`).\r\n *\r\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\r\n *   descendants to be walked (which is a bug).\r\n *\r\n *   When adding or removing previous siblings of `node` (or next siblings, in\r\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\r\n *   sibling to traverse after `node` is traversed.\r\n *   Adding or removing next siblings of `node` (or previous siblings, in case\r\n *   of reverse) is handled as expected without needing to return a new `Index`.\r\n *\r\n *   Removing the children property of an ancestor still results in them being\r\n *   traversed.\r\n * @param {Visited} node\r\n *   Found node.\r\n * @param {Array<Ancestor>} ancestors\r\n *   Ancestors of `node`.\r\n * @returns {VisitorResult}\r\n *   What to do next.\r\n *\r\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\r\n *   An `Action` is treated as a tuple of `[Action]`.\r\n *\r\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\r\n *   When the `Action` is `EXIT`, that action can be returned.\r\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\r\n */\r\n\r\n/**\r\n * @template {Node} [Tree=Node]\r\n *   Tree type.\r\n * @template {Test} [Check=string]\r\n *   Test type.\r\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\r\n *   Build a typed `Visitor` function from a tree and a test.\r\n *\r\n *   It will infer which values are passed as `node` and which as `parents`.\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Continue traversing as normal.\r\n */\r\nconst CONTINUE = true\r\n\r\n/**\r\n * Stop traversing immediately.\r\n */\r\nconst EXIT = false\r\n\r\n/**\r\n * Do not traverse this node’s children.\r\n */\r\nconst SKIP = 'skip'\r\n\r\n/**\r\n * Visit nodes, with ancestral information.\r\n *\r\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\r\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\r\n *\r\n * You can choose for which nodes `visitor` is called by passing a `test`.\r\n * For complex tests, you should test yourself in `visitor`, as it will be\r\n * faster and will have improved type information.\r\n *\r\n * Walking the tree is an intensive task.\r\n * Make use of the return values of the visitor when possible.\r\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\r\n * to check if a node matches, and then perform different operations.\r\n *\r\n * You can change the tree.\r\n * See `Visitor` for more info.\r\n *\r\n * @param tree\r\n *   Tree to traverse.\r\n * @param test\r\n *   `unist-util-is`-compatible test\r\n * @param visitor\r\n *   Handle each node.\r\n * @param reverse\r\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\r\n * @returns\r\n *   Nothing.\r\n */\r\nconst visitParents =\r\n  /**\r\n   * @type {(\r\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\r\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Node} tree\r\n     * @param {Test} test\r\n     * @param {Visitor<Node>} visitor\r\n     * @param {boolean | null | undefined} [reverse]\r\n     * @returns {void}\r\n     */\r\n    function (tree, test, visitor, reverse) {\r\n      if (typeof test === 'function' && typeof visitor !== 'function') {\r\n        reverse = visitor\r\n        // @ts-expect-error no visitor given, so `visitor` is test.\r\n        visitor = test\r\n        test = null\r\n      }\r\n\r\n      const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test)\r\n      const step = reverse ? -1 : 1\r\n\r\n      factory(tree, undefined, [])()\r\n\r\n      /**\r\n       * @param {Node} node\r\n       * @param {number | undefined} index\r\n       * @param {Array<Parent>} parents\r\n       */\r\n      function factory(node, index, parents) {\r\n        /** @type {Record<string, unknown>} */\r\n        // @ts-expect-error: hush\r\n        const value = node && typeof node === 'object' ? node : {}\r\n\r\n        if (typeof value.type === 'string') {\r\n          const name =\r\n            // `hast`\r\n            typeof value.tagName === 'string'\r\n              ? value.tagName\r\n              : // `xast`\r\n              typeof value.name === 'string'\r\n              ? value.name\r\n              : undefined\r\n\r\n          Object.defineProperty(visit, 'name', {\r\n            value:\r\n              'node (' + (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.color)(node.type + (name ? '<' + name + '>' : '')) + ')'\r\n          })\r\n        }\r\n\r\n        return visit\r\n\r\n        function visit() {\r\n          /** @type {ActionTuple} */\r\n          let result = []\r\n          /** @type {ActionTuple} */\r\n          let subresult\r\n          /** @type {number} */\r\n          let offset\r\n          /** @type {Array<Parent>} */\r\n          let grandparents\r\n\r\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\r\n            result = toResult(visitor(node, parents))\r\n\r\n            if (result[0] === EXIT) {\r\n              return result\r\n            }\r\n          }\r\n\r\n          // @ts-expect-error looks like a parent.\r\n          if (node.children && result[0] !== SKIP) {\r\n            // @ts-expect-error looks like a parent.\r\n            offset = (reverse ? node.children.length : -1) + step\r\n            // @ts-expect-error looks like a parent.\r\n            grandparents = parents.concat(node)\r\n\r\n            // @ts-expect-error looks like a parent.\r\n            while (offset > -1 && offset < node.children.length) {\r\n              // @ts-expect-error looks like a parent.\r\n              subresult = factory(node.children[offset], offset, grandparents)()\r\n\r\n              if (subresult[0] === EXIT) {\r\n                return subresult\r\n              }\r\n\r\n              offset =\r\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\r\n            }\r\n          }\r\n\r\n          return result\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n/**\r\n * Turn a return value into a clean result.\r\n *\r\n * @param {VisitorResult} value\r\n *   Valid return values from visitors.\r\n * @returns {ActionTuple}\r\n *   Clean result.\r\n */\r\nfunction toResult(value) {\r\n  if (Array.isArray(value)) {\r\n    return value\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return [CONTINUE, value]\r\n  }\r\n\r\n  return [value]\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unist-util-visit-parents/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-visit/index.js":
/*!************************************************!*\
  !*** ./node_modules/unist-util-visit/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTINUE\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.CONTINUE; },\n/* harmony export */   \"EXIT\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.EXIT; },\n/* harmony export */   \"SKIP\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.SKIP; },\n/* harmony export */   \"visit\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.visit; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/unist-util-visit/lib/index.js\");\n// Note: types exported from `index.d.ts`\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQzBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXZpc2l0L2luZGV4LmpzPzhlMGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogdHlwZXMgZXhwb3J0ZWQgZnJvbSBgaW5kZXguZC50c2BcclxuZXhwb3J0IHtDT05USU5VRSwgRVhJVCwgU0tJUCwgdmlzaXR9IGZyb20gJy4vbGliL2luZGV4LmpzJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/unist-util-visit/index.js\n"));

/***/ }),

/***/ "./node_modules/unist-util-visit/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/unist-util-visit/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTINUE\": function() { return /* reexport safe */ unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_0__.CONTINUE; },\n/* harmony export */   \"EXIT\": function() { return /* reexport safe */ unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_0__.EXIT; },\n/* harmony export */   \"SKIP\": function() { return /* reexport safe */ unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_0__.SKIP; },\n/* harmony export */   \"visit\": function() { return /* binding */ visit; }\n/* harmony export */ });\n/* harmony import */ var unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-visit-parents */ \"./node_modules/unist-util-visit-parents/index.js\");\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('unist-util-is').Test} Test\r\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\r\n */\r\n\r\n/**\r\n * Check if `Child` can be a child of `Ancestor`.\r\n *\r\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\r\n * `never`.\r\n *\r\n * @template {Node} Ancestor\r\n *   Node type.\r\n * @template {Node} Child\r\n *   Node type.\r\n * @typedef {(\r\n *   Ancestor extends Parent\r\n *     ? Child extends Ancestor['children'][number]\r\n *       ? Ancestor\r\n *       : never\r\n *     : never\r\n * )} ParentsOf\r\n */\r\n\r\n/**\r\n * @template {Node} [Visited=Node]\r\n *   Visited node type.\r\n * @template {Parent} [Ancestor=Parent]\r\n *   Ancestor type.\r\n * @callback Visitor\r\n *   Handle a node (matching `test`, if given).\r\n *\r\n *   Visitors are free to transform `node`.\r\n *   They can also transform `parent`.\r\n *\r\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\r\n *   descendants to be walked (which is a bug).\r\n *\r\n *   When adding or removing previous siblings of `node` (or next siblings, in\r\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\r\n *   sibling to traverse after `node` is traversed.\r\n *   Adding or removing next siblings of `node` (or previous siblings, in case\r\n *   of reverse) is handled as expected without needing to return a new `Index`.\r\n *\r\n *   Removing the children property of `parent` still results in them being\r\n *   traversed.\r\n * @param {Visited} node\r\n *   Found node.\r\n * @param {Visited extends Node ? number | null : never} index\r\n *   Index of `node` in `parent`.\r\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\r\n *   Parent of `node`.\r\n * @returns {VisitorResult}\r\n *   What to do next.\r\n *\r\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\r\n *   An `Action` is treated as a tuple of `[Action]`.\r\n *\r\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\r\n *   When the `Action` is `EXIT`, that action can be returned.\r\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a node and all possible parents.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} Visited\r\n *   Node type.\r\n * @template {Parent} Ancestor\r\n *   Parent type.\r\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a list of descendants and a test.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} Descendant\r\n *   Node type.\r\n * @template {Test} Check\r\n *   Test type.\r\n * @typedef {(\r\n *   BuildVisitorFromMatch<\r\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\r\n *     Extract<Descendant, Parent>\r\n *   >\r\n * )} BuildVisitorFromDescendants\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a tree and a test.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} [Tree=Node]\r\n *   Node type.\r\n * @template {Test} [Check=string]\r\n *   Test type.\r\n * @typedef {(\r\n *   BuildVisitorFromDescendants<\r\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\r\n *     Check\r\n *   >\r\n * )} BuildVisitor\r\n */\r\n\r\n\r\n\r\n/**\r\n * Visit nodes.\r\n *\r\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\r\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\r\n *\r\n * You can choose for which nodes `visitor` is called by passing a `test`.\r\n * For complex tests, you should test yourself in `visitor`, as it will be\r\n * faster and will have improved type information.\r\n *\r\n * Walking the tree is an intensive task.\r\n * Make use of the return values of the visitor when possible.\r\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\r\n * to check if a node matches, and then perform different operations.\r\n *\r\n * You can change the tree.\r\n * See `Visitor` for more info.\r\n *\r\n * @param tree\r\n *   Tree to traverse.\r\n * @param test\r\n *   `unist-util-is`-compatible test\r\n * @param visitor\r\n *   Handle each node.\r\n * @param reverse\r\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\r\n * @returns\r\n *   Nothing.\r\n */\r\nconst visit =\r\n  /**\r\n   * @type {(\r\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\r\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Node} tree\r\n     * @param {Test} test\r\n     * @param {Visitor} visitor\r\n     * @param {boolean | null | undefined} [reverse]\r\n     * @returns {void}\r\n     */\r\n    function (tree, test, visitor, reverse) {\r\n      if (typeof test === 'function' && typeof visitor !== 'function') {\r\n        reverse = visitor\r\n        visitor = test\r\n        test = null\r\n      }\r\n\r\n      (0,unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_0__.visitParents)(tree, test, overload, reverse)\r\n\r\n      /**\r\n       * @param {Node} node\r\n       * @param {Array<Parent>} parents\r\n       */\r\n      function overload(node, parents) {\r\n        const parent = parents[parents.length - 1]\r\n        return visitor(\r\n          node,\r\n          parent ? parent.children.indexOf(node) : null,\r\n          parent\r\n        )\r\n      }\r\n    }\r\n  )\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unist-util-visit/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/uvu/assert/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/uvu/assert/index.mjs ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Assertion\": function() { return /* binding */ Assertion; },\n/* harmony export */   \"equal\": function() { return /* binding */ equal; },\n/* harmony export */   \"fixture\": function() { return /* binding */ fixture; },\n/* harmony export */   \"instance\": function() { return /* binding */ instance; },\n/* harmony export */   \"is\": function() { return /* binding */ is; },\n/* harmony export */   \"match\": function() { return /* binding */ match; },\n/* harmony export */   \"not\": function() { return /* binding */ not; },\n/* harmony export */   \"ok\": function() { return /* binding */ ok; },\n/* harmony export */   \"snapshot\": function() { return /* binding */ snapshot; },\n/* harmony export */   \"throws\": function() { return /* binding */ throws; },\n/* harmony export */   \"type\": function() { return /* binding */ type; },\n/* harmony export */   \"unreachable\": function() { return /* binding */ unreachable; }\n/* harmony export */ });\n/* harmony import */ var dequal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dequal */ \"./node_modules/dequal/dist/index.mjs\");\n/* harmony import */ var uvu_diff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uvu/diff */ \"./node_modules/uvu/diff/index.mjs\");\n\r\n\r\n\r\nfunction dedent(str) {\r\n\tstr = str.replace(/\\r?\\n/g, '\\n');\r\n  let arr = str.match(/^[ \\t]*(?=\\S)/gm);\r\n  let i = 0, min = 1/0, len = (arr||[]).length;\r\n  for (; i < len; i++) min = Math.min(min, arr[i].length);\r\n  return len && min ? str.replace(new RegExp(`^[ \\\\t]{${min}}`, 'gm'), '') : str;\r\n}\r\n\r\nclass Assertion extends Error {\r\n\tconstructor(opts={}) {\r\n\t\tsuper(opts.message);\r\n\t\tthis.name = 'Assertion';\r\n\t\tthis.code = 'ERR_ASSERTION';\r\n\t\tif (Error.captureStackTrace) {\r\n\t\t\tError.captureStackTrace(this, this.constructor);\r\n\t\t}\r\n\t\tthis.details = opts.details || false;\r\n\t\tthis.generated = !!opts.generated;\r\n\t\tthis.operator = opts.operator;\r\n\t\tthis.expects = opts.expects;\r\n\t\tthis.actual = opts.actual;\r\n\t}\r\n}\r\n\r\nfunction assert(bool, actual, expects, operator, detailer, backup, msg) {\r\n\tif (bool) return;\r\n\tlet message = msg || backup;\r\n\tif (msg instanceof Error) throw msg;\r\n\tlet details = detailer && detailer(actual, expects);\r\n\tthrow new Assertion({ actual, expects, operator, message, details, generated: !msg });\r\n}\r\n\r\nfunction ok(val, msg) {\r\n\tassert(!!val, false, true, 'ok', false, 'Expected value to be truthy', msg);\r\n}\r\n\r\nfunction is(val, exp, msg) {\r\n\tassert(val === exp, val, exp, 'is', uvu_diff__WEBPACK_IMPORTED_MODULE_1__.compare, 'Expected values to be strictly equal:', msg);\r\n}\r\n\r\nfunction equal(val, exp, msg) {\r\n\tassert((0,dequal__WEBPACK_IMPORTED_MODULE_0__.dequal)(val, exp), val, exp, 'equal', uvu_diff__WEBPACK_IMPORTED_MODULE_1__.compare, 'Expected values to be deeply equal:', msg);\r\n}\r\n\r\nfunction unreachable(msg) {\r\n\tassert(false, true, false, 'unreachable', false, 'Expected not to be reached!', msg);\r\n}\r\n\r\nfunction type(val, exp, msg) {\r\n\tlet tmp = typeof val;\r\n\tassert(tmp === exp, tmp, exp, 'type', false, `Expected \"${tmp}\" to be \"${exp}\"`, msg);\r\n}\r\n\r\nfunction instance(val, exp, msg) {\r\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\r\n\tassert(val instanceof exp, val, exp, 'instance', false, `Expected value to be an instance of ${name}`, msg);\r\n}\r\n\r\nfunction match(val, exp, msg) {\r\n\tif (typeof exp === 'string') {\r\n\t\tassert(val.includes(exp), val, exp, 'match', false, `Expected value to include \"${exp}\" substring`, msg);\r\n\t} else {\r\n\t\tassert(exp.test(val), val, exp, 'match', false, `Expected value to match \\`${String(exp)}\\` pattern`, msg);\r\n\t}\r\n}\r\n\r\nfunction snapshot(val, exp, msg) {\r\n\tval=dedent(val); exp=dedent(exp);\r\n\tassert(val === exp, val, exp, 'snapshot', uvu_diff__WEBPACK_IMPORTED_MODULE_1__.lines, 'Expected value to match snapshot:', msg);\r\n}\r\n\r\nconst lineNums = (x, y) => (0,uvu_diff__WEBPACK_IMPORTED_MODULE_1__.lines)(x, y, 1);\r\nfunction fixture(val, exp, msg) {\r\n\tval=dedent(val); exp=dedent(exp);\r\n\tassert(val === exp, val, exp, 'fixture', lineNums, 'Expected value to match fixture:', msg);\r\n}\r\n\r\nfunction throws(blk, exp, msg) {\r\n\tif (!msg && typeof exp === 'string') {\r\n\t\tmsg = exp; exp = null;\r\n\t}\r\n\r\n\ttry {\r\n\t\tblk();\r\n\t\tassert(false, false, true, 'throws', false, 'Expected function to throw', msg);\r\n\t} catch (err) {\r\n\t\tif (err instanceof Assertion) throw err;\r\n\r\n\t\tif (typeof exp === 'function') {\r\n\t\t\tassert(exp(err), false, true, 'throws', false, 'Expected function to throw matching exception', msg);\r\n\t\t} else if (exp instanceof RegExp) {\r\n\t\t\tassert(exp.test(err.message), false, true, 'throws', false, `Expected function to throw exception matching \\`${String(exp)}\\` pattern`, msg);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// ---\r\n\r\nfunction not(val, msg) {\r\n\tassert(!val, true, false, 'not', false, 'Expected value to be falsey', msg);\r\n}\r\n\r\nnot.ok = not;\r\n\r\nis.not = function (val, exp, msg) {\r\n\tassert(val !== exp, val, exp, 'is.not', false, 'Expected values not to be strictly equal', msg);\r\n}\r\n\r\nnot.equal = function (val, exp, msg) {\r\n\tassert(!(0,dequal__WEBPACK_IMPORTED_MODULE_0__.dequal)(val, exp), val, exp, 'not.equal', false, 'Expected values not to be deeply equal', msg);\r\n}\r\n\r\nnot.type = function (val, exp, msg) {\r\n\tlet tmp = typeof val;\r\n\tassert(tmp !== exp, tmp, exp, 'not.type', false, `Expected \"${tmp}\" not to be \"${exp}\"`, msg);\r\n}\r\n\r\nnot.instance = function (val, exp, msg) {\r\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\r\n\tassert(!(val instanceof exp), val, exp, 'not.instance', false, `Expected value not to be an instance of ${name}`, msg);\r\n}\r\n\r\nnot.snapshot = function (val, exp, msg) {\r\n\tval=dedent(val); exp=dedent(exp);\r\n\tassert(val !== exp, val, exp, 'not.snapshot', false, 'Expected value not to match snapshot', msg);\r\n}\r\n\r\nnot.fixture = function (val, exp, msg) {\r\n\tval=dedent(val); exp=dedent(exp);\r\n\tassert(val !== exp, val, exp, 'not.fixture', false, 'Expected value not to match fixture', msg);\r\n}\r\n\r\nnot.match = function (val, exp, msg) {\r\n\tif (typeof exp === 'string') {\r\n\t\tassert(!val.includes(exp), val, exp, 'not.match', false, `Expected value not to include \"${exp}\" substring`, msg);\r\n\t} else {\r\n\t\tassert(!exp.test(val), val, exp, 'not.match', false, `Expected value not to match \\`${String(exp)}\\` pattern`, msg);\r\n\t}\r\n}\r\n\r\nnot.throws = function (blk, exp, msg) {\r\n\tif (!msg && typeof exp === 'string') {\r\n\t\tmsg = exp; exp = null;\r\n\t}\r\n\r\n\ttry {\r\n\t\tblk();\r\n\t} catch (err) {\r\n\t\tif (typeof exp === 'function') {\r\n\t\t\tassert(!exp(err), true, false, 'not.throws', false, 'Expected function not to throw matching exception', msg);\r\n\t\t} else if (exp instanceof RegExp) {\r\n\t\t\tassert(!exp.test(err.message), true, false, 'not.throws', false, `Expected function not to throw exception matching \\`${String(exp)}\\` pattern`, msg);\r\n\t\t} else if (!exp) {\r\n\t\t\tassert(false, true, false, 'not.throws', false, 'Expected function not to throw', msg);\r\n\t\t}\r\n\t}\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXZ1L2Fzc2VydC9pbmRleC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDVTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxTQUFTO0FBQ2xCLHNEQUFzRCxFQUFFLEtBQUs7QUFDN0Q7QUFDQTtBQUNPO0FBQ1Asb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhEQUE4RDtBQUNyRjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQLHFDQUFxQyw2Q0FBTztBQUM1QztBQUNBO0FBQ087QUFDUCxRQUFRLDhDQUFNLCtCQUErQiw2Q0FBTztBQUNwRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMkRBQTJELElBQUksV0FBVyxJQUFJO0FBQzlFO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0dBQWdHLEtBQUs7QUFDckc7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvRkFBb0YsSUFBSTtBQUN4RixHQUFHO0FBQ0gsK0VBQStFLFlBQVk7QUFDM0Y7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0I7QUFDbEIsMkNBQTJDLDJDQUFLO0FBQ2hEO0FBQ0E7QUFDQSwyQkFBMkIsK0NBQUs7QUFDekI7QUFDUCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLGtIQUFrSCxZQUFZO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhDQUFNO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsSUFBSSxlQUFlLElBQUk7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyR0FBMkcsS0FBSztBQUNoSDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixJQUFJO0FBQ2pHLEdBQUc7QUFDSCx3RkFBd0YsWUFBWTtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkhBQTJILFlBQVk7QUFDdkksSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91dnUvYXNzZXJ0L2luZGV4Lm1qcz8xNjJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlcXVhbMKgfSBmcm9tICdkZXF1YWwnO1xyXG5pbXBvcnQgeyBjb21wYXJlLCBsaW5lcyB9IGZyb20gJ3V2dS9kaWZmJztcclxuXHJcbmZ1bmN0aW9uIGRlZGVudChzdHIpIHtcclxuXHRzdHIgPSBzdHIucmVwbGFjZSgvXFxyP1xcbi9nLCAnXFxuJyk7XHJcbiAgbGV0IGFyciA9IHN0ci5tYXRjaCgvXlsgXFx0XSooPz1cXFMpL2dtKTtcclxuICBsZXQgaSA9IDAsIG1pbiA9IDEvMCwgbGVuID0gKGFycnx8W10pLmxlbmd0aDtcclxuICBmb3IgKDsgaSA8IGxlbjsgaSsrKSBtaW4gPSBNYXRoLm1pbihtaW4sIGFycltpXS5sZW5ndGgpO1xyXG4gIHJldHVybiBsZW4gJiYgbWluID8gc3RyLnJlcGxhY2UobmV3IFJlZ0V4cChgXlsgXFxcXHRdeyR7bWlufX1gLCAnZ20nKSwgJycpIDogc3RyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQXNzZXJ0aW9uIGV4dGVuZHMgRXJyb3Ige1xyXG5cdGNvbnN0cnVjdG9yKG9wdHM9e30pIHtcclxuXHRcdHN1cGVyKG9wdHMubWVzc2FnZSk7XHJcblx0XHR0aGlzLm5hbWUgPSAnQXNzZXJ0aW9uJztcclxuXHRcdHRoaXMuY29kZSA9ICdFUlJfQVNTRVJUSU9OJztcclxuXHRcdGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xyXG5cdFx0XHRFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcclxuXHRcdH1cclxuXHRcdHRoaXMuZGV0YWlscyA9IG9wdHMuZGV0YWlscyB8fCBmYWxzZTtcclxuXHRcdHRoaXMuZ2VuZXJhdGVkID0gISFvcHRzLmdlbmVyYXRlZDtcclxuXHRcdHRoaXMub3BlcmF0b3IgPSBvcHRzLm9wZXJhdG9yO1xyXG5cdFx0dGhpcy5leHBlY3RzID0gb3B0cy5leHBlY3RzO1xyXG5cdFx0dGhpcy5hY3R1YWwgPSBvcHRzLmFjdHVhbDtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFzc2VydChib29sLCBhY3R1YWwsIGV4cGVjdHMsIG9wZXJhdG9yLCBkZXRhaWxlciwgYmFja3VwLCBtc2cpIHtcclxuXHRpZiAoYm9vbCkgcmV0dXJuO1xyXG5cdGxldCBtZXNzYWdlID0gbXNnIHx8IGJhY2t1cDtcclxuXHRpZiAobXNnIGluc3RhbmNlb2YgRXJyb3IpIHRocm93IG1zZztcclxuXHRsZXQgZGV0YWlscyA9IGRldGFpbGVyICYmIGRldGFpbGVyKGFjdHVhbCwgZXhwZWN0cyk7XHJcblx0dGhyb3cgbmV3IEFzc2VydGlvbih7IGFjdHVhbCwgZXhwZWN0cywgb3BlcmF0b3IsIG1lc3NhZ2UsIGRldGFpbHMsIGdlbmVyYXRlZDogIW1zZyB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9rKHZhbCwgbXNnKSB7XHJcblx0YXNzZXJ0KCEhdmFsLCBmYWxzZSwgdHJ1ZSwgJ29rJywgZmFsc2UsICdFeHBlY3RlZCB2YWx1ZSB0byBiZSB0cnV0aHknLCBtc2cpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXModmFsLCBleHAsIG1zZykge1xyXG5cdGFzc2VydCh2YWwgPT09IGV4cCwgdmFsLCBleHAsICdpcycsIGNvbXBhcmUsICdFeHBlY3RlZCB2YWx1ZXMgdG8gYmUgc3RyaWN0bHkgZXF1YWw6JywgbXNnKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsKHZhbCwgZXhwLCBtc2cpIHtcclxuXHRhc3NlcnQoZGVxdWFsKHZhbCwgZXhwKSwgdmFsLCBleHAsICdlcXVhbCcsIGNvbXBhcmUsICdFeHBlY3RlZCB2YWx1ZXMgdG8gYmUgZGVlcGx5IGVxdWFsOicsIG1zZyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1bnJlYWNoYWJsZShtc2cpIHtcclxuXHRhc3NlcnQoZmFsc2UsIHRydWUsIGZhbHNlLCAndW5yZWFjaGFibGUnLCBmYWxzZSwgJ0V4cGVjdGVkIG5vdCB0byBiZSByZWFjaGVkIScsIG1zZyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0eXBlKHZhbCwgZXhwLCBtc2cpIHtcclxuXHRsZXQgdG1wID0gdHlwZW9mIHZhbDtcclxuXHRhc3NlcnQodG1wID09PSBleHAsIHRtcCwgZXhwLCAndHlwZScsIGZhbHNlLCBgRXhwZWN0ZWQgXCIke3RtcH1cIiB0byBiZSBcIiR7ZXhwfVwiYCwgbXNnKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluc3RhbmNlKHZhbCwgZXhwLCBtc2cpIHtcclxuXHRsZXQgbmFtZSA9ICdgJyArIChleHAubmFtZSB8fCBleHAuY29uc3RydWN0b3IubmFtZSkgKyAnYCc7XHJcblx0YXNzZXJ0KHZhbCBpbnN0YW5jZW9mIGV4cCwgdmFsLCBleHAsICdpbnN0YW5jZScsIGZhbHNlLCBgRXhwZWN0ZWQgdmFsdWUgdG8gYmUgYW4gaW5zdGFuY2Ugb2YgJHtuYW1lfWAsIG1zZyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtYXRjaCh2YWwsIGV4cCwgbXNnKSB7XHJcblx0aWYgKHR5cGVvZiBleHAgPT09ICdzdHJpbmcnKSB7XHJcblx0XHRhc3NlcnQodmFsLmluY2x1ZGVzKGV4cCksIHZhbCwgZXhwLCAnbWF0Y2gnLCBmYWxzZSwgYEV4cGVjdGVkIHZhbHVlIHRvIGluY2x1ZGUgXCIke2V4cH1cIiBzdWJzdHJpbmdgLCBtc2cpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRhc3NlcnQoZXhwLnRlc3QodmFsKSwgdmFsLCBleHAsICdtYXRjaCcsIGZhbHNlLCBgRXhwZWN0ZWQgdmFsdWUgdG8gbWF0Y2ggXFxgJHtTdHJpbmcoZXhwKX1cXGAgcGF0dGVybmAsIG1zZyk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc25hcHNob3QodmFsLCBleHAsIG1zZykge1xyXG5cdHZhbD1kZWRlbnQodmFsKTsgZXhwPWRlZGVudChleHApO1xyXG5cdGFzc2VydCh2YWwgPT09IGV4cCwgdmFsLCBleHAsICdzbmFwc2hvdCcsIGxpbmVzLCAnRXhwZWN0ZWQgdmFsdWUgdG8gbWF0Y2ggc25hcHNob3Q6JywgbXNnKTtcclxufVxyXG5cclxuY29uc3QgbGluZU51bXMgPSAoeCwgeSkgPT4gbGluZXMoeCwgeSwgMSk7XHJcbmV4cG9ydCBmdW5jdGlvbiBmaXh0dXJlKHZhbCwgZXhwLCBtc2cpIHtcclxuXHR2YWw9ZGVkZW50KHZhbCk7IGV4cD1kZWRlbnQoZXhwKTtcclxuXHRhc3NlcnQodmFsID09PSBleHAsIHZhbCwgZXhwLCAnZml4dHVyZScsIGxpbmVOdW1zLCAnRXhwZWN0ZWQgdmFsdWUgdG8gbWF0Y2ggZml4dHVyZTonLCBtc2cpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dzKGJsaywgZXhwLCBtc2cpIHtcclxuXHRpZiAoIW1zZyAmJiB0eXBlb2YgZXhwID09PSAnc3RyaW5nJykge1xyXG5cdFx0bXNnID0gZXhwOyBleHAgPSBudWxsO1xyXG5cdH1cclxuXHJcblx0dHJ5IHtcclxuXHRcdGJsaygpO1xyXG5cdFx0YXNzZXJ0KGZhbHNlLCBmYWxzZSwgdHJ1ZSwgJ3Rocm93cycsIGZhbHNlLCAnRXhwZWN0ZWQgZnVuY3Rpb24gdG8gdGhyb3cnLCBtc2cpO1xyXG5cdH0gY2F0Y2ggKGVycikge1xyXG5cdFx0aWYgKGVyciBpbnN0YW5jZW9mIEFzc2VydGlvbikgdGhyb3cgZXJyO1xyXG5cclxuXHRcdGlmICh0eXBlb2YgZXhwID09PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdGFzc2VydChleHAoZXJyKSwgZmFsc2UsIHRydWUsICd0aHJvd3MnLCBmYWxzZSwgJ0V4cGVjdGVkIGZ1bmN0aW9uIHRvIHRocm93IG1hdGNoaW5nIGV4Y2VwdGlvbicsIG1zZyk7XHJcblx0XHR9IGVsc2UgaWYgKGV4cCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xyXG5cdFx0XHRhc3NlcnQoZXhwLnRlc3QoZXJyLm1lc3NhZ2UpLCBmYWxzZSwgdHJ1ZSwgJ3Rocm93cycsIGZhbHNlLCBgRXhwZWN0ZWQgZnVuY3Rpb24gdG8gdGhyb3cgZXhjZXB0aW9uIG1hdGNoaW5nIFxcYCR7U3RyaW5nKGV4cCl9XFxgIHBhdHRlcm5gLCBtc2cpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8gLS0tXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbm90KHZhbCwgbXNnKSB7XHJcblx0YXNzZXJ0KCF2YWwsIHRydWUsIGZhbHNlLCAnbm90JywgZmFsc2UsICdFeHBlY3RlZCB2YWx1ZSB0byBiZSBmYWxzZXknLCBtc2cpO1xyXG59XHJcblxyXG5ub3Qub2sgPSBub3Q7XHJcblxyXG5pcy5ub3QgPSBmdW5jdGlvbiAodmFsLCBleHAsIG1zZykge1xyXG5cdGFzc2VydCh2YWwgIT09IGV4cCwgdmFsLCBleHAsICdpcy5ub3QnLCBmYWxzZSwgJ0V4cGVjdGVkIHZhbHVlcyBub3QgdG8gYmUgc3RyaWN0bHkgZXF1YWwnLCBtc2cpO1xyXG59XHJcblxyXG5ub3QuZXF1YWwgPSBmdW5jdGlvbiAodmFsLCBleHAsIG1zZykge1xyXG5cdGFzc2VydCghZGVxdWFsKHZhbCwgZXhwKSwgdmFsLCBleHAsICdub3QuZXF1YWwnLCBmYWxzZSwgJ0V4cGVjdGVkIHZhbHVlcyBub3QgdG8gYmUgZGVlcGx5IGVxdWFsJywgbXNnKTtcclxufVxyXG5cclxubm90LnR5cGUgPSBmdW5jdGlvbiAodmFsLCBleHAsIG1zZykge1xyXG5cdGxldCB0bXAgPSB0eXBlb2YgdmFsO1xyXG5cdGFzc2VydCh0bXAgIT09IGV4cCwgdG1wLCBleHAsICdub3QudHlwZScsIGZhbHNlLCBgRXhwZWN0ZWQgXCIke3RtcH1cIiBub3QgdG8gYmUgXCIke2V4cH1cImAsIG1zZyk7XHJcbn1cclxuXHJcbm5vdC5pbnN0YW5jZSA9IGZ1bmN0aW9uICh2YWwsIGV4cCwgbXNnKSB7XHJcblx0bGV0IG5hbWUgPSAnYCcgKyAoZXhwLm5hbWUgfHwgZXhwLmNvbnN0cnVjdG9yLm5hbWUpICsgJ2AnO1xyXG5cdGFzc2VydCghKHZhbCBpbnN0YW5jZW9mIGV4cCksIHZhbCwgZXhwLCAnbm90Lmluc3RhbmNlJywgZmFsc2UsIGBFeHBlY3RlZCB2YWx1ZSBub3QgdG8gYmUgYW4gaW5zdGFuY2Ugb2YgJHtuYW1lfWAsIG1zZyk7XHJcbn1cclxuXHJcbm5vdC5zbmFwc2hvdCA9IGZ1bmN0aW9uICh2YWwsIGV4cCwgbXNnKSB7XHJcblx0dmFsPWRlZGVudCh2YWwpOyBleHA9ZGVkZW50KGV4cCk7XHJcblx0YXNzZXJ0KHZhbCAhPT0gZXhwLCB2YWwsIGV4cCwgJ25vdC5zbmFwc2hvdCcsIGZhbHNlLCAnRXhwZWN0ZWQgdmFsdWUgbm90IHRvIG1hdGNoIHNuYXBzaG90JywgbXNnKTtcclxufVxyXG5cclxubm90LmZpeHR1cmUgPSBmdW5jdGlvbiAodmFsLCBleHAsIG1zZykge1xyXG5cdHZhbD1kZWRlbnQodmFsKTsgZXhwPWRlZGVudChleHApO1xyXG5cdGFzc2VydCh2YWwgIT09IGV4cCwgdmFsLCBleHAsICdub3QuZml4dHVyZScsIGZhbHNlLCAnRXhwZWN0ZWQgdmFsdWUgbm90IHRvIG1hdGNoIGZpeHR1cmUnLCBtc2cpO1xyXG59XHJcblxyXG5ub3QubWF0Y2ggPSBmdW5jdGlvbiAodmFsLCBleHAsIG1zZykge1xyXG5cdGlmICh0eXBlb2YgZXhwID09PSAnc3RyaW5nJykge1xyXG5cdFx0YXNzZXJ0KCF2YWwuaW5jbHVkZXMoZXhwKSwgdmFsLCBleHAsICdub3QubWF0Y2gnLCBmYWxzZSwgYEV4cGVjdGVkIHZhbHVlIG5vdCB0byBpbmNsdWRlIFwiJHtleHB9XCIgc3Vic3RyaW5nYCwgbXNnKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0YXNzZXJ0KCFleHAudGVzdCh2YWwpLCB2YWwsIGV4cCwgJ25vdC5tYXRjaCcsIGZhbHNlLCBgRXhwZWN0ZWQgdmFsdWUgbm90IHRvIG1hdGNoIFxcYCR7U3RyaW5nKGV4cCl9XFxgIHBhdHRlcm5gLCBtc2cpO1xyXG5cdH1cclxufVxyXG5cclxubm90LnRocm93cyA9IGZ1bmN0aW9uIChibGssIGV4cCwgbXNnKSB7XHJcblx0aWYgKCFtc2cgJiYgdHlwZW9mIGV4cCA9PT0gJ3N0cmluZycpIHtcclxuXHRcdG1zZyA9IGV4cDsgZXhwID0gbnVsbDtcclxuXHR9XHJcblxyXG5cdHRyeSB7XHJcblx0XHRibGsoKTtcclxuXHR9IGNhdGNoIChlcnIpIHtcclxuXHRcdGlmICh0eXBlb2YgZXhwID09PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdGFzc2VydCghZXhwKGVyciksIHRydWUsIGZhbHNlLCAnbm90LnRocm93cycsIGZhbHNlLCAnRXhwZWN0ZWQgZnVuY3Rpb24gbm90IHRvIHRocm93IG1hdGNoaW5nIGV4Y2VwdGlvbicsIG1zZyk7XHJcblx0XHR9IGVsc2UgaWYgKGV4cCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xyXG5cdFx0XHRhc3NlcnQoIWV4cC50ZXN0KGVyci5tZXNzYWdlKSwgdHJ1ZSwgZmFsc2UsICdub3QudGhyb3dzJywgZmFsc2UsIGBFeHBlY3RlZCBmdW5jdGlvbiBub3QgdG8gdGhyb3cgZXhjZXB0aW9uIG1hdGNoaW5nIFxcYCR7U3RyaW5nKGV4cCl9XFxgIHBhdHRlcm5gLCBtc2cpO1xyXG5cdFx0fSBlbHNlIGlmICghZXhwKSB7XHJcblx0XHRcdGFzc2VydChmYWxzZSwgdHJ1ZSwgZmFsc2UsICdub3QudGhyb3dzJywgZmFsc2UsICdFeHBlY3RlZCBmdW5jdGlvbiBub3QgdG8gdGhyb3cnLCBtc2cpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uvu/assert/index.mjs\n"));

/***/ }),

/***/ "./node_modules/uvu/diff/index.mjs":
/*!*****************************************!*\
  !*** ./node_modules/uvu/diff/index.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"arrays\": function() { return /* binding */ arrays; },\n/* harmony export */   \"chars\": function() { return /* binding */ chars; },\n/* harmony export */   \"circular\": function() { return /* binding */ circular; },\n/* harmony export */   \"compare\": function() { return /* binding */ compare; },\n/* harmony export */   \"direct\": function() { return /* binding */ direct; },\n/* harmony export */   \"lines\": function() { return /* binding */ lines; },\n/* harmony export */   \"sort\": function() { return /* binding */ sort; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; }\n/* harmony export */ });\n/* harmony import */ var kleur__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! kleur */ \"./node_modules/kleur/index.mjs\");\n/* harmony import */ var diff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! diff */ \"./node_modules/diff/lib/index.mjs\");\n\r\n\r\n\r\nconst colors = {\r\n\t'--': kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].red,\r\n\t'··': kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].grey,\r\n\t'++': kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].green,\r\n};\r\n\r\nconst TITLE = kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim().italic;\r\nconst TAB=kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim('→'), SPACE=kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim('·'), NL=kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim('↵');\r\nconst LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + '\\n';\r\nconst LINE = (num, x) => kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim('L' + String(num).padStart(x, '0') + ' ');\r\nconst PRETTY = str => str.replace(/[ ]/g, SPACE).replace(/\\t/g, TAB).replace(/(\\r?\\n)/g, NL);\r\n\r\nfunction line(obj, prev, pad) {\r\n\tlet char = obj.removed ? '--' : obj.added ? '++' : '··';\r\n\tlet arr = obj.value.replace(/\\r?\\n$/, '').split('\\n');\r\n\tlet i=0, tmp, out='';\r\n\r\n\tif (obj.added) out += colors[char]().underline(TITLE('Expected:')) + '\\n';\r\n\telse if (obj.removed) out += colors[char]().underline(TITLE('Actual:')) + '\\n';\r\n\r\n\tfor (; i < arr.length; i++) {\r\n\t\ttmp = arr[i];\r\n\t\tif (tmp != null) {\r\n\t\t\tif (prev) out += LINE(prev + i, pad);\r\n\t\t\tout += LOG(char, tmp || '\\n');\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n// TODO: want better diffing\r\n//~> complex items bail outright\r\nfunction arrays(input, expect) {\r\n\tlet arr = diff__WEBPACK_IMPORTED_MODULE_1__.diffArrays(input, expect);\r\n\tlet i=0, j=0, k=0, tmp, val, char, isObj, str;\r\n\tlet out = LOG('··', '[');\r\n\r\n\tfor (; i < arr.length; i++) {\r\n\t\tchar = (tmp = arr[i]).removed ? '--' : tmp.added ? '++' : '··';\r\n\r\n\t\tif (tmp.added) {\r\n\t\t\tout += colors[char]().underline(TITLE('Expected:')) + '\\n';\r\n\t\t} else if (tmp.removed) {\r\n\t\t\tout += colors[char]().underline(TITLE('Actual:')) + '\\n';\r\n\t\t}\r\n\r\n\t\tfor (j=0; j < tmp.value.length; j++) {\r\n\t\t\tisObj = (tmp.value[j] && typeof tmp.value[j] === 'object');\r\n\t\t\tval = stringify(tmp.value[j]).split(/\\r?\\n/g);\r\n\t\t\tfor (k=0; k < val.length;) {\r\n\t\t\t\tstr = '  ' + val[k++] + (isObj ? '' : ',');\r\n\t\t\t\tif (isObj && k === val.length && (j + 1) < tmp.value.length) str += ',';\r\n\t\t\t\tout += LOG(char, str);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out + LOG('··', ']');\r\n}\r\n\r\nfunction lines(input, expect, linenum = 0) {\r\n\tlet i=0, tmp, output='';\r\n\tlet arr = diff__WEBPACK_IMPORTED_MODULE_1__.diffLines(input, expect);\r\n\tlet pad = String(expect.split(/\\r?\\n/g).length - linenum).length;\r\n\r\n\tfor (; i < arr.length; i++) {\r\n\t\toutput += line(tmp = arr[i], linenum, pad);\r\n\t\tif (linenum && !tmp.removed) linenum += tmp.count;\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nfunction chars(input, expect) {\r\n\tlet arr = diff__WEBPACK_IMPORTED_MODULE_1__.diffChars(input, expect);\r\n\tlet i=0, output='', tmp;\r\n\r\n\tlet l1 = input.length;\r\n\tlet l2 = expect.length;\r\n\r\n\tlet p1 = PRETTY(input);\r\n\tlet p2 = PRETTY(expect);\r\n\r\n\ttmp = arr[i];\r\n\r\n\tif (l1 === l2) {\r\n\t\t// no length offsets\r\n\t} else if (tmp.removed && arr[i + 1]) {\r\n\t\tlet del = tmp.count - arr[i + 1].count;\r\n\t\tif (del == 0) {\r\n\t\t\t// wash~\r\n\t\t} else if (del > 0) {\r\n\t\t\texpect = ' '.repeat(del) + expect;\r\n\t\t\tp2 = ' '.repeat(del) + p2;\r\n\t\t\tl2 += del;\r\n\t\t} else if (del < 0) {\r\n\t\t\tinput = ' '.repeat(-del) + input;\r\n\t\t\tp1 = ' '.repeat(-del) + p1;\r\n\t\t\tl1 += -del;\r\n\t\t}\r\n\t}\r\n\r\n\toutput += direct(p1, p2, l1, l2);\r\n\r\n\tif (l1 === l2) {\r\n\t\tfor (tmp='  '; i < l1; i++) {\r\n\t\t\ttmp += input[i] === expect[i] ? ' ' : '^';\r\n\t\t}\r\n\t} else {\r\n\t\tfor (tmp='  '; i < arr.length; i++) {\r\n\t\t\ttmp += ((arr[i].added || arr[i].removed) ? '^' : ' ').repeat(Math.max(arr[i].count, 0));\r\n\t\t\tif (i + 1 < arr.length && ((arr[i].added && arr[i+1].removed) || (arr[i].removed && arr[i+1].added))) {\r\n\t\t\t\tarr[i + 1].count -= arr[i].count;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output + kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].red(tmp);\r\n}\r\n\r\nfunction direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {\r\n\tlet gutter = 4;\r\n\tlet lenC = Math.max(lenA, lenB);\r\n\tlet typeA=typeof input, typeB=typeof expect;\r\n\r\n\tif (typeA !== typeB) {\r\n\t\tgutter = 2;\r\n\r\n\t\tlet delA = gutter + lenC - lenA;\r\n\t\tlet delB = gutter + lenC - lenB;\r\n\r\n\t\tinput += ' '.repeat(delA) + kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim(`[${typeA}]`);\r\n\t\texpect += ' '.repeat(delB) + kleur__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim(`[${typeB}]`);\r\n\r\n\t\tlenA += delA + typeA.length + 2;\r\n\t\tlenB += delB + typeB.length + 2;\r\n\t\tlenC = Math.max(lenA, lenB);\r\n\t}\r\n\r\n\tlet output = colors['++']('++' + expect + ' '.repeat(gutter + lenC - lenB) + TITLE('(Expected)')) + '\\n';\r\n\treturn output + colors['--']('--' + input + ' '.repeat(gutter + lenC - lenA) + TITLE('(Actual)')) + '\\n';\r\n}\r\n\r\nfunction sort(input, expect) {\r\n\tvar k, i=0, tmp, isArr = Array.isArray(input);\r\n\tvar keys=[], out=isArr ? Array(input.length) : {};\r\n\r\n\tif (isArr) {\r\n\t\tfor (i=0; i < out.length; i++) {\r\n\t\t\ttmp = input[i];\r\n\t\t\tif (!tmp || typeof tmp !== 'object') out[i] = tmp;\r\n\t\t\telse out[i] = sort(tmp, expect[i]); // might not be right\r\n\t\t}\r\n\t} else {\r\n\t\tfor (k in expect)\r\n\t\t\tkeys.push(k);\r\n\r\n\t\tfor (; i < keys.length; i++) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, k = keys[i])) {\r\n\t\t\t\tif (!(tmp = input[k]) || typeof tmp !== 'object') out[k] = tmp;\r\n\t\t\t\telse out[k] = sort(tmp, expect[k]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (k in input) {\r\n\t\t\tif (!out.hasOwnProperty(k)) {\r\n\t\t\t\tout[k] = input[k]; // expect didnt have\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\nfunction circular() {\r\n\tvar cache = new Set;\r\n\treturn function print(key, val) {\r\n\t\tif (val === void 0) return '[__VOID__]';\r\n\t\tif (typeof val === 'number' && val !== val) return '[__NAN__]';\r\n\t\tif (typeof val === 'bigint') return val.toString();\r\n\t\tif (!val || typeof val !== 'object') return val;\r\n\t\tif (cache.has(val)) return '[Circular]';\r\n\t\tcache.add(val); return val;\r\n\t}\r\n}\r\n\r\nfunction stringify(input) {\r\n\treturn JSON.stringify(input, circular(), 2).replace(/\"\\[__NAN__\\]\"/g, 'NaN').replace(/\"\\[__VOID__\\]\"/g, 'undefined');\r\n}\r\n\r\nfunction compare(input, expect) {\r\n\tif (Array.isArray(expect) && Array.isArray(input)) return arrays(input, expect);\r\n\tif (expect instanceof RegExp) return chars(''+input, ''+expect);\r\n\r\n\tlet isA = input && typeof input == 'object';\r\n\tlet isB = expect && typeof expect == 'object';\r\n\r\n\tif (isA && isB) input = sort(input, expect);\r\n\tif (isB) expect = stringify(expect);\r\n\tif (isA) input = stringify(input);\r\n\r\n\tif (expect && typeof expect == 'object') {\r\n\t\tinput = stringify(sort(input, expect));\r\n\t\texpect = stringify(expect);\r\n\t}\r\n\r\n\tisA = typeof input == 'string';\r\n\tisB = typeof expect == 'string';\r\n\r\n\tif (isA && /\\r?\\n/.test(input)) return lines(input, ''+expect);\r\n\tif (isB && /\\r?\\n/.test(expect)) return lines(''+input, expect);\r\n\tif (isA && isB) return chars(input, expect);\r\n\r\n\treturn direct(input, expect);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/uvu/diff/index.mjs\n"));

/***/ }),

/***/ "./node_modules/vfile-message/index.js":
/*!*********************************************!*\
  !*** ./node_modules/vfile-message/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VFileMessage\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.VFileMessage; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/vfile-message/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmZpbGUtbWVzc2FnZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmZpbGUtbWVzc2FnZS9pbmRleC5qcz85YjM5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7VkZpbGVNZXNzYWdlfSBmcm9tICcuL2xpYi9pbmRleC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vfile-message/index.js\n"));

/***/ }),

/***/ "./node_modules/vfile-message/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/vfile-message/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VFileMessage\": function() { return /* binding */ VFileMessage; }\n/* harmony export */ });\n/* harmony import */ var unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-stringify-position */ \"./node_modules/unist-util-stringify-position/index.js\");\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\r\n */\r\n\r\n\r\n\r\n/**\r\n * Message.\r\n */\r\nclass VFileMessage extends Error {\r\n  /**\r\n   * Create a message for `reason` at `place` from `origin`.\r\n   *\r\n   * When an error is passed in as `reason`, the `stack` is copied.\r\n   *\r\n   * @param {string | Error | VFileMessage} reason\r\n   *   Reason for message, uses the stack and message of the error if given.\r\n   *\r\n   *   > 👉 **Note**: you should use markdown.\r\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\r\n   *   Place in file where the message occurred.\r\n   * @param {string | null | undefined} [origin]\r\n   *   Place in code where the message originates (example:\r\n   *   `'my-package:my-rule'` or `'my-rule'`).\r\n   * @returns\r\n   *   Instance of `VFileMessage`.\r\n   */\r\n  // To do: next major: expose `undefined` everywhere instead of `null`.\r\n  constructor(reason, place, origin) {\r\n    /** @type {[string | null, string | null]} */\r\n    const parts = [null, null]\r\n    /** @type {Position} */\r\n    let position = {\r\n      // @ts-expect-error: we always follows the structure of `position`.\r\n      start: {line: null, column: null},\r\n      // @ts-expect-error: \"\r\n      end: {line: null, column: null}\r\n    }\r\n\r\n    super()\r\n\r\n    if (typeof place === 'string') {\r\n      origin = place\r\n      place = undefined\r\n    }\r\n\r\n    if (typeof origin === 'string') {\r\n      const index = origin.indexOf(':')\r\n\r\n      if (index === -1) {\r\n        parts[1] = origin\r\n      } else {\r\n        parts[0] = origin.slice(0, index)\r\n        parts[1] = origin.slice(index + 1)\r\n      }\r\n    }\r\n\r\n    if (place) {\r\n      // Node.\r\n      if ('type' in place || 'position' in place) {\r\n        if (place.position) {\r\n          // To do: next major: deep clone.\r\n          // @ts-expect-error: looks like a position.\r\n          position = place.position\r\n        }\r\n      }\r\n      // Position.\r\n      else if ('start' in place || 'end' in place) {\r\n        // @ts-expect-error: looks like a position.\r\n        // To do: next major: deep clone.\r\n        position = place\r\n      }\r\n      // Point.\r\n      else if ('line' in place || 'column' in place) {\r\n        // To do: next major: deep clone.\r\n        position.start = place\r\n      }\r\n    }\r\n\r\n    // Fields from `Error`.\r\n    /**\r\n     * Serialized positional info of error.\r\n     *\r\n     * On normal errors, this would be something like `ParseError`, buit in\r\n     * `VFile` messages we use this space to show where an error happened.\r\n     */\r\n    this.name = (0,unist_util_stringify_position__WEBPACK_IMPORTED_MODULE_0__.stringifyPosition)(place) || '1:1'\r\n\r\n    /**\r\n     * Reason for message.\r\n     *\r\n     * @type {string}\r\n     */\r\n    this.message = typeof reason === 'object' ? reason.message : reason\r\n\r\n    /**\r\n     * Stack of message.\r\n     *\r\n     * This is used by normal errors to show where something happened in\r\n     * programming code, irrelevant for `VFile` messages,\r\n     *\r\n     * @type {string}\r\n     */\r\n    this.stack = ''\r\n\r\n    if (typeof reason === 'object' && reason.stack) {\r\n      this.stack = reason.stack\r\n    }\r\n\r\n    /**\r\n     * Reason for message.\r\n     *\r\n     * > 👉 **Note**: you should use markdown.\r\n     *\r\n     * @type {string}\r\n     */\r\n    this.reason = this.message\r\n\r\n    /* eslint-disable no-unused-expressions */\r\n    /**\r\n     * State of problem.\r\n     *\r\n     * * `true` — marks associated file as no longer processable (error)\r\n     * * `false` — necessitates a (potential) change (warning)\r\n     * * `null | undefined` — for things that might not need changing (info)\r\n     *\r\n     * @type {boolean | null | undefined}\r\n     */\r\n    this.fatal\r\n\r\n    /**\r\n     * Starting line of error.\r\n     *\r\n     * @type {number | null}\r\n     */\r\n    this.line = position.start.line\r\n\r\n    /**\r\n     * Starting column of error.\r\n     *\r\n     * @type {number | null}\r\n     */\r\n    this.column = position.start.column\r\n\r\n    /**\r\n     * Full unist position.\r\n     *\r\n     * @type {Position | null}\r\n     */\r\n    this.position = position\r\n\r\n    /**\r\n     * Namespace of message (example: `'my-package'`).\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.source = parts[0]\r\n\r\n    /**\r\n     * Category of message (example: `'my-rule'`).\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.ruleId = parts[1]\r\n\r\n    /**\r\n     * Path of a file (used throughout the `VFile` ecosystem).\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.file\r\n\r\n    // The following fields are “well known”.\r\n    // Not standard.\r\n    // Feel free to add other non-standard fields to your messages.\r\n\r\n    /**\r\n     * Specify the source value that’s being reported, which is deemed\r\n     * incorrect.\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.actual\r\n\r\n    /**\r\n     * Suggest acceptable values that can be used instead of `actual`.\r\n     *\r\n     * @type {Array<string> | null}\r\n     */\r\n    this.expected\r\n\r\n    /**\r\n     * Link to docs for the message.\r\n     *\r\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\r\n     * > to `new URL(x)`.\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.url\r\n\r\n    /**\r\n     * Long form description of the message (you should use markdown).\r\n     *\r\n     * @type {string | null}\r\n     */\r\n    this.note\r\n    /* eslint-enable no-unused-expressions */\r\n  }\r\n}\r\n\r\nVFileMessage.prototype.file = ''\r\nVFileMessage.prototype.name = ''\r\nVFileMessage.prototype.reason = ''\r\nVFileMessage.prototype.message = ''\r\nVFileMessage.prototype.stack = ''\r\nVFileMessage.prototype.fatal = null\r\nVFileMessage.prototype.column = null\r\nVFileMessage.prototype.line = null\r\nVFileMessage.prototype.source = null\r\nVFileMessage.prototype.ruleId = null\r\nVFileMessage.prototype.position = null\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vfile-message/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/vfile/index.js":
/*!*************************************!*\
  !*** ./node_modules/vfile/index.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VFile\": function() { return /* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_0__.VFile; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/vfile/lib/index.js\");\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmZpbGUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZmaWxlL2luZGV4LmpzPzZjYmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtWRmlsZX0gZnJvbSAnLi9saWIvaW5kZXguanMnXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vfile/index.js\n"));

/***/ }),

/***/ "./node_modules/vfile/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/vfile/lib/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VFile\": function() { return /* binding */ VFile; }\n/* harmony export */ });\n/* harmony import */ var is_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\");\n/* harmony import */ var vfile_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vfile-message */ \"./node_modules/vfile-message/index.js\");\n/* harmony import */ var _minpath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minpath.js */ \"./node_modules/vfile/lib/minpath.browser.js\");\n/* harmony import */ var _minproc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./minproc.js */ \"./node_modules/vfile/lib/minproc.browser.js\");\n/* harmony import */ var _minurl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./minurl.js */ \"./node_modules/vfile/lib/minurl.browser.js\");\n/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('./minurl.shared.js').URL} URL\r\n * @typedef {import('../index.js').Data} Data\r\n * @typedef {import('../index.js').Value} Value\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\r\n *\r\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\r\n *   Encodings supported by the buffer class.\r\n *\r\n *   This is a copy of the types from Node, copied to prevent Node globals from\r\n *   being needed.\r\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\r\n *\r\n * @typedef {Options | URL | Value | VFile} Compatible\r\n *   Things that can be passed to the constructor.\r\n *\r\n * @typedef VFileCoreOptions\r\n *   Set multiple values.\r\n * @property {Value | null | undefined} [value]\r\n *   Set `value`.\r\n * @property {string | null | undefined} [cwd]\r\n *   Set `cwd`.\r\n * @property {Array<string> | null | undefined} [history]\r\n *   Set `history`.\r\n * @property {URL | string | null | undefined} [path]\r\n *   Set `path`.\r\n * @property {string | null | undefined} [basename]\r\n *   Set `basename`.\r\n * @property {string | null | undefined} [stem]\r\n *   Set `stem`.\r\n * @property {string | null | undefined} [extname]\r\n *   Set `extname`.\r\n * @property {string | null | undefined} [dirname]\r\n *   Set `dirname`.\r\n * @property {Data | null | undefined} [data]\r\n *   Set `data`.\r\n *\r\n * @typedef Map\r\n *   Raw source map.\r\n *\r\n *   See:\r\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\r\n * @property {number} version\r\n *   Which version of the source map spec this map is following.\r\n * @property {Array<string>} sources\r\n *   An array of URLs to the original source files.\r\n * @property {Array<string>} names\r\n *   An array of identifiers which can be referenced by individual mappings.\r\n * @property {string | undefined} [sourceRoot]\r\n *   The URL root from which all sources are relative.\r\n * @property {Array<string> | undefined} [sourcesContent]\r\n *   An array of contents of the original source files.\r\n * @property {string} mappings\r\n *   A string of base64 VLQs which contain the actual mappings.\r\n * @property {string} file\r\n *   The generated file this source map is associated with.\r\n *\r\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\r\n *   Configuration.\r\n *\r\n *   A bunch of keys that will be shallow copied over to the new file.\r\n *\r\n * @typedef {Record<string, unknown>} ReporterSettings\r\n *   Configuration for reporters.\r\n */\r\n\r\n/**\r\n * @template {ReporterSettings} Settings\r\n *   Options type.\r\n * @callback Reporter\r\n *   Type for a reporter.\r\n * @param {Array<VFile>} files\r\n *   Files to report.\r\n * @param {Settings} options\r\n *   Configuration.\r\n * @returns {string}\r\n *   Report.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Order of setting (least specific to most), we need this because otherwise\r\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\r\n * stem can be set.\r\n *\r\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\r\n */\r\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\r\n\r\nclass VFile {\r\n  /**\r\n   * Create a new virtual file.\r\n   *\r\n   * `options` is treated as:\r\n   *\r\n   * *   `string` or `Buffer` — `{value: options}`\r\n   * *   `URL` — `{path: options}`\r\n   * *   `VFile` — shallow copies its data over to the new file\r\n   * *   `object` — all fields are shallow copied over to the new file\r\n   *\r\n   * Path related fields are set in the following order (least specific to\r\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\r\n   * `dirname`.\r\n   *\r\n   * You cannot set `dirname` or `extname` without setting either `history`,\r\n   * `path`, `basename`, or `stem` too.\r\n   *\r\n   * @param {Compatible | null | undefined} [value]\r\n   *   File value.\r\n   * @returns\r\n   *   New instance.\r\n   */\r\n  constructor(value) {\r\n    /** @type {Options | VFile} */\r\n    let options\r\n\r\n    if (!value) {\r\n      options = {}\r\n    } else if (typeof value === 'string' || buffer(value)) {\r\n      options = {value}\r\n    } else if ((0,_minurl_js__WEBPACK_IMPORTED_MODULE_1__.isUrl)(value)) {\r\n      options = {path: value}\r\n    } else {\r\n      options = value\r\n    }\r\n\r\n    /**\r\n     * Place to store custom information (default: `{}`).\r\n     *\r\n     * It’s OK to store custom data directly on the file but moving it to\r\n     * `data` is recommended.\r\n     *\r\n     * @type {Data}\r\n     */\r\n    this.data = {}\r\n\r\n    /**\r\n     * List of messages associated with the file.\r\n     *\r\n     * @type {Array<VFileMessage>}\r\n     */\r\n    this.messages = []\r\n\r\n    /**\r\n     * List of filepaths the file moved between.\r\n     *\r\n     * The first is the original path and the last is the current path.\r\n     *\r\n     * @type {Array<string>}\r\n     */\r\n    this.history = []\r\n\r\n    /**\r\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\r\n     *\r\n     * @type {string}\r\n     */\r\n    this.cwd = _minproc_js__WEBPACK_IMPORTED_MODULE_2__.proc.cwd()\r\n\r\n    /* eslint-disable no-unused-expressions */\r\n    /**\r\n     * Raw value.\r\n     *\r\n     * @type {Value}\r\n     */\r\n    this.value\r\n\r\n    // The below are non-standard, they are “well-known”.\r\n    // As in, used in several tools.\r\n\r\n    /**\r\n     * Whether a file was saved to disk.\r\n     *\r\n     * This is used by vfile reporters.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    this.stored\r\n\r\n    /**\r\n     * Custom, non-string, compiled, representation.\r\n     *\r\n     * This is used by unified to store non-string results.\r\n     * One example is when turning markdown into React nodes.\r\n     *\r\n     * @type {unknown}\r\n     */\r\n    this.result\r\n\r\n    /**\r\n     * Source map.\r\n     *\r\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\r\n     * module.\r\n     *\r\n     * @type {Map | null | undefined}\r\n     */\r\n    this.map\r\n    /* eslint-enable no-unused-expressions */\r\n\r\n    // Set path related properties in the correct order.\r\n    let index = -1\r\n\r\n    while (++index < order.length) {\r\n      const prop = order[index]\r\n\r\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\r\n      // `vfile`s too.\r\n      if (\r\n        prop in options &&\r\n        options[prop] !== undefined &&\r\n        options[prop] !== null\r\n      ) {\r\n        // @ts-expect-error: TS doesn’t understand basic reality.\r\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\r\n      }\r\n    }\r\n\r\n    /** @type {string} */\r\n    let prop\r\n\r\n    // Set non-path related properties.\r\n    for (prop in options) {\r\n      // @ts-expect-error: fine to set other things.\r\n      if (!order.includes(prop)) {\r\n        // @ts-expect-error: fine to set other things.\r\n        this[prop] = options[prop]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the full path (example: `'~/index.min.js'`).\r\n   *\r\n   * @returns {string}\r\n   */\r\n  get path() {\r\n    return this.history[this.history.length - 1]\r\n  }\r\n\r\n  /**\r\n   * Set the full path (example: `'~/index.min.js'`).\r\n   *\r\n   * Cannot be nullified.\r\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\r\n   * be turned into a path with `url.fileURLToPath`.\r\n   *\r\n   * @param {string | URL} path\r\n   */\r\n  set path(path) {\r\n    if ((0,_minurl_js__WEBPACK_IMPORTED_MODULE_1__.isUrl)(path)) {\r\n      path = (0,_minurl_js__WEBPACK_IMPORTED_MODULE_1__.urlToPath)(path)\r\n    }\r\n\r\n    assertNonEmpty(path, 'path')\r\n\r\n    if (this.path !== path) {\r\n      this.history.push(path)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the parent path (example: `'~'`).\r\n   */\r\n  get dirname() {\r\n    return typeof this.path === 'string' ? _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.dirname(this.path) : undefined\r\n  }\r\n\r\n  /**\r\n   * Set the parent path (example: `'~'`).\r\n   *\r\n   * Cannot be set if there’s no `path` yet.\r\n   */\r\n  set dirname(dirname) {\r\n    assertPath(this.basename, 'dirname')\r\n    this.path = _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.join(dirname || '', this.basename)\r\n  }\r\n\r\n  /**\r\n   * Get the basename (including extname) (example: `'index.min.js'`).\r\n   */\r\n  get basename() {\r\n    return typeof this.path === 'string' ? _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.basename(this.path) : undefined\r\n  }\r\n\r\n  /**\r\n   * Set basename (including extname) (`'index.min.js'`).\r\n   *\r\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\r\n   * on windows).\r\n   * Cannot be nullified (use `file.path = file.dirname` instead).\r\n   */\r\n  set basename(basename) {\r\n    assertNonEmpty(basename, 'basename')\r\n    assertPart(basename, 'basename')\r\n    this.path = _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.join(this.dirname || '', basename)\r\n  }\r\n\r\n  /**\r\n   * Get the extname (including dot) (example: `'.js'`).\r\n   */\r\n  get extname() {\r\n    return typeof this.path === 'string' ? _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.extname(this.path) : undefined\r\n  }\r\n\r\n  /**\r\n   * Set the extname (including dot) (example: `'.js'`).\r\n   *\r\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\r\n   * on windows).\r\n   * Cannot be set if there’s no `path` yet.\r\n   */\r\n  set extname(extname) {\r\n    assertPart(extname, 'extname')\r\n    assertPath(this.dirname, 'extname')\r\n\r\n    if (extname) {\r\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\r\n        throw new Error('`extname` must start with `.`')\r\n      }\r\n\r\n      if (extname.includes('.', 1)) {\r\n        throw new Error('`extname` cannot contain multiple dots')\r\n      }\r\n    }\r\n\r\n    this.path = _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.join(this.dirname, this.stem + (extname || ''))\r\n  }\r\n\r\n  /**\r\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\r\n   */\r\n  get stem() {\r\n    return typeof this.path === 'string'\r\n      ? _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.basename(this.path, this.extname)\r\n      : undefined\r\n  }\r\n\r\n  /**\r\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\r\n   *\r\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\r\n   * on windows).\r\n   * Cannot be nullified (use `file.path = file.dirname` instead).\r\n   */\r\n  set stem(stem) {\r\n    assertNonEmpty(stem, 'stem')\r\n    assertPart(stem, 'stem')\r\n    this.path = _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.join(this.dirname || '', stem + (this.extname || ''))\r\n  }\r\n\r\n  /**\r\n   * Serialize the file.\r\n   *\r\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\r\n   *   Character encoding to understand `value` as when it’s a `Buffer`\r\n   *   (default: `'utf8'`).\r\n   * @returns {string}\r\n   *   Serialized file.\r\n   */\r\n  toString(encoding) {\r\n    return (this.value || '').toString(encoding || undefined)\r\n  }\r\n\r\n  /**\r\n   * Create a warning message associated with the file.\r\n   *\r\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\r\n   * Its added to `file.messages`.\r\n   *\r\n   * @param {string | Error | VFileMessage} reason\r\n   *   Reason for message, uses the stack and message of the error if given.\r\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\r\n   *   Place in file where the message occurred.\r\n   * @param {string | null | undefined} [origin]\r\n   *   Place in code where the message originates (example:\r\n   *   `'my-package:my-rule'` or `'my-rule'`).\r\n   * @returns {VFileMessage}\r\n   *   Message.\r\n   */\r\n  message(reason, place, origin) {\r\n    const message = new vfile_message__WEBPACK_IMPORTED_MODULE_4__.VFileMessage(reason, place, origin)\r\n\r\n    if (this.path) {\r\n      message.name = this.path + ':' + message.name\r\n      message.file = this.path\r\n    }\r\n\r\n    message.fatal = false\r\n\r\n    this.messages.push(message)\r\n\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Create an info message associated with the file.\r\n   *\r\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\r\n   * Its added to `file.messages`.\r\n   *\r\n   * @param {string | Error | VFileMessage} reason\r\n   *   Reason for message, uses the stack and message of the error if given.\r\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\r\n   *   Place in file where the message occurred.\r\n   * @param {string | null | undefined} [origin]\r\n   *   Place in code where the message originates (example:\r\n   *   `'my-package:my-rule'` or `'my-rule'`).\r\n   * @returns {VFileMessage}\r\n   *   Message.\r\n   */\r\n  info(reason, place, origin) {\r\n    const message = this.message(reason, place, origin)\r\n\r\n    message.fatal = null\r\n\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Create a fatal error associated with the file.\r\n   *\r\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\r\n   * Its added to `file.messages`.\r\n   *\r\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\r\n   *\r\n   * @param {string | Error | VFileMessage} reason\r\n   *   Reason for message, uses the stack and message of the error if given.\r\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\r\n   *   Place in file where the message occurred.\r\n   * @param {string | null | undefined} [origin]\r\n   *   Place in code where the message originates (example:\r\n   *   `'my-package:my-rule'` or `'my-rule'`).\r\n   * @returns {never}\r\n   *   Message.\r\n   * @throws {VFileMessage}\r\n   *   Message.\r\n   */\r\n  fail(reason, place, origin) {\r\n    const message = this.message(reason, place, origin)\r\n\r\n    message.fatal = true\r\n\r\n    throw message\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\r\n *\r\n * @param {string | null | undefined} part\r\n *   File path part.\r\n * @param {string} name\r\n *   Part name.\r\n * @returns {void}\r\n *   Nothing.\r\n */\r\nfunction assertPart(part, name) {\r\n  if (part && part.includes(_minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.sep)) {\r\n    throw new Error(\r\n      '`' + name + '` cannot be a path: did not expect `' + _minpath_js__WEBPACK_IMPORTED_MODULE_3__.path.sep + '`'\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that `part` is not empty.\r\n *\r\n * @param {string | undefined} part\r\n *   Thing.\r\n * @param {string} name\r\n *   Part name.\r\n * @returns {asserts part is string}\r\n *   Nothing.\r\n */\r\nfunction assertNonEmpty(part, name) {\r\n  if (!part) {\r\n    throw new Error('`' + name + '` cannot be empty')\r\n  }\r\n}\r\n\r\n/**\r\n * Assert `path` exists.\r\n *\r\n * @param {string | undefined} path\r\n *   Path.\r\n * @param {string} name\r\n *   Dependency name.\r\n * @returns {asserts path is string}\r\n *   Nothing.\r\n */\r\nfunction assertPath(path, name) {\r\n  if (!path) {\r\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\r\n  }\r\n}\r\n\r\n/**\r\n * Assert `value` is a buffer.\r\n *\r\n * @param {unknown} value\r\n *   thing.\r\n * @returns {value is Buffer}\r\n *   Whether `value` is a Node.js buffer.\r\n */\r\nfunction buffer(value) {\r\n  return is_buffer__WEBPACK_IMPORTED_MODULE_0__(value)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vfile/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/vfile/lib/minpath.browser.js":
/*!***************************************************!*\
  !*** ./node_modules/vfile/lib/minpath.browser.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"path\": function() { return /* binding */ path; }\n/* harmony export */ });\n// A derivative work based on:\r\n// <https://github.com/browserify/path-browserify>.\r\n// Which is licensed:\r\n//\r\n// MIT License\r\n//\r\n// Copyright (c) 2013 James Halliday\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n// this software and associated documentation files (the \"Software\"), to deal in\r\n// the Software without restriction, including without limitation the rights to\r\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n// the Software, and to permit persons to whom the Software is furnished to do so,\r\n// subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n// A derivative work based on:\r\n//\r\n// Parts of that are extracted from Node’s internal `path` module:\r\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\r\n// Which is licensed:\r\n//\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nconst path = {basename, dirname, extname, join, sep: '/'}\r\n\r\n/* eslint-disable max-depth, complexity */\r\n\r\n/**\r\n * Get the basename from a path.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @param {string | undefined} [ext]\r\n *   Extension to strip.\r\n * @returns {string}\r\n *   Stem or basename.\r\n */\r\nfunction basename(path, ext) {\r\n  if (ext !== undefined && typeof ext !== 'string') {\r\n    throw new TypeError('\"ext\" argument must be a string')\r\n  }\r\n\r\n  assertPath(path)\r\n  let start = 0\r\n  let end = -1\r\n  let index = path.length\r\n  /** @type {boolean | undefined} */\r\n  let seenNonSlash\r\n\r\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\r\n    while (index--) {\r\n      if (path.charCodeAt(index) === 47 /* `/` */) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now.\r\n        if (seenNonSlash) {\r\n          start = index + 1\r\n          break\r\n        }\r\n      } else if (end < 0) {\r\n        // We saw the first non-path separator, mark this as the end of our\r\n        // path component.\r\n        seenNonSlash = true\r\n        end = index + 1\r\n      }\r\n    }\r\n\r\n    return end < 0 ? '' : path.slice(start, end)\r\n  }\r\n\r\n  if (ext === path) {\r\n    return ''\r\n  }\r\n\r\n  let firstNonSlashEnd = -1\r\n  let extIndex = ext.length - 1\r\n\r\n  while (index--) {\r\n    if (path.charCodeAt(index) === 47 /* `/` */) {\r\n      // If we reached a path separator that was not part of a set of path\r\n      // separators at the end of the string, stop now.\r\n      if (seenNonSlash) {\r\n        start = index + 1\r\n        break\r\n      }\r\n    } else {\r\n      if (firstNonSlashEnd < 0) {\r\n        // We saw the first non-path separator, remember this index in case\r\n        // we need it if the extension ends up not matching.\r\n        seenNonSlash = true\r\n        firstNonSlashEnd = index + 1\r\n      }\r\n\r\n      if (extIndex > -1) {\r\n        // Try to match the explicit extension.\r\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\r\n          if (extIndex < 0) {\r\n            // We matched the extension, so mark this as the end of our path\r\n            // component\r\n            end = index\r\n          }\r\n        } else {\r\n          // Extension does not match, so our result is the entire path\r\n          // component\r\n          extIndex = -1\r\n          end = firstNonSlashEnd\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (start === end) {\r\n    end = firstNonSlashEnd\r\n  } else if (end < 0) {\r\n    end = path.length\r\n  }\r\n\r\n  return path.slice(start, end)\r\n}\r\n\r\n/**\r\n * Get the dirname from a path.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @returns {string}\r\n *   File path.\r\n */\r\nfunction dirname(path) {\r\n  assertPath(path)\r\n\r\n  if (path.length === 0) {\r\n    return '.'\r\n  }\r\n\r\n  let end = -1\r\n  let index = path.length\r\n  /** @type {boolean | undefined} */\r\n  let unmatchedSlash\r\n\r\n  // Prefix `--` is important to not run on `0`.\r\n  while (--index) {\r\n    if (path.charCodeAt(index) === 47 /* `/` */) {\r\n      if (unmatchedSlash) {\r\n        end = index\r\n        break\r\n      }\r\n    } else if (!unmatchedSlash) {\r\n      // We saw the first non-path separator\r\n      unmatchedSlash = true\r\n    }\r\n  }\r\n\r\n  return end < 0\r\n    ? path.charCodeAt(0) === 47 /* `/` */\r\n      ? '/'\r\n      : '.'\r\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\r\n    ? '//'\r\n    : path.slice(0, end)\r\n}\r\n\r\n/**\r\n * Get an extname from a path.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @returns {string}\r\n *   Extname.\r\n */\r\nfunction extname(path) {\r\n  assertPath(path)\r\n\r\n  let index = path.length\r\n\r\n  let end = -1\r\n  let startPart = 0\r\n  let startDot = -1\r\n  // Track the state of characters (if any) we see before our first dot and\r\n  // after any path separator we find.\r\n  let preDotState = 0\r\n  /** @type {boolean | undefined} */\r\n  let unmatchedSlash\r\n\r\n  while (index--) {\r\n    const code = path.charCodeAt(index)\r\n\r\n    if (code === 47 /* `/` */) {\r\n      // If we reached a path separator that was not part of a set of path\r\n      // separators at the end of the string, stop now.\r\n      if (unmatchedSlash) {\r\n        startPart = index + 1\r\n        break\r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n    if (end < 0) {\r\n      // We saw the first non-path separator, mark this as the end of our\r\n      // extension.\r\n      unmatchedSlash = true\r\n      end = index + 1\r\n    }\r\n\r\n    if (code === 46 /* `.` */) {\r\n      // If this is our first dot, mark it as the start of our extension.\r\n      if (startDot < 0) {\r\n        startDot = index\r\n      } else if (preDotState !== 1) {\r\n        preDotState = 1\r\n      }\r\n    } else if (startDot > -1) {\r\n      // We saw a non-dot and non-path separator before our dot, so we should\r\n      // have a good chance at having a non-empty extension.\r\n      preDotState = -1\r\n    }\r\n  }\r\n\r\n  if (\r\n    startDot < 0 ||\r\n    end < 0 ||\r\n    // We saw a non-dot character immediately before the dot.\r\n    preDotState === 0 ||\r\n    // The (right-most) trimmed path component is exactly `..`.\r\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\r\n  ) {\r\n    return ''\r\n  }\r\n\r\n  return path.slice(startDot, end)\r\n}\r\n\r\n/**\r\n * Join segments from a path.\r\n *\r\n * @param {Array<string>} segments\r\n *   Path segments.\r\n * @returns {string}\r\n *   File path.\r\n */\r\nfunction join(...segments) {\r\n  let index = -1\r\n  /** @type {string | undefined} */\r\n  let joined\r\n\r\n  while (++index < segments.length) {\r\n    assertPath(segments[index])\r\n\r\n    if (segments[index]) {\r\n      joined =\r\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\r\n    }\r\n  }\r\n\r\n  return joined === undefined ? '.' : normalize(joined)\r\n}\r\n\r\n/**\r\n * Normalize a basic file path.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @returns {string}\r\n *   File path.\r\n */\r\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\r\n// manually removed from it.\r\nfunction normalize(path) {\r\n  assertPath(path)\r\n\r\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\r\n\r\n  // Normalize the path according to POSIX rules.\r\n  let value = normalizeString(path, !absolute)\r\n\r\n  if (value.length === 0 && !absolute) {\r\n    value = '.'\r\n  }\r\n\r\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\r\n    value += '/'\r\n  }\r\n\r\n  return absolute ? '/' + value : value\r\n}\r\n\r\n/**\r\n * Resolve `.` and `..` elements in a path with directory names.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @param {boolean} allowAboveRoot\r\n *   Whether `..` can move above root.\r\n * @returns {string}\r\n *   File path.\r\n */\r\nfunction normalizeString(path, allowAboveRoot) {\r\n  let result = ''\r\n  let lastSegmentLength = 0\r\n  let lastSlash = -1\r\n  let dots = 0\r\n  let index = -1\r\n  /** @type {number | undefined} */\r\n  let code\r\n  /** @type {number} */\r\n  let lastSlashIndex\r\n\r\n  while (++index <= path.length) {\r\n    if (index < path.length) {\r\n      code = path.charCodeAt(index)\r\n    } else if (code === 47 /* `/` */) {\r\n      break\r\n    } else {\r\n      code = 47 /* `/` */\r\n    }\r\n\r\n    if (code === 47 /* `/` */) {\r\n      if (lastSlash === index - 1 || dots === 1) {\r\n        // Empty.\r\n      } else if (lastSlash !== index - 1 && dots === 2) {\r\n        if (\r\n          result.length < 2 ||\r\n          lastSegmentLength !== 2 ||\r\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\r\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\r\n        ) {\r\n          if (result.length > 2) {\r\n            lastSlashIndex = result.lastIndexOf('/')\r\n\r\n            if (lastSlashIndex !== result.length - 1) {\r\n              if (lastSlashIndex < 0) {\r\n                result = ''\r\n                lastSegmentLength = 0\r\n              } else {\r\n                result = result.slice(0, lastSlashIndex)\r\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\r\n              }\r\n\r\n              lastSlash = index\r\n              dots = 0\r\n              continue\r\n            }\r\n          } else if (result.length > 0) {\r\n            result = ''\r\n            lastSegmentLength = 0\r\n            lastSlash = index\r\n            dots = 0\r\n            continue\r\n          }\r\n        }\r\n\r\n        if (allowAboveRoot) {\r\n          result = result.length > 0 ? result + '/..' : '..'\r\n          lastSegmentLength = 2\r\n        }\r\n      } else {\r\n        if (result.length > 0) {\r\n          result += '/' + path.slice(lastSlash + 1, index)\r\n        } else {\r\n          result = path.slice(lastSlash + 1, index)\r\n        }\r\n\r\n        lastSegmentLength = index - lastSlash - 1\r\n      }\r\n\r\n      lastSlash = index\r\n      dots = 0\r\n    } else if (code === 46 /* `.` */ && dots > -1) {\r\n      dots++\r\n    } else {\r\n      dots = -1\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Make sure `path` is a string.\r\n *\r\n * @param {string} path\r\n *   File path.\r\n * @returns {asserts path is string}\r\n *   Nothing.\r\n */\r\nfunction assertPath(path) {\r\n  if (typeof path !== 'string') {\r\n    throw new TypeError(\r\n      'Path must be a string. Received ' + JSON.stringify(path)\r\n    )\r\n  }\r\n}\r\n\r\n/* eslint-enable max-depth, complexity */\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vfile/lib/minpath.browser.js\n"));

/***/ }),

/***/ "./node_modules/vfile/lib/minproc.browser.js":
/*!***************************************************!*\
  !*** ./node_modules/vfile/lib/minproc.browser.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"proc\": function() { return /* binding */ proc; }\n/* harmony export */ });\n// Somewhat based on:\r\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\r\n// But I don’t think one tiny line of code can be copyrighted. 😅\r\nconst proc = {cwd}\r\n\r\nfunction cwd() {\r\n  return '/'\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmZpbGUvbGliL21pbnByb2MuYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ08sY0FBYztBQUNyQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmZpbGUvbGliL21pbnByb2MuYnJvd3Nlci5qcz84MDFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNvbWV3aGF0IGJhc2VkIG9uOlxyXG4vLyA8aHR0cHM6Ly9naXRodWIuY29tL2RlZnVuY3R6b21iaWUvbm9kZS1wcm9jZXNzL2Jsb2IvbWFzdGVyL2Jyb3dzZXIuanM+LlxyXG4vLyBCdXQgSSBkb27igJl0IHRoaW5rIG9uZSB0aW55IGxpbmUgb2YgY29kZSBjYW4gYmUgY29weXJpZ2h0ZWQuIPCfmIVcclxuZXhwb3J0IGNvbnN0IHByb2MgPSB7Y3dkfVxyXG5cclxuZnVuY3Rpb24gY3dkKCkge1xyXG4gIHJldHVybiAnLydcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vfile/lib/minproc.browser.js\n"));

/***/ }),

/***/ "./node_modules/vfile/lib/minurl.browser.js":
/*!**************************************************!*\
  !*** ./node_modules/vfile/lib/minurl.browser.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isUrl\": function() { return /* reexport safe */ _minurl_shared_js__WEBPACK_IMPORTED_MODULE_0__.isUrl; },\n/* harmony export */   \"urlToPath\": function() { return /* binding */ urlToPath; }\n/* harmony export */ });\n/* harmony import */ var _minurl_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./minurl.shared.js */ \"./node_modules/vfile/lib/minurl.shared.js\");\n/// <reference lib=\"dom\" />\r\n\r\n\r\n\r\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\r\n\r\n/**\r\n * @param {string | URL} path\r\n *   File URL.\r\n * @returns {string}\r\n *   File URL.\r\n */\r\nfunction urlToPath(path) {\r\n  if (typeof path === 'string') {\r\n    path = new URL(path)\r\n  } else if (!(0,_minurl_shared_js__WEBPACK_IMPORTED_MODULE_0__.isUrl)(path)) {\r\n    /** @type {NodeJS.ErrnoException} */\r\n    const error = new TypeError(\r\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\r\n        path +\r\n        '`'\r\n    )\r\n    error.code = 'ERR_INVALID_ARG_TYPE'\r\n    throw error\r\n  }\r\n\r\n  if (path.protocol !== 'file:') {\r\n    /** @type {NodeJS.ErrnoException} */\r\n    const error = new TypeError('The URL must be of scheme file')\r\n    error.code = 'ERR_INVALID_URL_SCHEME'\r\n    throw error\r\n  }\r\n\r\n  return getPathFromURLPosix(path)\r\n}\r\n\r\n/**\r\n * Get a path from a POSIX URL.\r\n *\r\n * @param {URL} url\r\n *   URL.\r\n * @returns {string}\r\n *   File path.\r\n */\r\nfunction getPathFromURLPosix(url) {\r\n  if (url.hostname !== '') {\r\n    /** @type {NodeJS.ErrnoException} */\r\n    const error = new TypeError(\r\n      'File URL host must be \"localhost\" or empty on darwin'\r\n    )\r\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\r\n    throw error\r\n  }\r\n\r\n  const pathname = url.pathname\r\n  let index = -1\r\n\r\n  while (++index < pathname.length) {\r\n    if (\r\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\r\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\r\n    ) {\r\n      const third = pathname.charCodeAt(index + 2)\r\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\r\n        /** @type {NodeJS.ErrnoException} */\r\n        const error = new TypeError(\r\n          'File URL path must not include encoded / characters'\r\n        )\r\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n\r\n  return decodeURIComponent(pathname)\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmZpbGUvbGliL21pbnVybC5icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUksVUFBVSx3REFBSztBQUNuQixlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVCQUF1QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZmaWxlL2xpYi9taW51cmwuYnJvd3Nlci5qcz80ZTRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIGxpYj1cImRvbVwiIC8+XHJcblxyXG5pbXBvcnQge2lzVXJsfSBmcm9tICcuL21pbnVybC5zaGFyZWQuanMnXHJcblxyXG4vLyBTZWU6IDxodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvYmxvYi9mY2Y4YmE0L2xpYi9pbnRlcm5hbC91cmwuanM+XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmcgfCBVUkx9IHBhdGhcclxuICogICBGaWxlIFVSTC5cclxuICogQHJldHVybnMge3N0cmluZ31cclxuICogICBGaWxlIFVSTC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1cmxUb1BhdGgocGF0aCkge1xyXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcclxuICAgIHBhdGggPSBuZXcgVVJMKHBhdGgpXHJcbiAgfSBlbHNlIGlmICghaXNVcmwocGF0aCkpIHtcclxuICAgIC8qKiBAdHlwZSB7Tm9kZUpTLkVycm5vRXhjZXB0aW9ufSAqL1xyXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgVHlwZUVycm9yKFxyXG4gICAgICAnVGhlIFwicGF0aFwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBzdHJpbmcgb3IgYW4gaW5zdGFuY2Ugb2YgVVJMLiBSZWNlaXZlZCBgJyArXHJcbiAgICAgICAgcGF0aCArXHJcbiAgICAgICAgJ2AnXHJcbiAgICApXHJcbiAgICBlcnJvci5jb2RlID0gJ0VSUl9JTlZBTElEX0FSR19UWVBFJ1xyXG4gICAgdGhyb3cgZXJyb3JcclxuICB9XHJcblxyXG4gIGlmIChwYXRoLnByb3RvY29sICE9PSAnZmlsZTonKSB7XHJcbiAgICAvKiogQHR5cGUge05vZGVKUy5FcnJub0V4Y2VwdGlvbn0gKi9cclxuICAgIGNvbnN0IGVycm9yID0gbmV3IFR5cGVFcnJvcignVGhlIFVSTCBtdXN0IGJlIG9mIHNjaGVtZSBmaWxlJylcclxuICAgIGVycm9yLmNvZGUgPSAnRVJSX0lOVkFMSURfVVJMX1NDSEVNRSdcclxuICAgIHRocm93IGVycm9yXHJcbiAgfVxyXG5cclxuICByZXR1cm4gZ2V0UGF0aEZyb21VUkxQb3NpeChwYXRoKVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IGEgcGF0aCBmcm9tIGEgUE9TSVggVVJMLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1VSTH0gdXJsXHJcbiAqICAgVVJMLlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiAgIEZpbGUgcGF0aC5cclxuICovXHJcbmZ1bmN0aW9uIGdldFBhdGhGcm9tVVJMUG9zaXgodXJsKSB7XHJcbiAgaWYgKHVybC5ob3N0bmFtZSAhPT0gJycpIHtcclxuICAgIC8qKiBAdHlwZSB7Tm9kZUpTLkVycm5vRXhjZXB0aW9ufSAqL1xyXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgVHlwZUVycm9yKFxyXG4gICAgICAnRmlsZSBVUkwgaG9zdCBtdXN0IGJlIFwibG9jYWxob3N0XCIgb3IgZW1wdHkgb24gZGFyd2luJ1xyXG4gICAgKVxyXG4gICAgZXJyb3IuY29kZSA9ICdFUlJfSU5WQUxJRF9GSUxFX1VSTF9IT1NUJ1xyXG4gICAgdGhyb3cgZXJyb3JcclxuICB9XHJcblxyXG4gIGNvbnN0IHBhdGhuYW1lID0gdXJsLnBhdGhuYW1lXHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBwYXRobmFtZS5sZW5ndGgpIHtcclxuICAgIGlmIChcclxuICAgICAgcGF0aG5hbWUuY2hhckNvZGVBdChpbmRleCkgPT09IDM3IC8qIGAlYCAqLyAmJlxyXG4gICAgICBwYXRobmFtZS5jaGFyQ29kZUF0KGluZGV4ICsgMSkgPT09IDUwIC8qIGAyYCAqL1xyXG4gICAgKSB7XHJcbiAgICAgIGNvbnN0IHRoaXJkID0gcGF0aG5hbWUuY2hhckNvZGVBdChpbmRleCArIDIpXHJcbiAgICAgIGlmICh0aGlyZCA9PT0gNzAgLyogYEZgICovIHx8IHRoaXJkID09PSAxMDIgLyogYGZgICovKSB7XHJcbiAgICAgICAgLyoqIEB0eXBlIHtOb2RlSlMuRXJybm9FeGNlcHRpb259ICovXHJcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgVHlwZUVycm9yKFxyXG4gICAgICAgICAgJ0ZpbGUgVVJMIHBhdGggbXVzdCBub3QgaW5jbHVkZSBlbmNvZGVkIC8gY2hhcmFjdGVycydcclxuICAgICAgICApXHJcbiAgICAgICAgZXJyb3IuY29kZSA9ICdFUlJfSU5WQUxJRF9GSUxFX1VSTF9QQVRIJ1xyXG4gICAgICAgIHRocm93IGVycm9yXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocGF0aG5hbWUpXHJcbn1cclxuXHJcbmV4cG9ydCB7aXNVcmx9IGZyb20gJy4vbWludXJsLnNoYXJlZC5qcydcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vfile/lib/minurl.browser.js\n"));

/***/ }),

/***/ "./node_modules/vfile/lib/minurl.shared.js":
/*!*************************************************!*\
  !*** ./node_modules/vfile/lib/minurl.shared.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isUrl\": function() { return /* binding */ isUrl; }\n/* harmony export */ });\n/**\r\n * @typedef URL\r\n * @property {string} hash\r\n * @property {string} host\r\n * @property {string} hostname\r\n * @property {string} href\r\n * @property {string} origin\r\n * @property {string} password\r\n * @property {string} pathname\r\n * @property {string} port\r\n * @property {string} protocol\r\n * @property {string} search\r\n * @property {any} searchParams\r\n * @property {string} username\r\n * @property {() => string} toString\r\n * @property {() => string} toJSON\r\n */\r\n\r\n/**\r\n * Check if `fileUrlOrPath` looks like a URL.\r\n *\r\n * @param {unknown} fileUrlOrPath\r\n *   File path or URL.\r\n * @returns {fileUrlOrPath is URL}\r\n *   Whether it’s a URL.\r\n */\r\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\r\nfunction isUrl(fileUrlOrPath) {\r\n  return (\r\n    fileUrlOrPath !== null &&\r\n    typeof fileUrlOrPath === 'object' &&\r\n    // @ts-expect-error: indexable.\r\n    fileUrlOrPath.href &&\r\n    // @ts-expect-error: indexable.\r\n    fileUrlOrPath.origin\r\n  )\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmZpbGUvbGliL21pbnVybC5zaGFyZWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxLQUFLO0FBQ25CLGNBQWMsUUFBUTtBQUN0QixjQUFjLGNBQWM7QUFDNUIsY0FBYyxjQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZmaWxlL2xpYi9taW51cmwuc2hhcmVkLmpzPzQ1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEB0eXBlZGVmIFVSTFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaGFzaFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaG9zdFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaG9zdG5hbWVcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGhyZWZcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IG9yaWdpblxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcGFzc3dvcmRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHBhdGhuYW1lXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwb3J0XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwcm90b2NvbFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gc2VhcmNoXHJcbiAqIEBwcm9wZXJ0eSB7YW55fSBzZWFyY2hQYXJhbXNcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHVzZXJuYW1lXHJcbiAqIEBwcm9wZXJ0eSB7KCkgPT4gc3RyaW5nfSB0b1N0cmluZ1xyXG4gKiBAcHJvcGVydHkgeygpID0+IHN0cmluZ30gdG9KU09OXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIGBmaWxlVXJsT3JQYXRoYCBsb29rcyBsaWtlIGEgVVJMLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3Vua25vd259IGZpbGVVcmxPclBhdGhcclxuICogICBGaWxlIHBhdGggb3IgVVJMLlxyXG4gKiBAcmV0dXJucyB7ZmlsZVVybE9yUGF0aCBpcyBVUkx9XHJcbiAqICAgV2hldGhlciBpdOKAmXMgYSBVUkwuXHJcbiAqL1xyXG4vLyBGcm9tOiA8aHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2Jsb2IvZmNmOGJhNC9saWIvaW50ZXJuYWwvdXJsLmpzI0wxNTAxPlxyXG5leHBvcnQgZnVuY3Rpb24gaXNVcmwoZmlsZVVybE9yUGF0aCkge1xyXG4gIHJldHVybiAoXHJcbiAgICBmaWxlVXJsT3JQYXRoICE9PSBudWxsICYmXHJcbiAgICB0eXBlb2YgZmlsZVVybE9yUGF0aCA9PT0gJ29iamVjdCcgJiZcclxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGluZGV4YWJsZS5cclxuICAgIGZpbGVVcmxPclBhdGguaHJlZiAmJlxyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogaW5kZXhhYmxlLlxyXG4gICAgZmlsZVVybE9yUGF0aC5vcmlnaW5cclxuICApXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vfile/lib/minurl.shared.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUSER%5CSales-Dashboard-FastApi-Next%5Cfrontend%5Cpages%5Cindex.js&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);