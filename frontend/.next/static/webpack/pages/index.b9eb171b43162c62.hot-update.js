"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/system/HealthStatusIndicator.js":
/*!****************************************************!*\
  !*** ./components/system/HealthStatusIndicator.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst HealthStatusIndicator = ()=>{\n    _s();\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"checking\");\n    const [lastChecked, setLastChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const checkHealth = async ()=>{\n        try {\n            const response = await fetch(\"http://localhost:8000/health\");\n            const data = await response.json();\n            if (data.status === \"healthy\") {\n                setStatus(\"online\");\n            } else {\n                setStatus(\"issues\");\n            }\n        } catch (error) {\n            console.error(\"Health check failed:\", error);\n            setStatus(\"offline\");\n        }\n        setLastChecked(new Date());\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check health when component mounts\n        checkHealth();\n        // Set up interval to check health every 60 seconds\n        const interval = setInterval(checkHealth, 60000);\n        // Clean up interval when component unmounts\n        return ()=>clearInterval(interval);\n    }, []);\n    const getStatusStyles = ()=>{\n        switch(status){\n            case \"online\":\n                return \"bg-green-500\";\n            case \"issues\":\n                return \"bg-yellow-500\";\n            case \"offline\":\n                return \"bg-red-500\";\n            default:\n                return \"bg-gray-500\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-3 h-3 rounded-full \".concat(getStatusStyles())\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 51,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: [\n                    \"API: \",\n                    status === \"checking\" ? \"Checking...\" : status\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 52,\n                columnNumber: 7\n            }, undefined),\n            lastChecked && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: [\n                    \"Last checked: \",\n                    lastChecked.toLocaleTimeString()\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 56,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: checkHealth,\n                className: \"text-xs text-blue-500 hover:text-blue-700\",\n                children: \"Refresh\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Sales-Dashboard-FastApi-Next\\\\frontend\\\\components\\\\system\\\\HealthStatusIndicator.js\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, undefined);\n};\n_s(HealthStatusIndicator, \"iz9nHBR4jbXtSXbYqjMuEbkZyCE=\");\n_c = HealthStatusIndicator;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HealthStatusIndicator);\nvar _c;\n$RefreshReg$(_c, \"HealthStatusIndicator\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3N5c3RlbS9IZWFsdGhTdGF0dXNJbmRpY2F0b3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUVuRCxNQUFNRyx3QkFBd0IsSUFBTTs7SUFDbEMsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdKLCtDQUFRQSxDQUFDO0lBQ3JDLE1BQU0sQ0FBQ0ssYUFBYUMsZUFBZSxHQUFHTiwrQ0FBUUEsQ0FBQyxJQUFJO0lBRW5ELE1BQU1PLGNBQWMsVUFBWTtRQUM5QixJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO1lBQzdCLE1BQU1DLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtZQUVoQyxJQUFJRCxLQUFLUCxNQUFNLEtBQUssV0FBVztnQkFDN0JDLFVBQVU7WUFDWixPQUFPO2dCQUNMQSxVQUFVO1lBQ1osQ0FBQztRQUNILEVBQUUsT0FBT1EsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtZQUN0Q1IsVUFBVTtRQUNaO1FBRUFFLGVBQWUsSUFBSVE7SUFDckI7SUFFQWIsZ0RBQVNBLENBQUMsSUFBTTtRQUNkLHFDQUFxQztRQUNyQ007UUFFQSxtREFBbUQ7UUFDbkQsTUFBTVEsV0FBV0MsWUFBWVQsYUFBYTtRQUUxQyw0Q0FBNEM7UUFDNUMsT0FBTyxJQUFNVSxjQUFjRjtJQUM3QixHQUFHLEVBQUU7SUFFTCxNQUFNRyxrQkFBa0IsSUFBTTtRQUM1QixPQUFRZjtZQUNOLEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNUO2dCQUNFLE9BQU87UUFDWDtJQUNGO0lBRUEscUJBQ0UsOERBQUNnQjtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0Q7Z0JBQUlDLFdBQVcsd0JBQTBDLE9BQWxCRjs7Ozs7OzBCQUN4Qyw4REFBQ0c7Z0JBQUtELFdBQVU7O29CQUF3QjtvQkFDaENqQixXQUFXLGFBQWEsZ0JBQWdCQSxNQUFNOzs7Ozs7O1lBRXJERSw2QkFDQyw4REFBQ2dCO2dCQUFLRCxXQUFVOztvQkFBd0I7b0JBQ3ZCZixZQUFZaUIsa0JBQWtCOzs7Ozs7OzBCQUdqRCw4REFBQ0M7Z0JBQ0NDLFNBQVNqQjtnQkFDVGEsV0FBVTswQkFDWDs7Ozs7Ozs7Ozs7O0FBS1A7R0FqRU1sQjtLQUFBQTtBQW1FTiwrREFBZUEscUJBQXFCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvc3lzdGVtL0hlYWx0aFN0YXR1c0luZGljYXRvci5qcz8xMjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgSGVhbHRoU3RhdHVzSW5kaWNhdG9yID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZSgnY2hlY2tpbmcnKTtcclxuICBjb25zdCBbbGFzdENoZWNrZWQsIHNldExhc3RDaGVja2VkXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICBjb25zdCBjaGVja0hlYWx0aCA9IGFzeW5jICgpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9oZWFsdGgnKTtcclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgXHJcbiAgICAgIGlmIChkYXRhLnN0YXR1cyA9PT0gJ2hlYWx0aHknKSB7XHJcbiAgICAgICAgc2V0U3RhdHVzKCdvbmxpbmUnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZXRTdGF0dXMoJ2lzc3VlcycpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdIZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcclxuICAgICAgc2V0U3RhdHVzKCdvZmZsaW5lJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHNldExhc3RDaGVja2VkKG5ldyBEYXRlKCkpO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBDaGVjayBoZWFsdGggd2hlbiBjb21wb25lbnQgbW91bnRzXHJcbiAgICBjaGVja0hlYWx0aCgpO1xyXG4gICAgXHJcbiAgICAvLyBTZXQgdXAgaW50ZXJ2YWwgdG8gY2hlY2sgaGVhbHRoIGV2ZXJ5IDYwIHNlY29uZHNcclxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoY2hlY2tIZWFsdGgsIDYwMDAwKTtcclxuICAgIFxyXG4gICAgLy8gQ2xlYW4gdXAgaW50ZXJ2YWwgd2hlbiBjb21wb25lbnQgdW5tb3VudHNcclxuICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IGdldFN0YXR1c1N0eWxlcyA9ICgpID0+IHtcclxuICAgIHN3aXRjaCAoc3RhdHVzKSB7XHJcbiAgICAgIGNhc2UgJ29ubGluZSc6XHJcbiAgICAgICAgcmV0dXJuICdiZy1ncmVlbi01MDAnO1xyXG4gICAgICBjYXNlICdpc3N1ZXMnOlxyXG4gICAgICAgIHJldHVybiAnYmcteWVsbG93LTUwMCc7XHJcbiAgICAgIGNhc2UgJ29mZmxpbmUnOlxyXG4gICAgICAgIHJldHVybiAnYmctcmVkLTUwMCc7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuICdiZy1ncmF5LTUwMCc7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCI+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdy0zIGgtMyByb3VuZGVkLWZ1bGwgJHtnZXRTdGF0dXNTdHlsZXMoKX1gfT48L2Rpdj5cclxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XHJcbiAgICAgICAgQVBJOiB7c3RhdHVzID09PSAnY2hlY2tpbmcnID8gJ0NoZWNraW5nLi4uJyA6IHN0YXR1c31cclxuICAgICAgPC9zcGFuPlxyXG4gICAgICB7bGFzdENoZWNrZWQgJiYgKFxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ncmF5LTQwMFwiPlxyXG4gICAgICAgICAgTGFzdCBjaGVja2VkOiB7bGFzdENoZWNrZWQudG9Mb2NhbGVUaW1lU3RyaW5nKCl9XHJcbiAgICAgICAgPC9zcGFuPlxyXG4gICAgICApfVxyXG4gICAgICA8YnV0dG9uIFxyXG4gICAgICAgIG9uQ2xpY2s9e2NoZWNrSGVhbHRofVxyXG4gICAgICAgIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ibHVlLTUwMCBob3Zlcjp0ZXh0LWJsdWUtNzAwXCJcclxuICAgICAgPlxyXG4gICAgICAgIFJlZnJlc2hcclxuICAgICAgPC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhbHRoU3RhdHVzSW5kaWNhdG9yOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiSGVhbHRoU3RhdHVzSW5kaWNhdG9yIiwic3RhdHVzIiwic2V0U3RhdHVzIiwibGFzdENoZWNrZWQiLCJzZXRMYXN0Q2hlY2tlZCIsImNoZWNrSGVhbHRoIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiRGF0ZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiZ2V0U3RhdHVzU3R5bGVzIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiIsInRvTG9jYWxlVGltZVN0cmluZyIsImJ1dHRvbiIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/system/HealthStatusIndicator.js\n"));

/***/ })

});