"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/useSalesData.js":
/*!*******************************!*\
  !*** ./hooks/useSalesData.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useSalesData = ()=>{\n    _s();\n    const [salesReps, setSalesReps] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [analytics, setAnalytics] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        totalDealCount: 0,\n        dealStatusSummary: {\n            \"Closed Won\": 0,\n            \"In Progress\": 0,\n            \"Closed Lost\": 0\n        },\n        totalDealValue: 0,\n        averageDealValue: 0,\n        regionDistribution: []\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchData = async ()=>{\n            try {\n                setLoading(true);\n                // Fetch both sales reps data and analytics in parallel\n                const [salesResponse, analyticsResponse] = await Promise.all([\n                    fetch(\"http://localhost:8000/api/data\"),\n                    fetch(\"http://localhost:8000/api/sales-analytics\")\n                ]);\n                if (!salesResponse.ok) {\n                    throw new Error(\"HTTP error! Status: \".concat(salesResponse.status));\n                }\n                if (!analyticsResponse.ok) {\n                    throw new Error(\"HTTP error! Status: \".concat(analyticsResponse.status));\n                }\n                const salesData = await salesResponse.json();\n                const analyticsData = await analyticsResponse.json();\n                setSalesReps(salesData.salesReps || []);\n                setAnalytics(analyticsData);\n                setError(null);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setError(\"Failed to load sales data. Please try again later.\");\n            } finally{\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, []);\n    // Prepare dealStats in the format expected by the components\n    const dealStats = {\n        total: {\n            count: analytics.totalDealCount,\n            value: analytics.totalDealValue\n        },\n        won: {\n            count: analytics.dealStatusSummary[\"Closed Won\"],\n            value: 0 // We'll need to enhance the API to get this value\n        },\n        lost: {\n            count: analytics.dealStatusSummary[\"Closed Lost\"],\n            value: 0 // We'll need to enhance the API to get this value\n        },\n        running: {\n            count: analytics.dealStatusSummary[\"In Progress\"],\n            value: 0 // We'll need to enhance the API to get this value\n        }\n    };\n    // If the API doesn't provide values by status type yet, calculate them from salesReps\n    if (salesReps.length > 0 && dealStats.won.value === 0) {\n        dealStats.won.value = salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Won\").reduce((sum, deal)=>sum + deal.value, 0), 0);\n        dealStats.lost.value = salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"Closed Lost\").reduce((sum, deal)=>sum + deal.value, 0), 0);\n        dealStats.running.value = salesReps.reduce((acc, rep)=>acc + rep.deals.filter((deal)=>deal.status === \"In Progress\").reduce((sum, deal)=>sum + deal.value, 0), 0);\n    }\n    return {\n        salesReps,\n        analytics,\n        dealStats,\n        loading,\n        error\n    };\n};\n_s(useSalesData, \"nwrV327kBHZ5lr/XVnc3Ed6+exk=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useSalesData);\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useSalesData.js\n"));

/***/ })

});