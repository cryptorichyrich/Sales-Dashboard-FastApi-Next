"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/useChat.js":
/*!**************************!*\
  !*** ./hooks/useChat.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useChat = ()=>{\n    _s();\n    const [question, setQuestion] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [chatMessages, setChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleAskQuestion = async ()=>{\n        // Skip if question is empty or currently loading\n        if (!question.trim() || isLoading) return;\n        // Add user message to chat\n        const userMessage = {\n            type: \"user\",\n            text: question\n        };\n        setChatMessages((prev)=>[\n                ...prev,\n                userMessage\n            ]);\n        // Clear input field\n        setQuestion(\"\");\n        // Set loading state\n        setIsLoading(true);\n        try {\n            // Make API request to backend\n            const response = await fetch(\"http://localhost:8000\" + \"/api/ai\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    question: userMessage.text\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            const data = await response.json();\n            // Add AI response to chat\n            setChatMessages((prev)=>[\n                    ...prev,\n                    {\n                        type: \"ai\",\n                        text: data.answer || \"Sorry, I couldn't process your request.\"\n                    }\n                ]);\n        } catch (error) {\n            console.error(\"Error fetching AI response:\", error);\n            // Add error message to chat\n            setChatMessages((prev)=>[\n                    ...prev,\n                    {\n                        type: \"ai\",\n                        text: \"Sorry, there was an error connecting to the AI service. Please try again later.\"\n                    }\n                ]);\n        } finally{\n            // Reset loading state\n            setIsLoading(false);\n        }\n    };\n    return {\n        question,\n        setQuestion,\n        chatMessages,\n        setChatMessages,\n        isLoading,\n        handleAskQuestion\n    };\n};\n_s(useChat, \"1LJ+55reiY+MsnJiSjcs96UUHRw=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useChat);\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VDaGF0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBaUM7QUFFakMsTUFBTUMsVUFBVSxJQUFNOztJQUNwQixNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR0gsK0NBQVFBLENBQUM7SUFDekMsTUFBTSxDQUFDSSxjQUFjQyxnQkFBZ0IsR0FBR0wsK0NBQVFBLENBQUMsRUFBRTtJQUNuRCxNQUFNLENBQUNNLFdBQVdDLGFBQWEsR0FBR1AsK0NBQVFBLENBQUMsS0FBSztJQUVoRCxNQUFNUSxvQkFBb0IsVUFBWTtRQUNwQyxpREFBaUQ7UUFDakQsSUFBSSxDQUFDTixTQUFTTyxJQUFJLE1BQU1ILFdBQVc7UUFFbkMsMkJBQTJCO1FBQzNCLE1BQU1JLGNBQWM7WUFBRUMsTUFBTTtZQUFRQyxNQUFNVjtRQUFTO1FBQ25ERyxnQkFBZ0IsQ0FBQ1EsT0FBUzttQkFBSUE7Z0JBQU1IO2FBQVk7UUFFaEQsb0JBQW9CO1FBQ3BCUCxZQUFZO1FBRVosb0JBQW9CO1FBQ3BCSSxhQUFhLElBQUk7UUFFakIsSUFBSTtZQUNGLDhCQUE4QjtZQUM5QixNQUFNTyxXQUFXLE1BQU1DLE1BQU1DLHVCQUFtQyxHQUFHLFdBQVc7Z0JBQzVFRyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFBRXJCLFVBQVVRLFlBQVlFLElBQUk7Z0JBQUM7WUFDcEQ7WUFFQSxJQUFJLENBQUNFLFNBQVNVLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLCtCQUErQjtZQUNqRCxDQUFDO1lBRUQsTUFBTUMsT0FBTyxNQUFNWixTQUFTYSxJQUFJO1lBRWhDLDBCQUEwQjtZQUMxQnRCLGdCQUFnQixDQUFDUSxPQUFTO3VCQUNyQkE7b0JBQ0g7d0JBQUVGLE1BQU07d0JBQU1DLE1BQU1jLEtBQUtFLE1BQU0sSUFBSTtvQkFBMkM7aUJBQy9FO1FBQ0gsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywrQkFBK0JBO1lBRTdDLDRCQUE0QjtZQUM1QnhCLGdCQUFnQixDQUFDUSxPQUFTO3VCQUNyQkE7b0JBQ0g7d0JBQ0VGLE1BQU07d0JBQ05DLE1BQU07b0JBQ1I7aUJBQ0Q7UUFDSCxTQUFVO1lBQ1Isc0JBQXNCO1lBQ3RCTCxhQUFhLEtBQUs7UUFDcEI7SUFDRjtJQUVBLE9BQU87UUFDTEw7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUU7SUFDRjtBQUNGO0dBakVNUDtBQW1FTiwrREFBZUEsT0FBT0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VDaGF0LmpzPzA2NTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCB1c2VDaGF0ID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtxdWVzdGlvbiwgc2V0UXVlc3Rpb25dID0gdXNlU3RhdGUoJycpO1xyXG4gIGNvbnN0IFtjaGF0TWVzc2FnZXMsIHNldENoYXRNZXNzYWdlc10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlQXNrUXVlc3Rpb24gPSBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyBTa2lwIGlmIHF1ZXN0aW9uIGlzIGVtcHR5IG9yIGN1cnJlbnRseSBsb2FkaW5nXHJcbiAgICBpZiAoIXF1ZXN0aW9uLnRyaW0oKSB8fCBpc0xvYWRpbmcpIHJldHVybjtcclxuXHJcbiAgICAvLyBBZGQgdXNlciBtZXNzYWdlIHRvIGNoYXRcclxuICAgIGNvbnN0IHVzZXJNZXNzYWdlID0geyB0eXBlOiAndXNlcicsIHRleHQ6IHF1ZXN0aW9uIH07XHJcbiAgICBzZXRDaGF0TWVzc2FnZXMoKHByZXYpID0+IFsuLi5wcmV2LCB1c2VyTWVzc2FnZV0pO1xyXG5cclxuICAgIC8vIENsZWFyIGlucHV0IGZpZWxkXHJcbiAgICBzZXRRdWVzdGlvbignJyk7XHJcblxyXG4gICAgLy8gU2V0IGxvYWRpbmcgc3RhdGVcclxuICAgIHNldElzTG9hZGluZyh0cnVlKTtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBNYWtlIEFQSSByZXF1ZXN0IHRvIGJhY2tlbmRcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTCArICcvYXBpL2FpJywge1xyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHF1ZXN0aW9uOiB1c2VyTWVzc2FnZS50ZXh0IH0pLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICBcclxuICAgICAgLy8gQWRkIEFJIHJlc3BvbnNlIHRvIGNoYXRcclxuICAgICAgc2V0Q2hhdE1lc3NhZ2VzKChwcmV2KSA9PiBbXHJcbiAgICAgICAgLi4ucHJldixcclxuICAgICAgICB7IHR5cGU6ICdhaScsIHRleHQ6IGRhdGEuYW5zd2VyIHx8ICdTb3JyeSwgSSBjb3VsZG5cXCd0IHByb2Nlc3MgeW91ciByZXF1ZXN0LicgfSxcclxuICAgICAgXSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBBSSByZXNwb25zZTonLCBlcnJvcik7XHJcbiAgICAgIFxyXG4gICAgICAvLyBBZGQgZXJyb3IgbWVzc2FnZSB0byBjaGF0XHJcbiAgICAgIHNldENoYXRNZXNzYWdlcygocHJldikgPT4gW1xyXG4gICAgICAgIC4uLnByZXYsXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgIHR5cGU6ICdhaScsIFxyXG4gICAgICAgICAgdGV4dDogJ1NvcnJ5LCB0aGVyZSB3YXMgYW4gZXJyb3IgY29ubmVjdGluZyB0byB0aGUgQUkgc2VydmljZS4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4nIFxyXG4gICAgICAgIH0sXHJcbiAgICAgIF0pO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgLy8gUmVzZXQgbG9hZGluZyBzdGF0ZVxyXG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBxdWVzdGlvbixcclxuICAgIHNldFF1ZXN0aW9uLFxyXG4gICAgY2hhdE1lc3NhZ2VzLFxyXG4gICAgc2V0Q2hhdE1lc3NhZ2VzLFxyXG4gICAgaXNMb2FkaW5nLFxyXG4gICAgaGFuZGxlQXNrUXVlc3Rpb24sXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZUNoYXQ7Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlQ2hhdCIsInF1ZXN0aW9uIiwic2V0UXVlc3Rpb24iLCJjaGF0TWVzc2FnZXMiLCJzZXRDaGF0TWVzc2FnZXMiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJoYW5kbGVBc2tRdWVzdGlvbiIsInRyaW0iLCJ1c2VyTWVzc2FnZSIsInR5cGUiLCJ0ZXh0IiwicHJldiIsInJlc3BvbnNlIiwiZmV0Y2giLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJhbnN3ZXIiLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./hooks/useChat.js\n"));

/***/ })

});